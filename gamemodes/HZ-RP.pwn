//=============================================================================//
//            Hermandad Zero    [Role Play - Español] CREDITOS : 	           //
//                     El puto chicle lo hizo todo.                            //
//=============================================================================*/

#define SCRIPT_VERSION "3.0 Los Santos"

#include <a_samp>
#include <core>
#include <float>
#include <time>
#include <file>
#include <morphinc>
#include <streamer>
#include <seif_walk>
#include <sscanf2>
#include <zcmd>
#include <Dini>
#include <YSI\y_ini>
#include <progressbar>
#include <SpikeStrip>
#include <mSelection>
#include <SetVehicleAttachedObject[inc]>

#include <a_http>

// -================= AntiDeAMX ====================- //
AntiDeAMX()
{
  new a[][] =
  {
   "Unarmed (Fist)",
   "Brass K"
  };
  #pragma unused a
}
// -=================== Macros ===================- //
#define PlayerToPoint(%1,%2,%3,%4,%5)  	IsPlayerInRangeOfPoint(%2,%1,%3,%4,%5)
#define	Params>							if(!strlen(tmp))
#define Connect							if(IsPlayerConnected(playerid)) {
#define Loop(%0,%1)						for(new %0; %0 != %1; %0++)
#define	function%0(%1)					forward %0(%1); public %0(%1)
#define GText   						GameTextForPlayer
#define TDStr    						TextDrawSetString
#define Skin        					SetPlayerSkin
#define GlobalMsg   					SendClientMessageToAll
#define Message 						SendClientMessage
#define IsNull(%1) 						((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
// -======== GAMEMODE LIMITS =======- //
#define SHOWPATH
#define VV	258
#define VEH 763
#undef MAX_PLAYERS
#define MAX_PLAYERS 107
#undef  MAX_VEHICLES
#define MAX_VEHICLES 763
#define MAX_NPCS 7
new npctoggle = 0;
// colors estado //
#define NEGATIVO    0xFF0000FF
#define POSITIVO    0x00FF00FF
// -========== COLORS ===========- //
#define COLOR_CLIMA 0xB1C8FBAF
#define CHATNEW 0xB1C8FBAA
#define YELLOW 0xFFFF00FF
#define COLOR_ASKQ 0xFF0000FF
#define COLOR_NEGATIVE 0xFF6A6AFF
#define WANTED_COLOR 0xBF6000FF
#define COLOR_DUTY 0x00CA00FF
#define COLOR_MEGAPHONE 0xFF9B6AFF
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x9EC73DAA
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define COLOR_RED 0xAA3333AA
#define COLOR_RED2 0xFF6F6FFF
#define COLOR_ESTADO 0x00A5AAFF
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xDABB3EAA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_ORANGE 0xFF7F00FF
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_FADE 0xE6E6E6E6
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xB60597FF
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0x458E1DAA
#define COLOR_OOC 0x66FFFFFF
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define TEAM_RADIO_COLOR2 0xF2D068FF // Amarillo
#define TEAM_RADIO_COLOR 0x9B9BFFFF // Azul
#define TEAM_CYAN_COLOR 0xFF8282AA
#define COLOR_BLUE 0x2641FEAA
#define TRY_GREEN   0x00BF60FF
#define TRY_RED     0xB90000FF
// Cmd Color - Admin by Keenan
#define ROJO_ADMIN 0xDC092FFF
#define VERDE_ADMIN 0x41FF2FFF
#define CELESTE_ADMIN 0x41FFECFF
#define AMARILLO_ADMIN 0xFFFF00FF
#define CREMA_ADMIN 0xFFFFD4D4
#define ROSADO_ADMIN 0xFF4FD4D4
#define MORADO_ADMIN 0x9600FF2E
#define ORANGE_ADMIN 0xFF7617FF
#define NEGRO_ADMIN 0x000000A8
// ==== PRAGMA ==== //
#pragma semicolon 0
#pragma tabsize 0
// -====== MISCELLANEOUS ======- //
#define MAX_TRUNK_SLOTS		(5)
#define MAX_VEHICLE_MODELS	(70)
#define MAX_PLYVEH_RATIO	(20)
#define MAX_VEHICLE_PLATE	(7)
#define MAX_CANCER  		(100)
#define MAX_EPILEPSIA   	(75)
#define MAX_HOUSES			219
#define MAX_BIZZ            32
#define MAX_FACTION			26
#define MAX_PLAYERTOYS		5
// -========= Dialogs ========- //
#define UMBRELLA7_DIALOG 1
#define EQUIPO_DIALOG 	3
#define EQUIPO_DIALOG2 	4
#define EQUIPO_DIALOG3  5
#define EQUIPO_DIALOG4  6
#define EQUIPO_DIALOG5  7
#define EQUIPO_DIALOG9  8
#define EQUIPO_DIALOG10  9
#define EQUIPO_DIALOG11  10
#define AYUDA_DIALOG   15
#define EQUIPO_PIZZA   16
#define COLOR_ADM      17
#define CELDAS         18
#define CPRISION       19
#define CELDA1         20
#define CELDA2         21
#define CELDA3         22
#define EQUIPO_NG      23
#define SEL_CITY       24
#define DIALOG_HIT     25
#define EQUIPO_HITMAN  26
#define EQUIPO_CORTEJUDICIAL  543
#define TEST_0         27
#define TEST_1         28
#define TEST_2         29
#define TEST_3         30
#define TEST_4         31
#define TEST_5         32
#define TEST_6         33
#define TEST_7         34
#define TEST_8         35
#define TEST_9         36
#define EQUIPO_FBI     37
#define DIALOG_SO      38
#define SEL_SKIN       39 //usado en /cropaid
#define EQUIPO_MECANICO 40
#define EQUIPO_GOBIERNO 41
#define Radios 42
#define Stats 152

enum ptInfo
{
	ptModelID,
	ptBone,
	Float:ptPosX,
	Float:ptPosY,
	Float:ptPosZ,
	Float:ptRotX,
	Float:ptRotY,
	Float:ptRotZ
};

new PlayerToyInfo[MAX_PLAYERS+1][MAX_PLAYERTOYS][ptInfo];

enum HoldingEnumAll
{
	holdingmodelid,
	holdingprice,
	holdingmodelname[24]
}

new HoldingObjectsAll[220][HoldingEnumAll] = {
{18643,1000,"Laser-1"},
{19080,1000,"Laser-2"},
{19081,1000,"Laser-3"},
{19082,1000,"Laser-4"},
{19083,1000,"Laser-5"},
{19084,1000,"Laser-6"},
{19086,5000,"DildoMotosierra"},
{18675,1000,"Humo"},
{18693,1000,"FuegoLargo"},
{18698,2000,"Insectos"},
{18636,1000,"GorroPolicia-1"},
{19099,1000,"GorroPolicia-2"},
{19100,1000,"GorroPolicia-3"},
{18637,1000,"EscudoPolicia"},
{19161,1000,"SombreroPolicia-1"},
{19162,1000,"SombreroPolicia-2"},
{19200,1000,"CascoPolicia-1"},
{19138,1000,"LenterPolicia1"},
{19139,1000,"LenterPolicia2"},
{19140,1000,"LenterPolicia3"},
{18632,1000,"CañaPesca"},
{18633,1500,"Llave"},
{18635,1000,"Martillo"},
{18634,1000,"Palanca"},
{18638,500,"Sombrero-1"},
{19093,500,"Sombrero-2"},
{19160,500,"Sombrero-3"},
{18639,500,"SombreroNegro"},
{18640,700,"Peluca"},
{18975,700,"Peluca-2"},
{19136,700,"Peluca-3"},
{19274,700,"Peluca-4"},
{18641,1000,"Linterna"},
{18644,5000,"Desarmador"},
{18865,500,"Teléfono-1"},
{18866,500,"Teléfono-2"},
{18867,500,"Teléfono-3"},
{18868,500,"Teléfono-4"},
{18869,500,"Teléfono-5"},
{18870,1000,"Teléfono-6"},
{18871,1000,"Teléfono-7"},
{18872,1000,"Teléfono-8"},
{18873,1000,"Teléfono-9"},
{18874,1000,"Teléfono-10"},
{18875,750,"Pager"},
{18890,500,"Rastrillo"},
{18891,500,"Bandana1"},
{18892,500,"Bandana2"},
{18893,500,"Bandana3"},
{18894,500,"Bandana4"},
{18895,500,"Bandana5"},
{18896,500,"Bandana6"},
{18897,500,"Bandana7"},
{18898,500,"Bandana8"},
{18899,500,"Bandana9"},
{18900,500,"Bandana10"},
{18901,750,"Bandana11"},
{18902,750,"Bandana12"},
{18903,750,"Bandana13"},
{18904,750,"Bandana14"},
{18905,750,"Bandana15"},
{18906,750,"Bandana16"},
{18907,750,"Bandana17"},
{18908,750,"Bandana18"},
{18909,750,"Bandana19"},
{18910,750,"Bandana20"},
{18911,1000,"Mask1"},
{18912,1000,"Mask2"},
{18913,1000,"Mask3"},
{18914,1000,"Mask4"},
{18915,1000,"Mask5"},
{18916,1000,"Mask6"},
{18917,1000,"Mask7"},
{18918,1000,"Mask8"},
{18919,1000,"Mask9"},
{18920,1000,"Mask10"},
{18921,500,"Beret1"},
{18922,500,"Beret2"},
{18923,750,"Beret3"},
{18924,1000,"Beret4"},
{18925,1000,"Beret5"},
{18926,500,"Sombrero1"},
{18927,500,"Sombrero2"},
{18928,500,"Sombrero3"},
{18929,500,"Sombrero4"},
{18930,500,"Sombrero5"},
{18931,1000,"Sombrero6"},
{18932,1000,"Sombrero7"},
{18933,1000,"Sombrero8"},
{18934,1000,"Sombrero9"},
{18935,1000,"Sombrero10"},
{18936,500,"Chaleco1"},
{18937,750,"Chaleco2"},
{18938,1000,"Chaleco3"},
{18939,750,"Gorra1"},
{18940,750,"Gorra2"},
{18941,750,"Gorra3"},
{18942,1000,"Gorra4"},
{18943,1000,"Gorra5"},
{18944,1000,"Sombrero1"},
{18945,1250,"Sombrero2"},
{18946,1500,"Sombrero3"},
{18947,1000,"Sombrero1"},
{18948,1000,"Sombrero2"},
{18949,1000,"Sombrero3"},
{18950,1000,"Sombrero4"},
{18951,1000,"Sombrero5"},
{18952,1500,"CascoBox"},
{18953,500,"Gorra1"},
{18954,750,"Gorra2"},
{18955,750,"Gorra3"},
{18956,750,"Gorra4"},
{18957,750,"Gorra5"},
{18958,750,"Gorra6"},
{18959,750,"Gorra7"},
{18960,1000,"Gorra8"},
{18961,750,"Gorra9"},
{18962,750,"Sombrero"},
{18964,1000,"SkullyGorra"},
{18965,1250,"SkullyGorra2"},
{18966,1500,"SkullyGorra3"},
{18967,1000,"HatMan1"},
{18968,1000,"HatMan2"},
{18969,1000,"HatMan3"},
{18970,2000,"HatTiger"},
{18971,1000,"HatCool1"},
{18972,1250,"HatCool2"},
{18973,1500,"HatCool3"},
{18974,10000,"MaskZorro"},
{18976,1000,"CascoMoto-1"},
{18977,1000,"CascoMoto-2"},
{18978,1250,"CascoMoto-3"},
{18979,1500,"CascoMoto-4"},
{19006,500,"Lentes1"},
{19007,500,"Lentes2"},
{19008,500,"Lentes3"},
{19009,500,"Lentes4"},
{19010,500,"Lentes5"},
{19011,500,"Lentes6"},
{19012,500,"Lentes7"},
{19013,500,"Lentes8"},
{19014,500,"Lentes9"},
{19015,500,"Lentes10"},
{19016,1000,"Lentes11"},
{19017,1000,"Lentes12"},
{19018,1000,"Lentes13"},
{19019,1000,"Lentes14"},
{19020,1000,"Lentes15"},
{19021,1000,"Lentes16"},
{19022,1000,"Lentes17"},
{19023,1000,"Lentes18"},
{19024,1000,"Lentes19"},
{19025,1000,"Lentes20"},
{19026,1500,"Lentes21"},
{19027,1500,"Lentes22"},
{19028,1500,"Lentes23"},
{19029,1500,"Lentes24"},
{19030,1500,"Lentes25"},
{19031,1500,"Lentes26"},
{19032,1500,"Lentes27"},
{19033,1500,"Lentes28"},
{19034,1500,"Lentes29"},
{19035,1500,"Lentes30"},
{19036,2000,"HockeyMask1"},
{19037,2000,"HockeyMask2"},
{19038,2000,"HockeyMask3"},
{19039,500,"Reloj1"},
{19040,500,"Reloj2"},
{19041,500,"Reloj3"},
{19042,500,"Reloj4"},
{19043,500,"Reloj5"},
{19044,500,"Reloj6"},
{19045,500,"Reloj7"},
{19046,1000,"Reloj8"},
{19047,1000,"Reloj9"},
{19048,1000,"Reloj10"},
{19049,1000,"Reloj11"},
{19050,1000,"Reloj12"},
{19051,1000,"Reloj13"},
{19052,1000,"Reloj14"},
{19053,1000,"Reloj15"},
{19064,10000, "Santa-1"},
{19065,20000, "Santa-2"},
{19066,30000, "Santa-3"},
{19067,1000, "HoodyHat1"},
{19068,1000, "HoodyHat2"},
{19069,1000, "HoodyHat3"},
{19078,7500, "Loro-1"},
{19079,7500, "Loro-2"},
{19085,5000, "ParcheOjo"},
{19090,1500, "PomPomAzul"},
{19091,1500, "PomPomRojo"},
{19092,1500, "PomPomVerde"},
{19094,2000, "BurgerShotHat"},
{19095,500, "CowboyHat1"},
{19096,500, "CowboyHat3"},
{19097,1000, "CowboyHat4"},
{19098,1000, "CowboyHat5"},
{19101,2000, "ArmyHelmet1"},
{19102,2000, "ArmyHelmet2"},
{19103,2000, "ArmyHelmet3"},
{19104,2000, "ArmyHelmet4"},
{19105,2000, "ArmyHelmet5"},
{19106,2000, "ArmyHelmet6"},
{19107,4000, "ArmyHelmet7"},
{19108,4000, "ArmyHelmet8"},
{19109,4000, "ArmyHelmet9"},
{19110,4000, "ArmyHelmet10"},
{19111,4000, "ArmyHelmet11"},
{19112,4000, "ArmyHelmet12"},
{19113,1000, "SillyHelmet1"},
{19114,2000, "SillyHelmet2"},
{19115,3000, "SillyHelmet3"},
{19116,500, "PlainHelmet1"},
{19117,500, "PlainHelmet2"},
{19118,750, "PlainHelmet3"},
{19119,1000, "PlainHelmet4"},
{19120,1000, "PlainHelmet5"},
{19137,5000, "CluckinBellHat"},
{19163,1000, "GimpMask"}
};

new HoldingBones[][] = {
	"Nada",
	"Columna",
	"Cabeza",
	"Brazo Izq Sup",
	"Brazo Der Sup",
	"Mano Izq",
	"Mano Derecha",
	"Muslo Izq",
	"Muslo Der",
	"Pie Izq",
	"Pie Der",
	"Right calf",
	"Left calf",
	"AnteBrazo Izq",
	"AnteBrazo Der",
	"Clavicula Izq",
	"Clavicula Der",
	"Cuello",
	"Quijada"
};

enum pInfo
{
	pKey[24],
	pLevel,
	pAdminCP,
	pFacciones,
	pHelper,
	pConnectTime,
	pReg,
	pSex,
	pAge,
	pOrigin,
	pWalk,
	pExp,
	pCash,
	pAccount,
	pCheques,
	pKills,
	pDeaths,
	pArrested,
	pLottoNr,
	pJob,
	pJailed,
	pJailTime,
	pMats,
	pDrugs,
	pSpeed,
	pEctasy,
	pRitalin,
	pHeroina,
	pMarihuana,
	pLeader,
	pMember,
	pRank,
	pChar,
	Float:pHealth,
	Float:pArmour,
	pInt,
	pTeam,
	pModel,
	pPnumber,
	pMinutes,
	pMTexto,
	pIpod,
	pPhousekey,
	pPbizzkey,
	pPcarkey,
	pPcarkey2,
	pTimeCar,
	pTimeCar2,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pGunLic,
	pGafas,
	pTut,
	pVirWorld,
	pAntecedente1[64],
	pAntecedente2[64],
	pAntecedente3[64],
	pNote1[80],
	pNote2[80],
	pNote3[80],
	pNote4[80],
	pNote5[80],
	pSMS_1[80],
	pSMS_2[80],
	pSMS_3[80],
	pSMS_4[80],
	pSMS_5[80],
	pLighter,
	pCigarettes,
	pMask,
	pLocked,
	pAdvertencias,
    pAdminAdver,
	pDNI,
	pMSN[48],
	pEstado[18],
	pWeapon,
	pWeapon2,
	pWeapon3,
	pWeapon4,
	pWeapon5,
	pWeapon6,
	pWeapon7,
	pWeapon8,
	pWeapon9,
	pWeapon10,
	pWeapon11,
	pWeapon12,
	pAmmo,
	pAmmo2,
	pAmmo3,
	pAmmo4,
	pAmmo5,
	pAmmo6,
	pAmmo7,
	pAmmo8,
	pAmmo9,
	pAmmo10,
	pAmmo11,
 	pAmmo12,
 	pMaleta,
 	pMochila,
 	pCasco,
 	pSIDA,
 	pCancer,
 	pEpilepsia,
 	pDEagle,
 	pShotgun,
 	pMP5,
 	pAK47,
 	pM4,
 	pSniper,
 	pFStyle,
 	pLeccion,
 	pBusqueda,
 	pAntiSIDA,
 	pAntiCancer,
 	pAntiEpilepsia,
 	pRent,
 	pRob,
 	//pMusculoso,
 	pDonateT,
 	pCarPremium,
 	pCarPremium2,
 	pBanDuda,
 	pSeguro,
 	pWalkie,
 	pHead,
 	pMarried,
 	pMarriedTo[64],
 	pEntered,
 	pPeces,
 	pImplementos,
 	pCarnada,
 	pFichas,
 	pDNIFalse,
 	pDNIName[32],
 	pSuciedad,
 	//pMusculos,
 	//pHambre,
 	//pPeso,
    pContract,
 	pAnilloCom,
 	pAnilloOro,
 	pCollar,
 	pAnilloDia,
 	pPulsera,
 	pAretes,
 	pReloj
};

new PlayerInfo[MAX_PLAYERS][pInfo];

/*  AttachedObject Info

	Index:
	0. We will use it for attach on hands.
	1. We will use it for attach on spin.
	2. We will use it for attach on head.
	3. We will use it for attach on eyes.
	4. We will use it for attach on Optional.
*/

// AttachedInfo

	new	Att_Obj_Slot_0[MAX_PLAYERS][20],
		Att_Obj_Slot_1[MAX_PLAYERS][20],
		Att_Obj_Slot_2[MAX_PLAYERS][20],
		Att_Obj_Slot_3[MAX_PLAYERS][20],
		Att_Obj_Slot_4[MAX_PLAYERS][20];

new EventoOn = 0;
new comisaria;
new Puertas[MAX_PLAYERS];
new Climas;
new Advertencia_Debe	[MAX_PLAYERS];
new Scripter_Ocupado	[MAX_PLAYERS]; // adminduty scripter
new HasArmor			[MAX_PLAYERS];
new Float:ScriptArmor	[MAX_PLAYERS];
new ScriptMoney			[MAX_PLAYERS];
new PizzaCall = 999;
new JobDuty             [MAX_PLAYERS];
new PizzaCallTime[MAX_PLAYERS];
new sPizza[MAX_PLAYERS];
new bPizza[MAX_PLAYERS];
new Hotdog[MAX_PLAYERS];
new Muted[MAX_PLAYERS];
new skinlist = mS_INVALID_LISTID; //skins del binco
new armariolist = mS_INVALID_LISTID;

/* - Sistema de novedades via web - */

forward UpdateResponse(playerid, response_code, data[]);
public UpdateResponse(playerid, response_code, data[])
{

    new string[ 1028 ];

    if(response_code == 200)
    {
        format(string, sizeof(string), "%s", data);
        return ShowPlayerDialog(playerid,512,DIALOG_STYLE_MSGBOX, "{FF231D}Versión del Servidor", string, "Ok", "");
    }
    else
    {
        format(string, sizeof(string), "The request failed! The response code was: %d", response_code);
        SendClientMessage(playerid, 0xFFFFFFFF, string);
    }
    return 0;
}

/* --- Kick con retraso --- */
new ckick[MAX_PLAYERS]; 

stock KickRetrasado(playerid) {
    KillTimer(ckick[playerid]);
    ckick[playerid] = SetTimerEx("KickRetra", 1, false, "i", playerid);
    return 1;
}

forward KickRetra(playerid);
public KickRetra(playerid) {
    if (!IsPlayerConnected(playerid)) return 1;
    Kick(playerid);
    return 1;
}
/* ------------------------ */

function GiveArmorToPlayer(playerid, Float:armour)
{
	SetPlayerArmour(playerid, Float:armour);
	HasArmor[playerid] = 1;
	ScriptArmor[playerid] = armour;
	if(Team_LSPD(playerid)){SetPlayerAttachedObject(playerid,1,19142,1,0.099258,0.031748,-0.015871,360.000000,358.979064,357.476074,1.072590,1.239796,-1.046599);}
	else{SetPlayerAttachedObject(playerid, 1, 373, 1, 0.300327, -0.004779, -0.178271, 73.442504, 25.958881, 32.691726);}
	Att_Obj_Slot_1[playerid] = "Chaleco";
	return 1;
}

function MoneyGiveToPlayer(playerid,amount)
{
	if(IsPlayerConnected(playerid))
	{
	    GivePlayerMoney(playerid,amount);
	    ScriptMoney[playerid] += amount;
	    return 1;
	}
	return 0;
}

function MoneyResetToPlayer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerMoney(playerid);
	    ScriptMoney[playerid] = 0;
	    return 1;
	}
	return 0;
}

function GetScriptMoney(playerid)
{
	new amount;
	if(IsPlayerConnected(playerid))
	{
	    if(GetPlayerMoney(playerid)<ScriptMoney[playerid]) amount=GetPlayerMoney(playerid);
     	else amount=ScriptMoney[playerid];
	}
	return amount;
}

function SetMoneyToPlayer(playerid,amount)
{
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerMoney(playerid);
	    GivePlayerMoney(playerid,amount);
	    ScriptMoney[playerid] = amount;
	    return 1;
	}
	return 0;
}

function SetHP(playerid, Float:hp)
{
    PlayerInfo[playerid][pHealth] =hp;
    SetPlayerHealth(playerid, hp);
    return 1;
}

#define DLOGIN 			501
#define ShowLoginDialog(%1,%2) ShowPlayerDialog(%1, %2, DIALOG_STYLE_PASSWORD, "Ingreso", "{FFFFFF}Ingrese su contraseña para comenzar a jugar\n\n\t\t", "Conectar", "Salir")
#define DREGISTER 504
#define ShowRegisterDialog(%1,%2) ShowPlayerDialog(%1, %2, DIALOG_STYLE_INPUT, "Registro", "{FFFFFF}Bienvenido a {00FF00}HermandadZero\n\n{FFFFFF}Tu cuenta no está registrada, ingresa una\ncontraseña para registrarte.\n\n\t\t{FF0000}Gracias por preferirnos", "Registrar", "Salir")
// -==================-
#define SendRequest(%1,%2)  ShowPlayerDialog(%1, PETITION_DIALOG, DIALOG_STYLE_MSGBOX, "Petición", %2, "Aceptar", "Rechazar")
// -=========REGISTER~~TUTORIAL=========-
#define DIALOG_REG_AGE 		505
#define DIALOG_REG_NAC 		506
#define DIALOG_REG_MSN 		507
#define DIALOG_REG_MSNC 	508
#define DIALOG_REG_TUT 		509
// -====== GMLimits ======-
#define DINFO   		510
// -======= Toys ========-
#define TOYS        	511
#define DELETETOY       512
#define WEARTOY         513
#define BUYTOYS         514
#define BUYTOYS2        515
#define BUYTOYS3        516
#define EDITTOYS        517
#define EDITTOYS2       518
#define EDITTOYSBONE    519
#define EDITTOYSPX      520
#define EDITTOYSPY      521
#define EDITTOYSPZ      522
#define EDITTOYSRX      523
#define EDITTOYSRY      524
#define EDITTOYSRZ      525
// -=========24/7\SHOPS===========-
#define D247_BUY 		550
#define LOTTO_BUY       559
// -================== NARCO & MAFIA ======================-
#define CAMEL_MENU 			2200
#define CREATE_WEAPON     	2201
// -=================== u7 OPENDOOR ================- //
#define U7_OPEN         562
// -================= FSTYLE =================-
#define FSTYLE_DIALOG   563
// -================= AMMUNATION ================-
#define AMMUNATION_MENU     566
#define AMMUNATION_MENU_DEF 567
#define AMMUNATION_MENU_PIS 568
#define AMMUNATION_MENU_AME 569
#define AMMUNATION_MENU_ESC 570
#define AMMUNATION_MENU_PRO 572
#define AMMUNATION_MENU_LEC 573
// -==================== AMMUNATION MANAGER =====================-
#define DIALOG_LECCION 574
#define DIALOG_AMMU_MANAGER 575
// -==================== LSPD =========================-
#define DIALOG_LSPD_ELEVATOR   576
// -=================== Transportes ======================-
#define DIALOG_TAXI_RADAR 577
// -================== DIALOG BAR =======================- //
#define BAR_MENU 			578
#define BAR_MENU_TAPAS 		579
#define BAR_MENU_BEBIDAS    580
// -================= DIALOG FARMACIA ===================- //
#define DIALOG_FARMACIA 581
// -================= DIALOGO AYUDA ===================- //
#define DIALOG_AYUDAA 581
// -=======------======== MECÁNICO MENÚ ========---------=========- //
#define MECANICO_MENU   584
#define MECANICO_MENU_REPARACION    585
#define MECANICO_MENU_GASOLINA      586
#define MECANICO_MENU_TUNING        587
#define MECANICO_MENU_TUNING_global 592
#define MECANICO_MENU_TUNING_global_suspensionystereo 593
#define MECANICO_MENU_TUNING_SPECIAL    603
#define TUNING_WAA  610
#define MECANICO_MENU_TUNING_color  594
#define MECANICO_MENU_TUNING_color_1  595
#define MECANICO_MENU_TUNING_color_2  596
#define MECANICO_MENU_TUNING_name  597
#define MECANICO_MENU_TUNING_motor 598
#define MECANICO_MENU_TUNING_bateria 599
#define TUNING_MENU_NITRO   600
#define TUNING_MENU_RUEDAS 604
#define MECANICO_MENU_EMBARGAR      588
#define MECANICO_MENU_DESEMBARGAR   589
#define MECANICO_MENU_MULTAR        590
#define MECANICO_MENU_REMOLCAR      591
#define MECANICO_MENU_OTROS         601
#define MECANICO_MENU_OTROS_matricula  602
// -= Contrato =- //
#define REQF_ACCEPT 910
// -= Petition / Trade =- //
#define PETITION_DIALOG 911
// -= Gafas =- //
#define BRILLO_GAFAS 915
// -= LSTV =- //
#define ENTER_LSTV 916
// -= Gasolina =- //
#define GASOLINA_DIALOG 917
// -= Importar =- //
#define IMPORTAR_MOTOR  918
// -= GOOGLE =- //
#define GOOGLE  919
// -= Drugs =- //
#define DRUGS_DIALOG 920
#define CONFIRM_DRUGS_DIALOG    921
// -= IPHONE =- //
#define TEL_INPUT   	923
#define TEL_MSGBOX  	924
#define IPHONE_OPTIONS  925
#define IPHONE_AGENDA   926
#define IPHONE_AGENDA_VB     	912
#define IPHONE_AGENDA_ESCRIBIR  913
// -= Ropa =- //
#define CLOTHES_CHOOSE_DIALOG   927
// -= PaintBall =- //
#define DIALOG_PAINTBALL    	928
#define DIALOG_PAINTBALL_TVT	929
// -= Estado =- //
#define DIALOG_ESTADO   	930
#define DIALOG_REG_ESTADO   931
// -= Renovacion Vehicular =- //
#define RENOVEH_15_DIALOG	932
#define RENOVEH_30_DIALOG   933
// -= IPOD =- //
#define IPOD_MENU       934
/*#define IPOD_RADIO      935 -- Removido en 2.8.1 Fix B y sustituido por Radios 42 */
#define IPOD_MP3        936
// -= Saldo OTECEL =- //
#define RECARGA_PHONE   	937
#define OTECEL_CONFIRM  	938
#define OTECEL_PAQUETES 	939
#define DIALOG_SAMUR_ELEVATOR   940
#define DIALOG_FBI_ELEVATOR     941
// -= Matrimonio =- //
#define MATRIMONIO_DIALOG   942
#define MATRIMONIO_CONFIRM  943
#define MATRIMONIO_CONFIRM2 944
#define DIVORCIO_DIALOG     945
#define DIVORCIO_CONFIRM    946
// -= Trabajo Camioneros =- //
#define CARGAR_CAMION       947
// -= Vehicle GPS =- //
#define	GPS_DIALOG  	948
#define BARES       	949
#define EMERGENCIAS 	950
#define NEGOCIOS     	951
#define LUGARPUBLICO    952
#define SERVICIOS       953
// -= Trabajo Pescador =- //
#define DIALOG_PUERTO   954
// -= Casino LS =- //
#define CASINO_FICHAS   955
#define COMPRAR_FICHAS  956
#define METODO_FICHAS   957
// -= Sex Shop =- //
#define DELE_BUY_SEX    958
#define DELE_BUY_SEXM   959
#define DELE_BUY_SEXF   960
#define DELE_BUY_SEXJ   961
// -= Negocios =- //
#define QUIT_EXTORTION  962
// -= Electrónica =- //
#define ELECTRONIC_BUY  963
// -= DNI Falso =- //
#define DNI_MENU        964
#define DNI_CONFIRM     965
// -= Impuestos Casa =- //
#define HOUSE_IMPUESTOS 966
// -= Joyeria =- //
#define COMPRAR_JOYAS   967
// -= Vehiculos renta =- //
#define DIA_RENTA 968
#define CREDITOS 969
#define MAPA_DIALOG 970
#define MECANICO_MENU_CHECK_REMOVEALL 971
#define CAMARAS_LSPD 972
/* -= FORWARD -==================================================== */
forward LoadProperty();
forward Tiempos();
forward CambiarClima();
forward LoadCar();
forward LoadBizz();
forward SetPlayerSpawn(playerid);
forward SetPlayerUnjail();
forward GameModeExitFunc();
forward SetPlayerWeapons(playerid);
forward SetPlayerToTeamColor(playerid);
forward OnPlayerLogin(playerid);
forward LoadUser(playerid, name[], value[]);
forward OnPlayerRegister(playerid, password[]);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward Lotto(number);
forward DiseaseSystem();
forward CheckGas();
forward SyncTime();
forward SyncUp();
forward SaveAccounts();
forward PayDay();
forward OnPlayerUpdateTime(playerid);
// carwash
forward Autocruise(playerid, in);
forward OpenExit(playerid);
forward EndWash(playerid);
forward Water(playerid, on);

//
forward BancoTextDraw();

//Progressbars
//forward Menos(playerid);
//forward MenosDormir(playerid);
//forward DespuesDeMear(playerid);
//forward DespuesDeDormir(playerid);

//////////////////////////////
// -====================- //
new pMatI, pMatII, pMatIII;
// -= Petition =-
new Petition_ID[MAX_PLAYERS];
// 	-= Estado =-
new Text3D:Estado[MAX_PLAYERS],
	EstadoON[MAX_PLAYERS];
// ==============--.
new PlayerGotSpottedRecently[MAX_PLAYERS];
new ScriptWeaponsUpdated[MAX_PLAYERS];
new ScriptWeapons[MAX_PLAYERS][13];
new Checked[MAX_PLAYERS];
new NumBuy[MAX_PLAYERS], NumSeller[MAX_PLAYERS], NumPrice[MAX_PLAYERS];
new RecNumber[MAX_PLAYERS];
new ActiveTeleport[MAX_PLAYERS];
new slotselection[MAX_PLAYERS];
new DrugTimer[MAX_PLAYERS]
new See_MP[MAX_PLAYERS];
new PayDayLeft = 60;
// Paintball
new PaintballType[MAX_PLAYERS];
new PaintballDMKills[MAX_PLAYERS], TvTNaranjaKills = 0, TvTVerdeKills = 0, PaintPvPKills[MAX_PLAYERS];
new TotalDM = 0, TTeamVerde = 0, TTeamNaranja = 0, TotalPlayer = 0;
// Trunk system
new vehTrunkCounter[MAX_VEHICLES] = 1;
new vehTrunk[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new vehTrunkAmmo[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new Float:vehTrunkArmour[MAX_VEHICLES];
new ClothesID[MAX_PLAYERS],
ClothesPrice[MAX_PLAYERS];
new TEL_INPUT_ID[MAX_PLAYERS];
new TEL_NUMBER[MAX_PLAYERS];
new Skate[MAX_PLAYERS];
new BuyNarco[MAX_PLAYERS],
NarcoSellPrice[MAX_PLAYERS],
NarcoSellArm[MAX_PLAYERS],
NarcoSellAmmo[MAX_PLAYERS];
new QuitExtortion[MAX_PLAYERS], ExtortionID[MAX_PLAYERS];
new Smuggling[MAX_PLAYERS],SmugglingType[MAX_PLAYERS];
new Blinded[MAX_PLAYERS], Tied[MAX_PLAYERS];
new Rope[MAX_PLAYERS];
new AFK[MAX_PLAYERS];
new AFKTime[MAX_PLAYERS];
new Matrimonio[MAX_PLAYERS];
new Divorciar[MAX_PLAYERS];
new Fichas[MAX_PLAYERS];
new Speaker[MAX_PLAYERS];
new AdminChat[MAX_PLAYERS];
new HireKey[MAX_PLAYERS];
new DrugFarming[MAX_PLAYERS];
new Train_Route[MAX_PLAYERS];
new Plane_Route[MAX_PLAYERS];
new Intentar[MAX_PLAYERS];
new nod = 0;
new PFrecuencia[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new WhoFind[MAX_PLAYERS];
new RequestingBackup[MAX_PLAYERS];
new ReqF_Faction[MAX_PLAYERS];
new ReqF_Name[MAX_PLAYERS][32];
new UsingBelt[MAX_PLAYERS];
new Freezed[MAX_PLAYERS];
new bool:PuedePresionar[MAX_PLAYERS];
new FailTuto[MAX_PLAYERS];
new Accesory[MAX_PLAYERS];
new InAmbu[MAX_PLAYERS];
new Bowling[MAX_PLAYERS];
new BowlingMoney[MAX_PLAYERS];
new Revisado[MAX_PLAYERS];
new Misile_Launcher;
new tvp, tvp1, mafia2, lucianogate, yakuzagate, piratas, hospitalgate, pdgate1, fissore;
new lspddoor1, lspddoor2, lspdo,lspd2,lspdg,lspdk,lspdg1,lspdg2,lspdg3,lspdg4,lspdg5, pdgate2; // LSPD
new lspd1, lspd3; //Nuevo interior de LSPD
new fbidoor1, fbidoor2, fbidoor3, fbig1, fbig2, fbibarra; // FBI
new prison1, prison2, prison3, saem1, saem2, saem3;//Prision Militar
new u7d1, u7d2, u7d3, crgate, rusg, rusg2, rusg3, estac, estac2; // Mafia's gates
new meca1, meca2, meca3; // mecanicos nuevas rejas

// Gafas
new Text:SunGlasses;

//Processbar
//new TPB[MAX_PLAYERS];
//new Bar:Cansancio;

/*new ActualizarBarra[MAX_PLAYERS];
new TiempoMeando[MAX_PLAYERS];
new TiempoDormir[MAX_PLAYERS];
new Bar:MearBarra;
new Bar:DormirBarra;
new GanasDeMear[MAX_PLAYERS];
new GanasDeDormir[MAX_PLAYERS];*/
//////////////////////////
// textdraw camara de seguridad
new Text:TVCAM_Background,
        Text:TVCAM_CornerTopLeft,
        Text:TVCAM_CornerTopRight,
        Text:TVCAM_CornerBottomLeft,
        Text:TVCAM_CornerBottomRight,
        Text:TextdrawUp,
        Text:TextdrawDown,
        Text:TextdrawLeft,
        Text:TextdrawRight,
        Text:TextdrawFinish;


// Tuto
new Text:Tutorial[MAX_PLAYERS];
new
Text:Version;
new
Text:Film_1,
Text:arl,
Text:ttr,
Text:ktm,
Text:Textdraw0,
Text:Textdraw1,
Text:Textdraw2,
Text:Textdraw3,
Text:Textdraw4,
Text:Textdraw5,
Text:Textdraw6,
Text:Textdraw7,
Text:Textdraw8,
Text:Textdraw9,
//Text:TextdrawBanco,
Text:btt,
Text:htt,
Text:ptt,
Text:bnn,
Text:mnn,
Text:ccc,
Text:eef,
Text:Film_2;
new
	gGas95_Cost 	= 	1,  gGas95_Full=50,
	gGas98_Cost 	= 	1,  gGas98_Full=60,
	gGasoil_Cost    =   2,  gGasoil_Full=70,
	gBiogas_Cost    =   3,  gBiogas_Full=80;
// -===============
new Ganzuas[MAX_PLAYERS];
new Interview = 0;
new Interviewer[32] = "Nadie";
new Tax = 0;
new TaxValue = 0;
new Jackpot = 0;
new Blood = 1000;
new RPirata, RGroove, RHerman, RLKings, RLCN, RYakuza, RRusos, RBallas;
new TaxiCalled[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new TarifaTaxi[MAX_PLAYERS];
new Fishing[MAX_PLAYERS];
new RStep[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];
new Delivery[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new CorteJudicial[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new TimeCarOffer[MAX_PLAYERS];
new RenoveLlave[MAX_PLAYERS];
new PropRob[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new Situacion[MAX_PLAYERS];
new DeathPlayer[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerTazeado[MAX_PLAYERS];
new Tazer[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gActivePlayers[MAX_PLAYERS];
new gOoc[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new First_Spawn[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new Guardes_Oferta[MAX_PLAYERS];
new Guardes_Precio[MAX_PLAYERS];
new Reparar_Precio[MAX_PLAYERS];
new Reparar_Oferta[MAX_PLAYERS];
new bool:ConEstado[MAX_PLAYERS];
new Text3D:estado[MAX_PLAYERS];
new noac = 0;
new noooc = 1;
new DobleOn = 0;
new TripleOn = 0;
new adds = 0;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new numplayers = 0;
new dollah = 0; // Amount player recieves on spawn.
new realtime = 1;
new wtime = 16;
new realchat = 1;
new shifthour;
new othtimer;
new globaltimer;
new timevehtimer;
new camtimer;
new synctimer;
new mmtimer;
new LifeTimer;
new KeysTimer;
new disease;
new unjailtimer;
new accountstimer;
new checkgastimer;
new levelexp = 4;
new cchargetime = 20;
new Text:BalanceTextDraw[MAX_PLAYERS];
new BankTimer;
// 	-= New CarWash System =-
new Text3D:entrancetext;
new entrancegate, exitgate;
new water1, water2, water3, water4, water5, water6, water7;
new usingcarwash = -1;
new unwashable[89][0] = {
{403},{406},{408},{414},{417},
{423},{424},{425},{430},{431},
{432},{433},{435},{437},{441},
{443},{444},{446},{447},{448},
{452},{453},{454},{455},{456},
{457},{460},{461},{462},{463},
{464},{465},{468},{469},{471},
{472},{473},{476},{481},{484},
{485},{486},{487},{488},{493},
{497},{498},{501},{508},{509},
{510},{511},{512},{513},{514},
{515},{519},{520},{521},{522},
{523},{524},{530},{531},{532},
{539},{544},{548},{553},{556},
{557},{563},{564},{568},{571},
{572},{573},{574},{577},{578},
{581},{583},{586},{588},{592},
{593},{594},{595},{609}
};

// Pos
new Float:AFKLoc[MAX_PLAYERS][3];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:InceptionPos[MAX_PLAYERS][3];
// ---- Vehicle Control
new
	engineOn[MAX_VEHICLES],
	LightsOn[MAX_VEHICLES],
	BootOpen[MAX_VEHICLES],
	BonnetOpen[MAX_VEHICLES],
	gEngine[MAX_PLAYERS],
	NoWheels[MAX_VEHICLES],
	Alarm[MAX_VEHICLES];
// -==================
new JustDied[MAX_PLAYERS];
new KnockedDown[MAX_PLAYERS];
new DefaultWeather = 10;
new UsingDrugs[MAX_PLAYERS];
new OwnableCarOffer[MAX_PLAYERS];
new OwnableCarID[MAX_PLAYERS];
new OwnableCarPrice[MAX_PLAYERS];
new PlayerIsSweeping[MAX_PLAYERS];
new PlayerIsRuta[MAX_PLAYERS];
new PlayerCargando[MAX_PLAYERS], PlayerDescargando[MAX_PLAYERS];
new Mercancia[MAX_PLAYERS], Camion[MAX_PLAYERS];
new YaAposto[MAX_PLAYERS];
new Color[MAX_PLAYERS];
new HouseExplo[MAX_PLAYERS];
new RecentlyShot[MAX_PLAYERS];
new PlayerStatInfo[MAX_PLAYERS][8][32];
new StatString[MAX_PLAYERS][3][32];
new DNIName[MAX_PLAYERS][32];
new StatInt[MAX_PLAYERS][12];
new Maskuse[MAX_PLAYERS];
//antispam
new AntiSpamC = 0;
new AntiSpam[100][100];
// Drugs System
new UsingEctasy[MAX_PLAYERS];
new EctasyEffect[MAX_PLAYERS];
new UsingRitalin[MAX_PLAYERS];
new RitalinEffect[MAX_PLAYERS];
new UsingHeroina[MAX_PLAYERS];
new HeroinaEffect[MAX_PLAYERS];
new HeroinaBeat[MAX_PLAYERS];
new UsingMarihuana[MAX_PLAYERS];
new MarihuanaEffect[MAX_PLAYERS];
new MarihuanaBeat[MAX_PLAYERS];
// Illnes Sys.
new CancerEffect[MAX_PLAYERS];
new EpilepsiaCrack[MAX_PLAYERS];
new SIDA[MAX_PLAYERS];
new Ibuprofeno[MAX_PLAYERS];
new Nicotina[MAX_PLAYERS];
new Energysil[MAX_PLAYERS];
new cNicotina[MAX_PLAYERS];
new cEnergysil[MAX_PLAYERS];
new cSIDA[MAX_PLAYERS];
new cCancer[MAX_PLAYERS];
new cEpilepsia[MAX_PLAYERS];
// Rob Sys.
new TelfRob[MAX_PLAYERS];
new PickLock[MAX_PLAYERS];
// ------------
new UsingRayBan[MAX_PLAYERS];
new VehicleWindows[MAX_VEHICLES] = 0;
new pdtrace = 0;
new Float:pdtrace_x;
new Float:pdtrace_y;
new Float:pdtrace_z;
new emdtrace = 0;
new Float:emdtrace_x;
new Float:emdtrace_y;
new Float:emdtrace_z;
new JustReported[MAX_PLAYERS];
new PlayerNeedsHelp[MAX_PLAYERS];
new PlayerDuda[MAX_PLAYERS], Mochila[MAX_PLAYERS][2], SmokeTimer[MAX_PLAYERS];
new PlayerSol[MAX_PLAYERS];
new ComproBoleto[MAX_PLAYERS];
new ComproCine[MAX_PLAYERS];
new IsSmoking[MAX_PLAYERS];
new ReduceTime[MAX_PLAYERS];
new RegText[MAX_PLAYERS];
new RegConfig[MAX_PLAYERS];
new RadioOn[MAX_PLAYERS];
new Saludo_ID[MAX_PLAYERS];
new Regalo_Offer[MAX_PLAYERS];
new Regalo_ID[MAX_PLAYERS];
new Regalo_ITEM[MAX_PLAYERS];
// Vida Sys.
new MensajeMuriendo[MAX_PLAYERS];
new ForbidHandsUp[MAX_PLAYERS];
new Left4Life[MAX_PLAYERS];
new Rescued[MAX_PLAYERS];
new MsgL4L[MAX_PLAYERS];
// Factura
new Facturing[MAX_PLAYERS];
new duda[MAX_PLAYERS];
new NewUsed[MAX_PLAYERS];
//dutyadmin
new AdminDuty[MAX_PLAYERS];
new AntiAbusos[MAX_PLAYERS];//sistema anti AA
// Transport Variables LS
new
	TaxiSlot1 = 999, SlotZone1[64] = "Sin Localizar", SlotCity1[4] = "No", TiempoSlot1 = 0,
	TaxiSlot2 = 999, SlotZone2[64] = "Sin Localizar", SlotCity2[4] = "No", TiempoSlot2 = 0,
	TaxiSlot3 = 999, SlotZone3[64] = "Sin Localizar", SlotCity3[4] = "No", TiempoSlot3 = 0,
	TaxiSlot4 = 999, SlotZone4[64] = "Sin Localizar", SlotCity4[4] = "No", TiempoSlot4 = 0,
	TaxiSlot5 = 999, SlotZone5[64] = "Sin Localizar", SlotCity5[4] = "No", TiempoSlot5 = 0,
	TaxiSlot6 = 999, SlotZone6[64] = "Sin Localizar", SlotCity6[4] = "No", TiempoSlot6 = 0,
	TaxiSlot7 = 999, SlotZone7[64] = "Sin Localizar", SlotCity7[4] = "No", TiempoSlot7 = 0,
	TaxiSlot8 = 999, SlotZone8[64] = "Sin Localizar", SlotCity8[4] = "No", TiempoSlot8 = 0;

new dm[] = "      \n {45F86C}DeathMatch {FFFFFF} - Muy simple, es matar a una persona sin razón alguna o sin ningún tipo de ROL.\n {FFFFFF}No olvide que el DM es una falta muy grave, usted puede ser {FF150E}baneado{FFFFFF}.";
new mg[] = "      \n {45F86C}MetaGaming {FFFFFF} - Es Confundir canales IC u OOC, para asi tomar ventaja usando informacion externa \n {5CFFCD}El MetaGaming {FFFFFF}es uno de los terminos mas importantes en Role Play.\n {FFFFFF}Deben estudiar bien este termino si desea sobrevivir en este modo de juego.";
new pg[] = "      \n {45F86C}PowerGaming {FFFFFF} - Se llama a las acciones ficticias o irreales que usted puede llegar a hacer.\n {FFFFFF}Tambien se llama PG, cuando usted obliga a alguien a hacer un {FF150E}Rol.\n {FFFFFF}Recuerde que esta falta es sancionada con {FF150E}Jail Administrativa.\n {54F288}Ejemplos de PowerGaming - {FFFFFF}Usando /me: \n\n {A615E0}* Juan Carlos le roba todo su dinero y se corre.";
new bpc[] ="      \n {45F86C}Badly Parked Car {FFFFFF} - Esta regla se caracteriza cuando un usuario estaciona incorrectamente su vehiculo en las calles,\n como sancion tiene la venta del vehiculo y un envio a prisión administrativa.";
new bd[] ="      \n {45F86C}Bad Driving {FFFFFF} - Manejar incorrectamente un vehiculo, causando desastres y desorden entre otros vehiculos. Recuerda manejar como en la vida real.";
new cj[] ="       \n {45F86C}CarJack {FFFFFF} - Esta es una de las reglas muy importantes, es cuando usted roba un auto sin un rol previo \n cometer esta falta es {DEDC44}Anti-RolePlay {FFFFFF}y si usted hace esto puede ser {FF150E}sancionado{FFFFFF}.";
new rk[] ="       \n {45F86C}RevengeKill {FFFFFF} - Es la acción de cobrar vengaza despues de que usted haya {DEDC44}'muerto' \n {FFFFFF}Verdaderamente usted no muere, usted logra salvarse y aparece en el hospital. \n Lo que usted no debe hacer es volver al rol en el cual usted {DEDC44}'murio'.";
new na[] ="       \n {45F86C}Noob Abuser {FFFFFF} - Hacer NA se considera abusar de un usuario nuevo {0096E5}(Novato - Noob). \n\n {54F288}Por Ejemplo: \n\n {45F86C}> {FFFFFF}Confundirlo para aprovecharse de su inexperiencia en RolePlay.\n {45F86C}> {FFFFFF}Obligarlo a que te de dinero o que siga un rol de secuestro. \n\n {F4E3D5}* Recuerde nunca Abusar de un novato. {FFFFFF}Usted puede resultar {FF150E}baneado {FFFFFF}del servidor.";

// AutoEscuela
new IsPractising[MAX_PLAYERS];

new Text:RegDraw[MAX_PLAYERS];
new Text:RegInfo;
new Text:Taximeter[MAX_PLAYERS];
new Text3D:House3DText[MAX_HOUSES];
new Text3D:Bizz3DText[MAX_BIZZ];
new HousePickup[MAX_HOUSES];
new BizzPickup[MAX_BIZZ];

#define GasMax 180
#define RunOutTime 120000
#define RefuelWait 10000

//Processbars:
#define OrdenadoC 300000
#define Tiempo 			1000
//////////////////


#define CAR_AMOUNT VEH
new Gas[CAR_AMOUNT];

new Refueling[MAX_PLAYERS];

stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

#define MAX_ROADBLOCKS 35

enum rInfo
{
    sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};

new Roadblocks[MAX_ROADBLOCKS][rInfo];

enum hInfo
{
    hOwned,
    hOwner[MAX_PLAYER_NAME],
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hInt,
    hLevel,
	hValue,
	hLock,
	hRooms,
	hRent,
	hRentabil,
	hWep,
	hAmmo,
    hMats,
    hDrugs,
    hSpeed,
    hEctasy,
    hRitalin,
    hHeroina,
    hMarihuana,
	hWorld,
	hTime
};

new HouseInfo[MAX_HOUSES][hInfo];

enum cInfo
{
	cModel,
	Float:cLocationx,
	Float:cLocationy,
	Float:cLocationz,
	Float:cAngle,
	cColorOne,
	cColorTwo,
	cOwner[MAX_PLAYER_NAME],
	cName[MAX_PLAYER_NAME],
	cValue,
	cOwned,
	cLock,
	cBattery,
	cSpoiler, 	// Aleron
	cHood,      // Capó
	cRoof,      // Techo
	cSideskirt, // Faldones
	cNitro,     // N20
	cLamps,     // Luces Delanteras
	cExhaust,   // Tubo Escape
	cWheel,     // Llantas
	cHydraulics,    // Hidráulica
	cPaintjob,    // Stereo
	cFrontBumper,    // Par. Delantero
	cRearBumper,    // Par. Trasero
	cVents,     // Respiraderos
	cEmbargo,
	cMulta,
	cPlate[16],
	cGas,
	cAlarm,
	cVehTime,
	cGPS
};

new CarInfo[VEH][cInfo];

enum bInfo //By David
{
	bOwned,
	bOwner[24],
	bName[32],
    bExtortion[MAX_PLAYER_NAME],
	Float:bEntrancex,
	Float:bEntrancey,
	Float:bEntrancez,
	bLevelNeeded,
	bBuyPrice,
	bTill,
	bTillEx
};

new BizzInfo[MAX_BIZZ][bInfo];

enum Faction
{
	LSPD,
	FBI,
	SAMUR,
	CNN,
	SAEM,
	LCN,
	YAK,
	RUS,
	PIR
};

new Fondos[Faction];

enum hqLocks
{
	GS,
	MOT,
	LH,
	LK,
	ITA,
	RUS,
	HIT,
	YAK,
	BL,
	PIR
};

new hqlock[hqLocks];

new Bar:Cargando[MAX_PLAYERS] = {INVALID_BAR_ID, ...};

new Float:gDrugFarmVar[12][3] = {
{-1185.3206,-1049.9336,129.2188},
{-1122.1041,-1054.1355,129.2188},
{-1084.2592,-1056.0363,129.2119},
{-1030.9105,-1056.3110,129.2188},
{-1020.9789,-977.7290,129.2188},
{-1074.0260,-984.7910,129.2188},
{-1122.7734,-987.4319,129.2188},
{-1178.1708,-991.1383,129.2188},
{-1180.0258,-938.9026,129.2188},
{-1135.5679,-926.2295,129.2188},
{-1076.0167,-923.2093,129.2188},
{-1024.3663,-922.9048,129.2126}
};

new Float:AFKZone[5][3] = {
	{-1753.7677,885.5895,295.8750},
	{-1942.7980,537.1266,209.6516},
	{-1807.5276,523.5158,234.8906},
	{-1837.2823,574.0678,234.8874},
	{-1774.7689,573.7373,234.8906}
};

new Float:gSweeperPoints[61][3] = {
{351.8791,-1542.9525,32.8241},
{528.3840,-1421.4326,15.5214},
{540.4012,-1581.2511,15.5786},
{717.4601,-1588.2983,13.7824},
{641.3878,-1290.5045,14.7365},
{697.1915,-1154.5682,15.0319},
{624.9969,-1500.6953,14.2819},
{657.1359,-1754.1011,12.9295},
{807.3387,-1786.8031,12.9919},
{855.5547,-1599.3353,12.9575},
{920.0758,-1435.9244,12.9004},
{829.3325,-1318.7393,12.9412},
{800.4104,-1153.3473,23.5362},
{919.1944,-983.7144,37.6564},
{960.5366,-1125.8149,23.2350},
{1027.4044,-1222.7533,16.3308},
{1055.6002,-1347.0660,12.9492},
{1035.0167,-1661.7706,12.9492},
{1135.6582,-1714.5726,13.2095},
{1199.2737,-1449.2653,12.9445},
{1166.7722,-1279.0509,13.1084},
{1175.7271,-1139.5891,23.2408},
{1165.6539,-996.5869,36.7975},
{1003.9905,-956.1555,41.1873},
{1259.8721,-1006.3247,33.8007},
{1328.4585,-1282.8423,12.9490},
{1367.6403,-1077.8971,24.8246},
{1479.8086,-1109.1764,23.2225},
{1452.0596,-1320.6748,12.9491},
{1427.4011,-1576.5649,12.9273},
{1425.8943,-1669.9651,12.9492},
{1487.8964,-1734.6465,12.9490},
{1510.6815,-1735.1931,12.9490},
{1532.3123,-1674.5083,12.9493},
{1532.5154,-1663.3816,12.9490},
{1566.7845,-1823.5012,12.9490},
{1443.2334,-1869.8840,12.9569},
{1691.9636,-1775.9987,12.9493},
{1692.5615,-1628.3645,12.9492},
{1848.1118,-1512.0933,12.9324},
{1852.4690,-1359.8696,12.9649},
{1869.1888,-1079.5444,23.2335},
{1968.1589,-1195.7958,25.2591},
{2020.4669,-1264.0336,23.3865},
{2118.3831,-1222.1611,23.3709},
{2178.0645,-1160.1169,24.2061},
{2329.2275,-1156.1409,26.3632},
{2269.0276,-1248.3162,23.3730},
{2164.4541,-1366.1935,23.3944},
{2109.7114,-1488.5392,23.3842},
{2079.1208,-1842.4808,12.9491},
{2185.7046,-1897.3514,12.9632},
{2218.7041,-1798.5983,12.7617},
{2349.9788,-1750.7246,12.9493},
{2432.4709,-1653.3844,26.1642},
{2453.5630,-1373.6967,23.4024},
{2565.4963,-1260.5342,45.5413},
{2640.2383,-1369.0193,30.8336},
{2674.0586,-1448.9202,29.9459},
{2719.6277,-1570.2716,18.7877},
{2513.8059,-1599.9224,17.1046}
};

new Float:PaintballDMSpawns[4][3] = {
{-1487.1887,1641.8083,1060.6719},
{-1361.2830,1631.6606,1053.5317},
{-1453.2238,1578.0221,1052.7500},
{-1456.6083,1635.8208,1052.5313}
};

new Float:PaintPvPSpawns[3][3] = {
{1948.7115,1653.6857,-11.8821},
{1975.8000,1619.4677,-11.8929},
{2003.1938,1598.9515,-11.8828}
};

main()
{
	print("\n-========================================-");
	print("Cargando...  Hermandadzero - RolePlay 0.1");
	print("   Chicle  <----------------> Puto amo");
	print("-==================== *** ====================-");
	print("Todos los derechos reservados. HermandadZero 2017\n");
}

// -====== AntiCheat =======-
#define GetPlayerMoney GetScriptMoney
#define ResetPlayerMoney MoneyResetToPlayer
#define GivePlayerMoney MoneyGiveToPlayer
#define SetPlayerMoney SetMoneyToPlayer
#define SetPlayerArmour GiveArmorToPlayer
// -=========================-

function DollahScoreUpdate()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerScore(i, PlayerInfo[i][pLevel]);
		}
	}
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new Float:cx, Float:cy, Float:cz;
	
	if(IsAnOwnableCar(vehicleid))
	{
		AddCarTuning(vehicleid);
	}
	if(LSPD_IsACopCar(vehicleid) && !ispassenger)
	{
		if(Team_LSPD(playerid)) return 1;
  		else GetPlayerPos(playerid, cx, cy, cz);	SetPlayerPos(playerid, cx,  cy, cz);
	}
	return 1;
}


IsAnInstructor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==15)		{	return 1;	}
		else if(leader==15)	{	return 1;	}
	}
	return 0;
}

Team_LSPD(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	1)		{	return 1;	}
		else if(leader	==	1)	{	return 1;	}
	}
	return 0;
}

Team_NG(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	3)		{	return 1;	}
		else if(leader	==	3)	{	return 1;	}
	}
	return 0;
}

Team_FBI(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	24)		{	return 1;	}
		else if(leader	==	24)	{	return 1;	}
	}
	return 0;
}
Team_CorteJudicial(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	25)		{	return 1;	}
		else if(leader	==	25)	{	return 1;	}
	}
	return 0;
}

Team_Mecanicos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	7)		{	return 1;	}
		else if(leader	==	7)	{	return 1;	}
	}
	return 0;
}

Team_SAMUR(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	4)		{	return 1;	}
		else if(leader	==	4)	{	return 1;	}
	}
	return 0;
}

Team_Groove(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	9)		{	return 1;	}
		else if(leader	==	9)	{	return 1;	}
	}
	return 0;
}
Ballas_pand(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	5 )		{	return 1;	}
		else if(leader	==	5)	{	return 1;	}
	}
	return 0;
}
Team_Hermandad(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	10)		{	return 1;	}
		else if(leader	==	10)	{	return 1;	}
	}
	return 0;
}

Team_LK(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	11)		{	return 1;	}
		else if(leader	==	11)	{	return 1;	}
	}
	return 0;
}	

Mafia_Italiana(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	12)		{	return 1;	}
		else if(leader	==	12)	{	return 1;	}
	}
	return 0;
}

Hitman(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	23)		{	return 1;	}
		else if(leader	==	23)	{	return 1;	}
	}
	return 0;
}



Mafia_Yakuza(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	13)		{	return 1;	}
		else if(leader	==	13)	{	return 1;	}
	}
	return 0;
}

Mafia_Rusa(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	14)		{	return 1;	}
		else if(leader	==	14)	{	return 1;	}
	}
	return 0;
}

Mafioso(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 2 || member	==	12 || member ==	13 || member ==	14 || member == 8)		{	return 1;	}
		else if(leader == 2 || leader	==	12 || leader ==	13 || leader ==	14 || leader == 8 )	{	return 1;	}
	}
	return 0;
}

Pandilleros(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	9 || member	==	10 || member	==	11)		{	return 1;	}
		else if(leader	==	9 || leader	==	10 || leader	==	11)	{	return 1;	}
	}
	return 0;
}

Journalist(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	17)		{	return 1;	}
		else if(leader == 17)	{	return 1;	}
	}
	return 0;
}

Gobierno(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	16)		{	return 1;	}
		else if(leader == 16)	{	return 1;	}
	}
	return 0;
}

Presidente(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
		if(leader == 16)	{	return 1;	}
	}
	return 0;
}

IsANarco(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	19)		{	return 1;	}
		else if(leader == 19)	{	return 1;	}
	}
	return 0;
}

IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	1 || member	==	3 || leader	==	24)		{	return 1;	}
		else if(leader	==	1 || leader	==	3 || member	==	24)	{	return 1;	}
	}
	return 0;
}
IsACorteJudicial(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member	==	25)		{	return 1;	}
		else if(leader == 25)	{	return 1;	}
	}
	return 0;
}

Moteros(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==8)		{	return 1;	}
		else if(leader==8)	{	return 1;	}
	}
	return 0;
}

Piratas4x4(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==2)		{	return 1;	}
		else if(leader==2)	{	return 1;	}
	}
	return 0;
}

FacRadio(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member == 1 || member == 3 || member	== 4 || member == 7 || member == 8 || member == 16 || member == 17 || member == 23 || member == 24 || member == 25 || leader == 26)		{	return 1;	}
		else if(leader == 1 || leader == 3 || leader == 4 || leader == 7 || leader == 8 || leader == 16 || leader == 17 || leader == 23 || leader == 24 || leader == 25 || member == 26)	{	return 1;	}
	}
	return 0;
}

IsAnOwnableCar(vehicleid)
{
	if(vehicleid >= VV && vehicleid < VEH) { return 1; }
	return 0;
}

IsAtDealership(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(30.0,playerid,544.5143,-1280.5714,17.2482)) { return 1; }
	    else if(PlayerToPoint(30.0,playerid,1045.3408,-905.2751,42.6273)) { return 1; }
	    else if(PlayerToPoint(50.0,playerid,2152.0850,-1150.7964,24.1398)) { return 1; }
	    else if(PlayerToPoint(20.0,playerid,633.4413,-1950.7174,1.6708)) { return 1; }
	}
	return 0;
}

IsAtClothShop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(30.0,playerid,211.7609,-7.6523,1001.2109)) { return 1; }
	    else if(PlayerToPoint(20.0,playerid,207.7558,-103.3743,1005.2578)) { return 1; }
	}
	return 0;
}

IsAt247(playerid){
    if(IsPlayerConnected(playerid)){
		if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469)) { return 1; }
		else if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573)) { return 1; }
	}
	return 0;
}

IsAtATM(playerid){
    if(IsPlayerConnected(playerid)){
		if(PlayerToPoint(2.0,playerid,1144.09912109,-1766.47509766,13.42406273)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1269.66125488,-1323.76599121,13.40214443)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2823.22656250,-1593.80871582,11.00387192)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1589.39196777,-2295.21191406,13.46932220)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1591.40454102,-2295.21191406,13.46932220)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1593.41723633,-2295.21191406,13.46932220)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,450.53472900,-1794.50781250,5.43714857)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1415.19128418,-1020.33685303,23.73026848)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1417.67700195,-1020.33593750,23.73026848)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1832.7850,-1848.1703,13.5781)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1498.6565,-1749.2366,15.4453)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1832.2637,-1851.1232,13.5781)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1187.0133,-1372.0013,13.5532)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,-1836.5343,63.8226,1055.1891)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,2389.5063,2463.1174,-18.9097)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,1476.8065,-1778.5776,15.3706)) { return 1; }
	}
	return 0;
}

IsAtBank(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(2.0,playerid,344.5987,134.3012,1007.9657)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,347.0113,133.3898,1007.9657)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,358.8446,-1627.3136,39.2349)) { return 1; }
		else if(PlayerToPoint(2.0,playerid,349.0368,132.7026,1007.9657)) { return 1; }
		else if(PlayerToPoint(30.0,playerid,361.3453,-1621.5684,39.2349)) { return 1; }
	}
	return 0;
}

IsAtBowling(playerid){
	if(IsPlayerConnected(playerid)){
	    if(PlayerToPoint(1.0,playerid, -2355.6067,920.6121,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.7280,914.9425,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.5491,910.4331,93.8007)) return 1;
	    else if(PlayerToPoint(1.0,playerid, -2355.8269,905.1210,93.8007)) return 1;
	}
	return 0;
}

IsAtGasStation(playerid){
    if(IsPlayerConnected(playerid)){
  		if(PlayerToPoint(8.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(8.0,playerid,1944.3260,-1772.9254,13.3906))			return 1;
		else if(PlayerToPoint(8.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(8.0,playerid,-1609.7958,-2718.2048,48.5391))    return 1;
		else if(PlayerToPoint(8.0,playerid,2114.5444,920.1169,10.8203) || PlayerToPoint(8.0,playerid,2640.6272,1106.5349,10.8203))      return 1;
		else if(PlayerToPoint(8.0,playerid,1625.0463,-2167.6428,13.4402) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))     return 1;
		else if(PlayerToPoint(8.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(8.0,playerid,614.9333,1689.7418,6.6968))       return 1;
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(8.0,playerid,70.3882,1218.6783,18.5165))      return 1;
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(8.0,playerid,-1327.7218,2678.8723,50.0625))     return 1;
		else if(PlayerToPoint(8.0,playerid,1637.0149,2331.5129,10.8722) || PlayerToPoint(8.0,playerid,1636.6686,2325.8711,10.8722))     return 1;
		else if(PlayerToPoint(8.0,playerid,1636.6140,2320.6423,10.8722) || PlayerToPoint(8.0,playerid,1595.5337,2198.9404,10.8203))     return 1;
		else if(PlayerToPoint(8.0,playerid,656.4265,-559.8610,16.5015) || PlayerToPoint(8.0,playerid,656.3797,-570.4138,16.5015))       return 1;
 		else if(PlayerToPoint(8.0,playerid,1099.2325,-350.4425,73.9922))    return 1;
	}
	return 0;
}

IsAtTaller(playerid)
{
    if(IsPlayerConnected(playerid)){
  		if(PlayerToPoint(50.0,playerid,1641.2056,-2139.6641,13.4100))   	return 1;
		else if(PlayerToPoint(20.0,playerid,1603.8342,2376.0271,10.8203))   return 1;
		else if(PlayerToPoint(20.0,playerid,1615.6462,2376.8767,10.8203))   return 1;
		else if(PlayerToPoint(20.0,playerid,1629.5187,2376.5425,10.8203))   return 1;
		else if(PlayerToPoint(50.0,playerid,587.1603,-2002.3984,3.8381))    return 1;
    }
	return 0;
}

IsAtHotdog(playerid)
{
    if(IsPlayerConnected(playerid)){
        if(PlayerToPoint(5.0,playerid,1357.8468,-1749.8292,13.3789))         return 1;
		else if(PlayerToPoint(5.0,playerid,1589.6941,-1288.7108,17.5133))   return 1;
		else if(PlayerToPoint(5.0,playerid,1100.6458,-1383.2819,13.7813))   return 1;
		else if (PlayerToPoint(5.0,playerid,1301.0686,-1248.4834,13.5469))  return 1;
		}
	return 0;
}

IsAtMap(playerid)
{
    if(IsPlayerConnected(playerid)){
        if(PlayerToPoint(5.0,playerid,1181.39,-1317.95,13.62))         return 1;
		else if(PlayerToPoint(5.0,playerid,772.53, -1327.30, 13.35))   return 1;
		else if(PlayerToPoint(5.0,playerid,1813.88, -1901.38, 13.36))   return 1;
		else if (PlayerToPoint(5.0,playerid,1639.07, -2187.55, 13.37))  return 1;
		else if(PlayerToPoint(5.0,playerid,1839.23, -1422.26, 13.38))   return 1;
		else if(PlayerToPoint(5.0,playerid,1193.81, -1156.84, 23.69))   return 1;
		else if (PlayerToPoint(5.0,playerid,456.63, -1494.42, 30.89))  return 1;
		else if (PlayerToPoint(5.0,playerid,1450.84, -1026.94, 23.62))  return 1;
		else if(PlayerToPoint(5.0,playerid,2089.01, -1824.00, 13.34))   return 1;
		else if(PlayerToPoint(5.0,playerid,1718.75,-1866.16,13.57))   return 1;
		}
	return 0;
}

IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid)){
        if(PlayerToPoint(10.0,playerid,496.3752,-76.0410,998.7578))         return 1;
		else if(PlayerToPoint(10.0,playerid,499.9703,-20.3358,1000.6797))   return 1;
		else if(PlayerToPoint(10.0,playerid,1779.2051,-1556.7195,-49.6550)) return 1;
		else if(PlayerToPoint(10.0,playerid,1215.9480,-13.3519,1000.9219))  return 1;
		else if(PlayerToPoint(10.0,playerid,1259.2834,-791.0306,1084.0078)) return 1;
		else if(PlayerToPoint(10.0,playerid,681.2731,-453.8256,-25.6172))   return 1;
		else if(PlayerToPoint(10.0,playerid,2246.8252,1661.6531,6.9099))    return 1;
		else if(PlayerToPoint(25.0,playerid,1291.1887,-1869.6744,13.5659))  return 1; 
		else if(PlayerToPoint(10.0,playerid,1392.5297,-1893.1754,17.4266))  return 1;
		else if(PlayerToPoint(15.0,playerid,1138.9811,-4.4557,1017.7200)) 	return 1;
	}
	return 0;
}

LSPD_IsACopCar(carid)		{	if((carid >= 1) 	&&		(carid <= 22))			{	return 1;	}	return 0;	}
IsAPlane(carid)				{	if((carid >= 163) 	&&		(carid <= 167))			{	return 1;	}	return 0;	}
FBI_Vehicle(carid)			{	if((carid >= 216) 	&& 		(carid <= 225))			{	return 1;	}	return 0;	}
Taxi_Vehicle(carid)			{	if((carid >= 23) 	&& 		(carid <= 34))			{	return 1;	}	return 0;	}
SAMD_Vehicle(carid)			{	if((carid >= 39) 	&& 		(carid <= 47))			{	return 1;	}	return 0;	}
SAEM_Vehicle(carid)			{	if((carid >= 190) 	&& 		(carid <= 215))			{	return 1;	}	return 0;	}
Gobierno_Vehicle(carid)		{	if((carid >= 115) 	&& 		(carid <= 119))			{	return 1;	}	return 0;	}
LH_Vehicle(carid)			{	if((carid >= 48) 	&& 		(carid <= 54))			{	return 1;	}	return 0;	}
GS_Vehicle(carid)			{	if((carid >= 55) 	&& 		(carid <= 60))			{	return 1;	}	return 0;	}
LK_Vehicle(carid)			{	if((carid >= 61) 	&& 		(carid <= 66))			{	return 1;	}	return 0;	}
Hitman_Vehicle(carid)		{	if((carid >= 226) 	&& 		(carid <= 228))			{	return 1;	}	return 0;	}
CorteJuez_Vehicle(carid)    {	if((carid >= 229) 	&& 		(carid <= 232))			{	return 1;	}	return 0;	}
Mecanico_Vehicle(carid)		{	if((carid >= 67) 	&& 		(carid <= 77))			{	return 1;	}	return 0;	}
IsAMotero(carid)			{	if((carid >= 78) 	&& 		(carid <= 83))			{	return 1;	}	return 0;	}
IsABallas(carid)			{	if((carid >= 84) 	&& 		(carid <= 87))			{	return 1;	}	return 0;	}
Ita_Vehicle(carid)			{	if((carid >= 88) 	&& 		(carid <= 98))			{	return 1;	}	return 0;	}
Yak_Vehicle(carid)			{	if((carid >= 99) 	&& 		(carid <= 105))			{	return 1;	}	return 0;	}
Rus_Vehicle(carid)			{	if((carid >= 106) 	&& 		(carid <= 114))			{	return 1;	}	return 0;	}
Practise_Car(carid)			{	if((carid >= 148) 	&& 		(carid <= 152))			{	return 1;	}	return 0;	}
CNN_Vehicle(carid)			{	if((carid >= 120) 	&& 		(carid <= 124))			{	return 1;	}	return 0;	}
Narco_Vehicle(carid)		{	if((carid >= 168) 	&& 		(carid <= 182))			{	return 1;	}	return 0;	}
Harvest_Vehicle(carid)		{	if((carid >= 169) 	&& 		(carid <= 171))			{	return 1;	}	return 0;	}
IsAPizzabike(carid)			{	if((carid >= 183) 	&&		(carid <= 189))			{	return 1;	}	return 0;	}
IsACamion(carid)			{	if((carid >= 233) 	&& 		(carid <= 240))			{	return 1;	}	return 0;	}
IsASweeper(carid)			{	if((carid >= 157)	&& 		(carid <= 162))			{	return 1;	}	return 0;	}
IsABoatFish(carid)          {   if((carid >= 241)   &&      (carid <= 244))         {   return 1;   }   return 0;   }
IsAPiratas(carid)           {   if((carid >= 245)   &&      (carid <= 251))         {   return 1;   }   return 0;   }
Hire_Vehicle(carid)			{	if((carid >= 35) 	&& 		(carid <= 38) 	  ||	(carid >= 125)  &&  (carid <= 147)	||	(carid >= 252) &&	(carid <= 257))    	{	return 1;	}	return 0;	}
FacJobsCar(carid)			{   if((carid >= 1)     &&      (carid <= 232)	  ||	(carid >= 241)  &&  (carid <= 257))         {   return 1;   }   return 0;   }

IsATrain(carid)
{
	if(carid == 153)
	{
		return 1;
	}
	return 0;
}

IsABike(carid)
{
	if(GetVehicleModel(carid) == 509 || GetVehicleModel(carid) ==  481|| GetVehicleModel(carid) == 510)
	{
		return 1;
	}
	return 0;
}

public OnPlayerConnect(playerid)
{
	SendRconCommand("hostname |Ø| Hermandad Zero RolePlay |Ø| WIP |Ø| ");
    if(IsPlayerNPC(playerid))
   	{
    	ShowPlayerMarkers(0);
      	SpawnPlayer(playerid);
   	}
    new plname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, plname, sizeof(plname));
    new namestring = strfind(plname, "_", true);
    new pointstring = strfind(plname, ".", true);
 	if(namestring == -1 || pointstring != -1)
	{
		Message(playerid, COLOR_YELLOW2, "-=== HermandadZero ===-");
		Message(playerid, COLOR_YELLOW2, "Su nombre debe ser en el formato Nombre_Apellido. Ejemplo: Juan_Perez");
		Kick(playerid);
		return 1;
	}
	gActivePlayers[playerid]++;
	numplayers++;
	//PlayAudioStreamForPlayer(playerid,"https://dl.dropboxusercontent.com/u/88698185/zonazero.mp3");
    new string[64];
    
        TextDrawShowForPlayer(playerid,Film_1);
    TextDrawShowForPlayer(playerid,Film_2);
    TextDrawShowForPlayer(playerid,arl);
    TextDrawShowForPlayer(playerid,btt);
    TextDrawShowForPlayer(playerid,ttr);
   	TextDrawShowForPlayer(playerid,Textdraw0);
	TextDrawShowForPlayer(playerid,Textdraw1);
	TextDrawShowForPlayer(playerid,Textdraw2);
	TextDrawShowForPlayer(playerid,Textdraw3);
	TextDrawShowForPlayer(playerid,Textdraw4);
	TextDrawShowForPlayer(playerid,Textdraw5);
	TextDrawShowForPlayer(playerid,Textdraw6);
	TextDrawShowForPlayer(playerid,Textdraw7);

	//SetProgressBarValue(Cansancio, 100);
    //TPB[playerid] = SetTimer("Menos",OrdenadoC,1);
    //ShowProgressBarForAll(Cansancio);
    
   	/*GanasDeMear[playerid] = 0;
    SetProgressBarValue(MearBarra, 0);
    ActualizarBarra[playerid] = SetTimer("Menos",Tiempo,1);
    ShowProgressBarForPlayer(playerid, MearBarra);
    
    GanasDeDormir[playerid] = 0;
    SetProgressBarValue(DormirBarra, 0);
    ActualizarBarra[playerid] = SetTimer("MenosDormir",Tiempo,1);
    ShowProgressBarForPlayer(playerid, DormirBarra);*/

    MensajeMuriendo[playerid] = 0; 	ForbidHandsUp[playerid]=0; 	Left4Life[playerid]=0; 				MsgL4L[playerid]=0; 			Rescued[playerid] = 0;
 	RegText[playerid] = 0;			RegConfig[playerid] = 0; 	PuedePresionar[playerid] = true;    Accesory[playerid] = 0;         CallCost[playerid] = 0;
	HidePM[playerid] = 0; 			PhoneOnline[playerid] = 0;	UsedFind[playerid] = 0;             ActiveTeleport[playerid] = 0;   Camion[playerid] = 9999;
	Freezed[playerid] = 0; 			Condom[playerid] = 0;		TalkingLive[playerid] = 0;          PlayerDescargando[playerid] = 0;
	LiveOffer[playerid] = 999; 		IsPractising[playerid] = 0; Fichas[playerid] = 0;               FailTuto[playerid] = 0;
 	PlayerCuffed[playerid] = 0;		PlayerTazeado[playerid] = 0; Tazer[playerid] = 0;				RStep[playerid] = 0;		 	OnDuty[playerid] = 0;
	Muted[playerid] = 0;			Train_Route[playerid] = 0; 	 Plane_Route[playerid] = 0;			PlayerIsSweeping[playerid] = 0; PlayerIsRuta[playerid] = 0;
	TransportDuty[playerid] = 0;	Mobile[playerid] = 255;      PlayerCargando[playerid] = 0;   Mercancia[playerid] = 0;
	PlayerDrunk[playerid] = 0;	PlayerDrunkTime[playerid] = 0;		Blinded[playerid] = 0;          Regalo_Offer[playerid] = 0;     Regalo_ID[playerid] = 999;
	Tied[playerid] = 0;				Revisado[playerid] = 0;		First_Spawn[playerid] = 1;			gOoc[playerid] = 0; 			gNews[playerid] = 0;
	BigEar[playerid] = 0; 			gFam[playerid] = 0;         DrugTimer[playerid] = 0;            See_MP[playerid] = 0;           Regalo_ITEM[playerid] = 0;
	gPlayerLogged[playerid] = 0; 	gPlayerLogTries[playerid] = 0; 									gPlayerSpawned[playerid] = 0;   HouseExplo[playerid] = 9999;
	TicketOffer[playerid] = 999;	TicketMoney[playerid] = 0;	Delivery[playerid] = 0;        		YaAposto[playerid] = 0;
	CorteJudicial[playerid] = 999;
	HireKey[playerid] = 9999;		BuyNarco[playerid] = 999;	PlayerInfo[playerid][pCash] = dollah; 								NoFuel[playerid] = 0;
	DeathPlayer[playerid] = 0;		PropRob[playerid] = 999;        UsingRayBan[playerid] = 0;      TarifaTaxi[playerid] = 5;       RecentlyShot[playerid] = 0;
	TransportTime[playerid] = 0; 	TransportCost[playerid] = 0; TransportDriver[playerid] = 999;   TimeCarOffer[playerid] = 999;
	GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);     	RenoveLlave[playerid] = 0;          Hotdog[playerid] = 0;
	gEngine[playerid] = 0; 			JustDied[playerid] = 0; 	KnockedDown[playerid] = 0; 			Divorciar[playerid] = 999;      Speaker[playerid] = 0;
	UsingDrugs[playerid] = 0; 		AFK[playerid] = 0;              AFKTime[playerid] = 0;          Saludo_ID[playerid] = 999;
	UsingEctasy[playerid] = 0; 		EctasyEffect[playerid] = 0; UsingRitalin[playerid] = 0; 		RitalinEffect[playerid] = 0; 	UsingMarihuana[playerid] = 0;
	MarihuanaEffect[playerid] = 0; 	MarihuanaBeat[playerid] = 0; UsingHeroina[playerid] = 0; 		HeroinaEffect[playerid] = 0; 	HeroinaBeat[playerid] = 0;
	OwnableCarOffer[playerid] = 999; 							OwnableCarID[playerid] = 999; 		OwnableCarPrice[playerid] = 0;  RecNumber[playerid] = 0;
	PlayerIsSweeping[playerid] = 0; TEL_INPUT_ID[playerid] = 0;	JustReported[playerid] = 0;			PlayerNeedsHelp[playerid] = 0;  Matrimonio[playerid] = 999;
	IsSmoking[playerid] = 0; 	ReduceTime[playerid] = 0;       Color[playerid] = COLOR_WHITE;  PlayerInfo[playerid][pSuciedad] = 0; //PlayerInfo[playerid][pMusculos] = 0;
	//PlayerInfo[playerid][pHambre] = 0;       PlayerInfo[playerid][pPeso] = 70;
	CancerEffect[playerid] = 0;		PlayerDuda[playerid] = 0;	PlayerSol[playerid] = 0;			RadioOn[playerid] = 0; 			Mochila[playerid][0] = 0;
	Mochila[playerid][1] = 0;		NewUsed[playerid] = 0;		ComproBoleto[playerid] = 0;			EpilepsiaCrack[playerid] = 0;	SIDA[playerid] = 0;
	JobDuty[playerid] = 0;			PizzaCallTime[playerid] = 0;	sPizza[playerid] = 0;           PlayerInfo[playerid][pImplementos] = 0;
	bPizza[playerid] = 0;			duda[playerid] = 0;			TaxiCalled[playerid] = 0;         	Fishing[playerid] = 0;          TutTime[playerid] = 0;
	PFrecuencia[playerid] = 0;		TelfRob[playerid] = 0; 		PickLock[playerid] = 0;             PlayerInfo[playerid][pIpod] = 0;
	cEnergysil[playerid] = 0; 		cNicotina[playerid] = 0; 	cSIDA[playerid] = 0; 				cCancer[playerid] = 0; 			cEpilepsia[playerid] = 0;
	Facturing[playerid] = 0; 		RequestingBackup[playerid] = 0;                                 Ganzuas[playerid] = 0;          PlayerInfo[playerid][pCarnada] = 0;
	InAmbu[playerid] = 0;   		Refueling[playerid] = -1;	PlayerInfo[playerid][pLevel] = 0;	PlayerInfo[playerid][pAdminCP] = 0; PlayerInfo[playerid][pHelper] = 0;
	PlayerStatInfo[playerid][0] = "No"; PlayerStatInfo[playerid][1] = "No";	PlayerStatInfo[playerid][2] = "No"; PlayerStatInfo[playerid][3] = "No";
	PlayerStatInfo[playerid][4] = "No";	PlayerStatInfo[playerid][5] = "No"; PlayerStatInfo[playerid][6] = "No"; PlayerStatInfo[playerid][7] = "No";
	PlayerInfo[playerid][pAnilloCom] = 0;       PlayerInfo[playerid][pAnilloOro] = 0;   PlayerInfo[playerid][pCollar] = 0;      PlayerInfo[playerid][pAnilloDia] = 0;
	PlayerInfo[playerid][pPulsera] = 0;         PlayerInfo[playerid][pAretes] = 0;      PlayerInfo[playerid][pReloj] = 0;       PlayerInfo[playerid][pFacciones] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;		PlayerInfo[playerid][pReg] = 0;			PlayerInfo[playerid][pSex] = 0;			PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pOrigin] = 0;			PlayerInfo[playerid][pExp] = 0;			PlayerInfo[playerid][pAccount] = 0;		PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pArrested] = 0;		PlayerInfo[playerid][pLottoNr] = 0;		PlayerInfo[playerid][pJob] = 0;         PlayerInfo[playerid][pCheques] = 0;
	PlayerInfo[playerid][pJailed] = 0;			PlayerInfo[playerid][pJailTime] = 0;	PlayerInfo[playerid][pMats] = 0;		PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pSpeed] = 0;			PlayerInfo[playerid][pEctasy] = 0;		PlayerInfo[playerid][pRitalin] = 0;		PlayerInfo[playerid][pHeroina] = 0;
	PlayerInfo[playerid][pMarihuana] = 0;		PlayerInfo[playerid][pLeader] = 0;		PlayerInfo[playerid][pMember] = 0;		PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pChar] = 0;			PlayerInfo[playerid][pHealth] = 50.0;	PlayerInfo[playerid][pArmour] = 0.0;	PlayerInfo[playerid][pPos_x] = 1612.3240;
	PlayerInfo[playerid][pPos_y] = -2330.1670;	PlayerInfo[playerid][pPos_z] = 13.5469;	PlayerInfo[playerid][pInt] = 0;			PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pModel] = 7;			PlayerInfo[playerid][pPnumber] = 0;		PlayerInfo[playerid][pPcarkey] = 9999;	PlayerInfo[playerid][pPhousekey] = 9999;
	PlayerInfo[playerid][pCarLic] = 0;			PlayerInfo[playerid][pFlyLic] = 0;		PlayerInfo[playerid][pBoatLic] = 0;		PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pGafas] = 0;			PlayerInfo[playerid][pTut] = 0;         PlayerInfo[playerid][pTimeCar] = 0;     PlayerInfo[playerid][pPbizzkey] = 9999;
	strmid(PlayerInfo[playerid][pAntecedente1], "None", 0, strlen("None"), 64);         PlayerInfo[playerid][pMinutes] = 0;     PlayerInfo[playerid][pMTexto] = 0;
	strmid(PlayerInfo[playerid][pAntecedente2], "None", 0, strlen("None"), 64);         PlayerInfo[playerid][pMarried] = 0;     PlayerInfo[playerid][pContract] = 0;
	strmid(PlayerInfo[playerid][pAntecedente3], "None", 0, strlen("None"), 64);         PlayerInfo[playerid][pPcarkey2] = 9999; ComproCine[playerid] = 0;
	strmid(PlayerInfo[playerid][pNote1], "None", 0, strlen("None"), 80);	strmid(PlayerInfo[playerid][pNote2], "None", 0, strlen("None"), 80);
	strmid(PlayerInfo[playerid][pNote3], "None", 0, strlen("None"), 80);	strmid(PlayerInfo[playerid][pNote4], "None", 0, strlen("None"), 80);
	strmid(PlayerInfo[playerid][pNote5], "None", 0, strlen("None"), 80);    strmid(PlayerInfo[playerid][pMarriedTo], "Nadie", 0, strlen("Nadie"), 64);
	strmid(PlayerInfo[playerid][pSMS_1], "Vacío", 0, strlen("Vacío"), 80);	strmid(PlayerInfo[playerid][pSMS_2], "Vacío", 0, strlen("Vacío"), 80);
    strmid(PlayerInfo[playerid][pSMS_3], "Vacío", 0, strlen("Vacío"), 80);	strmid(PlayerInfo[playerid][pSMS_4], "Vacío", 0, strlen("Vacío"), 80);
    strmid(PlayerInfo[playerid][pSMS_5], "Vacío", 0, strlen("Vacío"), 80);              PlayerInfo[playerid][pTimeCar2] = 0;    PlayerInfo[playerid][pPeces] = 0;
	PlayerInfo[playerid][pLighter] = 0;		PlayerInfo[playerid][pCigarettes] = 0;		PlayerInfo[playerid][pMask] = 0;        Maskuse[playerid] = 0;
	PlayerInfo[playerid][pLocked] = 0;      PlayerInfo[playerid][pEntered] = -1;   		PlayerInfo[playerid][pKills] = 0;       PlayerInfo[playerid][pDNIFalse] = 0;
	new dni = 100000 + random(899999);		PlayerInfo[playerid][pDNI] = dni;           PlayerInfo[playerid][pAdvertencias] = 0;
	strmid(PlayerInfo[playerid][pMSN], "None", 0, strlen("None"), 48);     strmid(PlayerInfo[playerid][pEstado], "Ninguno", 0, strlen("Ninguno"), 18);
	PlayerInfo[playerid][pWeapon] = 0;		PlayerInfo[playerid][pAmmo] = 0;        PlayerInfo[playerid][pAdminAdver] = 0;
	PlayerInfo[playerid][pWeapon2] = 0;		PlayerInfo[playerid][pAmmo2] = 0;       PlayerInfo[playerid][pFichas] = 0;
	PlayerInfo[playerid][pWeapon3] = 0;		PlayerInfo[playerid][pAmmo3] = 0;       strmid(DNIName[playerid], "Nadie", 0, strlen("Nadie"), 32);
	PlayerInfo[playerid][pWeapon4] = 0;		PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pWeapon5] = 0;		PlayerInfo[playerid][pAmmo5] = 0;
	PlayerInfo[playerid][pWeapon6] = 0;		PlayerInfo[playerid][pAmmo6] = 0;
	PlayerInfo[playerid][pWeapon7] = 0;		PlayerInfo[playerid][pAmmo7] = 0;
	PlayerInfo[playerid][pWeapon8] = 0;		PlayerInfo[playerid][pAmmo8] = 0;
	PlayerInfo[playerid][pWeapon9] = 0;		PlayerInfo[playerid][pAmmo9] = 0;
	PlayerInfo[playerid][pWeapon10] = 0;	PlayerInfo[playerid][pAmmo10] = 0;
	PlayerInfo[playerid][pWeapon11] = 0;	PlayerInfo[playerid][pAmmo11] = 0;
	PlayerInfo[playerid][pWeapon12] = 0;	PlayerInfo[playerid][pAmmo12] = 0;
	PlayerInfo[playerid][pMaleta] = 0;		PlayerInfo[playerid][pMochila] = 0;		PlayerInfo[playerid][pCasco] = 0;    Advertencia_Debe[playerid] = 0;
	PlayerInfo[playerid][pSIDA] = 0;		PlayerInfo[playerid][pCancer] = 0;		PlayerInfo[playerid][pEpilepsia] = 0;
	PlayerInfo[playerid][pDEagle] = 100;		PlayerInfo[playerid][pShotgun] = 100;	PlayerInfo[playerid][pMP5] = 100;
	PlayerInfo[playerid][pAK47] = 100;			PlayerInfo[playerid][pM4] = 100;		PlayerInfo[playerid][pSniper] = 100;	PlayerInfo[playerid][pFStyle] = 4;
	PlayerInfo[playerid][pLeccion] = 0;			PlayerInfo[playerid][pBusqueda] = 0;	PlayerInfo[playerid][pAntiSIDA] = 0;
    PlayerInfo[playerid][pAntiCancer] = 0;		PlayerInfo[playerid][pAntiEpilepsia] = 0;										PlayerInfo[playerid][pRent] = 0;
    PlayerInfo[playerid][pRob] = 0;	            /*PlayerInfo[playerid][pMusculoso] = 0;	*/			PlayerInfo[playerid][pDonateT] = 0;		PlayerInfo[playerid][pCarPremium] = 9999;   PlayerInfo[playerid][pCarPremium2] = 9999;
    PlayerInfo[playerid][pBanDuda] = 0;			PlayerInfo[playerid][pSeguro] = 0;		PlayerInfo[playerid][pWalkie] = 0;
    PlayerInfo[playerid][pHead] = 0;            EstadoON[playerid] = 0;                 strmid(PlayerInfo[playerid][pDNIName], "Ninguno", 0, strlen("Ninguno"), 12);
   	PaintballType[playerid] = 0; 	PaintballDMKills[playerid] = 0; PaintPvPKills[playerid] = 0;    Bowling[playerid] = 0;		BowlingMoney[playerid] = 0;
	for(new v = 0; v < MAX_PLAYERTOYS; v++)
 	{
  		PlayerToyInfo[playerid][v][ptModelID] = 0;
		PlayerToyInfo[playerid][v][ptBone] = 0;
 		PlayerToyInfo[playerid][v][ptPosX] = 0.0;
  		PlayerToyInfo[playerid][v][ptPosY] = 0.0;
   		PlayerToyInfo[playerid][v][ptPosZ] = 0.0;
    	PlayerToyInfo[playerid][v][ptRotX] = 0.0;
    	PlayerToyInfo[playerid][v][ptRotY] = 0.0;
    	PlayerToyInfo[playerid][v][ptRotZ] = 0.0;
	}
	PlayerGotSpottedRecently[playerid] = 1;
	Checked[playerid] = 1;
	RemoveObjects(playerid);
	for (new c=0; c<13; c++) ScriptWeapons[playerid][c] = 0;
	ScriptWeaponsUpdated[playerid] = 0;
	SetTimerEx("ResetAcWarn", 30000, 0, "i", playerid);
	SetPlayerColor(playerid,COLOR_GRAD2);
	SetPVarString(playerid, "pPassword", "0") ;
	SetTimerEx("CameraLogin", 100, false, "i", playerid);
	GetPlayerName(playerid, plname, sizeof(plname));
	format(string, sizeof(string), "users/%s.ini", plname);
	if(INI_Exist(string))		ShowLoginDialog(playerid, DLOGIN);
    else                    ShowRegisterDialog(playerid, DREGISTER);
    SetPlayerVirtualWorld(playerid, 20);
    return 1;
}

INI_Exist(filename[]) {
	if (fexist(filename)) return true;
	return false;
}

public Lotto(number)
{
	new JackpotFallen = 0;
	new string[100];
	format(string, sizeof(string), "Noticias de la Loteria: {FFFFFF}Hoy en dia el numero ganador ha recaido en: {FF0000}%d", number);
    OOCOff(COLOR_ORANGE, string);
    for(new i = 0; i < MAX_PLAYERS; i++){
		if(IsPlayerConnected(i)){
		    if(PlayerInfo[i][pLottoNr] > 0){
			    if(PlayerInfo[i][pLottoNr] == number){
			        JackpotFallen = 1;
					format(string, sizeof(string), "Noticias de la Loteria: %s ha ganado el acumulado de $%d .", PlayerName(i), Jackpot);
					OOCOff(COLOR_DBLUE, string);
					format(string, sizeof(string), "* Usted ha ganado $%d con su billete de loteria.", Jackpot);
					Message(i, COLOR_YELLOW, string);
					GivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        Message(i, COLOR_WHITE, "* Usted no ha ganado con su billete de loteria este momento.");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(20000); rand += 5000;
	    Jackpot = rand;
	    SaveStuff();
	    format(string, sizeof(string), "El nuevo Jackpot se ha iniciado con {9EC73D}$%d", Jackpot);
		OOCOff(0xFFFFFFFF, string);
	}
	else
	{
	    new rand = random(5000); rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	    format(string, sizeof(string), "El bote se ha aumentado a {9EC73D}$%d", Jackpot);
		OOCOff(0xFFFFFFFF, string);
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	new string[128];
	SaveGuns(playerid);
	OnPlayerUpdateTime(playerid);

	gActivePlayers[playerid]--;
	numplayers--;
	 if(usingcarwash == playerid)
	{
	    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    usingcarwash = -1;
	    Update3DTextLabelText(entrancetext, 0x008B00FF, "Nadie está lavando su auto, puedes lavar el tuyo.\nPor: $5 (/lavar)");
	}


	TextDrawHideForPlayer(playerid, SunGlasses);
	Delete3DTextLabel(Estado[playerid]);
	if(SmokeTimer[playerid]) KillTimer(SmokeTimer[playerid]);
	if(DrugTimer[playerid]) KillTimer(DrugTimer[playerid]);
	if(PlayerInfo[playerid][pPcarkey] != 9999 && PlayerInfo[playerid][pTimeCar] > gettime())
	{
 		SetVehicleVirtualWorld(PlayerInfo[playerid][pPcarkey], PlayerInfo[playerid][pPcarkey]);
	}
	if(PlayerInfo[playerid][pPcarkey2] != 9999 && PlayerInfo[playerid][pTimeCar2] > gettime())
	{
	    SetVehicleVirtualWorld(PlayerInfo[playerid][pPcarkey2], PlayerInfo[playerid][pPcarkey2]);
 	}
	if(PlayerInfo[playerid][pCarPremium] != 9999)
	{
 		SetVehicleVirtualWorld(PlayerInfo[playerid][pCarPremium], PlayerInfo[playerid][pCarPremium]);
	}
 	if(PlayerInfo[playerid][pCarPremium2] != 9999)
	{
 		SetVehicleVirtualWorld(PlayerInfo[playerid][pCarPremium2], PlayerInfo[playerid][pCarPremium2]);
	}
	if(HireKey[playerid] != 9999)
	{
	    SetVehicleToRespawn(HireKey[playerid]);
	}
    if(Interview != 0)
	{
		if(strcmp(Interviewer,PlayerName(playerid),true) == 0 )
		{
		    Message(playerid, COLOR_WHITE, "Se canceló tu entrevista!");
		    Interviewer = "Nadie";
		    Interview = 0;
		}
	}
	if(PaintballType[playerid] > 0)
 	{
 	    switch(PaintballType[playerid])
 	    {
 	    	case 1: TotalDM -= 1;
 	    	case 2: TTeamNaranja -= 1;
 	    	case 3: TTeamVerde -= 1;
 	    	case 4: TotalPlayer -= 1;
 		}
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    Bought(playerid, TransportCost[playerid]);
			Earn(TransportDriver[playerid], TransportCost[playerid]);
		    format(string, sizeof(string), "~w~Te costo ~r~%d$",TransportCost[playerid]);
		    GameTextForPlayer(playerid, string, 5000, 1);
		    format(string, sizeof(string), "~w~Has ganado ~g~%d$",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		    TextDrawHideForPlayer(playerid, Taximeter[playerid]);
			TextDrawHideForPlayer(TransportDriver[playerid], Taximeter[TransportDriver[playerid]]);
			TransportCost[playerid] = 0;    TransportTime[playerid] = 0;    TransportDriver[playerid] = 999;
		}
	}
	if(TaxiCalled[playerid] > 0)
	{
		switch(TaxiCalled[playerid])
		{
			case 1: { TaxiSlot1 = 999; SlotZone1 = "Sin Localizar"; SlotCity1 = "No"; TiempoSlot1 = 0; }
			case 2: { TaxiSlot2 = 999; SlotZone2 = "Sin Localizar"; SlotCity2 = "No"; TiempoSlot2 = 0; }
			case 3: { TaxiSlot3 = 999; SlotZone3 = "Sin Localizar"; SlotCity3 = "No"; TiempoSlot3 = 0; }
			case 4: { TaxiSlot4 = 999; SlotZone4 = "Sin Localizar"; SlotCity4 = "No"; TiempoSlot4 = 0; }
			case 5: { TaxiSlot5 = 999; SlotZone5 = "Sin Localizar"; SlotCity5 = "No"; TiempoSlot5 = 0; }
			case 6: { TaxiSlot6 = 999; SlotZone6 = "Sin Localizar"; SlotCity6 = "No"; TiempoSlot6 = 0; }
			case 7: { TaxiSlot7 = 999; SlotZone7 = "Sin Localizar"; SlotCity7 = "No"; TiempoSlot7 = 0; }
			case 8: { TaxiSlot8 = 999; SlotZone8 = "Sin Localizar"; SlotCity8 = "No"; TiempoSlot8 = 0; }
		}
	}
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    if(PlayerInfo[playerid][pAdminCP] < 1) return 0;
	else if(PlayerInfo[playerid][pAdminCP] > 0 && ActiveTeleport[playerid])
	{
		SetPlayerPos(playerid, fX, fY, fZ);
		return 1;
	}
	return 1;
}

function FBIGATEC1(){
	  MoveDynamicObject(fbig1, 200.02711487,160.48478699,1002.02343750, 3.0, -1000.0, -1000.0, -1000.0);
      return 1;
}

function FBIGATEC2(){
	  MoveDynamicObject(fbig2, 200.15646362,185.94311523,1002.03552246, 3.0, -1000.0, -1000.0, -1000.0);
      return 1;
}

function TumbarPuerta(playerid, Float:x, Float:y, Float:z)
{
    CreateExplosion(x, y, z, 3, 5);
	HouseInfo[HouseExplo[playerid]][hLock] = 0;
	ProxDetector(25.0, playerid, "¡El C4 ha sido detonado con exito, ya pueden entrar!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	HouseExplo[playerid] = 9999;
	return 1;
}

function MissileLaunchEx(Float:x, Float:y, Float:z, Float:radius, type)
{
    CreateExplosion(x, y, z, type, radius);
    Misile_Launcher --;
    new string[100];
    format(string, sizeof(string), "** Lanzamiento detonado en %0.2f - %0.2f - %0.2f, radio %d.",x,y,z,radius);
    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
    return 1;
}

function MissileLaunch(vehicleid)
{
	new Float:x,Float:y,Float:z;
	GetVehiclePos(vehicleid, x, y, z);
    CreateExplosion(x, y, z, 2, 10.0);  CreateExplosion(x, y, z, 2, 10.0);  CreateExplosion(x, y, z, 2, 10.0);
    Misile_Launcher --;
    new string[68];
    format(string, sizeof(string), "** Lanzamiento detonado en el objetivo, vehículo %d.",vehicleid);
    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
    return 1;
}


public SetPlayerSpawn(playerid)
{
	FixAnim(playerid);
	if(IsPlayerConnected(playerid))
	{
	    SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
    		SetTimerEx("FreezePlayer", 1000, false, "i", playerid);
	        ClearChatbox(playerid, 10);
			gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
			SetPosEx(playerid, -1832.2977,15.7958,1061.1436,180.0000,14,playerid);
			SetPlayerCameraPos(playerid,-1832.000,13.000,1062.000);
			SetPlayerCameraLookAt(playerid,-1832.000,18.000,1061.000);
			RStep[playerid] = 1;
			RegText[playerid] = 1;
			RegConfig[playerid] = 1;
			PlayerInfo[playerid][pAge] = 30;
			PlayerInfo[playerid][pSex] = 1;
			TextDrawShowForPlayer(playerid, RegInfo);
			TextDrawShowForPlayer(playerid, RegDraw[playerid]);
			TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~r~Sin Sexo          ~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?");
			Message(playerid, COLOR_WHITE, "Bienvenido al Departamento de Immigración, rellene sus datos.");
			ClearChatbox(playerid, 5);
			Message(playerid, COLOR_YELLOW, "Utiliza las teclas DERECHA y IZQUIERDA para variar las opciones.");
			Message(playerid, COLOR_YELLOW, "Confirma con INTRO");
			return 1;
	    }
	    if(TutTime[playerid] == 0 && PlayerInfo[playerid][pTut] == 1 && DeathPlayer[playerid] == 0)
  		{
    		SetPosEx(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z] + 1, 0, PlayerInfo[playerid][pInt], PlayerInfo[playerid][pVirWorld]);
	    	SetHP(playerid, PlayerInfo[playerid][pHealth]);
			SetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
			SetPlayerWeapons(playerid);
            UpdatePlayerStat(playerid);
		    return 1;
		}
		new rand;
		if(PaintballType[playerid] == 1)
		{
			ResetPlayerWeapons(playerid);
			ArmarPaintBall(playerid);
   			rand = random(sizeof(PaintballDMSpawns));
			SetPosEx(playerid, PaintballDMSpawns[rand][0], PaintballDMSpawns[rand][1], PaintballDMSpawns[rand][2],0,14,0);
			return 1;
		}
		if(PaintballType[playerid] == 2)
		{
			ResetPlayerWeapons(playerid);
			ArmarPaintBall(playerid);
			SetPosEx(playerid, -973.1844,1061.3037,1345.6699,0,10,0);
   			SetPlayerColor(playerid, ORANGE_ADMIN);
			return 1;
		}
		if(PaintballType[playerid] == 3)
		{
			ResetPlayerWeapons(playerid);
			ArmarPaintBall(playerid);
			SetPosEx(playerid, -1131.2336,1057.7888,1346.4170,0,10,0);
   			SetPlayerColor(playerid, VERDE_ADMIN);
			return 1;
		}
		if(PaintballType[playerid] == 4)
		{
			ResetPlayerWeapons(playerid);
			ArmarPaintBall(playerid);
   			rand = random(sizeof(PaintPvPSpawns));
   			Pause(playerid);
			SetPosEx(playerid, PaintPvPSpawns[rand][0], PaintPvPSpawns[rand][1], PaintPvPSpawns[rand][2],0,0,0);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 1)
		{
			SetPosEx(playerid, 2767.8936,445.4332,3.7747,163.2555,1,0);
			Message(playerid, COLOR_LIGHTRED, "No has cumplido tu condena, estas denuevo en la carcel.");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
		    SetPlayerInterior(playerid, 0);
		    PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid,268.5777,1857.9351,9.8133);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 3)
		{
			SetPosEx(playerid, 263.4922,77.0915,1001.0391,322.1463,6,0);
			Message(playerid, COLOR_LIGHTRED, "Has tenido un accidente en prisión.");
			Message(playerid, COLOR_LIGHTRED, "Te hemos transladado a la ultima celda.");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 4)
		{
			SetPosEx(playerid, 194.3425,158.1145,1003.0234,272.9291,3,0);
			Message(playerid, COLOR_LIGHTRED, "Has tenido un accidente en prisión.");
			Message(playerid, COLOR_LIGHTRED, "Te hemos transladado de celda.");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 5)
		{
			SetPosEx(playerid, 1553.4100,-1665.9277,1718.9019,273.6029,0,0);
			Message(playerid, COLOR_LIGHTRED, "Has tenido un accidente en prisión.");
			Message(playerid, COLOR_LIGHTRED, "Te hemos transladado de celda.");
			return 1;
		}
		if(DeathPlayer[playerid] == 1 && PlayerInfo[playerid][pJailed] == 0)
		{
			DeathPlayer[playerid] = 0;
		    Message(playerid, TEAM_CYAN_COLOR, "Te has recuperado exsitósamente de tu accidente.");
		    Message(playerid, TEAM_CYAN_COLOR, "Te hemos transladado al hospital.");
	      	Message(playerid, TEAM_CYAN_COLOR, "Desafortunadamente tienes amnesia, no recuerdas nada.");
	      	PlayerInfo[playerid][pSuciedad] += 2;
	      	SetPosEx(playerid, -2671.2676,509.5787,48.0791,272.0,0,0);
	        if(PlayerInfo[playerid][pSeguro] == 0) { Bought(playerid, 500);  Fondos[SAMUR] += 500; Message(playerid, COLOR_GREEN, "* No tienes seguro, te cobramos 1000$. Compre uno en el hospital de LS."); }
      		return 1;
		}
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	new string[128];
	new Float:px,Float:py,Float:pz;
	InAmbu[playerid] = 0;
	DeathPlayer[playerid] = 1;
	UsingDrugs[playerid] = 0;
	UsingEctasy[playerid] = 0;
	EctasyEffect[playerid] = 0;
	UsingRitalin[playerid] = 0;
	RitalinEffect[playerid] = 0;
	UsingHeroina[playerid] = 0;
	HeroinaEffect[playerid] = 0;
	HeroinaBeat[playerid] = 0;
	UsingMarihuana[playerid] = 0;
	MarihuanaEffect[playerid] = 0;
	MarihuanaBeat[playerid] = 0;
	Left4Life[playerid] = 0;
	PlayerInfo[playerid][pArmour] = 0;
	gPlayerSpawned[playerid] = 0;
	GetPlayerPos(playerid, px, py, pz);
	PlayerDrunk[playerid] = 0;
	PlayerDrunkTime[playerid] = 0;
	new drunk = GetPlayerDrunkLevel(playerid);
	if(drunk > 0) SetPlayerDrunkLevel(playerid, 0);
	Checked[playerid] = 1;
	PlayerGotSpottedRecently[playerid] = 1;
    SetTimerEx("ResetAcWarn",20000,false, "i", playerid);
	PlayerInfo[killerid][pKills] += 1;
	PlayerInfo[playerid][pDeaths] += 1;
	if(usingcarwash == playerid)
	{
	    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    usingcarwash = -1;
	    Update3DTextLabelText(entrancetext, 0x008B00FF, " Nadie está lavando su auto, puedes lavar el tuyo.\nPor: $5 (/lavar)");
	}

    if(SmokeTimer[playerid]) KillTimer(SmokeTimer[playerid]);
	if(DrugTimer[playerid]) KillTimer(DrugTimer[playerid]);
	if(IsPlayerConnected(killerid))
	{
		if(GetPlayerWeapon(killerid) == 24)	{   PlayerInfo[killerid][pDEagle] += 10;   	}
		if(GetPlayerWeapon(killerid) == 25)	{   PlayerInfo[killerid][pShotgun] += 15;   }
		if(GetPlayerWeapon(killerid) == 29)	{   PlayerInfo[killerid][pMP5] += 15;   	}
		if(GetPlayerWeapon(killerid) == 31)	{   PlayerInfo[killerid][pM4] += 15;   		}
		if(GetPlayerWeapon(killerid) == 30)	{   PlayerInfo[killerid][pAK47] += 15;    	}
		if(GetPlayerWeapon(killerid) == 34)	{   PlayerInfo[killerid][pSniper] += 30;   }
	}
	if(Pandilleros(killerid) && Pandilleros(playerid))
	{
		if(PlayerToPoint(30.0, playerid, 2491.8098,-1664.8685,13.3438) || PlayerToPoint(30.0, playerid, 1882.5814,-2027.3207,13.3906) || PlayerToPoint(30.0, playerid, 2819.5747,-1182.8378,25.2364))
		{
		    if(PlayerInfo[killerid][pMember] == PlayerInfo[playerid][pMember]) { Message(playerid, COLOR_GRAD2, "No mates a los de tu banda!"); }
		    if(PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember])
		    {
		        if(GetPlayerMoney(playerid) > 14)
		        {
					Message(playerid, COLOR_WHITE, "Te ha matado el de la banda enemiga, pierdes 15$ que van hacia el.");
					if(PlayerInfo[killerid][pMember] == 9) 	{ GText(playerid, "own~g~3~w~d", 5000, 1); }
					if(PlayerInfo[killerid][pMember] == 10) { GText(playerid, "own~b~3~w~d", 5000, 1); }
					if(PlayerInfo[killerid][pMember] == 11) { GText(playerid, "own~y~3~w~d", 5000, 1); }

					GText(killerid, "Muerte ~r~enemiga~n~~w~+15~g~$", 5000, 1);
					format(string, sizeof(string), "~w~Te ha ~r~matado~n~~r~%s", PlayerName(killerid));
					GText(playerid, string, 5000, 1);

					GivePlayerMoney(playerid, -15); GivePlayerMoney(killerid, 15);
				}
				else
				{
				    Message(playerid, COLOR_WHITE, "Te ha matado el de la banda enemiga, pierdes 15$ que van hacia el.");
				    Message(killerid, COLOR_WHITE, "No recibes dinero ya que el enemigo no tiene 15$, pero el si los perdió!");
					if(PlayerInfo[killerid][pMember] == 9) 	{ GText(playerid, "own~g~3~w~d", 5000, 1); }
					if(PlayerInfo[killerid][pMember] == 10) { GText(playerid, "own~b~3~w~d", 5000, 1); }
					if(PlayerInfo[killerid][pMember] == 11) { GText(playerid, "own~y~3~w~d", 5000, 1); }

					GivePlayerMoney(playerid, -15);
				}
			}
		}
	}
	new caller = Mobile[playerid];
	if(caller != 255)
	{
		if(caller < 255)
		{
			Message(caller,  COLOR_GRAD2, "La llamada se perdió.");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	if(PaintballType[playerid] > 0)
	{
		if(PaintballType[playerid] == 1)
		{
 			PaintballDMKills[killerid] += 1;
 			format(string, sizeof(string), "* [DM] %s[%d] hizo polvo a %s[%d]", PlayerName(killerid), PaintballDMKills[killerid], PlayerName(playerid), PaintballDMKills[playerid]);
			SendPBMessage(1, 0xFFB18CFF, string);
		}
		if(PaintballType[playerid] == 2)
		{
	    	TvTVerdeKills += 1;
			format(string, sizeof(string), "{3CB9FF}* [TVT] Muerte naranja. El equipo verde aumenta su puntaje a %d", TvTVerdeKills);
			SendPBMessage(2, -1, string);
			SendPBMessage(3, -1, string);
		}
		if(PaintballType[playerid] == 3)
		{
	    	TvTNaranjaKills += 1;
			format(string, sizeof(string), "{3CB9FF}* [TVT] Muerte verde. El equipo naranja aumenta su puntaje a %d", TvTNaranjaKills);
			SendPBMessage(2, -1, string);
			SendPBMessage(3, -1, string);
		}
		if(PaintballType[playerid] == 4)
		{
	    	PaintPvPKills[killerid] += 1;
	    	format(string, sizeof(string), "* [PVP] %s[%d] ha masacrado a %s[%d]", PlayerName(killerid), PaintPvPKills[killerid], PlayerName(playerid), PaintPvPKills[playerid]);
			SendPBMessage(4, 0xEBBDA3FF, string);
		}
	}
	if(PlayerInfo[playerid][pHead] > 0)
	{
	    if(IsPlayerConnected(killerid))
	    {
		    if(Hitman(killerid) && PlayerInfo[killerid][pRank] > 0)
		    {
		        GivePlayerMoney(killerid, PlayerInfo[playerid][pHead]);
		        format(string, sizeof(string), "** Central: %s mató a %s, y consiguió %d$", PlayerName(killerid), PlayerName(playerid), PlayerInfo[playerid][pHead]);
		        SendRadioMessage(23, TEAM_RADIO_COLOR, string);
		        format(string, sizeof(string), "** Te mató un hitman. Tu cabeza tenía un valor de: %d$", PlayerInfo[playerid][pHead]);
		        Message(playerid, COLOR_WHITE, string);
		        PlayerInfo[playerid][pHead] = 0;
			}
		}
	}
 	StopAudioStreamForPlayer(playerid); // Parar las retransmisiones
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,COLOR_GRAD2);
	return 1;
}

public OnPlayerSpawn(playerid)
	{

    StopAudioStreamForPlayer(playerid);
    if(IsPlayerNPC(playerid))
	{
	    new npcname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, npcname, sizeof(npcname));
		RequestNPCLoad(playerid,npcname);
		return 1;
	}

	SetPlayerStats(playerid);
  TextDrawHideForPlayer(playerid, Film_1);
  TextDrawHideForPlayer(playerid, Film_2);
  TextDrawHideForPlayer(playerid, arl);
  TextDrawHideForPlayer(playerid, btt);
  TextDrawHideForPlayer(playerid, ttr);
  TextDrawShowForPlayer(playerid,Version);
  TextDrawShowForPlayer(playerid,ktm);
  TextDrawHideForPlayer(playerid,Textdraw0);
	TextDrawHideForPlayer(playerid,Textdraw1);
	TextDrawHideForPlayer(playerid,Textdraw2);
	TextDrawHideForPlayer(playerid,Textdraw3);
	TextDrawHideForPlayer(playerid,Textdraw4);
	TextDrawHideForPlayer(playerid,Textdraw5);
	TextDrawHideForPlayer(playerid,Textdraw6);
	TextDrawHideForPlayer(playerid,Textdraw7);
	TextDrawShowForPlayer(playerid,Textdraw8);
	TextDrawShowForPlayer(playerid,Textdraw9);
	TextDrawShowForPlayer(playerid, BalanceTextDraw[playerid]);
	SetObjectMaterial(comisaria, 4, 19378, "all_walls", "mp_shop_floor2", 0);
	SetObjectMaterial(comisaria, 5, 19378, "all_walls", "mp_shop_floor2", 0);
	SetObjectMaterial(comisaria, 6, 19378, "all_walls", "cj_lightwood", 0);
	SetObjectMaterial(comisaria, 7, 19378, "all_walls", "cj_lightwood", 0);
	SetObjectMaterial(comisaria, 8, 19378, "all_walls", "cj_lightwood", 0);
	SetObjectMaterial(comisaria, 12, 8419, "vgsbldng1", "buildng01wind_128", 0);
	SetObjectMaterial(comisaria, 13, 19378, "all_walls", "mp_shop_floor2", 0);
	if(PlayerInfo[playerid][pPcarkey] != 9999)
	{
 		SetVehicleVirtualWorld(PlayerInfo[playerid][pPcarkey], 0);
	}
	if(PlayerInfo[playerid][pPcarkey2] != 9999)
	{
	    SetVehicleVirtualWorld(PlayerInfo[playerid][pPcarkey2], 0);
 	}
	if(PlayerInfo[playerid][pCarPremium] != 9999)
    {
	    SetVehicleVirtualWorld(PlayerInfo[playerid][pCarPremium], 0);
 	}
	if(PlayerInfo[playerid][pCarPremium2] != 9999)
    {
	    SetVehicleVirtualWorld(PlayerInfo[playerid][pCarPremium2], 0);
	}
	if(PlayerInfo[playerid][pAdminCP] > 6 && PlayerInfo[playerid][pAdminCP] < 2012 || PlayerInfo[playerid][pAdminCP] > 2014)
	{
		new string[80];
		new year, month,day;    getdate(year, month, day);
  		format(string, sizeof(string), "%s ha sido baneado por el AntiHack, razón: AdminHack (%d/%d/%d)",PlayerName(playerid),day,month,year);
		Message(playerid, COLOR_RED2, string);
		A_Info(string);
		BanLog(string);
  		PlayerInfo[playerid][pLocked] = 8;
    	Ban(playerid);
	}
	if(gPlayerLogged[playerid] == 0)
	{
    	Message(playerid, COLOR_LIGHTRED, "** Este servidor requiere una conexion antes de entrar (Kick) **");
        Kick(playerid);
 	}
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	return 1;
}

function BanLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public OnVehicleDeath(vehicleid)
{
  if(IsAnOwnableCar(vehicleid))
   {
	    SetVehicleVirtualWorld(vehicleid, vehicleid);
	    SetTimerEx("MostrarVehiculo", 90000, false, "i", vehicleid);
   }
  	return 1;
}

function MostrarVehiculo(vehicleid)
{
    SetVehiclePos(vehicleid, CarInfo[vehicleid][cLocationx], CarInfo[vehicleid][cLocationy], CarInfo[vehicleid][cLocationz]);
	SetVehicleZAngle(vehicleid, CarInfo[vehicleid][cAngle]);
	SetVehicleParamsEx(vehicleid ,0,0,0,CarInfo[vehicleid][cLock],0,0,0);
	Gas[vehicleid] = 100;
	SetVehicleVirtualWorld(vehicleid, 0);
}

public OnPlayerEnterCheckpoint(playerid)
{
    DisablePlayerCheckpoint(playerid);
    new carid = GetPlayerVehicleID(playerid), string[128];
	if(PlayerInfo[playerid][pJob] == 1 && Train_Route[playerid] > 0)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) { Message(playerid, COLOR_GRAD2, "¡No estás en un Tren!"); Train_Route[playerid] = 0; return 1; }

		switch(Train_Route[playerid])
		{
		    case 1:
		    {
				SetPlayerCheckpoint(playerid, -1943.2317,159.9102,27.0006, 5.0);
	        	GText(playerid, "~g~0$~n~~n~~w~Proxima estacion:~n~~r~SF", 5000, 1);
	        	Train_Route[playerid] = 2;
	        	GivePlayerMoney(playerid, 0);
	    	}
	    	case 2:
			{
		        SetPlayerCheckpoint(playerid, 1455.6279,2632.2500,12.1256, 5.0);
		        GText(playerid, "~g~0$~n~~n~~w~Proxima estacion:~n~~r~LV", 5000, 1);
	    	    Train_Route[playerid] = 3;
	        	GivePlayerMoney(playerid, 0);
	    	}
	    	case 3:
	    	{
		        SetPlayerCheckpoint(playerid, 2864.7500,1274.8271,12.1256, 5.0);
		        GText(playerid, "~g~0$~n~~n~~w~Proxima estacion:~n~~r~LV", 5000, 1);
	    	    Train_Route[playerid] = 4;
	        	GivePlayerMoney(playerid, 0);
	    	}
	    	case 4:
	    	{
		        SetPlayerCheckpoint(playerid, 1715.0220,-1953.7056,14.8756, 5.0);
		        GText(playerid, "~g~0$~n~~n~~w~Proxima estacion:~n~~r~LS", 5000, 1);
	    	    Train_Route[playerid] = 5;
	        	GivePlayerMoney(playerid, 0);
	    	}
	    	case 5:
	    	{
		        GText(playerid, "~g~30$~n~~n~~w~Final recorrido", 5000, 1);
		        Train_Route[playerid] = 0;
	    	    GivePlayerMoney(playerid, 350);
	        	Message(playerid, COLOR_YELLOW2, "Final del recorrido, obtenido: 350$");
	        	RemovePlayerFromVehicle(playerid);
	    	}
  		}
	}
	else if(PlayerInfo[playerid][pJob] == 6 && PizzaCallTime[playerid] > 0)
	{
	    PizzaCallTime[playerid] = 0;
		Message(playerid, COLOR_WHITE, "* Has llegado a tiempo al punto de entrega de la pizza.");
	}
	else if(PlayerInfo[playerid][pJob] == 2 && PlayerIsSweeping[playerid] == 1)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) { Message(playerid, COLOR_GRAD2, "¡No estás en un Sweeper!"); PlayerIsSweeping[playerid] = 0; return 1; }

			if(IsASweeper(carid))
	        {
	            new cashes = random(60);
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
				Earn(playerid, cashes);
	            new randomss;
		        randomss = random(sizeof(gSweeperPoints));
		        SetPlayerCheckpoint(playerid, gSweeperPoints[randomss][0], gSweeperPoints[randomss][1], gSweeperPoints[randomss][2], 5.0);
	        }
	}
	else if(PlayerInfo[playerid][pJob] == 3 && Plane_Route[playerid] > 0)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) { Message(playerid, COLOR_GRAD2, "¡No estás en un avión!"); Train_Route[playerid] = 0; return 1; }

		switch(Plane_Route[playerid])
		{
		    case 1:
		    {
		        GText(playerid, "~w~proximo destino: ~n~~r~Verdant Meadows", 5000, 1);
		        Plane_Route[playerid] = 2;
	    	    SetPlayerCheckpoint(playerid, 211.2588,2502.7649,17.4063, 15.0);
	    	}
	    	case 2:
	    	{
	            GText(playerid, "~w~proximo destino: ~n~~r~san fierro", 5000, 1);
		        Plane_Route[playerid] = 3;
	    	    SetPlayerCheckpoint(playerid, -1378.8790,113.1982,15.0826, 15.0);
	    	}
	    	case 3:
	    	{
	            GText(playerid, "~w~proximo destino: ~n~~r~LAX airport", 5000, 1);
		        Plane_Route[playerid] = 4;
	    	    SetPlayerCheckpoint(playerid, 2004.8916,-2593.5776,14.4709, 15.0);
	    	}
	    	case 4:
			{
            	GText(playerid, "~w~proximo destino: ~n~~r~Los Santos", 5000, 1);
	        	Plane_Route[playerid] = 5;
	        	SetPlayerCheckpoint(playerid, 1563.2407,-2458.6262,16.6014, 15.0);
	    	}
	    	case 5:
	    	{
	            GText(playerid, "~w~final del recorrido~n~~g~1100$ ganados en cheque", 5000, 1);
		        Plane_Route[playerid] = 0;
	    	    PlayerInfo[playerid][pCheques] += 600;
				SetVehicleToRespawn(carid);
		    }
    	}
	}
    else if(PlayerInfo[playerid][pJob] == 8 && PlayerIsRuta[playerid] == 1)
    {
        if(!IsACamion(carid)) { Message(playerid, COLOR_GRAD2, "¡No estás en un Camión!"); PlayerIsRuta[playerid] = 0; Mercancia[playerid] = 0; return 1; }
        PlayerCargando[playerid] = 10;
        TogglePlayerControllable(playerid, 0);
        Cargando[playerid] = CreateProgressBar(286.00, 171.00, 92.50, 4.50, 1107243007, 10.0);
  		ShowProgressBarForPlayer(playerid, Cargando[playerid]);
  		Message(playerid, COLOR_GRAD4, "¡Debes esperar a que se cargue el camión!");
    }
    else if(PlayerIsRuta[playerid] == 2 && Mercancia[playerid] > 0)
    {
        if(!IsACamion(carid)) { Message(playerid, COLOR_GRAD2, "¡No estás en un Camión!"); PlayerIsRuta[playerid] = 0; Mercancia[playerid] = 0; return 1; }
        PlayerDescargando[playerid] = 10;
		TogglePlayerControllable(playerid, 0);
		Cargando[playerid] = CreateProgressBar(286.00, 171.00, 92.50, 4.50, 1107243007, 10.0);
  		ShowProgressBarForPlayer(playerid, Cargando[playerid]);
  		SetProgressBarValue(Cargando[playerid], 100);
  		UpdateProgressBar(Cargando[playerid], playerid);
		Message(playerid, COLOR_GRAD4, "¡Debes esperar a que se descargue el ..!");
	}
	else if(PlayerIsRuta[playerid] == 3 && Mercancia[playerid] > 0)
	{
	    if(!IsACamion(carid)) { Message(playerid, COLOR_GRAD2, "¡Debes regresar con el camión!"); SetPlayerCheckpoint(playerid, 2228.5657,-2636.0427,13.4365, 5.0); return 1; }
		switch(Mercancia[playerid])
		{
		    case 1:	{ PlayerInfo[playerid][pCheques] += 200; Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $200 por completar la entrega."); }
			case 2:	{ PlayerInfo[playerid][pCheques] += 300; Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $300 por completar la entrega."); }
			case 3:	{ PlayerInfo[playerid][pCheques] += 400; Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $400 por completar la entrega."); }
			case 4:	{ PlayerInfo[playerid][pCheques] += 500; Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $500 por completar la entrega."); }
			case 5:	{ PlayerInfo[playerid][pCheques] += 600; Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $600 por completar la entrega."); }
			case 6: { PlayerInfo[playerid][pCheques] += 700; Message(playerid, COLOR_WHITE, "* Has recibido un cheque de $700 por completar la entrega."); }
		}
        SetVehicleToRespawn(GetPlayerVehicleID(playerid));
       	RemovePlayerFromVehicle(playerid);
       	Mercancia[playerid] = 0;
       	PlayerIsRuta[playerid] = 0;
       	PlayerCargando[playerid] = 0;
       	PlayerDescargando[playerid] = 0;
 	}
	else if(IsANarco(playerid))
	{
	    if(DrugFarming[playerid] > 0)
	    {
     		new drugs = random(10);
         	format(string, sizeof(string), "¡Has cosechado y has conseguido %d gramos de droga!", drugs+1);
			Message(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pDrugs] += drugs+1;
			new randomize = random(sizeof(gDrugFarmVar));
 			SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
			return 1;
	    }
	    else if(Smuggling[playerid] > 0)
	    {
	        switch(SmugglingType[playerid])
	        {
	            case 1:
	            {
					format(string, sizeof(string), "** Entrega completada ** - Has conseguido %d gramos de Speed",Smuggling[playerid]);
					Message(playerid, 0xF0AB4FFF, string);
					PlayerInfo[playerid][pSpeed] += Smuggling[playerid];
					Smuggling[playerid] = 0;
					SmugglingType[playerid] = 0;
	        	}
	        	case 2:
	        	{
					format(string, sizeof(string), "** Entrega completada ** - Has conseguido %d gramos de Extasis",Smuggling[playerid]);
					Message(playerid, 0xF0AB4FFF, string);
					PlayerInfo[playerid][pEctasy] += Smuggling[playerid];
					Smuggling[playerid] = 0;
					SmugglingType[playerid] = 0;
	        	}
	        	case 3:
	        	{
					format(string, sizeof(string), "** Entrega completada ** - Has conseguido %d gramos de Ritalin",Smuggling[playerid]);
					Message(playerid, 0xF0AB4FFF, string);
					PlayerInfo[playerid][pRitalin] += Smuggling[playerid];
					Smuggling[playerid] = 0;
					SmugglingType[playerid] = 0;
	        	}
	        	case 4:
	        	{
					format(string, sizeof(string), "** Entrega completada ** - Has conseguido %d gramos de Heroina",Smuggling[playerid]);
					Message(playerid, 0xF0AB4FFF, string);
					PlayerInfo[playerid][pHeroina] += Smuggling[playerid];
					Smuggling[playerid] = 0;
					SmugglingType[playerid] = 0;
	        	}
	        	case 5:
	        	{
					format(string, sizeof(string), "** Entrega completada ** - Has conseguido %d gramos de Marihuana",Smuggling[playerid]);
					Message(playerid, 0xF0AB4FFF, string);
					PlayerInfo[playerid][pMarihuana] += Smuggling[playerid];
					Smuggling[playerid] = 0;
					SmugglingType[playerid] = 0;
	        	}
    		}
	    }
	}
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	new mats = random(20);
	if(pickupid == pMatI)
	{
	    if(!IsANarco(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres narcotraficante!");
	    if(Delivery[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
	    Delivery[playerid] = mats;
	    Message(playerid, COLOR_WHITE, "Has recogido un paquete, entrégaselo a su dueño.");
	    GText(playerid, "paquete recogido", 5000, 1);
	}
	else if(pickupid == pMatII)
	{
	    if(!IsANarco(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres narcotraficante!");
	    if(Delivery[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
	    Delivery[playerid] = mats;
	    Message(playerid, COLOR_WHITE, "Has recogido un paquete, entrégaselo a su dueño.");
	    GText(playerid, "paquete recogido", 5000, 1);
	}
	else if(pickupid == pMatIII)
	{
	    if(!IsANarco(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres narcotraficante!");
	    if(Delivery[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya tienes un paquete, entrégalo antes!");
	    Delivery[playerid] = mats+2;
	    Message(playerid, COLOR_WHITE, "Has recogido un paquete, entrégaselo a su dueño.");
	    GText(playerid, "paquete recogido", 5000, 1);
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    if(IsPlayerNPC(playerid))
   	{
    	return 1;
   	}
	new string[128];
 	new engine,lights,alarm,doors,bonnet,boot,objective;
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    MsgL4L[playerid]=0; MensajeMuriendo[playerid] = 0;
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
				Bought(playerid, TransportCost[playerid]);
				Earn(TransportDriver[playerid], TransportCost[playerid]);
				format(string, sizeof(string), "~w~Te costo ~r~%d$",TransportCost[playerid]);
			    GameTextForPlayer(playerid, string, 5000, 1);
			    format(string, sizeof(string), "~w~Has ganado ~g~%d$",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
			    TextDrawHideForPlayer(playerid, Taximeter[playerid]);
				TextDrawHideForPlayer(TransportDriver[playerid], Taximeter[TransportDriver[playerid]]);
				TransportCost[playerid] = 0;	TransportTime[playerid] = 0;	TransportDriver[playerid] = 999;
			}
		}
		if(Train_Route[playerid] > 0)
		{
		    Train_Route[playerid] = 0;
		    Message(playerid, COLOR_WHITE, "Ruta tren finalizada");
		    if(IsATrain(GetPlayerVehicleID(playerid)))
			{
		 		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			}
		}
		if(PlayerIsSweeping[playerid] > 0)
		{
		    PlayerIsSweeping[playerid] = 0;
		    Message(playerid, COLOR_WHITE, "Dejaste de barrer las calles.");
		    DisablePlayerCheckpoint(playerid);
		    if(IsASweeper(GetPlayerVehicleID(playerid)))
			{
		 		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			}
		}
		if(DrugFarming[playerid] > 0)
	 	{
	 	    DisablePlayerCheckpoint(playerid);
	 	    DrugFarming[playerid] = 0;
	 	    Message(playerid, COLOR_WHITE, "¡Dejaste de cosechar drogas!");
	 	}
		if(Plane_Route[playerid] > 0)
		{
		    Plane_Route[playerid] = 0;
		    Message(playerid, COLOR_WHITE, "¡Has abandonado el avión!");
		    DisablePlayerCheckpoint(playerid);
		    if(IsAPlane(GetPlayerVehicleID(playerid)))
			{
		 		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			}
	 	}
	 	        // Si sale del vehiculo
		if(oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER)
		{
			if (PlayerInfo[playerid][pDonateT] != 1)
			    {
	    			StopAudioStreamForPlayer(playerid); // Parar las retransmisiones
    			}
		}
	}

	new newcar = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_PASSENGER)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0 && Taxi_Vehicle(vehicleid))
	            {
	                if(GetPlayerMoney(playerid) < TarifaTaxi[i])
	                {
	                    format(string, sizeof(string), "* Necesitas %d$ para pagar el taxi!", TarifaTaxi[i]);
						Message(playerid, COLOR_NEGATIVE, string);
						RemovePlayerFromVehicle(playerid);
	                }
	                else
	                {
                		TransportTime[playerid] = 1;
                 		TransportCost[playerid] = TarifaTaxi[i];
                  		TransportDriver[playerid] = i;
                   		format(string, sizeof(string), "* Has entrado al taxi. Tarifa: %d", TarifaTaxi[i]);
						Message(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s entró a su taxi.", PlayerName(playerid));
						Message(i, COLOR_WHITE, string);
						TextDrawShowForPlayer(playerid, Taximeter[playerid]);
						TextDrawShowForPlayer(i, Taximeter[i]);
						format(string, sizeof(string), "   A pagar: ~g~%d$ ~w~- Tiempo: ~b~%d",TransportCost[playerid],TransportTime[playerid]);
			   			TextDrawSetString(Taximeter[playerid], string);
					    TextDrawSetString(Taximeter[i], string);
	                }
	            }
	            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416)
				{
	    			if(GetPlayerVehicleSeat(playerid) >= 2)
	    			{
	        			Pause(playerid);
    					SetPosEx(playerid, 2003.3566,2288.7163,1011.1256,0,0,GetPlayerVehicleID(playerid));
						InAmbu[playerid] = GetPlayerVehicleID(playerid);
					}
				}
	        }
	    }
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(newcar,engineOn[newcar],lights,alarm,doors,bonnet,boot,objective);
		// =================================Carros de Renta ==================================//
 		if(Hire_Vehicle(newcar))
		{
		if(HireKey[playerid] == 9999)
		{
		ShowPlayerDialog(playerid,DIA_RENTA,DIALOG_STYLE_MSGBOX, "Vehiculo de alquiler","{FFFFFF}Este vehiculo es de alquiler.\n\n{FFFFFF}- Cuando no lo use devuelvalo usando{FF0000} /desrentarveh{FFFFFF}\n\n{FFFFFF}¿Desea Rentarlo?","Si","No");
			} //else SendClientMessage(playerid, 0xFFFFFFFF, "Recuerda que tienes un vehículo alquilado. Utiliza /desrentarveh para poder alquilar otro.");
		}
		if(IsACamion(newcar) && PlayerInfo[playerid][pJob] == 8)
		{
		    if(PlayerIsRuta[playerid] == 0)
		    {
				Camion[playerid] = newcar;
		    	ShowPlayerDialog(playerid, CARGAR_CAMION, DIALOG_STYLE_LIST, "{FFFFFF}Selecciona la carga", "{FFFFFF}Ropa - Binco\nComida y Accesorios - 24-7\nMedicamentos - Farmacia\nMateriales - Anmunation\nMateriales Ilegales\nDetergentes - Lavandería", "Aceptar", "Cancelar");
   			}
   			else Message(playerid, COLOR_GRAD2, "¡Debes terminar la entrega que tienes pendiente!");
  		}
		// ========================== Info Embargos & Multa ================================ //
		if(PlayerInfo[playerid][pPcarkey] == newcar || PlayerInfo[playerid][pPcarkey2] == newcar)
		{
			if(CarInfo[newcar][cEmbargo] > 0 || CarInfo[newcar][cMulta] > 0)
			{
			    Message(playerid, COLOR_YELLOW, "-------------------------------------------");
			    format(string, sizeof(string), "  Embargos: %d <> Multa: %d$", CarInfo[newcar][cEmbargo], CarInfo[newcar][cMulta]);
			    Message(playerid, COLOR_WHITE, string);
			    Message(playerid, COLOR_YELLOW, "-------------------------------------------");
				return 1;
			}
        }
        // ============================ Embargos ============================== //
       	if(IsAnOwnableCar(newcar) && CarInfo[newcar][cEmbargo] > 2)
		{
			Message(playerid, COLOR_GRAD2, "Este vehículo esta embargado! No puede ser conducido.");
			RemovePlayerFromVehicle(playerid);
			return 1;
		}
		// -=========================== Vehículo en Venta =================================- //
		if(IsAnOwnableCar(newcar) && CarInfo[newcar][cOwned] == 0)
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid,0x0080FFFF,"|---------------[ Vehículo en Venta ]---------------|");
		    format(string, sizeof(string), "  Modelo: %s", GetVehicleFriendlyName(newcar));
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), "  Precio: %d", CarInfo[newcar][cValue]);
		    Message(playerid, COLOR_WHITE, string);
		    if(GetPlayerMoney(playerid) > CarInfo[newcar][cValue])
		    {
		    	Message(playerid, COLOR_GREEN, "  Usted puede comprar este vehículo.");
		    	Message(playerid, COLOR_GREEN, "  Utilize /cvehiculo(2)");
			}
			else
			{
			    Message(playerid, 0xD21515FF, "  No puede adquirir este vehículo.");
			    format(string, sizeof(string), "  Le faltan: %d$", GetPlayerMoney(playerid)-CarInfo[newcar][cValue]);
		    	Message(playerid, 0xD21515FF, string);
			}
			Message(playerid,0x0080FFFF,"|---------------[ ----------------------------- ]---------------|");
		}
		// -================================= Quitar Vehículo ==========================- //
		if(IsAnOwnableCar(newcar) && PlayerInfo[playerid][pPcarkey] != 9999)
		{
			new give = CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]/4;
			if(newcar == PlayerInfo[playerid][pPcarkey] && PlayerInfo[playerid][pTimeCar] <= gettime())
			{
			    Earn(playerid, give*3);
				CarInfo[PlayerInfo[playerid][pPcarkey]][cLock] = 0;
				PlayerInfo[playerid][pPcarkey] = 9999;
  				PlayerInfo[playerid][pTimeCar] = 0;
  				ClearChatbox(playerid, 10);
       			Message(playerid, COLOR_RED2, "Este vehículo ya no te pertenece.");
   			}
		}
		if(IsAnOwnableCar(newcar) && PlayerInfo[playerid][pPcarkey2] != 9999)
		{
			new give = CarInfo[PlayerInfo[playerid][pPcarkey2]][cValue]/4;
			if(newcar == PlayerInfo[playerid][pPcarkey2] && PlayerInfo[playerid][pTimeCar2] <= gettime())
			{
			    Earn(playerid, give*3);
				CarInfo[PlayerInfo[playerid][pPcarkey2]][cLock] = 0;
				PlayerInfo[playerid][pPcarkey2] = 9999;
  				PlayerInfo[playerid][pTimeCar2] = 0;
  				ClearChatbox(playerid, 10);
       			Message(playerid, COLOR_RED2, "Este vehículo ya no te pertenece.");
   			}
		}
  		// -================================ Carros de Facciones ================================- //
		else if(FBI_Vehicle(newcar))
  		{
  		    if(Team_FBI(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!"); return 1;
		}
		else if(SAMD_Vehicle(newcar))
  		{
 		    if(Team_SAMUR(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(GS_Vehicle(newcar))
  		{
  		    if(Team_Groove(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(Gobierno_Vehicle(newcar))
  		{
  		    if(Gobierno(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(LH_Vehicle(newcar))
  		{
  		    if(Team_Hermandad(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(LK_Vehicle(newcar))
  		{
  		    if(Team_LK(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(Hitman_Vehicle(newcar))
		{
  		    if(Hitman(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		} 
		else if(CorteJuez_Vehicle(newcar))
		{
  		    if(Team_CorteJudicial(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(Mecanico_Vehicle(newcar))
  		{
  		    if(Team_Mecanicos(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
  		else if(IsAMotero(newcar))
  		{
  		    if(Moteros (playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}

		else if(Ita_Vehicle(newcar))
  		{
  		    if(Mafia_Italiana(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(Yak_Vehicle(newcar))
  		{
  		    if(Mafia_Yakuza(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(Rus_Vehicle(newcar))
  		{
  		    if(Mafia_Rusa(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(Practise_Car(newcar))
  		{
  		    if(IsAnInstructor(playerid) || IsPractising[playerid] == 1) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No puedes utilizar este vehículo ahora!");return 1;
		}
		else if(CNN_Vehicle(newcar))
  		{
  		    if(Journalist(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(Narco_Vehicle(newcar))
  		{
  		    if(IsANarco(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(SAEM_Vehicle(newcar))
		{
  		    if(Team_NG(playerid)) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
		}
		else if(IsAPiratas(newcar))
		{
		    if(Piratas4x4(playerid)) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
  		}
  		else if(IsABallas(newcar))
		{
		    if(Ballas_pand(playerid)) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡Este vehículo no es de tu facción!");return 1;
  		}
		else if(IsATrain(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 1) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres Conductor de Tren!");return 1;
		}
		else if(IsASweeper(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 2) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres Barrendero!");return 1;
		}
		else if(IsAPizzabike(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 6) { return 1; }
            else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres Pizzero!");return 1;
		}
		else if(IsACamion(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 8) { return 1; }
		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres camionero!");return 1;
		}
		else if(IsABoatFish(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 7) { return 1;}
            else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres pescador!");return 1;
      	}
		else if(IsABike(newcar))
		{
		    SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
		}
		else if(Taxi_Vehicle(newcar))
  		{
  		    if(PlayerInfo[playerid][pJob] == 9) { return 1; }
  		    else RemovePlayerFromVehicle(playerid); Message(playerid, COLOR_GRAD2, "¡No eres taxista!"); return 1;
		}
		else if(IsAPlane(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 3 || PlayerInfo[playerid][pFlyLic] > 0 && PlayerInfo[playerid][pJob] == 0) { return 1; }
		    else
			{
			    RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			}
		}

		if(IsAnOwnableCar(newcar)) format(string, 16, "%s", CarInfo[newcar][cName]);
		else format(string, 16, "%s", GetVehicleFriendlyName(newcar));
		GText(playerid, string, 3000, 1);
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		SetHP(playerid, 50.0);
		gPlayerSpawned[playerid] = 1;
	}
	return 1;
}

public DiseaseSystem()
{
	new string[80];
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(IsPlayerConnected(j))
	    {
		    new Float:health;
		    GetPlayerHealth(j, health);
			// -============================== Cancer ================================- //
			if(PlayerInfo[j][pCancer] > 250 && PlayerInfo[j][pCancer] < 300)
			{
			    if(CancerEffect[j] > 30)
			    {
					SetHP(j, health-20);
					format(string, sizeof(string), "* %s tose.", PlayerName(j));
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CancerEffect[j] = 0;
					PlayerInfo[j][pCancer] += 3;
				}
				CancerEffect[j] += 1;
			}
			if(PlayerInfo[j][pCancer] > 300 && PlayerInfo[j][pCancer] < 400)
			{
			    if(CancerEffect[j] > 30)
			    {
					SetHP(j, health-30);
					format(string, sizeof(string), "* %s tose.", PlayerName(j));
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CancerEffect[j] = 0;
					PlayerInfo[j][pCancer] += 6;
				}
				CancerEffect[j] += 1;
			}
			if(PlayerInfo[j][pCancer] > 400 && PlayerInfo[j][pCancer] < 600)
			{
			    if(CancerEffect[j] > 30)
			    {
					SetHP(j, health-40);
					format(string, sizeof(string), "* %s tose.", PlayerName(j));
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CancerEffect[j] = 0;
					PlayerInfo[j][pCancer] += 10;
				}
				CancerEffect[j] += 1;
			}
			// -================================ Epilepsia ===============================- //
			if(cEpilepsia[j] == 0)
			{
				if(PlayerInfo[j][pEpilepsia] > 250 && PlayerInfo[j][pEpilepsia] < 350)
				{
				    if(EpilepsiaCrack[j] > 50)
				    {
	           			ApplyAnimation(j, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 1, 60000);
	           			ApplyAnimation(j, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 1, 60000);
				        format(string, sizeof(string), "* %s se cae y empieza a echar saliva.", PlayerName(j));
						ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						EpilepsiaCrack[j] = 0;
						PlayerInfo[j][pEpilepsia] += 10;
						SetHP(j, health-30);
						SetPlayerDrunkLevel(j, 30000);
					}
					EpilepsiaCrack[j] += 1;
				}
				if(PlayerInfo[j][pEpilepsia] > 350 && PlayerInfo[j][pEpilepsia] < 600)
				{
				    if(EpilepsiaCrack[j] > 50)
				    {
				        ApplyAnimation(j, "CRACK", "crckdeth1", 2.5, 0, 0, 0, 1, 90000);
				        ApplyAnimation(j, "CRACK", "crckdeth1", 2.5, 0, 0, 0, 1, 90000);
				        format(string, sizeof(string), "* %s se cae y empieza a echar saliva.", PlayerName(j));
						ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						EpilepsiaCrack[j] = 0;
						PlayerInfo[j][pEpilepsia] += 20;
						SetHP(j, health-40);
						SetPlayerDrunkLevel(j, 40000);
					}
					EpilepsiaCrack[j] += 1;
				}
				if(PlayerInfo[j][pEpilepsia] > 600)
				{
				    if(EpilepsiaCrack[j] > 50)
				    {
				        ApplyAnimation(j, "CRACK", "crckdeth3", 2.5, 0, 0, 0, 1, 120000);
				        ApplyAnimation(j, "CRACK", "crckdeth3", 2.5, 0, 0, 0, 1, 120000);
				        format(string, sizeof(string), "* %s se cae y empieza a echar saliva.", PlayerName(j));
						ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						EpilepsiaCrack[j] = 0;
						PlayerInfo[j][pEpilepsia] += 30;
						SetHP(j, health-60);
						SetPlayerDrunkLevel(j, 50000);
					}
					EpilepsiaCrack[j] += 1;
				}
			}
			// -================================= SIDA ========================================- //
			if(PlayerInfo[j][pSIDA] > 0 && PlayerInfo[j][pSIDA] < 2)
			{
			    if(SIDA[j] > 30)
			    {
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 5000);
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 5000);
			        format(string, sizeof(string), "* %s vomita.", PlayerName(j));
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					if(health > 15) { SetHP(j, health-50); }
				}
				SIDA[j] -= 1;
			}
			if(PlayerInfo[j][pSIDA] > 1 && PlayerInfo[j][pSIDA] < 3)
			{
			    if(SIDA[j] > 20)
			    {
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 10000);
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 10000);
			        format(string, sizeof(string), "* %s vomita.", PlayerName(j));
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					if(health > 15) { SetHP(j, health-76); }
				}
				SIDA[j] -= 1;
			}
			if(PlayerInfo[j][pSIDA] > 3)
			{
			    if(SIDA[j] > 10)
			    {
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 15000);
			        ApplyAnimation(j, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 15000);
			        format(string, sizeof(string), "* %s vomita.", PlayerName(j));
					ProxDetector(30.0, j, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					if(health > 15) { SetHP(j, health-70); }
				}
				SIDA[j] -= 1;
			}
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    if(IsASweeper(vehicleid)) SetVehicleToRespawn(vehicleid);

	if(UsingBelt[playerid] == 1) UsingBelt[playerid] = 0;

	if(NoFuel[playerid] == 1) TogglePlayerControllable(playerid, 1); NoFuel[playerid]= 0;

	TogglePlayerControllable(playerid, 1);

	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	SendRconCommand("hostname |Ø| Hermandad Zero RolePlay |Ø| WIP |Ø|");
    if(IsPlayerNPC(playerid)) return 1;
	if(gPlayerLogged[playerid] == 1)
	{
		SpawnPlayer(playerid);
	}
	return 1;
}

function OtherTimer()
{
	new string[100];
	if(TaxiSlot1 < 999) { TiempoSlot1 += 1; }
	if(TaxiSlot2 < 999) { TiempoSlot2 += 1; }
	if(TaxiSlot3 < 999) { TiempoSlot3 += 1; }
	if(TaxiSlot4 < 999) { TiempoSlot4 += 1; }
	if(TaxiSlot5 < 999) { TiempoSlot5 += 1; }
	if(TaxiSlot6 < 999) { TiempoSlot6 += 1; }
	if(TaxiSlot7 < 999) { TiempoSlot7 += 1; }
	if(TaxiSlot8 < 999) { TiempoSlot8 += 1; }
	AddsOn();
    NameTimer();
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    OnPlayerCheckStat(i);
	    if(IsPlayerConnected(i))
	    {
	        new vehicleid = GetPlayerVehicleID(i);
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
			    if(Gas[vehicleid] < 10) PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
			}
			if(Tied[i] > 0)
			{
			    TogglePlayerControllable(i, 0);
			}
			if(CellTime[i] > 0)
			{
				if(CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
				}
				if(Mobile[Mobile[i]] == i)
				{
				    if(CallCost[i] >= PlayerInfo[i][pMinutes]) { StopCall(i); Message(i, COLOR_WHITE, "{018CFE}OTECEL: {FFFFFF}Se te acabó el saldo, debes realizar una recarga."); }
					else { CallCost[i] = CallCost[i]+1; }
				}
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
				{
				    if(IsPlayerConnected(Mobile[i]))
				    {
						format(string, sizeof(string), "* El teléfono de %s suena", PlayerName(Mobile[i]));
						ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(string, sizeof(string), "~w~La llamada te costo~n~~r~$%d",CallCost[i]/10);
				GameTextForPlayer(i, string, 5000, 1);
				PlayerInfo[i][pMinutes] -= CallCost[i];
				CallCost[i] = 0;
			}
			if(engineOn[vehicleid] && Gas[vehicleid] == 0 && IsPlayerInAnyVehicle(i))
 			{
 			    new engine,lights,alarm,doors,bonnet,boot,objective;
 			    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(vehicleid,0,lights,alarm,doors,bonnet,boot,objective);
				engineOn[vehicleid] = false;
				GameTextForPlayer(i,"~w~vehiculo sin~n~~r~gasolina",1500,1);
			}
			if (PlayerToPoint(2.0, i, 1425.2998,-1291.2107,13.5560))
			{
				GameTextForPlayer(i, "~b~Hitman ~w~Deje su mensaje~n~Use: ~y~~n~/hitman (id) (Monto)", 3000, 3);
			}
			if(TransportTime[i] > 0)
			{
			    if(TransportTime[i] >= 10)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
	      					TransportCost[i] += TarifaTaxi[TransportDriver[i]];
						}
					}
				}
			    TransportTime[i] += 1;
			    format(string, sizeof(string), "   A pagar: ~g~%d$ ~w~- Tiempo: ~b~%d",TransportCost[i], TransportTime[i]);
			    TextDrawSetString(Taximeter[i], string);
			    TextDrawSetString(Taximeter[TransportDriver[i]], string);
			}
			if(AFK[i] > 0){
				if(AFKTime[i] == gettime())
				{
	    			SetPlayerPos(i, AFKLoc[i][0],AFKLoc[i][1],AFKLoc[i][2]);
        			SetTimerEx("KickAFK", 1200, false, "i", i);
     			}
			}
		}
	}
	for(new h = VV; h < sizeof(CarInfo); h++)
	{
		if(CarInfo[h][cBattery] == 0)
		{
  			new engine,lights,alarm,doors,bonnet,boot,objective;
			GetVehicleParamsEx(h,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(h,0,lights,alarm,doors,bonnet,boot,objective);
			engineOn[h] = false;
			return 1;
		}
		if(NoWheels[h] > 0)
		{
	        new component = GetVehicleComponentInSlot(h, CARMODTYPE_WHEELS);
	        new panels, doors, lights, tires;
	        GetVehicleDamageStatus(h, panels, doors, lights, tires);
	        if (component == 1025)
	        {
				UpdateVehicleDamageStatus(h, panels, doors, lights, 15);
    			SetVehicleVelocity(h, 0.0, 0.0, 0.0);
	            return 1;
	        }
	        else
	        {
	            NoWheels[h] = 0;
                UpdateVehicleDamageStatus(h, panels, doors, lights, 0);
	        }
		}
	}
	return 1;
}

function CamionTimer()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(PlayerIsRuta[i] == 1 && PlayerCargando[i] >= 1)
		{
			PlayerCargando[i] -= 1;
   			if(PlayerCargando[i] >= 1)
	    	{
	    		SetProgressBarValue(Cargando[i], 10-PlayerCargando[i]);
       			UpdateProgressBar(Cargando[i], i);
	    	}
	    	else if(PlayerCargando[i] == 0)
	    	{
 	    		SetProgressBarValue(Cargando[i], 10);
        		UpdateProgressBar(Cargando[i], i);
          		SetTimerEx("DestroyProgg", 1000, false, "i", i);
				PlayerIsRuta[i] = 2;
				switch(Mercancia[i])
				{
				    case 1:
				    {
						new point = random(2);
						if(point == 1) SetPlayerCheckpoint(i, 2245.7646,-1658.8499,15.2865, 5.0);
						else SetPlayerCheckpoint(i, 454.2690,-1502.2506,30.8709, 5.0);
 						Message(i, COLOR_WHITE, "¡Has cargado tu camion con prendas de vestir, ve y entregalas a binco!");
					}
					case 2:
					{
	    				new mappo = random(2);
						if(mappo == 1) SetPlayerCheckpoint(i, 1841.0033,-1863.2201,13.3897, 5.0);
						else SetPlayerCheckpoint(i, 1314.4264,-918.9805,38.0876, 5.0);
	    				Message(i, COLOR_WHITE, "¡Has cargado tu camion con comida y accesorios, ve y entregalas al 24-7!");
					}
					case 3:
					{
    					SetPlayerCheckpoint(i, 890.6088,-1665.0690,13.5469, 5.0);
				    	Message(i, COLOR_WHITE, "¡Has cargado tu camion con medicamentos, ve y entregalas a la farmacia!");
					}
					case 4:
					{
	    				SetPlayerCheckpoint(i, 1361.2109,-1279.8762,13.3828, 5.0);
					    Message(i, COLOR_WHITE, "¡Has cargado tu camion con materiales armamentisticos, ve y entregalos a ammunation!");
					}
					case 5:
					{
						SetPlayerCheckpoint(i, -84.9333,-1572.7817,2.6107, 5.0);
		    			Message(i, COLOR_WHITE, "¡Has cargado tu camion con materiales ilegales, ve y entregalos pero ten cuidado con la policia!");
					}
					case 6:
					{
						SetPlayerCheckpoint(i, 1841.4935,-1417.0869,13.5625, 5.0);
		    			Message(i, COLOR_WHITE, "¡Has cargado tu camion detergentes, ve y entregalos en la lavanderia!");
					}
				}
    		}
		}
		if(PlayerIsRuta[i] == 2 && PlayerDescargando[i] >= 1)
		{
  			PlayerDescargando[i] -= 1;
	    	if(PlayerDescargando[i] >= 1)
		    {
	    		SetProgressBarValue(Cargando[i], PlayerDescargando[i]);
       			UpdateProgressBar(Cargando[i], i);
	    	}
	    	else if(PlayerDescargando[i] == 0)
	    	{
 	    		DestroyProgressBar(Cargando[i]);
				Cargando[i] = INVALID_BAR_ID;
				TogglePlayerControllable(i, 1);
				PlayerIsRuta[i] = 3;
				SetPlayerCheckpoint(i, 2224.5657,-2636.0427,13.4365, 8.0);
				Message(i, COLOR_WHITE, "¡Has entregado la carga, ahora regresa a la estacion por tu paga y recuerda regresar con el camión!");
    		}
		}
		if(RecentlyShot[i] == 1)	RecentlyShot[i] = 0;
	}
	return 1;
}

public Tiempos()
{
        SetTimer("CambiarClima",600000, true);
        return 1;
}
public CambiarClima()
{
        Climas = random(20);
        if(Climas == 1)
        {
            SetWeather(1);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Soleado, sin nubes.");
        }
        else if(Climas == 2)
        {
            SetWeather(2);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Tiempo soleado con cambios significativos!");
        }
        else if(Climas == 3)
        {
            SetWeather(3);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Tiempo soleado, buena visibilidad!");
        }
        else if(Climas == 4)
        {
            SetWeather(4);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado y soleado en parte!");
        }
        else if(Climas == 5)
        {
            SetWeather(5);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Cielo muy limpio, con un clima templado!");
        }
        else if(Climas == 6)
        {
            SetWeather(6);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Temperatura de 20 grados, despejado.!");
        }
        else if(Climas == 7)
        {
            SetWeather(7);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado, baja probabilidad de lluvia.");
        }
        else if(Climas == 8)
        {
            SetWeather(8);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado. Probabilidad de tormentas.");
        }
        else if(Climas == 9)
        {
            SetWeather(9);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado, niebla intensa. Conducir con precaución.");
        }
        else if(Climas == 10)
        {
            SetWeather(10);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Despejado, viento del sector norte.");
        }
        else if(Climas == 11)
        {
            SetWeather(11);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Calor, mucho calor. Se recomienda prender aires acondicionados.");
        }
        else if(Climas == 12)
        {
            SetWeather(12);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Algunas nubes en el cielo. Buen tiempo.");
        }
        else if(Climas == 13)
        {
            SetWeather(13);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Algunas nubes en el cielo, baja probabilidad de lluvia.");
        }
        else if(Climas == 14)
        {
            SetWeather(14);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Despejado, corre viento moderado.");
        }
        else if(Climas == 15)
        {
            SetWeather(15);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Frío intenso.");
        }
        else if(Climas == 16)
        {
            SetWeather(16);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: LLuvias intensas, llevar paragua.");
        }
        else if(Climas == 17)
        {
            SetWeather(17);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Calor, 40 grados centígrados. Humedad 5 porciento.");
        }
        else if(Climas == 18)
        {
            SetWeather(18);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Mucho calor, 41 grados centígrados, corre viento caliente.");
        }
        else if(Climas == 19)
        {
            SetWeather(19);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]:¡Tormenta de arena! Se recomiendo no salir de su casa.");
        }
        else if(Climas == 20)
        {
            SetWeather(20);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado, probabilidad de lluvia moderada. LLevar paragua.");
        }
         else if(Climas == 21)
        {
            SetWeather(21);
                SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado, probabilidad de lluvia moderada. LLevar paragua.");
        }
         else if(Climas == 22)
        {
            SetWeather(22);
            SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado, probabilidad de lluvia moderada. LLevar paragua.");
        }
         else if(Climas == 23)
        {
            SetWeather(23);
            SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado, probabilidad de lluvia moderada. LLevar paragua.");
        }
         else if(Climas == 24)
        {
            SetWeather(2009);
            SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado, probabilidad de lluvia moderada. LLevar paragua.");
        }
         else if(Climas == 25)
        {
            SetWeather(32);
            SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado, niebla, visibilidad de 25 metros.");
    }
    else if(Climas == 26)
        {
            SetWeather(45);
            SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Templado, se acerca una tormenta.");
    }
        else if(Climas == 27)
        {
            SetWeather(42);
            SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Mucha niebla y probabilidad de lluvia.");
    }
        else if(Climas == 28)
        {
            SetWeather(43);
            SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Nublado, niebla, visibilidad de 60 metros.");
    }
        else if(Climas == 29)
        {
            SetWeather(250);
            SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Todo el pueblo está porreado.");
    }
        else if(Climas == 30)
        {
            SetWeather(48);
            SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Despejado. Tranquilo, sin apuros.");
    }
        else if(Climas == 31)
        {
            SetWeather(36);
            SendClientMessageToAll(COLOR_CLIMA,"[Parte Meteorológico]: Cambiante. Poca posibilidad de lluvia.");
    }
        return 1;
}

public SetPlayerUnjail()
{
	new string[128], Float:health, Float:armor;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(GetPlayerMoney(i) > ScriptMoney[i])  SetMoneyToPlayer(i, ScriptMoney[i]);
			
			switch(GetPlayerWeapon(i)) {   case 9, 18, 26, 28, 32, 35 .. 40, 44, 45 :	ResetPlayerWeapons(i);  }

            GetPlayerHealth(i, health);		GetPlayerArmour(i, armor);
			if(health > PlayerInfo[i][pHealth])		SetHP(i, PlayerInfo[i][pHealth]);

	  		if(armor > ScriptArmor[i])				GiveArmorToPlayer(i, ScriptArmor[i]);
	  		
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0)
				{
					PlayerInfo[i][pJailTime]--;
				}
				if(PlayerInfo[i][pJailTime] <= 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
				    switch(PlayerInfo[i][pJailed])
				    {
				        case 1:
				        {
				            SetPlayerInterior(i, 0);
					    	PlayerInfo[i][pInt] = 0;
					    	SetPlayerPos(i, 1549.6013,-1681.5797,13.5563);
			    		}
				        case 3:
				        {
							SetPosEx(i,243.5500,71.0335,1003.6406,225.9520,6,0);
							PlayerInfo[i][pBusqueda] = 0;
							SetPlayerWantedLevel(i, PlayerInfo[i][pBusqueda]);
						}
						case 4:
						{
							SetPosEx(i,230.1667,141.7600,1003.0234,280.4726,3,0);
							PlayerInfo[i][pBusqueda] = 0;
							SetPlayerWantedLevel(i, PlayerInfo[i][pBusqueda]);
						}
						case 5:
						{
							SetPosEx(i,2440.4939,2371.7617,11.1414,87.1910,0,0);
							PlayerInfo[i][pBusqueda] = 0;
							SetPlayerWantedLevel(i, PlayerInfo[i][pBusqueda]);
						}
					}
					PlayerInfo[i][pJailed] = 0;
					Message(i, COLOR_GRAD1,"Warden: Usted ha sido dejado en libertad.");
					Message(i, COLOR_GRAD1,"Warden: Piense un tiempo, antes de que usted cometa un crimen.");
					GameTextForPlayer(i, "~g~Dejado En Libertad~n~~w~Trate de ser un mejor ciudadano", 5000, 1);
					SetPlayerToTeamColor(i);
				}
			}
			if(HasArmor[i] == 1 && armor < 1)
			{
			    HasArmor[i] = 0;
			    RemovePlayerAttachedObject(i, 1);
				Att_Obj_Slot_1[i] = "Vacío";
			}
			if(PlayerInfo[i][pBusqueda] > 0)
			{
			    SetPlayerWantedLevel(i, PlayerInfo[i][pBusqueda]);
			}
		    if(UsedFind[i] >= 1)
		    {
		        UsedFind[i] -= 1;
		    }
			if(PlayerDrunk[i] > 0)
			{
				if(PlayerDrunk[i] > 9)
				{
				    if(PlayerDrunkTime[i] > 20)
				    {
			    		ApplyAnimation(i,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[i]*1000);
			    		ApplyAnimation(i,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[i]*1000);
			    		SetPlayerDrunkLevel(i, PlayerDrunk[i]*1000);
			    		PlayerDrunk[i] -= 1;
			    		PlayerDrunkTime[i] = 0;
					}
					PlayerDrunkTime[i] += 1;
				}
				if(PlayerDrunk[i] < 10 && PlayerDrunk[i] > 0)
				{
			    	if(PlayerDrunkTime[i] > 30)
			    	{
				        PlayerDrunk[i] -= 1;
    	                PlayerDrunkTime[i] = 0;
					}
					PlayerDrunkTime[i] += 1;
				}
			}
			if(UsingRitalin[i] > 0)
			{
			    if(UsingRitalin[i] == 200 && armor < 101) { SetPlayerArmour(i, armor+20); }
			    if(UsingRitalin[i] == 100 && armor < 101) { SetPlayerArmour(i, armor+20); }
			    UsingRitalin[i] -= 1;
			}
			if(UsingRitalin[i] == 0 &&RitalinEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    GText(i, "~w~Efecto ~b~ritalin ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
       			SetPlayerWeather(i, DefaultWeather);
       			UsingRitalin[i] = 0;
			    RitalinEffect[i] = 0
			}
			if(UsingHeroina[i] > 0)
			{
			    new Float:PlayerHealth;
			    GetPlayerHealth(i, PlayerHealth);
			    new crack = random(10);
			    if(crack == 2) { ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 0, 5000); }
			    if(HeroinaBeat[i] == 1) { SetHP(i, PlayerHealth-1);}
			    UsingHeroina[i] -= 1;
			}
			if(UsingHeroina[i] == 0 &&HeroinaEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    GText(i, "~w~Efecto ~g~heroina ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
       			UsingHeroina[i] = 0;
			    HeroinaEffect[i] = 0
			    HeroinaBeat[i] = 0;
			    SetHP(i, 25);
			}
			if(UsingMarihuana[i] > 0)
			{
			    new Float:PlayerHealth;
			    GetPlayerHealth(i, PlayerHealth);
			    new crack = random(10);
			    if(crack == 2) { ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 0, 0, 0, 0, 5000); }
			    if(MarihuanaBeat[i] == 1) { SetHP(i, PlayerHealth-1);}
			    UsingMarihuana[i] -= 1;
			}
			if(UsingMarihuana[i] == 0 &&MarihuanaEffect[i] == 1 && UsingDrugs[i] == 1)
			{
			    GText(i, "~w~Efecto ~g~marihuana ~n~~w~pasado", 5000, 1);
			    UsingDrugs[i] = 0;
       			UsingMarihuana[i] = 0;
			    MarihuanaEffect[i] = 0
			    MarihuanaBeat[i] = 0;
			    SetHP(i, 25);
			}
			if(Left4Life[i] > 0)
			{
				switch(Left4Life[i])
				{
				    case 1:{
						format(string, sizeof(string), "* %s muere desangrado.", PlayerName(i));
		    			ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    SetHP(i, 0);
					    PlayerInfo[i][pEpilepsia] += 1;
				    	PlayerInfo[i][pCancer] += 3;
						Left4Life[i] = 0;
					}
					case 30:
					{
						format(string, sizeof(string), "* %s agoniza lentamente.", PlayerName(i));
					    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        				new Float:PlayerHealth;
					    GetPlayerHealth(i, PlayerHealth)
                	    SetHP(i, PlayerHealth-5);
                    	if(Rescued[i] == 0)
                    	{
	                    	ApplyAnimation(i, "CRACK", "crckdeth4", 2.5, 1, 0, 1, 0, 0);
    	                	ApplyAnimation(i, "CRACK", "crckdeth4", 2.5, 1, 0, 1, 0, 0);
					 	}
					}
					case 100:
					{
						format(string, sizeof(string), "* %s empieza a sangrar más.", PlayerName(i));
					    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    new Float:PlayerHealth;
					    GetPlayerHealth(i, PlayerHealth)
                	    SetHP(i, PlayerHealth-3);
                    	if(Rescued[i] == 0)
                    	{
	                    	ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
    	                	ApplyAnimation(i, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
        	            }
					}
					case 150:
					{
						format(string, sizeof(string), "* %s se encuentra incosciente y sangrando.", PlayerName(i));
					    ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    new Float:PlayerHealth;
					    GetPlayerHealth(i, PlayerHealth)
                	    SetHP(i, PlayerHealth-2);
                    	if(Rescued[i] == 0)
                    	{
	                    	ApplyAnimation(i, "CRACK", "crckdeth1", 2.5, 1, 0, 1, 0, 0);
    	                	ApplyAnimation(i, "CRACK", "crckdeth1", 2.5, 1, 0, 1, 0, 0);
					 	}
					}
				}
				Left4Life[i] -= 1;
			}
			if(PizzaCallTime[i] > 0)
   			{
       			if(PizzaCallTime[i] == 90) { PizzaCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GText(i, "~r~CheckPoint~n~~w~Eliminado!", 2500, 1); }
       			else
    			{
        			format(string, sizeof(string), "%d", 90 - PizzaCallTime[i]);
     				GText(i, string, 1500, 6);
     				PizzaCallTime[i] += 1;
    			}
   			}
		}
	}
}

public CheckGas()
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
	for(new i=0;i<VEH;i++)
	{
		if(engineOn[i] == 1)
		{
			if(Gas[i] >= 1 && !IsAPlane(i) && !IsATrain(i))
			{
				Gas[i] --;
			}
			if(IsAnOwnableCar(i) && CarInfo[i][cOwned] == 1 && CarInfo[i][cBattery] > 0)
			{
				CarInfo[i][cBattery] -= 1;
				if(CarInfo[i][cBattery] < 40)
				{
					GetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(i,0,lights,alarm,doors,bonnet,boot,objective);
					engineOn[i] = false;
				}
			}
		}
	}
	CheckCarHealth();
	return 1;
}

public SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pJailed] < 1)
	    {
   			if (PlayerInfo[playerid][pWeapon] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon], PlayerInfo[playerid][pAmmo]);
				PlayerInfo[playerid][pWeapon] = 0; PlayerInfo[playerid][pAmmo] = 0;
			}
			if (PlayerInfo[playerid][pWeapon2] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon2], PlayerInfo[playerid][pAmmo2]);
				PlayerInfo[playerid][pWeapon2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
			}
			if (PlayerInfo[playerid][pWeapon3] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon3], PlayerInfo[playerid][pAmmo3]);
				PlayerInfo[playerid][pWeapon3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
			}
			if (PlayerInfo[playerid][pWeapon4] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon4], PlayerInfo[playerid][pAmmo4]);
				PlayerInfo[playerid][pWeapon4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
			}
			if (PlayerInfo[playerid][pWeapon5] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon5], PlayerInfo[playerid][pAmmo5]);
				PlayerInfo[playerid][pWeapon5] = 0; PlayerInfo[playerid][pAmmo5] = 0;
			}
			if (PlayerInfo[playerid][pWeapon6] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon6], PlayerInfo[playerid][pAmmo6]);
				PlayerInfo[playerid][pWeapon6] = 0; PlayerInfo[playerid][pAmmo6] = 0;
			}
			if (PlayerInfo[playerid][pWeapon7] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon7], PlayerInfo[playerid][pAmmo7]);
				PlayerInfo[playerid][pWeapon7] = 0; PlayerInfo[playerid][pAmmo7] = 0;
			}
			if (PlayerInfo[playerid][pWeapon8] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon8], PlayerInfo[playerid][pAmmo8]);
				PlayerInfo[playerid][pWeapon8] = 0; PlayerInfo[playerid][pAmmo8] = 0;
			}
			if (PlayerInfo[playerid][pWeapon9] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon9], PlayerInfo[playerid][pAmmo9]);
				PlayerInfo[playerid][pWeapon9] = 0; PlayerInfo[playerid][pAmmo9] = 0;
			}
			if (PlayerInfo[playerid][pWeapon10] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon10], PlayerInfo[playerid][pAmmo10]);
				PlayerInfo[playerid][pWeapon10] = 0; PlayerInfo[playerid][pAmmo10] = 0;
			}
			if (PlayerInfo[playerid][pWeapon11] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon11], PlayerInfo[playerid][pAmmo11]);
				PlayerInfo[playerid][pWeapon11] = 0; PlayerInfo[playerid][pAmmo11] = 0;
			}
			if (PlayerInfo[playerid][pWeapon12] > 0)
			{
				SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon12], PlayerInfo[playerid][pAmmo12]);
				PlayerInfo[playerid][pWeapon12] = 0; PlayerInfo[playerid][pAmmo12] = 0;
			}
		}
	}
}

UpdatePlayerStat(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pSex] == 2) 	PlayerStatInfo[playerid][0] = "Mujer";
		else 									PlayerStatInfo[playerid][0] = "Hombre";

        if(PlayerInfo[playerid][pDonateT] == 1) PlayerStatInfo[playerid][5] = "Si";
  		else 									PlayerStatInfo[playerid][5] = "No";
  		
  		if(PlayerInfo[playerid][pMarried] == 1) PlayerStatInfo[playerid][6] = "Si";
		else 									PlayerStatInfo[playerid][6] = "No";
		
		if(PlayerInfo[playerid][pSeguro] == 1)  PlayerStatInfo[playerid][7] = "LS";
		else 									PlayerStatInfo[playerid][7] = "No";

		switch(PlayerInfo[playerid][pOrigin])
		{
		    case 1: PlayerStatInfo[playerid][1] = "Argentina";
		    case 2: PlayerStatInfo[playerid][1] = "España";
		    case 3: PlayerStatInfo[playerid][1] = "Venezuela";
		    case 4: PlayerStatInfo[playerid][1] = "Chile";
		    case 5: PlayerStatInfo[playerid][1] = "Peru";
		}
		
		switch(PlayerInfo[playerid][pJob]){
		    case 1:     PlayerStatInfo[playerid][2] = "Chófer de Tren";
		    case 2:     PlayerStatInfo[playerid][2] = "Barrendero";
		    case 3:     PlayerStatInfo[playerid][2] = "Piloto";
		    case 4:     PlayerStatInfo[playerid][2] = "Vendedor de móviles";
		    case 5:     PlayerStatInfo[playerid][2] = "Ladrón";
		    case 6:     PlayerStatInfo[playerid][2] = "Pizzero";
		    case 7:     PlayerStatInfo[playerid][2] = "Pescador";
		    case 8:     PlayerStatInfo[playerid][2] = "Camionero";
		    case 9:     PlayerStatInfo[playerid][2] = "Taxista";
		    case 11:    PlayerStatInfo[playerid][2] = "Guardaespaldas";
		    case 12:    PlayerStatInfo[playerid][2] = "Detective Privado";
		    default:    PlayerStatInfo[playerid][2] = "No";
  		}
  		
  		new Faction_Player;
		if(PlayerInfo[playerid][pMember] > PlayerInfo[playerid][pLeader])	Faction_Player = PlayerInfo[playerid][pMember];
		else																Faction_Player = PlayerInfo[playerid][pLeader];

		switch(Faction_Player){
		    case 1:     PlayerStatInfo[playerid][3] = "Policía Local";
		    case 2:     PlayerStatInfo[playerid][3] = "Piratas Del Asfalto";
		    case 3:     PlayerStatInfo[playerid][3] = "Guardia Nacional";
		    case 5:     PlayerStatInfo[playerid][3] = "Ballas";
		    case 4:     PlayerStatInfo[playerid][3] = "LSMC";
		    case 7:     PlayerStatInfo[playerid][3] = "Mecánicos";
		    case 8:     PlayerStatInfo[playerid][3] = "Moteros";
		    case 9:     PlayerStatInfo[playerid][3] = "Groove Street";
			case 10:    PlayerStatInfo[playerid][3] = "La Hermandad";
			case 11:    PlayerStatInfo[playerid][3] = "Latin Kings";
			case 12:    PlayerStatInfo[playerid][3] = "La Cosa Nostra";
			case 13:    PlayerStatInfo[playerid][3] = "Yakuza";
			case 14:    PlayerStatInfo[playerid][3] = "Família Karsakova";
			case 15:    PlayerStatInfo[playerid][3] = "Licencieros";
			case 16:    PlayerStatInfo[playerid][3] = "Gobierno";
			case 17:    PlayerStatInfo[playerid][3] = "Radio-Television";
			case 19:    PlayerStatInfo[playerid][3] = "Traficantes";
			case 23:    PlayerStatInfo[playerid][3] = "Hitman";
			case 24:    PlayerStatInfo[playerid][3] = "FBI";
			case 25:    PlayerStatInfo[playerid][3] = "Corte Judicial";
			default:    PlayerStatInfo[playerid][3] = "No";
		}
		
		if(Team_LSPD(playerid))
		{
			switch(PlayerInfo[playerid][pRank]){
			case 1:     PlayerStatInfo[playerid][4] = "Cadete";
			case 2:     PlayerStatInfo[playerid][4] = "Oficial";
			case 3:     PlayerStatInfo[playerid][4] = "Investigador";
			case 4:     PlayerStatInfo[playerid][4] = "Sargento";
			case 5:     PlayerStatInfo[playerid][4] = "Teniente";
			case 6:     PlayerStatInfo[playerid][4] = "Capitán";
			case 7:     PlayerStatInfo[playerid][4] = "Inspector";
			case 8:     PlayerStatInfo[playerid][4] = "Comandante";
			default:    PlayerStatInfo[playerid][4] = "Cadete";
				}
		}
		else if(Piratas4x4(playerid))
		{
			switch(PlayerInfo[playerid][pRank]){
			case 1:     PlayerStatInfo[playerid][4] = "Aprendiz";
			case 2:     PlayerStatInfo[playerid][4] = "Pirata 4x4";
			case 3:     PlayerStatInfo[playerid][4] = "Experimentado";
			case 4:     PlayerStatInfo[playerid][4] = "Especial";
			case 5:     PlayerStatInfo[playerid][4] = "Cabecilla";
			case 6:     PlayerStatInfo[playerid][4] = "El Kapo";
			default:    PlayerStatInfo[playerid][4] = "Aprendiz";
			}
		}
		else if(Team_NG(playerid))
		{
			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Cabo";
				case 2:     PlayerStatInfo[playerid][4] = "Soldado";
				case 3:     PlayerStatInfo[playerid][4] = "Trooper";
				case 4:     PlayerStatInfo[playerid][4] = "Sargento";
				case 5:     PlayerStatInfo[playerid][4] = "Teniente";
				case 6:     PlayerStatInfo[playerid][4] = "Capitán";
				case 7:     PlayerStatInfo[playerid][4] = "Mayor";
				case 8:     PlayerStatInfo[playerid][4] = "Coronel";
				default:    PlayerStatInfo[playerid][4] = "Cabo";
			}
		}
		else if(Team_SAMUR(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Práctico";
				case 2:     PlayerStatInfo[playerid][4] = "Paramédico";
				case 3:     PlayerStatInfo[playerid][4] = "Médico";
				case 4:     PlayerStatInfo[playerid][4] = "Supervisor";
				case 5:     PlayerStatInfo[playerid][4] = "Responsable Técnico";
				case 6:     PlayerStatInfo[playerid][4] = "Director";
				default:    PlayerStatInfo[playerid][4] = "Práctico";
			}
		}
		else if(Team_Mecanicos(playerid))
		{
			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Ayudante";
				case 2:     PlayerStatInfo[playerid][4] = "Trucker";
				case 3:     PlayerStatInfo[playerid][4] = "Mecánico";
				case 4:     PlayerStatInfo[playerid][4] = "Ingeniero";
				case 5:     PlayerStatInfo[playerid][4] = "Supervisor";
				case 6:     PlayerStatInfo[playerid][4] = "Director";
				default:    PlayerStatInfo[playerid][4] = "Ayudante";
			}
		}
		else if(Moteros(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Iniciado";
				case 2:     PlayerStatInfo[playerid][4] = "Asociado";
				case 3:     PlayerStatInfo[playerid][4] = "Satanico";
				case 4:     PlayerStatInfo[playerid][4] = "Consejero";
				case 5:     PlayerStatInfo[playerid][4] = "Mano Derecha";
				case 6:     PlayerStatInfo[playerid][4] = "Jefe Motero";
				default:    PlayerStatInfo[playerid][4] = "Iniciado";
			}
		}
		else if(Pandilleros(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Joto";
				case 2:     PlayerStatInfo[playerid][4] = "Propagador";
				case 3:     PlayerStatInfo[playerid][4] = "Soldado";
				case 4:     PlayerStatInfo[playerid][4] = "Cabezilla";
				case 5:     PlayerStatInfo[playerid][4] = "General";
				case 6:     PlayerStatInfo[playerid][4] = "Líder";
				default:    PlayerStatInfo[playerid][4] = "Joto";
			}
		}
		else if(Mafia_Italiana(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Giovane d' Honore";
				case 2:     PlayerStatInfo[playerid][4] = "Soldati";
				case 3:     PlayerStatInfo[playerid][4] = "Capo";
				case 4:     PlayerStatInfo[playerid][4] = "Consigliere";
				case 5:     PlayerStatInfo[playerid][4] = "Sottocapo";
				case 6:     PlayerStatInfo[playerid][4] = "Don";
				case 7:     PlayerStatInfo[playerid][4] = "Capi Di Tutti Capi";
				default:    PlayerStatInfo[playerid][4] = "Giovane d' Honore";
			}
		}
		else if(Mafia_Yakuza(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Kyodai";
				case 2:     PlayerStatInfo[playerid][4] = "Wakashu";
				case 3:     PlayerStatInfo[playerid][4] = "Senpai Kohai";
				case 4:     PlayerStatInfo[playerid][4] = "Saiko Komon";
				case 5:     PlayerStatInfo[playerid][4] = "Sumiyoshi";
				case 6:     PlayerStatInfo[playerid][4] = "Oyabun";
				default:    PlayerStatInfo[playerid][4] = "Kyodai";
			}
		}
		else if(Mafia_Rusa(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Assotsiirovat";
				case 2:     PlayerStatInfo[playerid][4] = "Soldat";
				case 3:     PlayerStatInfo[playerid][4] = "Kapo";
				case 4:     PlayerStatInfo[playerid][4] = "Konsul'tant";
				case 5:     PlayerStatInfo[playerid][4] = "Zamestitel";
				case 6:     PlayerStatInfo[playerid][4] = "Don";
				case 7:     PlayerStatInfo[playerid][4] = "Líder";
				default:    PlayerStatInfo[playerid][4] = "Assotsiirovat";
			}
		}
		else if(IsAnInstructor(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Secretario";
				case 2:     PlayerStatInfo[playerid][4] = "Maestro";
				case 3:     PlayerStatInfo[playerid][4] = "Evaluador";
				case 4:     PlayerStatInfo[playerid][4] = "Supervisor";
				case 5:     PlayerStatInfo[playerid][4] = "Sub-Director";
				case 6:     PlayerStatInfo[playerid][4] = "Director";
				default:    PlayerStatInfo[playerid][4] = "Secretario";
			}
		}
		else if(Gobierno(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Seguridad";
				case 2:     PlayerStatInfo[playerid][4] = "Ministro";
				case 3:     PlayerStatInfo[playerid][4] = "Alcalde LS";
				case 4:     PlayerStatInfo[playerid][4] = "Vice-Presidente";
				case 5:     PlayerStatInfo[playerid][4] = "Presidente";
				default:    PlayerStatInfo[playerid][4] = "Seguridad";
			}
		}
		else if(Journalist(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Becario";
				case 2:     PlayerStatInfo[playerid][4] = "Redactor";
				case 3:     PlayerStatInfo[playerid][4] = "Periodista";
				case 4:     PlayerStatInfo[playerid][4] = "Enviado Especial";
				case 5:     PlayerStatInfo[playerid][4] = "Presentador";
				case 6:     PlayerStatInfo[playerid][4] = "Diretor CNN";
				default:    PlayerStatInfo[playerid][4] = "Becario";
			}
		}
		else if(IsANarco(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Guardia";
				case 2:     PlayerStatInfo[playerid][4] = "Cosechador";
				case 3:     PlayerStatInfo[playerid][4] = "Contrabandista";
				case 4:     PlayerStatInfo[playerid][4] = "Traficante";
				case 5:     PlayerStatInfo[playerid][4] = "Mano derecha";
				case 6:     PlayerStatInfo[playerid][4] = "Jefazo";
				default:    PlayerStatInfo[playerid][4] = "Guardia";
			}
		}
       else if(Ballas_pand(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
			case 1:     PlayerStatInfo[playerid][4] = "Joto";
			case 2:     PlayerStatInfo[playerid][4] = "Propagador";
			case 3:     PlayerStatInfo[playerid][4] = "Soldado";
			case 4:     PlayerStatInfo[playerid][4] = "Cabezilla";
			case 5:     PlayerStatInfo[playerid][4] = "General";
			case 6:     PlayerStatInfo[playerid][4] = "Líder";
			default:    PlayerStatInfo[playerid][4] = "Joto";
			}
	}

		else if(Hitman(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Novato";
				case 2:     PlayerStatInfo[playerid][4] = "Asesino";
				case 3:     PlayerStatInfo[playerid][4] = "Sicario";
				case 4:     PlayerStatInfo[playerid][4] = "Agente Especial";
				case 5:     PlayerStatInfo[playerid][4] = "Vice-Director";
				case 6:     PlayerStatInfo[playerid][4] = "Director";
				default:    PlayerStatInfo[playerid][4] = "Novato";
			}
		}
		else if(Team_FBI(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 1:     PlayerStatInfo[playerid][4] = "Agente";
				case 2:     PlayerStatInfo[playerid][4] = "S. Agente";
				case 3:     PlayerStatInfo[playerid][4] = "Especial";
				case 4:     PlayerStatInfo[playerid][4] = "Criminalista";
				case 5:     PlayerStatInfo[playerid][4] = "Sub-Director";
				case 6:     PlayerStatInfo[playerid][4] = "Director";
				default:    PlayerStatInfo[playerid][4] = "Agente";
			}
		}
				else if(Team_CorteJudicial(playerid))
		{
  			switch(PlayerInfo[playerid][pRank]){
				case 2:     PlayerStatInfo[playerid][4] = "Abogado";
				case 5:     PlayerStatInfo[playerid][4] = "Fiscal";
				case 6:     PlayerStatInfo[playerid][4] = "Juez";
				default:    PlayerStatInfo[playerid][4] = "Juez Supremo";
			}
		}
		else	PlayerStatInfo[playerid][4] = "No";
	}
}

function ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
        new cash =  GetPlayerMoney(targetid);			new account = PlayerInfo[targetid][pAccount];
		new carkey = PlayerInfo[targetid][pPcarkey];	new carkey2 = PlayerInfo[targetid][pPcarkey2];
		new CarPremium = PlayerInfo[targetid][pCarPremium]; new CarPremium2 = PlayerInfo[targetid][pCarPremium2];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;	new expamount = nxtlevel*levelexp;
		ClearChatbox(playerid, 10);
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring),"| Tus Stats : %s",PlayerName(targetid));
		Message(playerid, 0x009BE6FF,coordsstring);
		format(coordsstring, sizeof(coordsstring),"| Edad[%d]  Nivel[%d]  Sexo[%s]  Capital[%d$]  Teléfono[%d]  Seguro[%s]  Adver[%d]", PlayerInfo[targetid][pAge],PlayerInfo[targetid][pLevel],PlayerStatInfo[targetid][0],cash+account,PlayerInfo[targetid][pPnumber], PlayerStatInfo[targetid][7], PlayerInfo[targetid][pAdvertencias]);
		Message(playerid, COLOR_GRAD3,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| Proximo Nivel: %d (%d/%d)  Facción[%s]  Rango[%s]  Trabajo[%s]", nxtlevel,PlayerInfo[targetid][pExp],expamount,PlayerStatInfo[targetid][3],PlayerStatInfo[targetid][4],PlayerStatInfo[targetid][2]);
		Message(playerid, COLOR_GRAD3,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| Horas Jugadas[%d]  Muertes[%d]  Arrestos[%d]  Frags[%d] Casado[%s]  {23F7FA}Premium{FFFFFF}[%s]",PlayerInfo[targetid][pConnectTime],PlayerInfo[targetid][pDeaths],PlayerInfo[targetid][pArrested],PlayerInfo[targetid][pKills], PlayerStatInfo[targetid][6], PlayerStatInfo[targetid][5]);
		Message(playerid, COLOR_GRAD3,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| Casa[%d]  Coche1[%d]  Coche2[%d]  Negocio[%d]  Coche Renta[%d]  Casa Renta[%d]",PlayerInfo[targetid][pPhousekey], PlayerInfo[targetid][pPcarkey], PlayerInfo[targetid][pPcarkey2], PlayerInfo[targetid][pPbizzkey], HireKey[targetid], PlayerInfo[targetid][pRent]);
		Message(playerid, COLOR_GRAD3,coordsstring);
		if(PlayerInfo[targetid][pPcarkey] != 9999)
		{
		    format(coordsstring, sizeof(coordsstring), "| Vehículo1: %s  Valor: %d$  Colores:%d/%d  Locked:%d", CarInfo[carkey][cName], CarInfo[carkey][cValue], CarInfo[carkey][cColorOne], CarInfo[carkey][cColorTwo], CarInfo[carkey][cLock]);
		    Message(playerid, COLOR_GRAD3,coordsstring);
		}
		if(PlayerInfo[targetid][pPcarkey2] != 9999)
		{
			format(coordsstring, sizeof(coordsstring), "| Vehículo2: %s  Valor: %d$  Colores:%d/%d  Locked:%d", CarInfo[carkey2][cName], CarInfo[carkey2][cValue], CarInfo[carkey2][cColorOne], CarInfo[carkey2][cColorTwo], CarInfo[carkey2][cLock], CarInfo[carkey2][cLock]);
		    Message(playerid, COLOR_GRAD3,coordsstring);
		}
		if(PlayerInfo[targetid][pCarPremium] != 9999)
		{
			format(coordsstring, sizeof(coordsstring), "| Vehículo Premium: %s  Valor: %d$  Colores:%d/%d  Locked:%d  Llave:%d", CarInfo[CarPremium][cName], CarInfo[CarPremium][cValue], CarInfo[CarPremium][cColorOne], CarInfo[CarPremium][cColorTwo], CarInfo[CarPremium][cLock], CarPremium);
		    Message(playerid, COLOR_GRAD3,coordsstring);
        }
   		if(PlayerInfo[targetid][pCarPremium2] != 9999)
		{
			format(coordsstring, sizeof(coordsstring), "| Vehículo Premium2: %s  Valor: %d$  Colores:%d/%d  Locked:%d  Llave:%d", CarInfo[CarPremium2][cName], CarInfo[CarPremium2][cValue], CarInfo[CarPremium2][cColorOne], CarInfo[CarPremium2][cColorTwo], CarInfo[CarPremium2][cLock], CarPremium2);
		    Message(playerid, COLOR_GRAD3,coordsstring);
		}
	}
}

public SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    SetPlayerColor(playerid,TEAM_HIT_COLOR);
	}
}

public OnGameModeExit()
{
	new year, month,day;	getdate(year, month,day);
    printf("Gamemode HermandadZero Finalizado. [%d/%d/%d]", day,month,year);
	return 1;
}

public GameModeExitFunc()
{
	KillTimer(synctimer);
	KillTimer(unjailtimer);
	KillTimer(camtimer);
	KillTimer(othtimer);
	KillTimer(accountstimer);
	KillTimer(globaltimer);
	KillTimer(timevehtimer);
	KillTimer(checkgastimer);
	KillTimer(disease);
	KillTimer(LifeTimer);
	KillTimer(KeysTimer);
	GameModeExit();
}

public LoadCar()
{
	new arrCoords[34][64], strFromFile2[256];
	new File: file = fopen("cars.cfg", io_read);
	if (file)
	{
	    printf("-========= Coches en venta =======-");
		new idx = VV;
		while (idx < sizeof(CarInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			CarInfo[idx][cModel] 		= strval(arrCoords[0]);
			CarInfo[idx][cLocationx] 	= floatstr(arrCoords[1]);
			CarInfo[idx][cLocationy] 	= floatstr(arrCoords[2]);
			CarInfo[idx][cLocationz] 	= floatstr(arrCoords[3]);
			CarInfo[idx][cAngle] 		= floatstr(arrCoords[4]);
			CarInfo[idx][cColorOne] 	= strval(arrCoords[5]);
			CarInfo[idx][cColorTwo] 	= strval(arrCoords[6]);
			strmid(CarInfo[idx][cOwner], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(CarInfo[idx][cName], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			CarInfo[idx][cValue] 		= strval(arrCoords[9]);
			CarInfo[idx][cOwned] 		= strval(arrCoords[10]);
			CarInfo[idx][cLock] 		= strval(arrCoords[11]);
			CarInfo[idx][cBattery] 		= strval(arrCoords[12]);
			CarInfo[idx][cSpoiler] 		= strval(arrCoords[13]);
			CarInfo[idx][cHood] 		= strval(arrCoords[14]);
			CarInfo[idx][cRoof] 		= strval(arrCoords[15]);
			CarInfo[idx][cSideskirt] 	= strval(arrCoords[16]);
			CarInfo[idx][cNitro] 		= strval(arrCoords[17]);
			CarInfo[idx][cLamps] 		= strval(arrCoords[18]);
			CarInfo[idx][cExhaust] 		= strval(arrCoords[19]);
			CarInfo[idx][cWheel] 		= strval(arrCoords[20]);
			CarInfo[idx][cHydraulics] 	= strval(arrCoords[21]);
			CarInfo[idx][cPaintjob] 	= strval(arrCoords[22]);
			CarInfo[idx][cFrontBumper] 	= strval(arrCoords[23]);
			CarInfo[idx][cRearBumper] 	= strval(arrCoords[24]);
			CarInfo[idx][cVents] 		= strval(arrCoords[25]);
			CarInfo[idx][cEmbargo] 		= strval(arrCoords[26]);
			CarInfo[idx][cMulta] 		= strval(arrCoords[27]);
			strmid(CarInfo[idx][cPlate], arrCoords[28], 0, strlen(arrCoords[28]), 255);
			CarInfo[idx][cGas] 			= strval(arrCoords[29]);
			CarInfo[idx][cAlarm] 		= strval(arrCoords[30]);
			CarInfo[idx][cVehTime]      = strval(arrCoords[31]);
			CarInfo[idx][cGPS]          = strval(arrCoords[32]);
			printf("(%d) %s",idx,CarInfo[idx][cName]);
			idx++;
		}
	}
	return 1;
}

public LoadProperty()
{
	new arrCoords[26][64];
	new strFromFile2[256];
	new File: file = fopen("property.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hOwned] = strval(arrCoords[0]);
			strmid(HouseInfo[idx][hOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[2]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[3]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[5]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[6]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[7]);
			HouseInfo[idx][hInt] = strval(arrCoords[8]);
			HouseInfo[idx][hLevel] = strval(arrCoords[9]);
			HouseInfo[idx][hValue] = strval(arrCoords[10]);
			HouseInfo[idx][hLock] = strval(arrCoords[11]);
			HouseInfo[idx][hRooms] = strval(arrCoords[12]);
			HouseInfo[idx][hRent] = strval(arrCoords[13]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[14]);
			HouseInfo[idx][hWep] = strval(arrCoords[15]);
			HouseInfo[idx][hAmmo] = strval(arrCoords[16]);
			HouseInfo[idx][hMats] = strval(arrCoords[17]);
			HouseInfo[idx][hDrugs] = strval(arrCoords[18]);
			HouseInfo[idx][hSpeed] = strval(arrCoords[19]);
			HouseInfo[idx][hEctasy] = strval(arrCoords[20]);
			HouseInfo[idx][hRitalin] = strval(arrCoords[21]);
			HouseInfo[idx][hHeroina] = strval(arrCoords[22]);
			HouseInfo[idx][hMarihuana] = strval(arrCoords[23]);
			HouseInfo[idx][hWorld] = strval(arrCoords[24]);
			HouseInfo[idx][hTime] = strval(arrCoords[25]);
			idx++;
		}
		printf("Gamemode: Loaded %d houses succesfully.",idx);
		fclose(file);
	}
	return 1;
}

public LoadBizz()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("bizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bName], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			BizzInfo[idx][bEntrancex] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntrancey] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntrancez] = floatstr(arrCoords[6]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[7]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[8]);
			BizzInfo[idx][bTill] = strval(arrCoords[9]);
			BizzInfo[idx][bTillEx] = strval(arrCoords[10]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public OnGameModeInit()
{
    skinlist = LoadModelSelectionMenu("skins.txt"); //skins del binco
    if(!fexist("armario.ini")) dini_Create("armario.ini");

	ActualizarArchivos();
    AntiDeAMX();
    RequestNPCJoin();
    ManualVehicleEngineAndLights();
	for(new c=0;c<VEH;c++)
	{
	    if(!IsAnOwnableCar(c)) Gas[c] = GasMax;
		else
		{
		    if(CarInfo[c][cGas] == 0) Gas[c] = 50;
		    else if(CarInfo[c][cGas] == 1) Gas[c] = 60;
		    else if(CarInfo[c][cGas] == 2) Gas[c] = 70;
		    else if(CarInfo[c][cGas] == 3) Gas[c] = 80;
		}
	}
	UsePlayerPedAnims(); // CJ Anims
	LoadCar();
	LoadTrunk();
	LoadBizz();
	LoadProperty();
	INI_Load("robs.ini");
	INI_Load("stuff.ini");
	INI_Load("fondos.ini");
	INI_Load("hq_locks.ini");
	SetGameModeText("RolePlay Español - RPG");
	SendRconCommand("mapname LS-Versión 3.0 ");
	SendRconCommand("hostname |Ø| Hermandad Zero RolePlay |Ø| WIP |Ø|");
	SendRconCommand("language Español");
	SendRconCommand("rcon_password h12ka.,1943-saaasd1241'asdf9b");
	KillTimer(BankTimer);
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	
	//Cansancio = CreateProgressBar(15.00, 431.00, 64.50, 12.19, -16776961, 100.0);
	/*MearBarra = CreateProgressBar(548.00, 119.00, 58.50, 15.19, -65281, 100.0);
	DormirBarra = CreateProgressBar(548.00, 146.00, 58.50, 15.19, -8453889, 100.0);*/
	SetPDistance(10);
	AllowInteriorWeapons(1);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	OnGlobalPropTextdrawUpdate();
	OnGlobalBizzTextdrawUpdate();
	TextDrawCreate(0.0, 0.0, " ");
	// 3D Labels
 	CreateDynamic3DTextLabel("Pabellon de boxeo.", 		0xE8E202FF, 1775.0223,-1806.0796,13.5285, 25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);///
	CreateDynamic3DTextLabel("Cine \nUtiliza /centradacine", 				0xFF0000FF, 1350.6001,-1677.0483,1694.2446, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Cine", 	    							0x0093D9FF, 1324.0824,-1713.8619,13.6001, 40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Cine", 	    							0x0093D9FF, 1323.9176,-1709.0455,13.6130, 40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Floristeria\nUtiliza /comprarflores", 				0xB900B9FF, 1416.3882,-1718.3469,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Casa de Impuestos\n Utiliza /pagarimpuestos", 		0xF4BA0BFF, 358.3462,186.2765,1008.3828, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,3);
	CreateDynamic3DTextLabel("Venta de Hotdog\n/comprarhotdog", 				0xFF0000FF, 1357.8468,-1749.8292,13.3789, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Venta de Hotdog\n/comprarhotdog", 				0xFF0000FF, 1301.0686,-1248.4834,13.5469, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Venta de Hotdog\n/comprarhotdog", 				0xFF0000FF, 1589.6941,-1288.7108,17.5133, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Venta de Hotdog\n/comprarhotdog", 				0xFF0000FF, 1100.6458,-1383.2819,13.7813, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Club VIP \nUtiliza /comprarentrada", 				0xFF0000FF, 1790.4347,-1591.3114,13.4938, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFF, -1464.7714,1555.9248,1052.5313, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,14);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFF, -977.8622,1053.0814,1344.9912, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,10);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFF, -1128.6946,1066.2456,1345.7439, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,10);
	CreateDynamic3DTextLabel("Salida\nUtiliza /salirpaintball", 		0xF4BA0BFF, 1947.2084,1653.8584,-4.6563, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Estacionamiento\nUtiliza /parqueadero", 	0xB900B9FF, 1800.0516,-1723.1569,13.5408, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Estacionamiento\nUtiliza /parqueadero", 	0xB900B9FF, 1759.5232,-1696.3058,13.4539, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Cyber\nUtiliza: /google", 				0x007DFBFF, 1089.6310,-1379.9451,13.8127, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Fábrica de Armas", 			0xF4BA0BFF, -1107.2260,-1183.3201,129.2188, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Importación de Mercancías", 			0xF4BA0BFF, -1107.2126,-1161.9325,129.2188, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Casa Traficantes", 			0xF4BA0BFF, -1061.1812,-1195.5070,129.7466, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mansión LCN", 			0xF4BA0BFF, 1122.7068,-2036.8125,69.8942, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mansión Yakuza", 			0xF4BA0BFF, 300.0860,-1154.5682,81.3041, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("HQ Piratas", 				0xF4BA0BFF, 1080.9240,-345.3622,73.9847, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mansión Rusa", 			0xF4BA0BFF, 691.5781,-1275.9139,13.5607, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Subir Terraza", 			0xDF00DFFF, 725.5151,-1276.4104,13.6484, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Centro de Licencias", 		0xE6DE48FF, 2045.5239,-1907.7998,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Central de Taxis", 			0xE6DE48FF, 1752.7571,-1894.2361,13.5573, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Pizza Stack", 				0xFF9B6AFF, 2105.2734,-1806.5475,13.5547, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Mercado Negro\nUtilize /bmbuy", 				0x400000FF, 1400.0763,-1444.9131,8.6699, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Renta de Vehículos", 			0xD7006BFF, 1545.7329,-2202.2278,13.3326, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Oficina LSTV", 				0x13D269FF, 758.1428,-1361.2177,14.0281, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Ascensor", 					0x0093D9FF, 2034.1501,-1402.0724,17.2946, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Hell's Angel's\nBar", 					0xFF0000FF,681.5901,-473.3940,16.5363, 12.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Cancha Boexo\nilegal", 					0xFF0000FF, 2266.4553,-1700.2357,13.6902, 12.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nDetective Privado", 					0x00D56AFF, 1649.5122,-1578.7310,13.5319, 20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Departamento\nde Policía", 	0xE8E202FF, 1554.9644,-1675.6254,16.1953, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Ayuntamiento", 				0xE8E202FF, 1480.8044,-1771.8195,18.7958, 300.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Hospital", 					0xFF0000FF, 1172.8470,-1323.1869,15.3999, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Emergencias", 				0xFF0000FF, 1144.9569,-1329.5032,13.5840, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Ascensor", 				0xFF0000FF, 1159.3601,-1352.9479,26.6766, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("[ Pedir Servicio ]\nUtilize: /psv", 					0x8080FFFF, 251.1073,118.2060,1003.2188, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,10);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nVendedor móviles", 	0x00D56AFF, 994.3785,-1296.4718,13.5469, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nGuardaespaldas", 				0x00D56AFF, 1070.6956,-1861.3844,13.5857, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nConductor de Tren", 			0x00D56AFF, 1684.6482,-1944.7058,13.5469, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	//CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nBarrendero", 	0x00D56AFF, 1616.0780,-1896.7744,13.5490, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nPiloto", 				0x00D56AFF, 1957.3217,-2183.6399,13.5469, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nLadrón", 				0x00D56AFF, 2275.2427,-1105.6196,37.9766, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nTaxista", 				0x00D56AFF, -1824.7786,139.8424,18.9315, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("[!]  Oferta de Trabajo\nPizzero", 				0x00D56AFF, 378.3128,-119.6172,1001.4922, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,5);
    CreateDynamic3DTextLabel("[!]  Solo Personal\n/trajepizza", 		0x00D56AFF, 369.0226,-114.5778,1001.4995, 02.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,5);
    CreateDynamic3DTextLabel("Quieres aprender a pelear?\n Use: /apelear", 		0xFF0000FF, 767.6719,13.6320,1000.7010, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,5);
	CreateDynamic3DTextLabel("Puerto de\nCompra/Venta", 					0x0093D9FF, 633.4413,-1950.7174,1.6708, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("Biblioteca", 	    							0x0093D9FF, 1546.6545,-1097.5780,25.0625, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Cuartel Militar", 	0x00D56AFF, 2766.1648,-2513.5667,13.6428, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Armeria Militar", 	0x00D56AFF, 2731.6631,-2417.5254,13.6280, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("*Prisión Militar*", 	0x00D56AFF, 2729.3357,-2451.4373,17.5937, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Subir Helipuerto",    0x00D56AFF, 2721.3474,-2380.0967,17.3403, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Bajar Helipuerto",    0x00D56AFF, 2747.1721,-2380.1116,30.0547, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Iglesia", 					0xFF0000FF, 1270.5482,-1539.9236,14.7471, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Departamento \ndel FBI", 					0x0000D7FF, 914.2686,-1004.6304,37.9794, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Ascensor", 			0xDF00DFFF, 208.0704,142.1360,1003.0234, 2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,3);
	CreateDynamic3DTextLabel("Ascensor", 			0xDF00DFFF, 914.0172,-1026.9460,111.0547, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Ascensor", 			0xDF00DFFF, 914.2907,-1037.3264,31.8984, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("[!] Seguro de LS\n /cseguro PRECIO: 1000", 					0xFF0000FF, -2659.7708,506.9668,48.0847, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
    CreateDynamic3DTextLabel("Quieres aprender a pelear?\n Use: /apelear", 		0xFF0000FF, 768.6885,-36.5168,1000.6865, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,6);
    CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nCamionero", 	0x00D56AFF, 2215.4924,-2661.2336,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
    CreateDynamic3DTextLabel("[!] Oferta de Trabajo\nPescador", 	0x00D56AFF, 893.6022,-2488.9248,3098.3235, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Skin\n/cropa", 				0xF1E00AFF, -1828.5704,55.5554,1055.1891, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,1);
	CreateDynamic3DTextLabel("Renta de Barcos",             0xD7006BFF, 507.5891,-1938.6826,1.1708, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Apuesta Comun\n /apostar", 			0xE6DE48FF, 2240.7422,1673.6621,6.9162, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Apuesta Dificil\n /apostar", 			0xE6DE48FF, 2240.5859,1678.6016,6.9099, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Ruleta Rusa\n /ruleta", 			0xE6DE48FF, 2254.6746,1680.4365,6.9099, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Ruleta Rusa\n /ruleta", 			0xE6DE48FF, 2260.2432,1680.5635,6.9099, 3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Maquinas\n /tragamonedas", 			0xE6DE48FF, 2257.0374,1669.9581,6.9099, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Lavadoras\nUsa /lavarropa",           0xE6DE48FF,3937.3613,-820.6308,1874.0156, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Lavadoras\nUsa /lavarropa",           0xE6DE48FF,3937.7209,-834.2257,1874.0156, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Joyeria\nUsa /comprar",           0xE6DE48FF,1573.5209,-1906.3552,405.1159, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Joyeria\nUsa /comprar",           0xE6DE48FF,1577.7031,-1895.5066,401.6359, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Banco Central de\nLos Santos", 		0x00B700FF, 1459.19, -1009.92, 26.84, 45.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("       Juzgado Municipal", 				0x00D56AFF, 1495.1257,-1550.9364,15.3703, 25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0);
	CreateDynamic3DTextLabel("Oficina Concesionario", 		                0x24FF65FF, 593.6577,-1250.7083,18.2470, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Ficha para trabajar: /fichar", 				0xFF9B6AFF, 338.2341,-1503.8063,15.7878, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	// 3D labels mapas
	CreateDynamic3DTextLabel("Para ver el mapa usa\n{FFFFFF}/mapa", 			COLOR_LIGHTBLUE, 1181.4065,-1318.3972,13.6281, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Para ver el mapa usa\n{FFFFFF}/mapa", 			COLOR_LIGHTBLUE, 772.0750,-1327.3168,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Para ver el mapa usa\n{FFFFFF}/mapa", 			COLOR_LIGHTBLUE, 1813.9435,-1901.8436,13.5730, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Para ver el mapa usa\n{FFFFFF}/mapa", 			COLOR_LIGHTBLUE, 1639.5374,-2187.5317,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Para ver el mapa usa\n{FFFFFF}/mapa", 			COLOR_LIGHTBLUE, 1839.1881,-1421.8048,13.5625, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Para ver el mapa usa\n{FFFFFF}/mapa", 			COLOR_LIGHTBLUE, 1193.3491,-1156.8507,23.8864, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Para ver el mapa usa\n{FFFFFF}/mapa", 			COLOR_LIGHTBLUE, 456.6184,-1493.9646,31.0939, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Para ver el mapa usa\n{FFFFFF}/mapa", 			COLOR_LIGHTBLUE, 2089.0627,-1823.5455,13.5469, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Para ver el mapa usa\n{FFFFFF}/mapa", 			COLOR_LIGHTBLUE, 1718.7406,-1865.7048,13.5723, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	CreateDynamic3DTextLabel("Para ver el mapa usa\n{FFFFFF}/mapa", 			COLOR_LIGHTBLUE, 1451.2942,-1026.9141,23.8281, 8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	// Maps Icons
	CreateDynamicMapIcon(1185.0560,-1323.9019,13.5730, 22, 0, 0, 0); // Hospital
	CreateDynamicMapIcon(1601.3207,-2178.9736,13.5547, 27, 0, 0, 0); // CarPoint
	CreateDynamicMapIcon(1547.4792,-1675.3093,13.5541, 30, 0, 0, 0); // LSPD
	CreateDynamicMapIcon(1829.5077,-1842.7311,13.5781, 17, 0, 0, 0); // 24-7 UNITY
	CreateDynamicMapIcon(1352.1354,-1759.1620,13.5541, 17, 0, 0, 0); // 24-7 Ayunta
	CreateDynamicMapIcon(2098.5596,-1805.6979,13.5546, 29, 0, 0, 0); // Pizza
	CreateDynamicMapIcon(1368.7128,-1279.8639,13.5541, 18, 0, 0, 0); // Ammunation
	CreateDynamicMapIcon(2245.9502,-1660.6981,15.2864, 45, 0, 0, 0); // Binco
	CreateDynamicMapIcon(456.8236,-1501.6539,31.0389, 45, 0, 0, 0); // Binco
    CreateDynamicMapIcon(2229.5786,-1721.5316,13.5638, 54, 0, 0, 0); // GYM
    CreateDynamicMapIcon(1797.5867,-1578.8649,14.0855, 23, 0, 0, 0); // Club VIP
	// ==================      TextDrawX       ================ //
	Version = TextDrawCreate(496.000000, 5.000000, "~r~HermandadZero ~w~RP");
	TextDrawBackgroundColor(Version, 255);
	TextDrawFont(Version, 2);
	TextDrawLetterSize(Version, 0.329999, 1.500000);
	TextDrawColor(Version, -16776961);
	TextDrawSetOutline(Version, 0);
	TextDrawSetProportional(Version, 1);
	TextDrawSetShadow(Version, 1);

		Film_1 = TextDrawCreate(642.000000,1.000000,"_");//abajo
        TextDrawUseBox(Film_1,1);
        TextDrawBoxColor(Film_1,0x000000ff);
        TextDrawTextSize(Film_1,-61.000000,7.000000);
        TextDrawBackgroundColor(Film_1,0x000000ff);
        TextDrawFont(Film_1,3);
        TextDrawLetterSize(Film_1,0.700000,10.700009);
        TextDrawColor(Film_1,0xffffffff);
        TextDrawSetOutline(Film_1,1);
        TextDrawSetProportional(Film_1,1);
        TextDrawSetShadow(Film_1,1);

        	ktm = TextDrawCreate(549.000000, 27.000000, "Version 0.1");
	TextDrawBackgroundColor(ktm, 255);
	TextDrawFont(ktm, 2);
	TextDrawLetterSize(ktm, 0.200000, 1.000000);
	TextDrawColor(ktm, -1);
	TextDrawSetOutline(ktm, 0);
	TextDrawSetProportional(ktm, 1);
	TextDrawSetShadow(ktm, 1);

 Film_2 = TextDrawCreate(642.000000,341.000000,"_");//arriba
    TextDrawUseBox(Film_2,1);
    TextDrawBoxColor(Film_2,0x000000ff);
    TextDrawTextSize(Film_2,-36.000000,2.000000);
    TextDrawBackgroundColor(Film_2,0x000000ff);
    TextDrawFont(Film_2,3);
    TextDrawLetterSize(Film_2,1.300000,18.500022);
    TextDrawColor(Film_2,0xffffffff);
    TextDrawSetOutline(Film_2,1);
    TextDrawSetProportional(Film_2,1);
    TextDrawSetShadow(Film_2,1);

	arl = TextDrawCreate(178.000000, 1.000000, "~r~HermandadZero ~w~RP");
	TextDrawBackgroundColor(arl, 255);
	TextDrawFont(arl, 2);
	TextDrawLetterSize(arl, 0.800000, 8.000000);
	TextDrawColor(arl, -1);
	TextDrawSetOutline(arl, 0);
	TextDrawSetProportional(arl, 1);
	TextDrawSetShadow(arl, 0);

	btt = TextDrawCreate(249.000000, 70.000000, "Version 0.1");
	TextDrawBackgroundColor(btt, 255);
	TextDrawFont(btt, 2);
	TextDrawLetterSize(btt, 0.500000, 1.000000);
	TextDrawColor(btt, -1);
	TextDrawSetOutline(btt, 0);
	TextDrawSetProportional(btt, 1);
	TextDrawSetShadow(btt, 1);

	ttr = TextDrawCreate(284.000000, 80.000000, "~r~HZ~w~:RP");
	TextDrawBackgroundColor(ttr, 255);
	TextDrawFont(ttr, 2);
	TextDrawLetterSize(ttr, 0.500000, 1.000000);
	TextDrawColor(ttr, -1);
	TextDrawSetOutline(ttr, 0);
	TextDrawSetProportional(ttr, 1);
	TextDrawSetShadow(ttr, 1);

		Textdraw0 = TextDrawCreate(10.000000, 349.000000, "~r~Creditos");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 2);
	TextDrawLetterSize(Textdraw0, 0.300000, 1.399999);
	TextDrawColor(Textdraw0, -1);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetShadow(Textdraw0, 1);

	Textdraw1 = TextDrawCreate(10.000000, 369.000000, "Chicle");
	TextDrawBackgroundColor(Textdraw1, 255);
	TextDrawFont(Textdraw1, 2);
	TextDrawLetterSize(Textdraw1, 0.300000, 1.399999);
	TextDrawColor(Textdraw1, -1);
	TextDrawSetOutline(Textdraw1, 0);
	TextDrawSetProportional(Textdraw1, 1);
	TextDrawSetShadow(Textdraw1, 1);

	Textdraw2 = TextDrawCreate(10.000000, 379.000000, "Chicle");
	TextDrawBackgroundColor(Textdraw2, 255);
	TextDrawFont(Textdraw2, 2);
	TextDrawLetterSize(Textdraw2, 0.300000, 1.399999);
	TextDrawColor(Textdraw2, -1);
	TextDrawSetOutline(Textdraw2, 0);
	TextDrawSetProportional(Textdraw2, 1);
	TextDrawSetShadow(Textdraw2, 1);

	Textdraw3 = TextDrawCreate(10.000000, 389.000000, "Chicle");
	TextDrawBackgroundColor(Textdraw3, 255);
	TextDrawFont(Textdraw3, 2);
	TextDrawLetterSize(Textdraw3, 0.300000, 1.399999);
	TextDrawColor(Textdraw3, -1);
	TextDrawSetOutline(Textdraw3, 0);
	TextDrawSetProportional(Textdraw3, 1);
	TextDrawSetShadow(Textdraw3, 1);

	Textdraw4 = TextDrawCreate(10.000000, 399.000000, "Chicle");
	TextDrawBackgroundColor(Textdraw4, 255);
	TextDrawFont(Textdraw4, 2);
	TextDrawLetterSize(Textdraw4, 0.300000, 1.399999);
	TextDrawColor(Textdraw4, -1);
	TextDrawSetOutline(Textdraw4, 0);
	TextDrawSetProportional(Textdraw4, 1);
	TextDrawSetShadow(Textdraw4, 1);

	Textdraw5 = TextDrawCreate(10.000000, 409.000000, "Y gente sin importancia");
	TextDrawBackgroundColor(Textdraw5, 255);
	TextDrawFont(Textdraw5, 2);
	TextDrawLetterSize(Textdraw5, 0.300000, 1.399999);
	TextDrawColor(Textdraw5, -1);
	TextDrawSetOutline(Textdraw5, 0);
	TextDrawSetProportional(Textdraw5, 1);
	TextDrawSetShadow(Textdraw5, 1);

	Textdraw6 = TextDrawCreate(190.000000, 349.000000, "~r~TeamSpeak3~w~ : ts3.hermandadzero.com");
	TextDrawBackgroundColor(Textdraw6, 255);
	TextDrawFont(Textdraw6, 2);
	TextDrawLetterSize(Textdraw6, 0.500000, 2.400000);
	TextDrawColor(Textdraw6, -1);
	TextDrawSetOutline(Textdraw6, 0);
	TextDrawSetProportional(Textdraw6, 1);
	TextDrawSetShadow(Textdraw6, 1);

	Textdraw7 = TextDrawCreate(190.000000, 399.000000, "~r~Web~w~ : www.hermandadzero.com");
	TextDrawBackgroundColor(Textdraw7, 255);
	TextDrawFont(Textdraw7, 2);
	TextDrawLetterSize(Textdraw7, 0.500000, 2.400000);
	TextDrawColor(Textdraw7, -1);
	TextDrawSetOutline(Textdraw7, 0);
	TextDrawSetProportional(Textdraw7, 1);
	TextDrawSetShadow(Textdraw7, 1);
	
	Textdraw8 = TextDrawCreate(30.000000, 426.000000, "Www.HermandadZero.Com");
	TextDrawBackgroundColor(Textdraw8, 255);
	TextDrawFont(Textdraw8, 3);
	TextDrawLetterSize(Textdraw8, 0.310000, 1.000000);
	TextDrawColor(Textdraw8, 255);
	TextDrawSetOutline(Textdraw8, 1);
	TextDrawSetProportional(Textdraw8, 1);
	TextDrawSetSelectable(Textdraw8, 0);

	Textdraw9 = TextDrawCreate(31.000000, 427.000000, "Www.HermandadZero.Com");
	TextDrawBackgroundColor(Textdraw9, 255);
	TextDrawFont(Textdraw9, 3);
	TextDrawLetterSize(Textdraw9, 0.310000, 1.000000);
	TextDrawColor(Textdraw9, -1);
	TextDrawSetOutline(Textdraw9, 1);
	TextDrawSetProportional(Textdraw9, 1);
	TextDrawSetSelectable(Textdraw9, 0);
	
    htt = TextDrawCreate(160.000000, 8.000000, "-");
	TextDrawBackgroundColor(htt, 255);
	TextDrawFont(htt, 3);
	TextDrawLetterSize(htt, 5.299997, 64.000000);
	TextDrawColor(htt, 255);
	TextDrawSetOutline(htt, 0);
	TextDrawSetProportional(htt, 1);
	TextDrawSetShadow(htt, 1);

	ptt = TextDrawCreate(213.000000, 8.000000, "-");
	TextDrawBackgroundColor(ptt, 255);
	TextDrawFont(ptt, 3);
	TextDrawLetterSize(ptt, 5.299997, 64.000000);
	TextDrawColor(ptt, 255);
	TextDrawSetOutline(ptt, 0);
	TextDrawSetProportional(ptt, 1);
	TextDrawSetShadow(ptt, 1);

	bnn = TextDrawCreate(267.000000, 8.000000, "-");
	TextDrawBackgroundColor(bnn, 255);
	TextDrawFont(bnn, 3);
	TextDrawLetterSize(bnn, 5.299997, 64.000000);
	TextDrawColor(bnn, 255);
	TextDrawSetOutline(bnn, 0);
	TextDrawSetProportional(bnn, 1);
	TextDrawSetShadow(bnn, 1);
	
    for(new playerid; playerid < MAX_PLAYERS; playerid++)
	{
	BalanceTextDraw[playerid] = TextDrawCreate(498.500000,100.000000,"$00000000");
 	TextDrawLetterSize(BalanceTextDraw[playerid], 0.55, 2.2);
 	TextDrawFont(BalanceTextDraw[playerid], 3);
 	TextDrawSetOutline(BalanceTextDraw[playerid], 2);
 	TextDrawSetProportional(BalanceTextDraw[playerid], 3);
 	BankTimer = SetTimer("BancoTextDraw", 2000, 1);
	}

	mnn = TextDrawCreate(317.000000, 8.000000, "-");
	TextDrawBackgroundColor(mnn, 255);
	TextDrawFont(mnn, 3);
	TextDrawLetterSize(mnn, 5.299997, 64.000000);
	TextDrawColor(mnn, 255);
	TextDrawSetOutline(mnn, 0);
	TextDrawSetProportional(mnn, 1);
	TextDrawSetShadow(mnn, 1);

	ccc = TextDrawCreate(371.000000, 8.000000, "-");
	TextDrawBackgroundColor(ccc, 255);
	TextDrawFont(ccc, 3);
	TextDrawLetterSize(ccc, 5.299997, 64.000000);
	TextDrawColor(ccc, 255);
	TextDrawSetOutline(ccc, 0);
	TextDrawSetProportional(ccc, 1);
	TextDrawSetShadow(ccc, 1);

	eef = TextDrawCreate(424.000000, 8.000000, "-");
	TextDrawBackgroundColor(eef, 255);
	TextDrawFont(eef, 3);
	TextDrawLetterSize(eef, 5.299997, 64.000000);
	TextDrawColor(eef, 255);
	TextDrawSetOutline(eef, 0);
	TextDrawSetProportional(eef, 1);
	TextDrawSetShadow(eef, 1);

	SunGlasses = TextDrawCreate(0.0,0.0,"_");
 	TextDrawFont(SunGlasses,1);
  	TextDrawLetterSize(SunGlasses,0.0,50.0);
   	TextDrawUseBox(SunGlasses,true);
   	TextDrawColor(SunGlasses,0);
   	
	// Textdraw camaras de seguridad
        TVCAM_Background=TextDrawCreate(0,0,"LD_DUAL:backgnd");
        TextDrawFont(TVCAM_Background,4);
        TextDrawColor(TVCAM_Background,0xFFFFFFFF);
        TextDrawTextSize(TVCAM_Background,640,480);


        TVCAM_CornerTopLeft=TextDrawCreate(0,0,"LD_DUAL:tvcorn");
        TextDrawFont(TVCAM_CornerTopLeft,4);
        TextDrawColor(TVCAM_CornerTopLeft,0xFFFFFFFF);
        TextDrawTextSize(TVCAM_CornerTopLeft,320,240);

        TVCAM_CornerTopRight=TextDrawCreate(640,0,"LD_DUAL:tvcorn");
        TextDrawFont(TVCAM_CornerTopRight,4);
        TextDrawColor(TVCAM_CornerTopRight,0xFFFFFFFF);
        TextDrawTextSize(TVCAM_CornerTopRight,-320,240);

        TVCAM_CornerBottomLeft=TextDrawCreate(0,450,"LD_DUAL:tvcorn");
        TextDrawFont(TVCAM_CornerBottomLeft,4);
        TextDrawColor(TVCAM_CornerBottomLeft,0xFFFFFFFF);
        TextDrawTextSize(TVCAM_CornerBottomLeft,320,-240);

        TVCAM_CornerBottomRight=TextDrawCreate(640,450,"LD_DUAL:tvcorn");
        TextDrawFont(TVCAM_CornerBottomRight,4);
        TextDrawColor(TVCAM_CornerBottomRight,0xFFFFFFFF);
        TextDrawTextSize(TVCAM_CornerBottomRight,-320,-250);

        TextdrawUp = TextDrawCreate(320.000000, 350.000000, "ld_beat:up");
        TextDrawBackgroundColor(TextdrawUp, 255);
        TextDrawFont(TextdrawUp, 4);
        TextDrawLetterSize(TextdrawUp, 0.500000, 1.000000);
        TextDrawColor(TextdrawUp, -1);
        TextDrawSetOutline(TextdrawUp, 0);
        TextDrawSetProportional(TextdrawUp, 1);
        TextDrawSetShadow(TextdrawUp, 1);
        TextDrawUseBox(TextdrawUp, 1);
        TextDrawBoxColor(TextdrawUp, 255);
        TextDrawTextSize(TextdrawUp, 31.000000, 31.000000);

        TextdrawDown = TextDrawCreate(320.000000, 410.000000, "ld_beat:down");
        TextDrawBackgroundColor(TextdrawDown, 255);
        TextDrawFont(TextdrawDown, 4);
        TextDrawLetterSize(TextdrawDown, 0.500000, 1.000000);
        TextDrawColor(TextdrawDown, -1);
        TextDrawSetOutline(TextdrawDown, 0);
        TextDrawSetProportional(TextdrawDown, 1);
        TextDrawSetShadow(TextdrawDown, 1);
        TextDrawUseBox(TextdrawDown, 1);
        TextDrawBoxColor(TextdrawDown, 255);
        TextDrawTextSize(TextdrawDown, 31.000000, 31.000000);

        TextdrawRight = TextDrawCreate(350.000000, 380.000000, "ld_beat:right");
        TextDrawBackgroundColor(TextdrawRight, 255);
        TextDrawFont(TextdrawRight, 4);
        TextDrawLetterSize(TextdrawRight, 0.500000, 1.000000);
        TextDrawColor(TextdrawRight, -1);
        TextDrawSetOutline(TextdrawRight, 0);
        TextDrawSetProportional(TextdrawRight, 1);
        TextDrawSetShadow(TextdrawRight, 1);
        TextDrawUseBox(TextdrawRight, 1);
        TextDrawBoxColor(TextdrawRight, 255);
        TextDrawTextSize(TextdrawRight, 31.000000, 31.000000);

        TextdrawLeft = TextDrawCreate(290.000000, 380.000000, "ld_beat:left");
        TextDrawBackgroundColor(TextdrawLeft, 255);
        TextDrawFont(TextdrawLeft, 4);
        TextDrawLetterSize(TextdrawLeft, 0.500000, 1.000000);
        TextDrawColor(TextdrawLeft, -1);
        TextDrawSetOutline(TextdrawLeft, 0);
        TextDrawSetProportional(TextdrawLeft, 1);
        TextDrawSetShadow(TextdrawLeft, 1);
        TextDrawUseBox(TextdrawLeft, 1);
        TextDrawBoxColor(TextdrawLeft, 255);
        TextDrawTextSize(TextdrawLeft, 31.000000, 31.000000);


        TextdrawFinish = TextDrawCreate(320.000000, 380.000000, "ld_beat:cross");
        TextDrawAlignment(TextdrawFinish, 2);
        TextDrawBackgroundColor(TextdrawFinish, 255);
        TextDrawFont(TextdrawFinish, 4);
        TextDrawLetterSize(TextdrawFinish, 0.500000, 1.000000);
        TextDrawColor(TextdrawFinish, -1);
        TextDrawSetOutline(TextdrawFinish, 1);
        TextDrawSetProportional(TextdrawFinish, 1);
        TextDrawUseBox(TextdrawFinish, 1);
        TextDrawBoxColor(TextdrawFinish, 255);
        TextDrawTextSize(TextdrawFinish, 31.000000, 31.000000);

        TextDrawSetSelectable(TextdrawUp,1);
        TextDrawSetSelectable(TextdrawDown,1);
        TextDrawSetSelectable(TextdrawLeft,1);
        TextDrawSetSelectable(TextdrawRight,1);
        TextDrawSetSelectable(TextdrawFinish,1);
        
//----------------Objetos autos-------------------------------------------//
///new autopoli;
//autopoli = AddStaticVehicleEx(402, 1961.0836, -1808.4253, 13.0607, 0.0000, 0, 0, 100);  //Bufalo
//SetVehicleAttachedObject(autopoli,0, 19419, 0.0, -0.3, 0.8, 0.000000, 0.000000, 0.000000);

/*new autopoli;
autopoli = AddStaticVehicleEx(402, 1961.0836, -1808.4253, 13.0607, 0.0000, 0, 0, 100); //Sirena pequeña dentro del vidrio
SetVehicleAttachedObject(autopoli,0, 18646, 0.5, 0.5, 0.3, 0.000000, 0.000000, 0.000000);*/

//new AutoConCosas;
//AutoConCosas = AddStaticVehicleEx(411, 1962.4187, -1842.9847, 13.0919, 0.0000, 0, 0, 100); //Infernus
//SetVehicleAttachedObject(AutoConCosas,0, 19419, 0.0, -0.2, 0.7, 0.000000, 0.000000, 0.000000);
/*new AutoConCosas;
AutoConCosas = AddStaticVehicleEx(411, 1962.4187, -1842.9847, 13.0919, 0.0000, 0, 0, 100);  //Sirena pequeña dentro del vidrio
SetVehicleAttachedObject(AutoConCosas,0, 18646, 0.5, 1.0, 0.3, 0.000000, 0.000000, 0.000000);*/
//

// Policía Puertas
lspdo = CreateDynamicObject(2957, 250.52018737793, 62.803260803223, 1004.2604370117, 0.000000, 0.000000, 90,0,6);
lspd2 = CreateDynamicObject(988, 258.94287109375, 90.618301391602, 1001.330078125, 0.000000, 0.000000, 270,0,6);
lspdg = CreateDynamicObject(1649, 250.607421875, 67.644607543945, 1003.560546875, 0.000000, 0.000000, 270,0,6);
lspdk = CreateDynamicObject(2886, 245.17594909668, 72.789848327637, 1003.8690795898, 0.000000, 0.000000, 180,0,6);
//cell =  CreateDynamicObject(980, 266.3408203125, 82.641418457031, 1001.8412475586, 0.000000, 0.000000, 270,0,6);
lspddoor1 = CreateDynamicObject(1500, 245.0578,72.4314,1002.5406,0, 0.0000, 0.0000,0,6);
lspddoor2 = CreateDynamicObject(1500, 245.9478,72.4314,1002.5406,0, 0.0000, 0.0000,0,6);
lspd1 = CreateDynamicObject(19302, 757.79492, -391.00473, 1003.54712,   0.00000, 0.00000, 0.00000);
lspd3 = CreateDynamicObject(975, 779.43903, -361.14828, 994.32251,   0.00000, 0.00000, 359.69696);
pdgate1 = CreateDynamicObject(971,1589.053344,-1638.123168,14.122960,0.000000,0.000000,180);
lspdg1 = CreateDynamicObject(2957, 248.01469421387, 75.232604980469, 1004.2604370117, 0, 0, 90, 0, 6);
lspdg2 = CreateDynamicObject(2957, 244.78970336914, 75.232421875, 1004.2604370117, 0, 0, 90, 0, 6);
lspdg3 = CreateDynamicObject(2957, 226.30581665039, 71.110366821289, 1005.6588745117, 0, 0, 90, 0, 6);
lspdg4 = CreateDynamicObject(2957, 226.3056640625, 75.235343933105, 1005.6588745117, 0, 0, 90, 0, 6);
lspdg5 = CreateDynamicObject(2957, 250.81405639648, 86.482467651367, 1003.235168457, 0, 0, 90, 0, 6);
pdgate2 = CreateDynamicObject(980, 1545.7398681641, -1627.7280273438, 15.206203460693, 0, 0, 90);
// Umbrella 7
u7d1 = CreateDynamicObject(2957, 253.27075195313, 109.32601928711, 1003.7384643555, 0, 0, 90, 0 ,10);
u7d2 = CreateDynamicObject(2957, 239.74563598633, 117.20024871826, 1003.7384643555, 0, 0, 90, 0 ,10);
u7d3 = CreateDynamicObject(1569, 244.86236572266, 110.86795043945, 1002.21875, 0, 0, 0, 0 ,10);
// Mecanicos nuevas
meca1 = CreateDynamicObject(969,1577.1700000,-2184.8200000,12.5400000,0.0000000,0.0000000,179.8000000); //
meca2 = CreateDynamicObject(969,1637.2500000,-2184.8000000,12.5400000,0.0000000,0.0000000,179.8000000); //
meca3 = CreateDynamicObject(971,1634.3400000,-2165.8900000,14.5700000,0.0000000,0.0000000,358.4200000); //
// Mafias
crgate = CreateDynamicObject(980, 1426.6943359375, -1882.537109375, 15.131196975708, 0.000000, 0.000000, 0.000000); //LCN
rusg = CreateDynamicObject(980,787.20361328,-1152.45361328,25.40438461,0.00000000,0.00000000,90.00000000);
rusg2 = CreateDynamicObject(980,658.68890381,-1226.62780762,17.62639618,0.00000000,0.00000000,64.00000000);
rusg3 = CreateDynamicObject(980,665.05010986,-1310.76293945,15.35269642,0.00000000,0.00000000,180.00000000);
// LSTV
tvp1 = CreateDynamicObject(969,774.11444092,-1384.98632812,12.92022705,0.00000000,0.00000000,0.00000000);
tvp = CreateDynamicObject(976, 781.77209500,-1330.31884800,12.68660500,0.00000000,0.00000000,-180.85939924);
// ++
lucianogate = CreateDynamicObject(980, 1246.0033, -767.3727, 91.1473, 0, 0.0000, 0);
CreateDynamicObject(971, 1042.2530,-1026.0344,32.1016,0, 0.0000, 0.0000);
// Prision Militar
prison1 = CreateDynamicObject(971,601.87536621,857.28271484,-91.00811768,0.00000000,0.00000000,0.00000000); //object(subwaygate) (1)
prison2 = CreateDynamicObject(971,610.68005371,857.30963135,-91.00811768,0.00000000,0.00000000,0.00000000); //object(subwaygate) (2)
prison3 = CreateDynamicObject(971,619.55297852,857.30340576,-91.00819397,0.00000000,0.00000000,0.00000000); //object(subwaygate) (3)

//·| << Objetos Moviles >> =====================================================================================|·
//·| Hospital >> ===============================================================================================|·
CreateDynamicObject(7191, 258.38671875, 130.6845703125, 1030.9200439453, 0, 90, 89.999938964844);
CreateDynamicObject(19129,482.57,-8.31,999.74,0.00,0.00,0.00);// Piso de Colores en Alhambra
CreateDynamicObject(987,664.32916260,-1220.21582031,15.85455418,0.00000000,0.00000000,54.00000000); // Rusa Fix
CreateDynamicObject(14784, 1975.80, 1617.00, -3.50,   0.00, 0.00, 0.00); //PVP
CreateDynamicObject(16775, 1964.29, 1654.73, -2.77,   0.00, 0.00, 0.13); //PVP
CreateDynamicObject(16775, 1949.66, 1654.70, -2.76,   0.00, 0.00, 0.05); //PVP
CreateDynamicObject(16775, 1942.45, 1649.74, -0.33,   0.00, 0.00, 269.64); //PVP
//El Avion y Todo eso by Jose Vazquez
	CreateDynamicObject(3068,1733.00000000,-1342.50000000,845.40002441,0.00000000,0.00000000,0.00000000); //object(cargo_rear) (1)
	CreateDynamicObject(3069,1732.90002441,-1349.00000000,843.00000000,0.00000000,0.00000000,0.75003052); //object(d9_ramp) (2)
	CreateDynamicObject(1683,1735.00000000,-1342.19995117,854.00000000,0.00000000,0.00000000,269.75000000); //object(ap_jumbo_01) (1)
	CreateDynamicObject(5020,1734.59997559,-1360.40002441,845.90002441,0.00000000,0.00000000,269.50000000); //object(mul_las) (1)
	CreateDynamicObject(5020,1731.00000000,-1360.80004883,843.50000000,0.00000000,0.00000000,269.49462891); //object(mul_las) (2)
	CreateDynamicObject(5020,1728.29980469,-1360.39941406,845.90002441,0.00000000,0.00000000,269.49462891); //object(mul_las) (3)
	CreateDynamicObject(5020,1737.19995117,-1360.50000000,843.50000000,0.00000000,0.00000000,269.49462891); //object(mul_las) (4)
	CreateDynamicObject(5020,1728.80004883,-1360.59997559,846.50000000,0.00000000,0.00000000,269.49462891); //object(mul_las) (5)
	CreateDynamicObject(5020,1735.09997559,-1360.50000000,846.50000000,0.00000000,0.00000000,269.49462891); //object(mul_las) (6)
	AddPlayerClass(0, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	//mecanicos
CreateObject(8133,1615.5000000,-2164.8400000,13.0500000,0.0000000,0.0000000,89.9400000); //
CreateObject(1411,1620.1100000,-2184.4700000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(4100,1616.1300000,-2184.6700000,14.8300000,0.0000000,0.0000000,320.2900000); //
CreateObject(1411,1614.9300000,-2184.5200000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1611.5600000,-2184.5000000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(4100,1603.0300000,-2184.6200000,14.8300000,0.0000000,0.0000000,320.2900000); //
CreateObject(4100,1592.7700000,-2184.7100000,14.8300000,0.0000000,0.0000000,319.9900000); //
CreateObject(1411,1606.3900000,-2184.5400000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1601.2000000,-2184.5800000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1595.9600000,-2184.5400000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1590.6200000,-2184.5300000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1585.6800000,-2184.5200000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(4100,1650.0700000,-2184.7400000,14.8300000,0.0000000,0.0000000,320.2900000); //
CreateObject(4100,1663.8100000,-2184.7200000,14.8300000,0.0000000,0.0000000,320.2900000); //
CreateObject(4100,1676.1200000,-2184.6800000,14.8300000,0.0000000,0.0000000,320.2900000); //
CreateObject(1411,1645.4900000,-2184.5300000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1650.6700000,-2184.4900000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1655.8400000,-2184.5100000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1661.0200000,-2184.4900000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1666.1600000,-2184.4700000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1671.3700000,-2184.4500000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1676.5500000,-2184.4200000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1680.0900000,-2184.4900000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(4100,1682.7500000,-2178.0800000,14.8300000,0.0000000,0.0000000,230.0200000); //
CreateObject(1411,1682.5300000,-2182.0700000,17.6000000,0.0000000,0.0000000,87.9200000); //
CreateObject(1411,1682.4800000,-2179.1700000,17.6000000,0.0000000,0.0000000,87.9200000); //
CreateObject(4100,1555.3700000,-2184.5800000,14.8300000,0.0000000,0.0000000,319.9900000); //
CreateObject(4100,1548.1600000,-2177.9600000,14.8300000,0.0000000,0.0000000,230.0200000); //
CreateObject(4100,1548.1800000,-2164.2500000,14.8300000,0.0000000,0.0000000,230.0200000); //
CreateObject(4100,1548.2400000,-2150.5400000,14.8300000,0.0000000,0.0000000,230.0200000); //
CreateObject(1411,1547.9300000,-2181.9400000,17.6000000,0.0000000,0.0000000,89.3300000); //
CreateObject(1411,1548.0100000,-2176.7600000,17.6000000,0.0000000,0.0000000,89.3300000); //
CreateObject(1411,1547.9800000,-2171.5900000,17.6000000,0.0000000,0.0000000,89.3300000); //
CreateObject(1411,1547.9900000,-2166.4100000,17.6000000,0.0000000,0.0000000,89.3300000); //
CreateObject(1411,1547.9900000,-2161.2200000,17.6000000,0.0000000,0.0000000,89.3300000); //
CreateObject(1411,1548.0000000,-2156.0400000,17.6000000,0.0000000,0.0000000,89.3300000); //
CreateObject(1411,1548.0500000,-2150.8500000,17.6000000,0.0000000,0.0000000,89.3300000); //
CreateObject(1411,1548.0200000,-2146.0900000,17.6000000,0.0000000,0.0000000,89.3300000); //
CreateObject(1411,1559.3600000,-2184.4000000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1554.1500000,-2184.4300000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1550.7100000,-2184.3700000,17.6000000,0.0000000,0.0000000,0.5800000); //
CreateObject(11387,1606.4700000,-2164.7000000,15.9300000,0.0000000,0.0000000,267.9200000); //
CreateObject(11389,1622.8000000,-2155.9700000,15.6900000,0.0000000,0.0000000,267.8200000); //
CreateObject(11388,1622.9700000,-2155.9300000,19.2200000,0.0000000,0.0000000,267.7300000); //
CreateObject(4100,1590.1900000,-2184.6900000,14.8300000,0.0000000,0.0000000,319.9900000); //
CreateObject(11391,1614.6500000,-2147.6000000,13.8300000,0.0000000,0.0000000,268.0200000); //
CreateObject(19466,1600.1400000,-2169.8100000,14.7100000,0.0000000,0.0000000,-92.0500000); //
CreateObject(19466,1598.8600000,-2169.8000000,14.7100000,0.0000000,0.0000000,-92.0500000); //
CreateObject(13027,1591.7600000,-2162.9500000,15.7700000,0.0000000,0.0000000,178.2200000); //
CreateObject(12978,1591.8000000,-2162.9400000,12.5700000,0.0000000,0.0000000,357.8600000); //
CreateObject(14826,1623.1500000,-2152.7200000,13.1600000,0.0000000,0.0000000,89.8000000); //
CreateObject(2370,1620.7400000,-2164.2200000,12.5400000,0.0000000,0.0000000,356.5100000); //
CreateObject(2370,1619.1200000,-2164.1100000,12.5400000,0.0000000,0.0000000,356.5100000); //
CreateObject(2370,1617.5100000,-2164.0100000,12.5400000,0.0000000,0.0000000,356.5100000); //
CreateObject(1082,1620.8500000,-2164.5700000,15.9700000,0.0000000,0.0000000,82.3800000); //
CreateObject(1075,1619.5300000,-2164.4400000,16.0200000,0.0000000,0.0000000,75.9400000); //
CreateObject(1077,1618.1900000,-2164.3800000,16.0100000,0.0000000,0.0000000,79.4000000); //
CreateObject(1078,1620.2300000,-2164.5700000,15.0800000,0.0000000,0.0000000,87.6300000); //
CreateObject(1098,1618.8400000,-2164.5400000,15.0600000,0.0000000,0.0000000,82.3800000); //
CreateObject(1083,1619.6200000,-2164.4700000,14.2800000,0.0000000,0.0000000,86.6700000); //
CreateObject(1153,1618.8100000,-2163.7500000,13.7300000,0.0000000,0.0000000,28.3200000); //
CreateObject(1139,1620.7400000,-2163.8200000,13.4900000,-92.5200000,-121.9800000,0.0000000); //
CreateObject(19466,1616.9800000,-2159.1400000,14.2300000,0.0000000,0.0000000,357.8700000); //
CreateObject(19466,1616.8600000,-2161.5900000,14.2300000,0.0000000,0.0000000,357.8700000); //
CreateObject(19466,1609.1600000,-2156.5700000,14.2400000,0.0000000,0.0000000,87.7100000); //
CreateObject(19466,1611.7700000,-2156.8000000,14.2400000,0.0000000,0.0000000,87.7100000); //
CreateObject(2605,1615.1300000,-2162.1000000,12.9400000,0.0000000,0.0000000,0.0000000); //
CreateObject(1671,1615.6500000,-2163.2600000,13.0300000,0.0000000,0.0000000,218.1500000); //
CreateObject(19171,1614.3900000,-2164.2500000,14.6800000,-271.6200000,-182.3400000,0.8300000); //
CreateObject(2290,1607.9300000,-2157.5400000,12.5600000,0.0000000,0.0000000,359.0800000); //
CreateObject(2311,1607.9200000,-2163.5700000,12.5700000,0.0000000,0.0000000,357.9400000); //
CreateObject(2317,1608.9900000,-2163.3800000,13.3200000,0.0000000,0.0000000,176.4200000); //
CreateObject(2255,1615.8500000,-2163.8000000,14.5000000,0.0000000,0.0000000,172.6700000); //
CreateObject(2254,1609.3100000,-2163.9900000,14.4000000,0.0000000,0.0000000,182.0900000); //
CreateObject(18608,1628.9200000,-2160.2100000,18.8700000,0.0000000,0.0000000,266.9900000); //
CreateObject(18608,1629.5300000,-2151.4400000,18.8700000,0.0000000,0.0000000,266.9900000); //
CreateObject(19304,1627.9700000,-2165.6000000,13.2000000,0.0000000,0.0000000,357.3500000); //
CreateObject(19304,1627.9700000,-2165.6000000,14.4100000,0.0000000,0.0000000,357.3500000); //
CreateObject(19304,1627.9700000,-2165.6000000,15.6500000,0.0000000,0.0000000,357.3500000); //
CreateObject(19304,1627.9700000,-2165.6000000,16.8900000,0.0000000,0.0000000,357.3500000); //
CreateObject(19304,1624.4900000,-2165.4300000,13.2000000,0.0000000,0.0000000,357.3500000); //
CreateObject(19304,1624.4900000,-2165.4300000,14.4300000,0.0000000,0.0000000,357.3500000); //
CreateObject(19304,1624.4900000,-2165.4300000,15.6700000,0.0000000,0.0000000,357.3500000); //
CreateObject(19304,1624.4900000,-2165.4300000,16.9000000,0.0000000,0.0000000,357.3500000); //
CreateObject(17951,1606.7800000,-2150.7600000,14.2000000,0.0000000,0.0000000,358.3600000); //
CreateObject(19304,1606.8100000,-2149.8000000,16.5900000,0.0000000,0.0000000,268.9400000); //
CreateObject(19304,1606.7600000,-2153.2800000,16.5900000,0.0000000,0.0000000,268.9400000); //
CreateObject(1686,1611.0100000,-2177.1200000,12.7600000,0.0000000,0.0000000,266.7500000); //
CreateObject(1686,1612.8900000,-2177.2200000,12.7600000,0.0000000,0.0000000,266.7500000); //
CreateObject(9193,1621.4200000,-2187.8900000,17.2600000,0.0000000,0.0000000,7.8100000); //
CreateObject(2893,1633.8000000,-2147.7400000,13.9100000,-16.0200000,-0.1200000,358.0000000); //
CreateObject(2893,1633.5900000,-2153.5500000,13.8600000,3.9000000,-0.0600000,357.8200000); //
CreateObject(2971,1615.6200000,-2158.2900000,16.1200000,0.0000000,0.0000000,0.0000000); //
CreateObject(1221,1616.0800000,-2161.0100000,16.5800000,0.0000000,0.0000000,45.9200000); //
CreateObject(17950,1651.4700000,-2134.4400000,14.8200000,0.0000000,0.0000000,89.7900000); //
CreateObject(2893,1635.6100000,-2147.8200000,13.9100000,-16.0200000,-0.1200000,358.0000000); //
CreateObject(2893,1625.4200000,-2147.4500000,13.9100000,-16.0200000,-0.1200000,358.0000000); //
CreateObject(2893,1627.2300000,-2147.5100000,13.9100000,-16.0200000,-0.1200000,358.0000000); //
CreateObject(2893,1635.4100000,-2153.6000000,13.8600000,3.9000000,-0.0600000,357.8200000); //
CreateObject(2893,1627.0300000,-2153.3100000,13.8600000,3.9000000,-0.0600000,357.8200000); //
CreateObject(2893,1625.2300000,-2153.2300000,13.8600000,3.9000000,-0.0600000,357.8200000); //
CreateObject(16362,1555.0600000,-2164.2100000,15.6400000,0.0000000,0.0000000,359.0600000); //
CreateObject(17950,1651.7900000,-2123.5300000,14.8200000,0.0000000,0.0000000,89.7900000); //
CreateObject(987,1548.3100000,-2143.4000000,12.5300000,0.0000000,0.0000000,358.7100000); //
CreateObject(987,1560.1200000,-2143.7000000,12.5300000,0.0000000,0.0000000,351.7000000); //
CreateObject(987,1657.5400000,-2123.3600000,12.5300000,0.0000000,0.0000000,88.9300000); //
CreateObject(987,1657.3100000,-2135.3500000,12.5300000,0.0000000,0.0000000,88.9300000); //
CreateObject(987,1657.1000000,-2147.3200000,12.5300000,0.0000000,0.0000000,88.9300000); //
CreateObject(987,1657.0200000,-2156.6800000,12.5300000,0.0000000,0.0000000,88.9300000); //
CreateObject(4100,1676.0700000,-2156.6700000,12.5000000,0.0000000,0.0000000,320.1000000); //
CreateObject(4100,1664.2700000,-2156.6500000,13.5400000,0.0000000,0.0000000,320.1000000); //
CreateObject(4100,1664.2700000,-2156.6500000,16.3600000,0.0000000,0.0000000,320.1000000); //
CreateObject(4100,1676.0700000,-2156.6700000,15.3600000,0.0000000,0.0000000,320.1000000); //
CreateObject(987,1657.7500000,-2111.5300000,12.5300000,0.0000000,0.0000000,179.7000000); //
CreateObject(987,1645.8300000,-2111.4400000,12.5300000,0.0000000,0.0000000,179.7000000); //
CreateObject(987,1633.8800000,-2111.3200000,12.5300000,0.0000000,0.0000000,219.4800000); //
CreateObject(987,1624.6700000,-2118.9100000,12.5300000,0.0000000,0.0000000,219.4800000); //
CreateObject(987,1615.4200000,-2126.4700000,12.5300000,0.0000000,0.0000000,207.4800000); //
CreateObject(987,1604.8200000,-2131.9600000,12.5300000,0.0000000,0.0000000,207.4800000); //
CreateObject(987,1594.1900000,-2137.4800000,12.5300000,0.0000000,0.0000000,207.4800000); //
CreateObject(987,1583.5000000,-2142.8900000,12.5300000,0.0000000,0.0000000,194.1600000); //
CreateObject(19425,1572.8600000,-2184.5500000,12.6500000,0.0000000,0.0000000,359.6000000); //
CreateObject(19425,1634.5400000,-2166.5700000,12.6500000,0.0000000,0.0000000,0.0000000); //
CreateObject(2714,1630.4300000,-2165.9500000,14.7300000,0.0000000,0.0000000,0.0000000); //
CreateObject(1229,1649.3800000,-2187.2300000,14.0100000,0.0000000,0.0000000,0.0000000); //
CreateObject(18285,1658.1500000,-2176.3700000,12.6200000,0.0000000,0.0000000,30.8500000); //
CreateObject(18285,1674.3600000,-2176.6400000,12.6200000,0.0000000,0.0000000,28.4000000); //
CreateObject(19425,1629.5000000,-2184.5200000,12.6500000,0.0000000,0.0000000,0.0000000); //
CreateObject(19425,1632.8100000,-2184.5300000,12.6500000,0.0000000,0.0000000,0.0000000); //
CreateObject(19425,1636.1200000,-2184.5300000,12.6500000,0.0000000,0.0000000,0.0000000); //
CreateObject(19425,1576.1000000,-2184.5500000,12.6500000,0.0000000,0.0000000,0.0000000); //
CreateObject(19425,1569.5600000,-2184.5400000,12.6500000,0.0000000,0.0000000,359.6000000); //
CreateObject(10281,1637.8800000,-2157.9400000,15.7500000,0.0000000,0.0000000,269.4900000); //
CreateObject(11392,1555.5900000,-2170.1500000,12.6400000,0.0000000,0.0000000,189.8600000); //
CreateObject(11392,1631.9800000,-2153.4400000,12.6400000,0.0000000,0.0000000,351.4700000); //
CreateObject(1225,1619.5400000,-2171.2100000,13.0300000,0.0000000,0.0000000,0.0000000); //
CreateObject(1225,1620.4400000,-2171.2200000,13.0300000,0.0000000,0.0000000,0.0000000); //
CreateObject(1225,1619.9700000,-2171.1200000,14.1300000,0.0000000,0.0000000,0.0000000); //
CreateObject(1226,1561.9400000,-2176.0800000,16.5800000,0.0000000,0.0000000,181.3000000); //
CreateObject(1226,1561.6700000,-2164.2100000,16.5800000,0.0000000,0.0000000,181.3000000); //
CreateObject(1226,1561.9400000,-2152.6600000,16.5800000,0.0000000,0.0000000,181.3000000); //
CreateObject(1227,1586.4400000,-2165.7900000,13.4600000,0.0000000,0.0000000,266.9700000); //
CreateObject(1228,1560.1400000,-2150.3100000,13.0400000,0.0000000,0.0000000,341.8500000); //
CreateObject(1238,1617.9500000,-2177.3600000,13.0200000,0.0000000,0.0000000,0.0000000); //
CreateObject(1238,1619.7200000,-2177.5100000,13.0200000,0.0000000,0.0000000,0.0000000); //
CreateObject(1238,1621.2400000,-2177.5800000,13.0200000,0.0000000,0.0000000,0.0000000); //
CreateObject(1245,1645.8300000,-2116.0800000,13.7700000,0.0000000,0.0000000,299.8400000); //
CreateObject(1264,1586.6100000,-2167.3800000,12.9200000,0.0000000,0.0000000,0.0000000); //
CreateObject(1264,1585.8400000,-2167.3400000,12.9200000,0.0000000,0.0000000,0.0000000); //
CreateObject(1299,1585.5200000,-2161.8700000,13.0300000,0.0000000,0.0000000,0.0000000); //
CreateObject(3265,1606.6800000,-2144.6900000,12.3600000,0.0000000,0.0000000,264.9200000); //
CreateObject(1259,1571.0300000,-2147.3000000,19.7300000,0.0000000,0.0000000,86.0400000); //
CreateObject(8292,1573.0300000,-2146.9000000,26.3400000,0.0000000,0.0000000,231.1300000); //
CreateObject(921,1589.1000000,-2170.9700000,15.9800000,0.0000000,0.0000000,0.0000000); //
CreateObject(921,1593.8300000,-2171.1800000,15.9800000,0.0000000,0.0000000,0.0000000); //
CreateObject(1778,1599.5500000,-2170.0700000,12.6300000,0.0000000,0.0000000,68.8800000); //
CreateObject(19437,1562.7100000,-2184.6800000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1564.2900000,-2184.6800000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1565.8900000,-2184.7000000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1567.4700000,-2184.7000000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1582.3500000,-2184.7400000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1580.7500000,-2184.7500000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1579.1500000,-2184.7700000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1578.3200000,-2184.7600000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(1411,1580.2300000,-2184.5300000,16.9900000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1564.6100000,-2184.5300000,16.9900000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1565.6700000,-2184.6000000,16.9900000,0.0000000,0.0000000,0.5800000); //
CreateObject(1251,1562.9300000,-2176.4800000,12.6200000,0.0000000,0.0000000,266.9800000); //
CreateObject(1251,1562.9400000,-2170.4400000,12.6200000,0.0000000,0.0000000,266.9800000); //
CreateObject(1251,1563.0400000,-2164.4400000,12.6200000,0.0000000,0.0000000,266.9800000); //
CreateObject(1251,1563.2000000,-2158.4000000,12.6200000,0.0000000,0.0000000,266.9800000); //
CreateObject(19437,1623.4700000,-2184.7900000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1625.0300000,-2184.8000000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1626.5400000,-2184.8100000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1627.6400000,-2184.8200000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1638.2300000,-2184.7900000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1639.6600000,-2184.7800000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1640.9800000,-2184.7900000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(19437,1642.3000000,-2184.8000000,13.6200000,0.0000000,0.0000000,269.7200000); //
CreateObject(1411,1625.5200000,-2184.6900000,16.9900000,0.0000000,0.0000000,0.5800000); //
CreateObject(1411,1640.2600000,-2184.6800000,16.9900000,0.0000000,0.0000000,0.5800000); //
CreateObject(3265,1640.7700000,-2144.9900000,12.6200000,0.0000000,0.0000000,0.0000000); //
// prueba by dallas
CreateDynamicObject(3526,1474.00000000,-1430.90002441,37.79999924,0.00000000,0.00000000,270.00000000); //object(vegasairportlight)(6)
CreateDynamicObject(3526,1485.30004883,-1431.19995117,38.29999924,0.00000000,0.00000000,0.00000000); //object(vegasairportlight)(7)
CreateDynamicObject(3526,1485.50000000,-1423.80004883,38.20000076,0.00000000,0.00000000,0.00000000); //object(vegasairportlight)(8)
CreateDynamicObject(3526,1485.30004883,-1409.90002441,37.79999924,0.00000000,0.00000000,0.00000000); //object(vegasairportlight)(9)
CreateDynamicObject(3526,1475.09997559,-1410.00000000,37.79999924,0.00000000,0.00000000,90.00000000); //object(vegasairportlight)(10)
CreateDynamicObject(3526,1464.40002441,-1410.00000000,37.79999924,0.00000000,0.00000000,90.00000000); //object(vegasairportlight)(11)
CreateDynamicObject(3526,1465.59997559,-1424.30004883,37.79999924,0.00000000,0.00000000,200.00000000); //object(vegasairportlight)(12)
CreateDynamicObject(2745,1479.90002441,-1407.90002441,47.00000000,0.00000000,0.00000000,180.00000000); //object(cj_stat_3)(1)
CreateDynamicObject(2745,1470.00000000,-1407.80004883,47.00000000,0.00000000,0.00000000,179.99450684); //object(cj_stat_3)(2)
CreateDynamicObject(982,1486.09997559,-1419.09997559,39.00000000,0.00000000,0.00000000,0.00000000); //object(fenceshit)(1)
CreateDynamicObject(982,1486.00000000,-1396.69995117,46.79999924,0.00000000,0.00000000,0.00000000); //object(fenceshit)(2)
CreateDynamicObject(983,1482.90002441,-1431.90002441,39.00000000,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(1)
CreateDynamicObject(983,1476.50000000,-1431.59997559,39.00000000,0.00000000,0.00000000,85.00000000); //object(fenceshit3)(2)
CreateDynamicObject(983,1470.50000000,-1429.69995117,39.00000000,0.00000000,0.00000000,60.00000000); //object(fenceshit3)(3)
CreateDynamicObject(983,1466.00000000,-1425.40002441,39.00000000,0.00000000,0.00000000,33.00000000); //object(fenceshit3)(4)
CreateDynamicObject(983,1464.00000000,-1419.50000000,39.00000000,0.00000000,0.00000000,5.00000000); //object(fenceshit3)(5)
CreateDynamicObject(983,1463.69995117,-1413.09997559,39.00000000,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(6)
CreateDynamicObject(982,1463.80004883,-1396.59997559,46.79999924,0.00000000,0.00000000,0.00000000); //object(fenceshit)(3)
CreateDynamicObject(983,1467.00000000,-1409.40002441,46.79999924,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(7)
CreateDynamicObject(983,1482.80004883,-1409.50000000,46.79999924,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(8)
CreateDynamicObject(1649,1467.09960938,-1400.09960938,47.40000153,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,1473.90002441,-1400.09997559,47.40000153,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(3)
CreateDynamicObject(1649,1478.30004883,-1400.09997559,47.40000153,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(4)
CreateDynamicObject(1649,1482.69995117,-1400.09997559,47.40000153,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(5)
CreateDynamicObject(1649,1484.69921875,-1397.89941406,47.40000153,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(6)
CreateDynamicObject(1649,1484.69921875,-1393.50000000,47.40000153,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(7)
CreateDynamicObject(1649,1465.00000000,-1398.00000000,47.40000153,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1465.00000000,-1393.59960938,47.40000153,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(9)
CreateDynamicObject(2878,1481.80004883,-1392.30004883,46.90000153,0.00000000,0.00000000,0.00000000); //object(cj_victim_door)(1)
CreateDynamicObject(2878,1479.50000000,-1392.30004883,46.90000153,0.00000000,0.00000000,0.00000000); //object(cj_victim_door)(2)
CreateDynamicObject(2942,1468.40002441,-1400.50000000,46.40000153,0.00000000,0.00000000,0.00000000); //object(kmb_atm1)(1)
CreateDynamicObject(1616,1484.30004883,-1392.30004883,53.40000153,0.00000000,0.00000000,90.00000000); //object(nt_securecam1_01)(1)
CreateDynamicObject(14651,1467.50000000,-1398.30004883,48.00000000,0.00000000,0.00000000,0.00000000); //object(trukstp05)(1)
CreateDynamicObject(16151,1470.09997559,-1393.40002441,45.70000076,0.00000000,0.00000000,90.00000000); //object(ufo_bar)(1)
CreateDynamicObject(1808,1475.90002441,-1392.50000000,45.70000076,0.00000000,0.00000000,0.00000000); //object(cj_watercooler2)(1)
CreateDynamicObject(2229,1484.69995117,-1399.19995117,45.70000076,0.00000000,0.00000000,270.00000000); //object(swank_speaker)(1)
CreateDynamicObject(2229,1484.69995117,-1395.19995117,45.70000076,0.00000000,0.00000000,270.00000000); //object(swank_speaker)(2)
CreateDynamicObject(2229,1484.69995117,-1395.50000000,45.70000076,0.00000000,0.00000000,270.00000000); //object(swank_speaker)(3)
CreateDynamicObject(2229,1484.69995117,-1399.50000000,45.70000076,0.00000000,0.00000000,270.00000000); //object(swank_speaker)(4)
CreateDynamicObject(1280,1484.50000000,-1404.40002441,46.09999847,0.00000000,0.00000000,0.00000000); //object(parkbench1)(1)
CreateDynamicObject(1280,1480.80004883,-1400.50000000,46.09999847,0.00000000,0.00000000,90.00000000); //object(parkbench1)(2)
CreateDynamicObject(1280,1481.80004883,-1408.00000000,46.09999847,0.00000000,0.00000000,270.00000000); //object(parkbench1)(3)
CreateDynamicObject(1723,1475.59997559,-1399.50000000,45.70000076,0.00000000,0.00000000,179.99450684); //object(mrk_seating1)(1)
CreateDynamicObject(1724,1476.59997559,-1397.40002441,45.70000076,0.00000000,0.00000000,270.00000000); //object(mrk_seating1b)(2)
CreateDynamicObject(1726,1480.30004883,-1399.50000000,45.70000076,0.00000000,0.00000000,180.00000000); //object(mrk_seating2)(1)
CreateDynamicObject(1727,1477.59997559,-1398.40002441,45.70000076,0.00000000,0.00000000,90.00000000); //object(mrk_seating2b)(1)
CreateDynamicObject(1827,1479.40002441,-1398.00000000,45.70000076,0.00000000,0.00000000,0.00000000); //object(man_sdr_tables)(1)
CreateDynamicObject(1827,1474.50000000,-1397.90002441,45.70000076,0.00000000,0.00000000,0.00000000); //object(man_sdr_tables)(2)
CreateDynamicObject(2125,1470.80004883,-1395.19995117,46.09999847,0.00000000,0.00000000,0.00000000); //object(med_din_chair_1)(1)
CreateDynamicObject(2125,1472.40002441,-1395.19995117,46.09999847,0.00000000,0.00000000,0.00000000); //object(med_din_chair_1)(2)
CreateDynamicObject(641,1484.90002441,-1408.09997559,42.00000000,0.00000000,0.00000000,0.00000000); //object(veg_palmkb13)(1)
CreateDynamicObject(644,1477.09997559,-1399.40002441,45.70000076,0.00000000,0.00000000,90.00000000); //object(pot_02)(1)
CreateDynamicObject(1364,1465.59997559,-1404.50000000,46.50000000,0.00000000,0.00000000,90.00000000); //object(cj_bush_prop)(1)
CreateDynamicObject(2010,1472.30004883,-1399.30004883,45.90000153,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc)(1)
CreateDynamicObject(951,1465.09997559,-1400.90002441,46.50000000,0.00000000,0.00000000,270.00000000); //object(cj_view_tele2)(1)
CreateDynamicObject(951,1465.09997559,-1407.59997559,46.50000000,0.00000000,0.00000000,270.00000000); //object(cj_view_tele2)(2)
CreateDynamicObject(3928,1475.50000000,-1419.90002441,37.79999924,0.00000000,0.00000000,0.00000000); //object(helipad)(1)
CreateDynamicObject(1694,1471.40002441,-1381.80004883,70.19999695,0.00000000,0.00000000,0.00000000); //object(roofstuff13)(1)
CreateDynamicObject(10079,1466.09997559,-1389.69995117,63.79999924,0.00000000,0.00000000,0.00000000); //object(pyr_top_sfe)(1)
CreateDynamicObject(1215,1479.09997559,-1407.90002441,46.29999924,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
CreateDynamicObject(1215,1470.90002441,-1407.90002441,46.29999924,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
CreateDynamicObject(1215,1483.50000000,-1408.00000000,46.29999924,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
CreateDynamicObject(1215,1484.50000000,-1406.09997559,46.29999924,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
CreateDynamicObject(1215,1483.19995117,-1400.50000000,46.29999924,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
CreateDynamicObject(1215,1478.59997559,-1400.40002441,46.29999924,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
CreateDynamicObject(1216,1467.30004883,-1400.50000000,46.40000153,0.00000000,0.00000000,0.00000000); //object(phonebooth1)(1)
CreateDynamicObject(1302,1477.50000000,-1392.59997559,45.70000076,0.00000000,0.00000000,0.00000000); //object(vendmachfd)(1)
CreateDynamicObject(9833,1480.69995117,-1404.30004883,48.90000153,0.00000000,0.00000000,0.00000000); //object(fountain_sfw)(1)
CreateDynamicObject(2921,1485.40002441,-1409.59997559,44.00000000,0.00000000,0.00000000,90.00000000); //object(kmb_cam)(1)
CreateDynamicObject(2921,1464.89941406,-1392.29980469,54.70000076,0.00000000,0.00000000,90.00000000); //object(kmb_cam)(2)
CreateDynamicObject(1892,1470.00000000,-1400.09997559,45.70000076,0.00000000,0.00000000,0.00000000); //object(security_gatsh)(1)
CreateDynamicObject(2773,1471.80004883,-1398.90002441,46.29999924,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(1)
CreateDynamicObject(2773,1469.09997559,-1398.90002441,46.29999924,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(2)
CreateDynamicObject(2773,1480.90002441,-1398.90002441,46.29999924,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(3)
CreateDynamicObject(2773,1477.19995117,-1396.69995117,46.29999924,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar)(4)
CreateDynamicObject(2773,1472.69995117,-1397.09997559,46.29999924,0.00000000,0.00000000,110.00000000); //object(cj_airprt_bar)(5)
CreateDynamicObject(2239,1477.80004883,-1399.40002441,45.70000076,0.00000000,0.00000000,90.00000000); //object(cj_mlight16)(1)
CreateDynamicObject(2115,1483.00000000,-1397.30004883,45.70000076,0.00000000,0.00000000,90.00000000); //object(low_dinning_1)(1)
CreateDynamicObject(2955,1472.30004883,-1409.59997559,39.00000000,0.00000000,0.00000000,90.00000000); //object(imy_compin)(1)
CreateDynamicObject(14820,1483.00000000,-1396.80004883,46.59999847,0.00000000,0.00000000,90.00000000); //object(dj_stuff)(2)
CreateDynamicObject(1421,1502.80004883,-1399.40002441,13.80000019,0.00000000,0.00000000,0.00000000); //object(dyn_boxes)(1)
CreateDynamicObject(2229,1484.69995117,-1399.80004883,45.70000076,0.00000000,0.00000000,270.00000000); //object(swank_speaker)(5)
CreateDynamicObject(2229,1484.69995117,-1395.80004883,45.70000076,0.00000000,0.00000000,270.00000000); //object(swank_speaker)(6)
CreateDynamicObject(3666,1471.40002441,-1423.59997559,38.29999924,0.00000000,0.00000000,0.00000000); //object(airuntest_las)(1)
CreateDynamicObject(3666,1479.40002441,-1423.59997559,38.29999924,0.00000000,0.00000000,0.00000000); //object(airuntest_las)(2)
CreateDynamicObject(3666,1479.50000000,-1416.30004883,38.29999924,0.00000000,0.00000000,0.00000000); //object(airuntest_las)(3)
CreateDynamicObject(3666,1471.40002441,-1416.40002441,38.29999924,0.00000000,0.00000000,0.00000000); //object(airuntest_las)(4)
CreateDynamicObject(1649,1478.30004883,-1400.09997559,50.70000076,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,1467.09960938,-1400.09960938,50.70000076,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,1473.89941406,-1400.09960938,50.70000076,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,1482.69995117,-1400.09997559,50.70000076,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,1484.69995117,-1397.90002441,50.70000076,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(6)
CreateDynamicObject(1649,1484.69995117,-1393.50000000,50.70000076,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(7)
CreateDynamicObject(1649,1465.00000000,-1393.69995117,50.70000076,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(9)
CreateDynamicObject(1649,1465.00000000,-1397.90002441,50.70000076,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1483.00000000,-1397.80004883,52.40000153,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1466.59997559,-1393.69995117,52.29999924,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1483.09997559,-1393.50000000,52.29999924,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1479.80004883,-1397.90002441,52.29999924,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1479.80004883,-1393.50000000,52.29999924,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1466.59960938,-1398.00000000,52.29999924,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1476.50000000,-1393.50000000,52.29999924,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1476.59997559,-1397.90002441,52.29999924,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1473.30004883,-1397.90002441,52.29899979,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1473.30004883,-1393.50000000,52.29999924,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1469.69995117,-1398.50000000,52.29999924,90.00000000,0.00000000,180.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1469.50000000,-1394.00000000,52.29999924,90.00000000,0.00000000,179.99450684); //object(wglasssmash)(8)
CreateDynamicObject(1649,1469.90002441,-1396.90002441,52.29999924,90.00000000,0.00000000,90.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,1470.98999023,-1400.09997559,50.70000076,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(1)
// campo militar Saem
CreateDynamicObject(3866,-10.30000019,1915.80004883,24.50000000,0.00000000,0.00000000,0.00000000); //object(demolish1_sfxrf)(1)
CreateDynamicObject(3866,16.10000038,1915.30004883,24.50000000,0.00000000,0.00000000,180.00000000); //object(demolish1_sfxrf)(2)
CreateDynamicObject(3887,-18.10000038,1878.50000000,24.79999924,0.00000000,0.00000000,0.00000000); //object(demolish4_sfxrf)(1)
CreateDynamicObject(8150,-29.39941406,1879.39941406,19.70000076,0.00000000,0.00000000,90.00000000); //object(vgsselecfence04)(1)
CreateDynamicObject(8150,33.59999847,1941.79980469,19.70000076,0.00000000,0.00000000,0.00000000); //object(vgsselecfence04)(2)
CreateDynamicObject(8150,33.20000076,1816.19995117,19.70000076,0.00000000,0.00000000,0.00000000); //object(vgsselecfence04)(3)
CreateDynamicObject(3459,96.69999695,1941.80004883,24.70000076,0.00000000,0.00000000,0.00000000); //object(vgntelepole1)(1)
CreateDynamicObject(3875,-29.00000000,1817.50000000,24.10000038,0.00000000,0.00000000,0.00000000); //object(sftelepole)(1)
CreateDynamicObject(3875,96.30000305,1817.00000000,24.10000038,0.00000000,0.00000000,0.00000000); //object(sftelepole)(2)
CreateDynamicObject(3875,-29.10000038,1941.50000000,24.10000038,0.00000000,0.00000000,0.00000000); //object(sftelepole)(3)
CreateDynamicObject(2921,96.09960938,1817.09960938,31.20000076,0.00000000,0.00000000,0.00000000); //object(kmb_cam)(1)
CreateDynamicObject(2921,-29.20000076,1817.50000000,31.00000000,0.00000000,0.00000000,0.00000000); //object(kmb_cam)(2)
CreateDynamicObject(2921,-29.29999924,1941.59997559,31.10000038,0.00000000,0.00000000,0.00000000); //object(kmb_cam)(3)
CreateDynamicObject(4106,5.98925781,1921.69921875,27.50000000,0.00000000,0.00000000,90.00000000); //object(shpfireesc_lan)(3)
CreateDynamicObject(982,22.10000038,1919.69995117,29.70000076,0.00000000,0.00000000,90.00000000); //object(fenceshit)(1)
CreateDynamicObject(983,32.79999924,1919.69995117,29.70000076,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(1)
CreateDynamicObject(997,35.79999924,1920.19995117,29.00000000,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier3)(1)
CreateDynamicObject(1237,28.79999924,1924.59997559,24.70000076,0.00000000,0.00000000,0.00000000); //object(strtbarrier01)(1)
CreateDynamicObject(1237,28.70000076,1920.69995117,24.70000076,0.00000000,0.00000000,0.00000000); //object(strtbarrier01)(2)
CreateDynamicObject(12958,23.50000000,1924.50000000,19.70000076,0.00000000,0.00000000,0.00000000); //object(cos_sbanksteps01)(1)
CreateDynamicObject(983,21.50000000,1925.00000000,24.00000000,345.00000000,90.00000000,90.00000000); //object(fenceshit3)(2)
CreateDynamicObject(997,20.00000000,1924.50000000,23.60000038,0.00000000,344.00000000,0.00000000); //object(lhouse_barrier3)(2)
CreateDynamicObject(944,16.70000076,1916.90002441,17.50000000,0.00000000,0.00000000,90.00000000); //object(packing_carates04)(1)
CreateDynamicObject(944,16.60000038,1906.40002441,17.50000000,0.00000000,0.00000000,90.00000000); //object(packing_carates04)(2)
CreateDynamicObject(944,22.10000038,1913.69995117,17.50000000,0.00000000,0.00000000,90.00000000); //object(packing_carates04)(3)
CreateDynamicObject(944,22.10000038,1909.19995117,17.50000000,0.00000000,0.00000000,90.00000000); //object(packing_carates04)(4)
CreateDynamicObject(944,-10.89999962,1914.09997559,17.50000000,0.00000000,0.00000000,90.00000000); //object(packing_carates04)(6)
CreateDynamicObject(944,-10.60000038,1924.40002441,17.50000000,0.00000000,0.00000000,90.00000000); //object(packing_carates04)(7)
CreateDynamicObject(935,15.50000000,1918.90002441,17.20000076,0.00000000,0.00000000,0.00000000); //object(cj_drum)(1)
CreateDynamicObject(935,-22.70000076,1925.59997559,17.20000076,0.00000000,0.00000000,0.00000000); //object(cj_drum)(2)
CreateDynamicObject(935,-9.80000019,1912.09997559,17.20000076,0.00000000,0.00000000,0.00000000); //object(cj_drum)(3)
CreateDynamicObject(18260,10.10000038,1926.09997559,18.20000076,0.00000000,0.00000000,170.00000000); //object(crates01)(2)
CreateDynamicObject(930,-3.29999995,1925.80004883,17.10000038,0.00000000,0.00000000,0.00000000); //object(o2_bottles)(1)
CreateDynamicObject(930,-4.50000000,1925.80004883,17.10000038,0.00000000,0.00000000,0.00000000); //object(o2_bottles)(2)
CreateDynamicObject(930,9.19999981,1905.30004883,17.10000038,0.00000000,0.00000000,0.00000000); //object(o2_bottles)(3)
CreateDynamicObject(930,7.90000010,1905.30004883,17.10000038,0.00000000,0.00000000,0.00000000); //object(o2_bottles)(4)
CreateDynamicObject(3576,1.79999995,1911.00000000,18.10000038,0.00000000,0.00000000,0.00000000); //object(dockcrates2_la)(1)
CreateDynamicObject(3576,6.30000019,1917.30004883,18.10000038,0.00000000,0.00000000,0.00000000); //object(dockcrates2_la)(2)
CreateDynamicObject(3577,-4.30000019,1918.80004883,17.39999962,0.00000000,0.00000000,0.00000000); //object(dockcrates1_la)(1)
CreateDynamicObject(3632,-9.10000038,1911.40002441,17.10000038,0.00000000,0.00000000,0.00000000); //object(imoildrum_las)(1)
CreateDynamicObject(3632,-9.69921875,1911.00000000,17.10000038,0.00000000,0.00000000,0.00000000); //object(imoildrum_las)(2)
CreateDynamicObject(3632,15.00000000,1925.00000000,17.10000038,0.00000000,0.00000000,0.00000000); //object(imoildrum_las)(3)
CreateDynamicObject(3632,5.50000000,1915.40002441,17.10000038,0.00000000,0.00000000,0.00000000); //object(imoildrum_las)(4)
CreateDynamicObject(3632,16.29999924,1915.09997559,17.10000038,0.00000000,0.00000000,0.00000000); //object(imoildrum_las)(5)
CreateDynamicObject(8843,4.79980469,1914.00000000,16.70000076,0.00000000,0.00000000,79.99694824); //object(arrows01_lvs)(2)
CreateDynamicObject(1278,-23.10000038,1913.00000000,30.79999924,0.00000000,0.00000000,0.00000000); //object(sub_floodlite)(1)
CreateDynamicObject(1278,29.10000038,1918.00000000,30.79999924,0.00000000,0.00000000,90.00000000); //object(sub_floodlite)(2)
CreateDynamicObject(3350,16.20000076,1924.80004883,20.20000076,0.00000000,0.00000000,0.00000000); //object(torino_mic)(1)
CreateDynamicObject(3350,-10.39999962,1912.40002441,23.20000076,0.00000000,0.00000000,129.99572754); //object(torino_mic)(2)
CreateDynamicObject(3350,-18.60000038,1906.69995117,24.70000076,0.00000000,0.00000000,129.00000000); //object(torino_mic)(3)
CreateDynamicObject(3077,-7.19999981,1925.69995117,16.60000038,0.00000000,0.00000000,0.00000000); //object(nf_blackboard)(1)
CreateDynamicObject(1586,0.50000000,1924.39941406,17.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,-12.39999962,1914.30004883,17.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(2)
CreateDynamicObject(1586,-12.19999981,1924.40002441,17.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(3)
CreateDynamicObject(1586,-16.20000076,1919.19995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(4)
CreateDynamicObject(1586,0.29980469,1909.09960938,16.60000038,0.00000000,0.00000000,0.00000000); //object(tar_civ1)(5)
CreateDynamicObject(1586,4.59999990,1916.09997559,17.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(6)
CreateDynamicObject(1586,-6.50000000,1917.19995117,17.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(7)
CreateDynamicObject(1586,-17.29999924,1906.19995117,16.60000038,0.00000000,0.00000000,130.00000000); //object(tar_civ1)(8)
CreateDynamicObject(1586,-22.39999962,1907.09997559,16.60000038,0.00000000,0.00000000,129.99572754); //object(tar_civ1)(9)
CreateDynamicObject(3632,-12.10000038,1924.40002441,17.10000038,0.00000000,0.00000000,0.00000000); //object(imoildrum_las)(2)
CreateDynamicObject(3632,-12.29980469,1914.19921875,17.10000038,0.00000000,0.00000000,0.00000000); //object(imoildrum_las)(2)
CreateDynamicObject(3632,0.60000002,1924.50000000,17.10000038,0.00000000,0.00000000,0.00000000); //object(imoildrum_las)(2)
CreateDynamicObject(3632,-6.40000010,1917.19995117,17.10000038,0.00000000,0.00000000,0.00000000); //object(imoildrum_las)(2)
CreateDynamicObject(3632,4.69999981,1916.00000000,17.10000038,0.00000000,0.00000000,0.00000000); //object(imoildrum_las)(2)
CreateDynamicObject(3864,-21.10000038,1909.59997559,30.79999924,0.00000000,0.00000000,200.00000000); //object(ws_floodlight)(1)
CreateDynamicObject(3864,7.00000000,1929.00000000,22.70000076,0.00000000,0.00000000,59.99633789); //object(ws_floodlight)(2)
CreateDynamicObject(4106,-8.30000019,1889.69995117,27.50000000,0.00000000,0.00000000,0.00000000); //object(shpfireesc_lan)(3)
CreateDynamicObject(16774,63.59999847,1841.69995117,18.20000076,0.00000000,0.00000000,180.00000000); //object(des_gunbldg)(1)
CreateDynamicObject(1586,-18.29999924,1829.80004883,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,-23.39999962,1842.59997559,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,28.10000038,1828.90002441,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,-23.39999962,1821.40002441,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,-9.00000000,1826.50000000,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,32.50000000,1824.00000000,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,-9.10000038,1843.40002441,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,-0.30000001,1822.80004883,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,-2.00000000,1848.50000000,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,0.89999998,1838.09997559,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(3108,34.40000153,1865.00000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(basejump_target)(1)
CreateDynamicObject(3077,85.40000153,1847.80004883,16.60000038,0.00000000,0.00000000,0.00000000); //object(nf_blackboard)(2)
CreateDynamicObject(2984,71.00000000,1853.30004883,18.00000000,0.00000000,0.00000000,0.00000000); //object(portaloo)(1)
CreateDynamicObject(2984,71.00000000,1855.50000000,18.00000000,0.00000000,0.00000000,0.00000000); //object(portaloo)(2)
CreateDynamicObject(2984,71.00000000,1851.30004883,18.00000000,0.00000000,0.00000000,0.00000000); //object(portaloo)(3)
CreateDynamicObject(2984,71.00000000,1849.30004883,18.00000000,0.00000000,0.00000000,0.00000000); //object(portaloo)(4)
CreateDynamicObject(1586,4.29980469,1830.39941406,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,-16.39999962,1849.09997559,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,8.19999981,1842.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,12.39999962,1826.80004883,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,14.19999981,1845.80004883,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1586,18.39999962,1835.19995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ1)(1)
CreateDynamicObject(1622,-9.60000038,1858.90002441,33.40000153,0.00000000,0.00000000,0.00000000); //object(nt_securecam2_01)(1)
CreateDynamicObject(1585,-1.70000005,1827.19995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ2)(1)
CreateDynamicObject(1585,-6.69999981,1834.19995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ2)(2)
CreateDynamicObject(1585,35.79999924,1838.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ2)(3)
CreateDynamicObject(1585,26.20000076,1845.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ2)(4)
CreateDynamicObject(1585,1.89999998,1844.59997559,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ2)(5)
CreateDynamicObject(1585,9.19999981,1835.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(tar_civ2)(6)
CreateDynamicObject(3361,-7.30000019,1876.00000000,18.70000076,0.00000000,0.00000000,90.00000000); //object(cxref_woodstair)(1)
CreateDynamicObject(3361,-7.29980469,1870.00000000,22.70000076,0.00000000,0.00000000,90.00000000); //object(cxref_woodstair)(2)
CreateDynamicObject(3887,-4.29980469,1885.89941406,24.89999962,0.00000000,0.00000000,179.99450684); //object(demolish4_sfxrf)(1)
CreateDynamicObject(1318,-10.19999981,1907.40002441,19.10000038,270.00000000,0.00000000,0.00000000); //object(arrow)(1)
CreateDynamicObject(1318,-9.80000019,1900.30004883,19.50000000,90.00000000,0.00000000,90.00000000); //object(arrow)(2)
CreateDynamicObject(8843,-15.00000000,1912.00000000,16.70000076,0.00000000,0.00000000,150.00000000); //object(arrows01_lvs)(7)
CreateDynamicObject(1318,-9.79980469,1900.29980469,19.50000000,90.00000000,0.00000000,90.00000000); //object(arrow)(3)
CreateDynamicObject(1318,-6.09999990,1912.80004883,19.70000076,270.00000000,0.00000000,90.00000000); //object(arrow)(4)
CreateDynamicObject(1586,-17.60000038,1877.50000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(tar_civ1)(5)
CreateDynamicObject(1586,-9.50000000,1873.30004883,16.60000038,0.00000000,0.00000000,0.00000000); //object(tar_civ1)(5)
CreateDynamicObject(1586,-4.90000010,1872.30004883,16.60000038,0.00000000,0.00000000,0.00000000); //object(tar_civ1)(5)
CreateDynamicObject(1586,-3.20000005,1885.30004883,23.70000076,0.00000000,0.00000000,50.00000000); //object(tar_civ1)(5)
CreateDynamicObject(1586,-19.39999962,1876.59997559,23.60000038,0.00000000,0.00000000,0.00000000); //object(tar_civ1)(5)
CreateDynamicObject(1586,-3.59999990,1872.19995117,23.70000076,0.00000000,0.00000000,0.00000000); //object(tar_civ1)(5)
CreateDynamicObject(1586,-3.29999995,1871.80004883,28.00000000,0.00000000,0.00000000,0.00000000); //object(tar_civ1)(5)
CreateDynamicObject(1586,-17.50000000,1862.90002441,23.10000038,0.00000000,0.00000000,0.00000000); //object(tar_civ1)(5)
CreateDynamicObject(1586,-17.70000076,1891.09997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(tar_civ1)(5)
CreateDynamicObject(944,-19.39999962,1878.80004883,17.50000000,0.00000000,0.00000000,0.00000000); //object(packing_carates04)(8)
CreateDynamicObject(944,-3.09999990,1887.40002441,17.50000000,0.00000000,0.00000000,0.00000000); //object(packing_carates04)(9)
CreateDynamicObject(944,-3.00000000,1885.59997559,17.50000000,0.00000000,0.00000000,0.00000000); //object(packing_carates04)(10)
CreateDynamicObject(939,-23.10000038,1865.80004883,19.10000038,0.00000000,0.00000000,0.00000000); //object(cj_df_unit)(1)
CreateDynamicObject(939,-24.89999962,1880.69995117,19.10000038,0.00000000,0.00000000,90.00000000); //object(cj_df_unit)(2)
CreateDynamicObject(3066,2.29999995,1894.50000000,17.70000076,0.00000000,0.00000000,0.00000000); //object(ammotrn_obj)(1)
CreateDynamicObject(2062,-1.00000000,1885.80004883,17.20000076,0.00000000,0.00000000,0.00000000); //object(cj_oildrum2)(1)
CreateDynamicObject(2062,0.00000000,1885.80004883,17.20000076,0.00000000,0.00000000,0.00000000); //object(cj_oildrum2)(2)
CreateDynamicObject(2062,-21.70000076,1879.00000000,17.20000076,0.00000000,0.00000000,0.00000000); //object(cj_oildrum2)(3)
CreateDynamicObject(982,-10.19999981,1907.00000000,29.70000076,0.00000000,0.00000000,0.00000000); //object(fenceshit)(1)
CreateDynamicObject(982,-10.19999981,1881.40002441,29.70000076,0.00000000,0.00000000,0.00000000); //object(fenceshit)(1)
CreateDynamicObject(983,-10.19999981,1865.40002441,29.70000076,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(3)
CreateDynamicObject(983,-10.19999981,1862.90002441,29.70000076,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(4)
CreateDynamicObject(983,-13.39999962,1919.80004883,29.70000076,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(6)
CreateDynamicObject(983,-19.79999924,1919.80004883,29.70000076,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(7)
CreateDynamicObject(983,-5.09999990,1919.69995117,29.70000076,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(8)
CreateDynamicObject(983,1.29999995,1919.69995117,29.70000076,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(9)
CreateDynamicObject(983,6.09999990,1919.69995117,29.70000076,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(10)
CreateDynamicObject(1237,-5.59999990,1879.09997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(strtbarrier01)(3)
CreateDynamicObject(1237,-8.80000019,1879.19995117,16.60000038,0.00000000,0.00000000,0.00000000); //object(strtbarrier01)(4)
CreateDynamicObject(1282,-6.19999981,1879.80004883,17.29999924,0.00000000,0.00000000,90.00000000); //object(barrierm)(1)
CreateDynamicObject(1282,-8.30000019,1879.80004883,17.29999924,0.00000000,0.00000000,90.00000000); //object(barrierm)(2)
CreateDynamicObject(3864,-5.40000010,1903.59997559,29.00000000,0.00000000,0.00000000,59.99633789); //object(ws_floodlight)(2)
CreateDynamicObject(3864,27.20000076,1906.50000000,22.70000076,0.00000000,0.00000000,0.00000000); //object(ws_floodlight)(2)
CreateDynamicObject(3864,-13.29980469,1860.69921875,29.00000000,0.00000000,0.00000000,269.99450684); //object(ws_floodlight)(2)
CreateDynamicObject(996,30.89999962,1872.09997559,17.39999962,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier1)(1)
CreateDynamicObject(996,26.29999924,1864.59997559,17.39999962,0.00000000,0.00000000,65.00000000); //object(lhouse_barrier1)(2)
CreateDynamicObject(996,26.29999924,1862.30004883,17.39999962,0.00000000,0.00000000,310.00000000); //object(lhouse_barrier1)(3)
CreateDynamicObject(996,32.70000076,1856.19995117,17.39999962,0.00000000,0.00000000,30.00000000); //object(lhouse_barrier1)(4)
CreateDynamicObject(996,40.50000000,1869.50000000,17.39999962,0.00000000,0.00000000,275.00000000); //object(lhouse_barrier1)(5)
CreateDynamicObject(1215,39.59999847,1871.19995117,17.20000076,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
CreateDynamicObject(1215,29.89999962,1871.90002441,17.20000076,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
CreateDynamicObject(1215,26.00000000,1863.50000000,17.20000076,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
CreateDynamicObject(1215,40.70000076,1861.00000000,17.20000076,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
CreateDynamicObject(1215,31.10000038,1856.50000000,18.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
CreateDynamicObject(16095,92.59999847,1926.59997559,17.00000000,0.00000000,0.00000000,90.00000000); //object(des_a51guardbox02)(1)
CreateDynamicObject(1278,83.50000000,1891.90002441,30.89999962,0.00000000,0.00000000,0.00000000); //object(sub_floodlite)(3)
CreateDynamicObject(1278,96.19999695,1941.59997559,31.39999962,0.00000000,0.00000000,0.00000000); //object(sub_floodlite)(4)
CreateDynamicObject(1278,92.80000305,1818.69995117,30.79999924,0.00000000,0.00000000,0.00000000); //object(sub_floodlite)(5)
CreateDynamicObject(1278,-29.50000000,1833.40002441,30.79999924,0.00000000,0.00000000,90.00000000); //object(sub_floodlite)(6)
CreateDynamicObject(1278,47.59999847,1887.00000000,30.79999924,0.00000000,0.00000000,0.00000000); //object(sub_floodlite)(7)
//aierportzzzzzzzzzzzzzzzzzzzzzzzzz
CreateDynamicObject(8378,-1860.23962402,45.58924484,1053.52038574,270.00000000,180.00000000,180.00000000); //object(vgsbighngrdoor) (1)
CreateDynamicObject(8378,-1860.36950684,62.81288528,1053.52038574,270.00000000,179.99450684,179.99450684); //object(vgsbighngrdoor) (2)
CreateDynamicObject(2773,-1868.43530273,47.45006561,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (1)
CreateDynamicObject(2773,-1858.77563477,47.44921875,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (2)
CreateDynamicObject(2773,-1860.69921875,47.44921875,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (3)
CreateDynamicObject(2773,-1862.63476562,47.44921875,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (4)
CreateDynamicObject(2773,-1864.56469727,47.44921875,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (5)
CreateDynamicObject(2773,-1866.50061035,47.45006561,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (6)
CreateDynamicObject(2773,-1865.01013184,45.04759979,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (9)
CreateDynamicObject(2773,-1859.20410156,45.05175781,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (7)
CreateDynamicObject(2773,-1857.27514648,45.05175781,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (8)
CreateDynamicObject(2773,-1861.13964844,45.04687500,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (10)
CreateDynamicObject(2773,-1863.06933594,45.04687500,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (11)
CreateDynamicObject(7022,-1844.88525391,21.26480865,1055.70971680,0.00000000,0.00000000,180.00000000); //object(vegasnnewfence2) (1)
CreateDynamicObject(1538,-1855.70336914,43.65233612,1054.18908691,180.00000000,180.00000000,0.00000000); //object(sl_dtdoor1) (2)
CreateDynamicObject(1538,-1854.20715332,43.65233612,1054.18908691,0.00000000,0.00000000,180.00000000); //object(sl_dtdoor1) (3)
CreateDynamicObject(7022,-1926.37048340,23.84698296,1055.70971680,0.00000000,0.00000000,179.99450684); //object(vegasnnewfence2) (2)
CreateDynamicObject(7022,-1878.65966797,49.94799805,1056.84143066,0.00000000,0.00000000,179.99450684); //object(vegasnnewfence2) (3)
CreateDynamicObject(2773,-1855.34533691,45.05175781,1054.70629883,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (12)
CreateDynamicObject(5779,-1876.73547363,49.41286087,1053.75878906,0.00000000,0.00000000,270.00000000); //object(garagdoor1_lawn) (1)
CreateDynamicObject(5779,-1871.21875000,49.44665527,1056.50878906,90.00000000,0.00000000,270.00000000); //object(garagdoor1_lawn) (2)
CreateDynamicObject(5779,-1869.74182129,46.25665665,1053.75878906,0.00000000,0.00000000,180.00000000); //object(garagdoor1_lawn) (3)
CreateDynamicObject(7022,-1801.67504883,27.10328674,1055.70971680,180.00000000,0.00000000,359.99450684); //object(vegasnnewfence2) (5)
CreateDynamicObject(1533,-1837.44042969,49.54731750,1054.18908691,0.00000000,0.00000000,180.00000000); //object(gen_doorext12) (1)
CreateDynamicObject(1533,-1839.94042969,49.54687500,1054.18908691,0.00000000,0.00000000,179.99450684); //object(gen_doorext12) (2)
CreateDynamicObject(1616,-1835.69189453,49.68079376,1058.61840820,0.00000000,0.00000000,0.00000000); //object(nt_securecam1_01) (1)
CreateDynamicObject(1616,-1835.55847168,71.63762665,1058.61840820,0.00000000,0.00000000,90.00000000); //object(nt_securecam1_01) (2)
CreateDynamicObject(1616,-1888.32629395,71.23299408,1058.61840820,0.00000000,0.00000000,176.00000000); //object(nt_securecam1_01) (3)
CreateDynamicObject(1616,-1888.21936035,49.70156479,1058.61840820,0.00000000,0.00000000,219.99548340); //object(nt_securecam1_01) (4)
CreateDynamicObject(1569,-1874.06140137,49.43497086,1054.18908691,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (1)
CreateDynamicObject(986,-1878.03381348,49.39949036,1054.00878906,0.00000000,0.00000000,180.00000000); //object(gate_autol) (1)
CreateDynamicObject(986,-1869.76611328,44.86858368,1054.00878906,0.00000000,0.00000000,89.99450684); //object(gate_autol) (2)
CreateDynamicObject(2165,-1870.32202148,46.70485306,1054.18908691,0.00000000,0.00000000,270.00000000); //object(med_office_desk_1) (1)
CreateDynamicObject(1671,-1871.24084473,46.33495331,1054.64929199,0.00000000,0.00000000,86.00000000); //object(swivelchair_a) (1)
CreateDynamicObject(2165,-1876.70275879,48.83729553,1054.18908691,0.00000000,0.00000000,0.00000000); //object(med_office_desk_1) (2)
CreateDynamicObject(1671,-1876.21899414,47.86142731,1054.64929199,0.00000000,0.00000000,169.99548340); //object(swivelchair_a) (2)
CreateDynamicObject(5779,-1878.21496582,47.68431854,1056.50878906,90.00000000,0.00000000,0.00000000); //object(garagdoor1_lawn) (4)
CreateDynamicObject(986,-1885.03320312,49.40026855,1054.00878906,0.00000000,0.00000000,179.99450684); //object(gate_autol) (3)
CreateDynamicObject(5779,-1891.74499512,53.75197220,1055.75878906,0.00000000,0.00000000,270.00000000); //object(garagdoor1_lawn) (6)
CreateDynamicObject(7022,-1871.71838379,49.00197983,1056.40087891,0.00000000,0.00000000,269.99450684); //object(vegasnnewfence2) (6)
CreateDynamicObject(5779,-1891.40856934,65.80488586,1055.75878906,0.00000000,0.00000000,270.00000000); //object(garagdoor1_lawn) (8)
CreateDynamicObject(986,-1835.12597656,52.12500000,1054.00878906,0.00000000,0.00000000,269.98901367); //object(gate_autol) (4)
CreateDynamicObject(986,-1835.16113281,66.87500000,1054.00878906,0.00000000,0.00000000,269.98901367); //object(gate_autol) (5)
CreateDynamicObject(986,-1835.06909180,68.09167480,1054.00878906,0.00000000,0.00000000,269.98901367); //object(gate_autol) (6)
CreateDynamicObject(986,-1831.06250000,53.76757812,1054.00878906,0.00000000,0.00000000,359.98352051); //object(gate_autol) (7)
CreateDynamicObject(986,-1888.81665039,52.20916367,1054.00878906,0.00000000,0.00000000,269.98901367); //object(gate_autol) (9)
CreateDynamicObject(986,-1888.85668945,66.76372528,1054.00878906,0.00000000,0.00000000,269.98901367); //object(gate_autol) (10)
CreateDynamicObject(986,-1888.85339355,68.01367188,1054.00878906,0.00000000,0.00000000,269.98901367); //object(gate_autol) (11)
CreateDynamicObject(2774,-1853.19958496,75.15379333,1053.94970703,90.00000000,0.00000000,180.00000000); //object(cj_airp_pillars) (5)
CreateDynamicObject(2774,-1854.37304688,75.09274292,1054.42968750,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (6)
CreateDynamicObject(2774,-1855.87304688,75.09179688,1054.42968750,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (7)
CreateDynamicObject(2774,-1856.99926758,75.15332031,1053.94970703,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (8)
CreateDynamicObject(2774,-1870.15002441,75.15332031,1053.94970703,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (9)
CreateDynamicObject(2774,-1866.30944824,75.15332031,1053.94970703,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (10)
CreateDynamicObject(2774,-1867.48999023,75.14046478,1054.42968750,90.00000000,180.00000000,359.99450684); //object(cj_airp_pillars) (11)
CreateDynamicObject(2774,-1869.00000000,75.13964844,1054.42968750,90.00000000,179.99450684,359.98901367); //object(cj_airp_pillars) (12)
CreateDynamicObject(2774,-1876.83337402,74.83754730,1053.94970703,90.00000000,180.00000000,359.99450684); //object(cj_airp_pillars) (13)
CreateDynamicObject(2774,-1880.57934570,74.98946381,1053.94970703,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (14)
CreateDynamicObject(2774,-1879.48925781,74.98632812,1054.42065430,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (15)
CreateDynamicObject(2774,-1846.56958008,75.06278229,1053.94970703,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (16)
CreateDynamicObject(2774,-1842.72619629,75.07282257,1053.94970703,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (17)
CreateDynamicObject(2774,-1843.88464355,75.11294556,1054.42968750,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (18)
CreateDynamicObject(2774,-1845.38378906,75.11230469,1054.42968750,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (19)
CreateDynamicObject(2774,-1873.48950195,66.17167664,1066.26965332,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (20)
CreateDynamicObject(2774,-1861.73474121,65.83523560,1066.26965332,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (21)
CreateDynamicObject(2774,-1849.98437500,66.04867554,1066.26965332,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (22)
CreateDynamicObject(2774,-1849.83569336,55.54894257,1066.26965332,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (23)
CreateDynamicObject(2774,-1861.83496094,55.37792969,1066.26965332,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (24)
CreateDynamicObject(2774,-1873.33850098,55.46418381,1066.26965332,0.00000000,0.00000000,0.00000000); //object(cj_airp_pillars) (25)
CreateDynamicObject(970,-1886.64660645,50.95172119,1054.74060059,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
CreateDynamicObject(970,-1886.59606934,52.70045090,1054.74060059,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (2)
CreateDynamicObject(1572,-1887.64404297,51.92456818,1054.75976562,0.00000000,0.00000000,74.00000000); //object(cj_air_trolly) (1)
CreateDynamicObject(1572,-1887.82214355,50.22452927,1054.75976562,0.00000000,0.00000000,90.00000000); //object(cj_air_trolly) (2)
CreateDynamicObject(1572,-1886.59777832,51.58651733,1054.75976562,0.00000000,0.00000000,100.00000000); //object(cj_air_trolly) (3)
CreateDynamicObject(1572,-1887.32128906,50.22635651,1054.75976562,0.00000000,0.00000000,90.00000000); //object(cj_air_trolly) (6)
CreateDynamicObject(1572,-1886.82128906,50.22830963,1054.75976562,0.00000000,0.00000000,90.00000000); //object(cj_air_trolly) (7)
CreateDynamicObject(1572,-1886.32128906,50.23026276,1054.75976562,0.00000000,0.00000000,90.00000000); //object(cj_air_trolly) (8)
CreateDynamicObject(1572,-1885.82128906,50.23221588,1054.75976562,0.00000000,0.00000000,90.00000000); //object(cj_air_trolly) (9)
CreateDynamicObject(1572,-1885.32128906,50.23416901,1054.75976562,0.00000000,0.00000000,90.00000000); //object(cj_air_trolly) (10)
CreateDynamicObject(1210,-1881.11462402,61.93390656,1054.93664551,90.00000000,0.00000000,18.00000000); //object(briefcase) (1)
CreateDynamicObject(1575,-1880.71887207,61.27405167,1054.74145508,0.00000000,0.00000000,0.00000000); //object(drug_white) (1)
CreateDynamicObject(1578,-1879.93920898,60.90860748,1054.79150391,0.00000000,0.00000000,324.00000000); //object(drug_green) (1)
CreateDynamicObject(2060,-1878.80468750,60.99804688,1054.89904785,0.00000000,0.00000000,11.99707031); //object(cj_sandbag) (1)
CreateDynamicObject(2060,-1877.33044434,60.95769119,1054.89904785,0.00000000,0.00000000,349.99707031); //object(cj_sandbag) (2)
CreateDynamicObject(1575,-1876.60888672,61.59281921,1054.74145508,0.00000000,0.00000000,50.00000000); //object(drug_white) (2)
CreateDynamicObject(1577,-1876.36340332,62.39925385,1054.78112793,0.00000000,0.00000000,22.00000000); //object(drug_yellow) (1)
CreateDynamicObject(2060,-1878.07971191,60.98496628,1055.10900879,0.00000000,0.00000000,25.99694824); //object(cj_sandbag) (3)
CreateDynamicObject(2060,-1866.58081055,61.35897827,1054.89904785,0.00000000,0.00000000,11.99707031); //object(cj_sandbag) (4)
CreateDynamicObject(1577,-1869.44091797,61.01148224,1054.81127930,20.00000000,32.00000000,21.99462891); //object(drug_yellow) (2)
CreateDynamicObject(1575,-1869.72241211,60.97342682,1054.74145508,0.00000000,0.00000000,0.00000000); //object(drug_white) (3)
CreateDynamicObject(1210,-1868.81115723,61.09061813,1054.93664551,90.00000000,0.00000000,55.99560547); //object(briefcase) (3)
CreateDynamicObject(2060,-1870.57153320,61.60454941,1054.89904785,0.00000000,0.00000000,307.99694824); //object(cj_sandbag) (5)
CreateDynamicObject(2060,-1865.82177734,62.10905838,1054.89904785,0.00000000,0.00000000,255.99621582); //object(cj_sandbag) (6)
CreateDynamicObject(1577,-1868.23144531,60.81954193,1054.78112793,0.00000000,0.00000000,21.99462891); //object(drug_yellow) (3)
CreateDynamicObject(2694,-1867.43640137,61.04297256,1054.79760742,0.00000000,0.00000000,348.00000000); //object(cj_shoe_box2) (1)
CreateDynamicObject(2694,-1870.60400391,62.59955215,1054.79760742,0.00000000,0.00000000,355.99743652); //object(cj_shoe_box2) (2)
CreateDynamicObject(2855,-1857.71484375,62.21533203,1054.83911133,0.00000000,0.00000000,0.00000000); //object(gb_bedmags05) (1)
CreateDynamicObject(2226,-1857.26611328,61.40007782,1054.93908691,0.00000000,0.00000000,324.00000000); //object(low_hi_fi_3) (1)
CreateDynamicObject(2028,-1856.48547363,60.79243088,1055.02246094,0.00000000,0.00000000,0.00000000); //object(swank_console) (1)
CreateDynamicObject(3070,-1854.84716797,60.65188599,1054.18908691,0.00000000,0.00000000,0.00000000); //object(kmb_goggles) (1)
CreateDynamicObject(1242,-1853.75659180,61.07728958,1055.00646973,0.00000000,0.00000000,294.00000000); //object(bodyarmour) (1)
CreateDynamicObject(1579,-1853.11523438,61.09213257,1054.79150391,0.00000000,0.00000000,36.00000000); //object(drug_blue) (1)
CreateDynamicObject(1650,-1855.30810547,61.14089203,1055.10058594,0.00000000,0.00000000,0.00000000); //object(petrolcanm) (1)
CreateDynamicObject(2060,-1852.80444336,62.09720993,1054.84570312,0.00000000,0.00000000,266.00000000); //object(cj_sandbag) (7)
CreateDynamicObject(2057,-1855.68347168,60.80422211,1055.00952148,0.00000000,0.00000000,0.00000000); //object(flame_tins) (1)
CreateDynamicObject(2060,-1854.50585938,60.86756134,1054.84570312,0.00000000,0.00000000,352.00000000); //object(cj_sandbag) (8)
CreateDynamicObject(2060,-1847.00390625,61.85345459,1054.84570312,0.00000000,0.00000000,295.99645996); //object(cj_sandbag) (9)
CreateDynamicObject(2060,-1846.25488281,61.35116577,1054.84570312,0.00000000,0.00000000,343.99365234); //object(cj_sandbag) (10)
CreateDynamicObject(2060,-1845.25585938,60.84875488,1054.84570312,0.00000000,0.00000000,1.99291992); //object(cj_sandbag) (11)
CreateDynamicObject(2060,-1844.27087402,61.08041000,1054.84570312,0.00000000,0.00000000,345.98852539); //object(cj_sandbag) (12)
CreateDynamicObject(2694,-1843.35644531,61.04873657,1054.79760742,0.00000000,0.00000000,355.99548340); //object(cj_shoe_box2) (3)
CreateDynamicObject(2694,-1846.08813477,60.88632965,1054.79760742,0.00000000,0.00000000,255.99548340); //object(cj_shoe_box2) (4)
CreateDynamicObject(2060,-1842.36962891,61.75050735,1054.84570312,0.00000000,0.00000000,53.98693848); //object(cj_sandbag) (13)
CreateDynamicObject(2694,-1842.88989258,61.22753143,1054.79760742,0.00000000,0.00000000,259.99548340); //object(cj_shoe_box2) (5)
CreateDynamicObject(2774,-1877.98925781,74.98165894,1054.42065430,90.00000000,0.00000000,179.99450684); //object(cj_airp_pillars) (15)
CreateDynamicObject(1594,-1838.21972656,61.58564377,1054.66613770,0.00000000,0.00000000,22.00000000); //object(chairsntable) (1)
CreateDynamicObject(1594,-1838.29296875,57.07922363,1054.66613770,0.00000000,0.00000000,322.00000000); //object(chairsntable) (2)
CreateDynamicObject(1594,-1836.13330078,59.41477966,1054.66613770,0.00000000,0.00000000,49.99462891); //object(chairsntable) (3)
CreateDynamicObject(1843,-1827.97729492,65.11327362,1054.18908691,0.00000000,0.00000000,0.00000000); //object(shop_shelf02) (1)
CreateDynamicObject(1843,-1831.97619629,65.10897827,1054.18908691,0.00000000,0.00000000,0.00000000); //object(shop_shelf02) (2)
CreateDynamicObject(1885,-1829.98046875,65.10530853,1054.18908691,0.00000000,0.00000000,0.00000000); //object(shop_baskets) (1)
CreateDynamicObject(1885,-1829.98046875,65.10449219,1054.43908691,0.00000000,0.00000000,0.00000000); //object(shop_baskets) (2)
CreateDynamicObject(1885,-1829.98046875,65.10449219,1054.68908691,0.00000000,0.00000000,0.00000000); //object(shop_baskets) (3)
CreateDynamicObject(1984,-1832.54504395,63.24364471,1054.18908691,0.00000000,0.00000000,180.00000000); //object(shlf5_till) (1)
CreateDynamicObject(2362,-1832.17968750,63.32152557,1055.13525391,0.00000000,0.00000000,0.00000000); //object(cj_sweetie_tray_1) (1)
CreateDynamicObject(2375,-1829.27124023,54.13641357,1054.18908691,0.00000000,0.00000000,0.00000000); //object(shop_set_2_unit1) (1)
CreateDynamicObject(2387,-1834.51599121,54.30936050,1054.18908691,0.00000000,0.00000000,0.00000000); //object(shop_set_2_unit5) (1)
CreateDynamicObject(2443,-1834.52587891,65.46512604,1054.18908691,0.00000000,0.00000000,0.00000000); //object(cj_ff_frige) (1)
CreateDynamicObject(2491,-1831.51562500,54.64038086,1054.18908691,0.00000000,0.00000000,0.00000000); //object(model_stand) (1)
CreateDynamicObject(2492,-1831.74523926,54.63327789,1055.20751953,0.00000000,0.00000000,180.00000000); //object(manhunt_toy2_1) (1)
CreateDynamicObject(2492,-1831.99609375,54.39317322,1055.20751953,0.00000000,0.00000000,269.99450684); //object(manhunt_toy2_1) (2)
CreateDynamicObject(2492,-1831.52062988,54.37837219,1055.20751953,0.00000000,0.00000000,89.98904419); //object(manhunt_toy2_1) (3)
CreateDynamicObject(2698,-1827.17431641,56.79928970,1055.13427734,0.00000000,0.00000000,0.00000000); //object(cj_duds_rail01) (1)
CreateDynamicObject(2967,-1834.12780762,63.05489349,1055.13525391,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (1)
CreateDynamicObject(2967,-1834.00134277,63.05997467,1055.13525391,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (2)
CreateDynamicObject(2967,-1833.85083008,63.06591034,1055.13525391,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (3)
CreateDynamicObject(2967,-1833.70043945,63.07176971,1055.13525391,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (4)
CreateDynamicObject(2942,-1835.60144043,63.24560547,1054.83203125,0.00000000,0.00000000,270.00000000); //object(kmb_atm1) (1)
CreateDynamicObject(2942,-1835.59985352,64.59873199,1054.83203125,0.00000000,0.00000000,270.00000000); //object(kmb_atm1) (2)
CreateDynamicObject(1842,-1827.51831055,62.15694046,1054.65637207,0.00000000,0.00000000,270.00000000); //object(shop_shelf05) (1)
CreateDynamicObject(1884,-1831.36718750,59.99617767,1054.18908691,0.00000000,0.00000000,0.00000000); //object(shop_dblshlf) (1)
CreateDynamicObject(2385,-1826.51562500,59.60868073,1054.18908691,0.00000000,0.00000000,270.00000000); //object(shop_set_2_unit4) (1)
CreateDynamicObject(2714,-1835.27478027,59.50049591,1056.20202637,0.00000000,0.00000000,270.00000000); //object(cj_open_sign_2) (1)
CreateDynamicObject(2729,-1835.45263672,60.80334854,1057.63281250,0.00000000,0.00000000,260.00000000); //object(cj_binc_post3) (1)
CreateDynamicObject(2730,-1835.57739258,59.61295700,1057.65197754,0.00000000,0.00000000,270.00000000); //object(cj_binc_post2) (1)
CreateDynamicObject(2731,-1835.49853516,58.42656708,1057.66076660,0.00000000,0.00000000,280.00000000); //object(cj_binc_post) (1)
CreateDynamicObject(986,-1830.72778320,65.81304932,1054.00878906,0.00000000,0.00000000,359.98352051); //object(gate_autol) (7)
//======================================Beautifuol===============================================//
	CreateDynamicObject(11480,2610.69995117,-2186.10009766,1.00000000,0.00000000,0.00000000,272.00000000); //object(des_nwt_carport) (1)
	CreateDynamicObject(1413,2607.50000000,-2185.30004883,0.10000000,0.00000000,0.00000000,92.00000000); //object(dyn_mesh_3) (1)
	CreateDynamicObject(1427,2606.10009766,-2190.60009766,-0.69999999,0.00000000,0.00000000,56.00000000); //object(cj_roadbarrier) (1)
	CreateDynamicObject(3088,2614.10009766,-2193.10009766,0.00000000,0.00000000,0.00000000,89.75000000); //object(nf_list_3) (1)
	CreateDynamicObject(3087,2614.10009766,-2196.69995117,-1.50000000,0.00000000,0.00000000,90.00000000); //object(nf_list_2) (1)
	CreateDynamicObject(3085,2614.10009766,-2199.69995117,-0.20000000,0.00000000,0.00000000,93.99902344); //object(nf_list_1) (1)
	CreateDynamicObject(1215,2607.80004883,-2189.89990234,-0.69999999,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,2607.50000000,-2182.30004883,-0.60000002,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(2109,2610.00000000,-2200.80004883,-0.80000001,0.00000000,0.00000000,0.00000000); //object(low_dinning_3) (1)
	CreateDynamicObject(2105,2610.19995117,-2200.39990234,0.10000000,0.00000000,0.00000000,0.00000000); //object(cj_mlight14) (1)
	CreateDynamicObject(2106,2609.60009766,-2200.39990234,-0.30000001,0.00000000,0.00000000,0.00000000); //object(cj_mlight15) (1)
	CreateDynamicObject(1710,2613.60009766,-2191.00000000,-1.20000005,0.00000000,0.00000000,272.00000000); //object(kb_couch07) (1)
	CreateDynamicObject(2677,2611.19995117,-2191.30004883,-0.89999998,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_7) (1)
	CreateDynamicObject(2674,2610.10009766,-2200.89990234,-1.20000005,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_2) (1)
	CreateDynamicObject(1369,2613.60009766,-2199.10009766,-0.60000002,0.00000000,0.00000000,0.00000000); //object(cj_wheelchair1) (1)
	CreateDynamicObject(1575,2610.60009766,-2200.69995117,-0.50000000,0.00000000,0.00000000,0.00000000); //object(drug_white) (1)
	CreateDynamicObject(1650,2608.50000000,-2189.80004883,-0.89999998,0.00000000,0.00000000,0.00000000); //object(petrolcanm) (1)
	CreateDynamicObject(2035,2609.89990234,-2201.10009766,-0.30000001,0.00000000,0.00000000,0.00000000); //object(cj_m16) (1)
	CreateDynamicObject(2057,2613.69995117,-2198.30004883,-1.10000002,0.00000000,0.00000000,0.00000000); //object(flame_tins) (1)
	CreateDynamicObject(2710,2609.80004883,-2200.89990234,0.00000000,0.00000000,0.00000000,0.00000000); //object(watch_pickup) (1)
	CreateDynamicObject(1025,2614.10009766,-2200.69995117,-0.80000001,0.00000000,0.00000000,176.00000000); //object(wheel_or1) (1)
	CreateDynamicObject(1812,2612.19995117,-2185.10009766,-1.20000005,0.00000000,0.00000000,324.00000000); //object(low_bed_5) (1)
	CreateDynamicObject(2226,2611.30004883,-2182.89990234,-1.20000005,0.00000000,0.00000000,0.00000000); //object(low_hi_fi_3) (1)
	CreateDynamicObject(1717,2607.69995117,-2183.89990234,-1.29999995,0.00000000,0.00000000,0.00000000); //object(telly_low_test) (1)
	CreateDynamicObject(14705,2613.50000000,-2189.19995117,-1.00000000,0.00000000,0.00000000,0.00000000); //object(int2vase) (1)
	CreateDynamicObject(2852,2613.69995117,-2188.60009766,-1.20000005,0.00000000,0.00000000,0.00000000); //object(gb_bedmags02) (1)
	CreateDynamicObject(2361,2611.00000000,-2189.10009766,-1.20000005,0.00000000,0.00000000,4.00000000); //object(cj_ice_fridge_1) (1)
	CreateDynamicObject(1215,2612.00000000,-2202.89990234,-0.60000002,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,2613.60009766,-2190.10009766,-0.69999999,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(5105,2543.46093750,-2142.28125000,10.19531250,0.00000000,0.00000000,0.00000000); //object(stordralas2) (2)
	CreateDynamicObject(1413,2577.39990234,-2124.89990234,0.80000001,0.00000000,0.00000000,185.99951172); //object(dyn_mesh_3) (2)
	CreateDynamicObject(1440,2578.69995117,-2126.00000000,0.00000000,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile_3) (1)
	CreateDynamicObject(1264,2580.50000000,-2125.19995117,-0.10000000,0.00000000,0.00000000,0.00000000); //object(blackbag1) (1)
	CreateDynamicObject(1264,2581.50000000,-2126.19995117,0.00000000,0.00000000,0.00000000,76.00000000); //object(blackbag1) (2)
	CreateDynamicObject(1264,2581.30004883,-2124.30004883,0.00000000,0.00000000,0.00000000,300.00000000); //object(blackbag1) (3)
	CreateDynamicObject(1568,2580.30004883,-2127.10009766,-0.69999999,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (2)
	CreateDynamicObject(2971,2612.69995117,-2204.10009766,-1.20000005,0.00000000,0.00000000,0.00000000); //object(k_smashboxes) (1)
	CreateDynamicObject(2971,2611.10009766,-2205.89990234,-1.20000005,0.00000000,0.00000000,56.00000000); //object(k_smashboxes) (2)
//=======================================MApeo Mercado NEgro==============================================//
CreateDynamicObject(1411,1397.90002441,-1450.80004883,9.30000019,0.00000000,0.00000000,359.00000000); //object(dyn_mesh_1) (1)
CreateDynamicObject(1413,1401.69995117,-1435.50000000,8.89999962,0.00000000,0.00000000,0.00000000); //object(dyn_mesh_3) (1)
CreateDynamicObject(1413,1404.19995117,-1438.00000000,8.89999962,0.00000000,0.00000000,86.00000000); //object(dyn_mesh_3) (2)
CreateDynamicObject(1413,1402.00000000,-1448.90002441,9.00000000,0.00000000,0.00000000,56.00000000); //object(dyn_mesh_3) (3)
CreateDynamicObject(1423,1398.90002441,-1452.09997559,8.39999962,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_4) (1)
CreateDynamicObject(1425,1400.59997559,-1451.80004883,8.10000038,0.00000000,0.00000000,28.00000000); //object(dyn_roadbarrier_3) (1)
CreateDynamicObject(1459,1405.90002441,-1436.09997559,8.30000019,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_6) (1)
CreateDynamicObject(1459,1404.40002441,-1447.69995117,8.30000019,0.00000000,0.00000000,354.00000000); //object(dyn_roadbarrier_6) (2)
CreateDynamicObject(1770,1400.30004883,-1450.30004883,7.69999981,0.00000000,0.00000000,55.50000000); //object(low_dinning_2) (1)
CreateDynamicObject(1770,1398.00000000,-1450.40002441,7.69999981,0.00000000,0.00000000,355.49743652); //object(low_dinning_2) (2)
CreateDynamicObject(1429,1403.00000000,-1446.80004883,7.90000010,0.00000000,0.00000000,248.00000000); //object(dyn_tv) (1)
CreateDynamicObject(1429,1402.50000000,-1447.50000000,7.90000010,0.00000000,0.00000000,213.99987793); //object(dyn_tv) (2)
CreateDynamicObject(937,1400.69995117,-1436.19995117,8.10000038,0.00000000,0.00000000,0.00000000); //object(cj_df_worktop) (1)
CreateDynamicObject(937,1402.90002441,-1436.19995117,8.10000038,0.00000000,0.00000000,0.00000000); //object(cj_df_worktop) (2)
CreateDynamicObject(1421,1403.50000000,-1439.69995117,8.39999962,0.00000000,0.00000000,268.00000000); //object(dyn_boxes) (1)
CreateDynamicObject(3017,1400.30004883,-1450.00000000,8.60000038,0.00000000,0.00000000,0.00000000); //object(arch_plans) (1)
CreateDynamicObject(3038,1398.30004883,-1443.80004883,11.39999962,0.00000000,0.00000000,350.00000000); //object(ct_lanterns) (1)
CreateDynamicObject(2967,1401.09997559,-1449.30004883,8.50000000,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (1)
CreateDynamicObject(2967,1401.00000000,-1449.59997559,8.50000000,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (2)
CreateDynamicObject(2966,1400.90002441,-1449.40002441,8.50000000,0.00000000,0.00000000,0.00000000); //object(mobile1993b) (1)
CreateDynamicObject(2958,1399.40002441,-1450.19995117,8.60000038,0.00000000,348.00000000,358.00000000); //object(cutscene_beer) (1)
CreateDynamicObject(2958,1399.30004883,-1450.40002441,8.60000038,0.00000000,347.99743652,357.99499512); //object(cutscene_beer) (2)
CreateDynamicObject(2958,1399.30004883,-1450.30004883,8.60000038,0.00000000,347.99743652,357.99499512); //object(cutscene_beer) (3)
CreateDynamicObject(2958,1399.40002441,-1450.40002441,8.60000038,0.00000000,347.99743652,357.99499512); //object(cutscene_beer) (4)
CreateDynamicObject(2513,1400.40002441,-1436.59997559,8.00000000,0.00000000,0.00000000,0.00000000); //object(model_trains3) (1)
CreateDynamicObject(2601,1399.00000000,-1450.40002441,8.60000038,0.00000000,0.00000000,0.00000000); //object(cj_juice_can) (1)
CreateDynamicObject(2601,1399.09997559,-1450.09997559,8.60000038,0.00000000,0.00000000,0.00000000); //object(cj_juice_can) (2)
CreateDynamicObject(2601,1398.90002441,-1450.09997559,8.60000038,0.00000000,0.00000000,0.00000000); //object(cj_juice_can) (3)
CreateDynamicObject(2891,1397.80004883,-1450.50000000,8.50000000,0.00000000,0.00000000,0.00000000); //object(kmb_packet) (1)
CreateDynamicObject(2891,1398.30004883,-1450.19995117,8.50000000,0.00000000,0.00000000,0.00000000); //object(kmb_packet) (2)
CreateDynamicObject(1550,1401.80004883,-1436.30004883,8.10000038,0.00000000,0.00000000,0.00000000); //object(cj_money_bag) (1)
CreateDynamicObject(1650,1403.59997559,-1436.09997559,8.89999962,0.00000000,0.00000000,0.00000000); //object(petrolcanm) (1)
CreateDynamicObject(1650,1403.19995117,-1436.40002441,8.89999962,0.00000000,0.00000000,312.00000000); //object(petrolcanm) (2)
CreateDynamicObject(2035,1402.50000000,-1436.00000000,8.60000038,0.00000000,0.00000000,314.00000000); //object(cj_m16) (1)
CreateDynamicObject(2036,1400.50000000,-1435.90002441,8.60000038,0.00000000,0.00000000,0.00000000); //object(cj_psg1) (1)
CreateDynamicObject(2037,1401.00000000,-1436.09997559,8.60000038,0.00000000,0.00000000,0.00000000); //object(cj_pistol_ammo) (1)
CreateDynamicObject(2037,1401.19995117,-1436.19995117,8.60000038,0.00000000,0.00000000,0.00000000); //object(cj_pistol_ammo) (2)
CreateDynamicObject(2044,1400.80004883,-1436.50000000,8.60000038,0.00000000,0.00000000,0.00000000); //object(cj_mp5k) (1)
CreateDynamicObject(2045,1402.40002441,-1436.59997559,8.69999981,0.00000000,0.00000000,54.00000000); //object(cj_bbat_nails) (1)
CreateDynamicObject(2057,1402.80004883,-1436.30004883,7.90000010,0.00000000,0.00000000,0.00000000); //object(flame_tins) (1)
CreateDynamicObject(2060,1399.09997559,-1444.90002441,7.80000019,0.00000000,0.00000000,0.00000000); //object(cj_sandbag) (1)
CreateDynamicObject(2060,1399.09997559,-1444.50000000,7.80000019,0.00000000,0.00000000,0.00000000); //object(cj_sandbag) (2)
CreateDynamicObject(2060,1399.09997559,-1444.19995117,7.80000019,0.00000000,0.00000000,0.00000000); //object(cj_sandbag) (3)
CreateDynamicObject(2060,1399.09997559,-1443.80004883,7.80000019,0.00000000,0.00000000,0.00000000); //object(cj_sandbag) (4)
CreateDynamicObject(2060,1399.19995117,-1443.90002441,8.10000038,0.00000000,0.00000000,0.00000000); //object(cj_sandbag) (5)
CreateDynamicObject(2060,1399.19995117,-1444.19995117,8.10000038,0.00000000,0.00000000,0.00000000); //object(cj_sandbag) (6)
CreateDynamicObject(2060,1399.09997559,-1444.50000000,8.10000038,0.00000000,0.00000000,0.00000000); //object(cj_sandbag) (7)
CreateDynamicObject(2060,1399.19995117,-1444.90002441,8.10000038,0.00000000,0.00000000,0.00000000); //object(cj_sandbag) (8)
CreateDynamicObject(2061,1399.59997559,-1443.30004883,7.90000010,0.00000000,0.00000000,0.00000000); //object(cj_shells1) (1)
CreateDynamicObject(2061,1399.19995117,-1443.19995117,8.00000000,0.00000000,0.00000000,0.00000000); //object(cj_shells1) (2)
CreateDynamicObject(916,1399.00000000,-1443.09997559,7.80000019,0.00000000,0.00000000,350.00000000); //object(fruitcrate2) (1)
CreateDynamicObject(910,1399.30004883,-1441.80004883,8.89999962,0.00000000,0.00000000,76.00000000); //object(bust_cabinet_4) (1)
CreateDynamicObject(853,1401.69995117,-1434.50000000,8.00000000,0.00000000,0.00000000,310.00000000); //object(cj_urb_rub_5) (1)
CreateDynamicObject(851,1397.50000000,-1454.09997559,7.90000010,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_2) (1)
CreateDynamicObject(3006,1405.40002441,-1453.00000000,7.40000010,0.00000000,0.00000000,342.00000000); //object(smash_box_brk) (1)
CreateDynamicObject(1450,1406.90002441,-1451.69995117,8.30000019,0.00000000,0.00000000,256.00000000); //object(dyn_crate_3) (1)
CreateDynamicObject(1440,1409.50000000,-1432.69995117,8.19999981,0.00000000,0.00000000,258.00000000); //object(dyn_box_pile_3) (1)
CreateDynamicObject(1568,1404.19995117,-1434.90002441,7.50000000,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (1)
CreateDynamicObject(1568,1401.30004883,-1451.40002441,7.50000000,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (2)
// ================= Hospital Exterior (By Esparza) =====================//
CreateDynamicObject(18256,1140.3000488,-1321.6999512,20.0000000,0.0000000,0.0000000,275.9985352); //object(w7bark01) (1) //Fran Ojeda
CreateDynamicObject(3851, 1172.88, -1336.80, 20.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1172.90, -1325.53, 20.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.91, -1314.26, 20.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.95, -1303.04, 20.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.88, -1336.80, 24.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1172.90, -1325.53, 24.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.91, -1314.26, 24.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.95, -1303.04, 24.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.88, -1336.80, 28.42,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1172.90, -1325.53, 28.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.91, -1314.26, 28.42,   0.00, 0.00, -0.06);
CreateDynamicObject(3851, 1172.94, -1310.91, 28.40,   0.00, 0.00, -0.06);
CreateDynamicObject(970, 1173.95, -1335.64, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1178.13, -1335.62, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1178.11, -1329.33, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1180.18, -1333.54, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1180.18, -1331.42, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1173.99, -1329.35, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1175.22, -1333.57, 13.46,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1178.34, -1331.76, 13.46,   0.00, 0.00, -108.60);
CreateDynamicObject(869, 1174.41, -1331.65, 13.46,   0.00, 0.00, -78.18);
CreateDynamicObject(869, 1176.07, -1331.63, 13.46,   0.00, 0.00, -126.42);
CreateDynamicObject(869, 1177.23, -1333.51, 13.46,   0.00, 0.00, -248.88);
CreateDynamicObject(869, 1177.99, -1333.84, 13.46,   0.00, 0.00, -230.58);
CreateDynamicObject(869, 1174.98, -1333.50, 13.46,   0.00, 0.00, 77.28);
CreateDynamicObject(869, 1178.34, -1331.76, 13.46,   0.00, 0.00, -108.60);
CreateDynamicObject(869, 1177.76, -1330.94, 13.46,   0.00, 0.00, -189.48);
CreateDynamicObject(717, 1177.09, -1332.57, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1176.82, -1314.72, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1180.18, -1331.42, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1180.14, -1316.09, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1180.14, -1313.98, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1178.05, -1311.88, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1173.90, -1311.89, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 1178.09, -1318.15, 13.02,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1174.95, -1316.24, 13.46,   0.00, 0.00, -8.28);
CreateDynamicObject(869, 1177.24, -1315.55, 13.46,   0.00, 0.00, -278.88);
CreateDynamicObject(869, 1178.32, -1315.89, 13.46,   0.00, 0.00, -98.94);
CreateDynamicObject(869, 1174.71, -1314.15, 13.46,   0.00, 0.00, -48.66);
CreateDynamicObject(869, 1176.67, -1314.09, 13.46,   0.00, 0.00, -119.64);
CreateDynamicObject(869, 1178.20, -1313.67, 13.46,   0.00, 0.00, -192.54);
CreateDynamicObject(3920, 1175.83, -1335.98, 17.47,   0.00, 0.00, -90.00);
CreateDynamicObject(3920, 1175.74, -1308.99, 17.47,   0.00, 0.00, -90.00);
CreateDynamicObject(3920, 1172.67, -1336.10, 29.47,   0.00, 0.00, -90.00);
CreateDynamicObject(3920, 1172.71, -1323.46, 29.47,   0.00, 0.00, -90.00);
CreateDynamicObject(3920, 1172.69, -1311.58, 29.47,   0.00, 0.00, -90.00);
CreateDynamicObject(970, 1185.47, -1333.38, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1185.47, -1329.28, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1185.39, -1313.89, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1185.40, -1318.03, 13.02,   0.00, 0.00, 90.00);
CreateDynamicObject(1280, 1180.90, -1332.18, 12.94,   0.00, 0.00, 180.00);
CreateDynamicObject(1280, 1180.90, -1315.35, 12.94,   0.00, 0.00, 180.00);
CreateDynamicObject(2010, 1172.11, -1327.64, 14.38,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1172.13, -1319.62, 14.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1185.43, -1327.07, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1185.40, -1320.29, 12.57,   0.00, 0.00, 0.00);
CreateDynamicObject(3578, 1185.41, -1306.69, 11.82,   0.00, 0.00, 90.00);
CreateDynamicObject(3578, 1185.48, -1340.64, 11.82,   0.00, 0.00, 90.48);
CreateDynamicObject(1566, 1145.38, -1331.08, 13.88,   0.00, 0.00, 90.00);
CreateDynamicObject(1566, 1145.37, -1328.00, 13.88,   0.00, 0.00, -90.00);
CreateDynamicObject(8843, 1141.35, -1307.24, 12.63,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.12, -1326.70, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.13, -1324.07, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.15, -1321.41, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.14, -1319.62, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.17, -1332.35, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.19, -1335.02, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.19, -1337.66, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.19, -1340.34, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(638, 1145.20, -1340.96, 13.24,   0.00, 0.00, 0.00);
CreateDynamicObject(3920, 1145.61, -1324.76, 17.22,   0.00, 0.00, 90.00);
CreateDynamicObject(3920, 1145.69, -1335.93, 17.22,   0.00, 0.00, 90.00);
CreateDynamicObject(1215, 1128.54, -1322.44, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1119.46, -1322.42, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1115.44, -1322.46, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1106.34, -1322.48, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1102.34, -1322.46, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1093.20, -1322.47, 12.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1145.76, -1318.66, 18.66,   0.00, 0.00, 90.00);
CreateDynamicObject(1231, 1145.72, -1341.65, 18.66,   0.00, 0.00, 90.00);
CreateDynamicObject(3934, 1161.56, -1308.93, 30.51,   0.00, 0.00, 0.00);
CreateDynamicObject(1566, 1160.69, -1330.51, 31.99,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.74, -1339.15, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.75, -1332.75, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.74, -1326.35, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.73, -1319.95, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.72, -1313.56, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.74, -1307.15, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.73, -1300.76, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1172.74, -1294.38, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1169.54, -1291.15, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1163.14, -1291.16, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1156.73, -1291.17, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1153.55, -1291.19, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1150.37, -1294.41, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.37, -1300.82, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.37, -1307.22, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.40, -1313.65, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.41, -1320.03, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.42, -1326.44, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.42, -1332.86, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1150.44, -1337.68, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1169.56, -1342.34, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1163.17, -1342.31, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1156.78, -1342.32, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1153.58, -1342.30, 31.16,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1150.44, -1339.30, 31.16,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1162.52, -1330.22, 31.07,   0.00, 0.00, 0.00);
CreateDynamicObject(949, 1160.43, -1330.30, 31.07,   0.00, 0.00, 0.00);
CreateDynamicObject(2942, 1186.35, -1372.00, 13.18,   0.00, 0.00, 90.00);
CreateDynamicObject(3749, 1140.52, -1292.96, 18.40,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 1149.60, -1346.86, 13.00,   0.00, 0.00, 181.63);
CreateDynamicObject(987, 1089.36, -1325.25, 12.50,   0.00, 0.00, 270.88);
hospitalgate = CreateDynamicObject(980, 1140.54, -1291.09, 15.40,   0.00, 0.00, 359.30);
// Joyeria (By Esparza)
CreateDynamicObject(19452, 1568.25, -1906.80, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1564.87, -1906.80, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1571.76, -1906.80, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1575.26, -1906.80, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1578.74, -1906.80, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1582.22, -1906.80, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1585.69, -1906.80, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1585.69, -1897.19, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1582.21, -1897.19, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1578.73, -1897.19, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1575.29, -1897.19, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1571.87, -1897.19, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1568.39, -1897.19, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1564.89, -1897.19, 400.55,   0.00, 90.00, 0.00);
CreateDynamicObject(8614, 1574.82, -1891.46, 402.87,   0.00, 0.00, 180.00);
CreateDynamicObject(19452, 1567.96, -1890.64, 400.55,   0.00, 90.00, 90.00);
CreateDynamicObject(19452, 1577.56, -1890.64, 400.55,   0.00, 90.00, 90.00);
CreateDynamicObject(19452, 1587.12, -1890.64, 400.55,   0.00, 90.00, 90.00);
CreateDynamicObject(19453, 1575.63, -1892.44, 402.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1575.63, -1890.46, 402.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1566.10, -1890.46, 402.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1563.23, -1892.44, 402.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1567.97, -1887.60, 402.35,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1585.22, -1892.42, 402.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1563.16, -1897.30, 402.35,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1563.16, -1906.90, 402.35,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1587.49, -1897.29, 402.35,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1587.49, -1906.73, 402.35,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1582.66, -1911.54, 402.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1573.20, -1911.54, 402.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1563.72, -1911.54, 402.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1563.23, -1892.44, 405.83,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1570.74, -1892.44, 405.83,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1585.22, -1892.42, 405.83,   0.00, 0.00, 90.00);
CreateDynamicObject(19434, 1579.70, -1892.42, 405.83,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1575.63, -1890.46, 405.83,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1566.10, -1890.46, 405.83,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1567.97, -1887.60, 405.83,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1587.49, -1897.29, 405.83,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1587.49, -1906.73, 405.83,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1582.66, -1911.54, 405.83,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1573.20, -1911.54, 405.83,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1563.72, -1911.54, 405.83,   0.00, 0.00, 90.00);
CreateDynamicObject(19453, 1563.16, -1906.90, 405.83,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1563.16, -1897.30, 405.83,   0.00, 0.00, 0.00);
CreateDynamicObject(19452, 1582.22, -1906.80, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1578.73, -1897.19, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1575.29, -1897.19, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1571.87, -1897.19, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1568.39, -1897.19, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1564.89, -1897.19, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1582.21, -1897.19, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1585.69, -1897.19, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1585.69, -1906.80, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1575.26, -1906.80, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1578.74, -1906.80, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1571.76, -1906.80, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1568.25, -1906.80, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1564.87, -1906.80, 404.03,   0.00, 90.00, 0.00);
CreateDynamicObject(19453, 1578.99, -1887.67, 405.83,   0.00, 0.00, 0.00);
CreateDynamicObject(19453, 1578.99, -1887.67, 402.35,   0.00, 0.00, 0.00);
CreateDynamicObject(19452, 1567.96, -1890.64, 407.49,   0.00, 90.00, 90.00);
CreateDynamicObject(19452, 1568.39, -1897.19, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1564.89, -1897.19, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1571.87, -1897.19, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1575.29, -1897.19, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1578.73, -1897.19, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1582.21, -1897.19, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1585.69, -1897.19, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1585.69, -1906.80, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1582.22, -1906.80, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1578.74, -1906.80, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1571.76, -1906.80, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1575.26, -1906.80, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1564.87, -1906.80, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1568.25, -1906.80, 407.49,   0.00, 90.00, 0.00);
CreateDynamicObject(19452, 1577.56, -1890.64, 407.49,   0.00, 90.00, 90.00);
CreateDynamicObject(3498, 1563.39, -1911.42, 403.63,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1563.45, -1892.49, 403.63,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1587.19, -1892.68, 403.63,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1587.14, -1911.33, 403.63,   0.00, 0.00, 0.00);
CreateDynamicObject(1566, 1571.53, -1911.43, 402.05,   0.00, 0.00, 0.00);
CreateDynamicObject(1566, 1574.67, -1911.43, 402.05,   0.00, 0.00, 180.00);
CreateDynamicObject(2010, 1575.02, -1911.00, 400.64,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1571.29, -1911.03, 400.64,   0.00, 0.00, 0.00);
CreateDynamicObject(11547, 1595.92, -1897.50, 398.39,   0.00, 0.00, 90.12);
CreateDynamicObject(11547, 1595.92, -1906.49, 398.39,   0.00, 0.00, 90.12);
CreateDynamicObject(11547, 1554.71, -1906.58, 398.39,   0.00, 0.00, 90.12);
CreateDynamicObject(11547, 1554.71, -1897.48, 398.39,   0.00, 0.00, 90.12);
CreateDynamicObject(2773, 1564.90, -1910.01, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1564.90, -1907.18, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1564.90, -1904.63, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1564.90, -1902.04, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1564.90, -1899.29, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1564.90, -1896.67, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1564.90, -1894.15, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1585.44, -1909.11, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1585.44, -1906.08, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1585.44, -1903.05, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1585.44, -1900.01, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1585.44, -1897.22, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 1585.44, -1894.35, 401.14,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1586.28, -1896.03, 396.85,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1586.28, -1898.99, 396.85,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1591.93, -1896.05, 402.51,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1591.93, -1899.01, 402.51,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1591.95, -1900.99, 400.51,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1591.98, -1894.06, 400.51,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1586.27, -1905.01, 396.85,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1586.27, -1907.92, 396.85,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1586.27, -1905.01, 396.85,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1591.94, -1903.02, 400.51,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1591.94, -1909.93, 400.51,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1591.94, -1905.02, 402.51,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1591.94, -1907.93, 402.51,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1564.33, -1908.07, 396.85,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1564.33, -1905.17, 396.85,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1558.69, -1908.09, 402.51,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1558.69, -1905.18, 402.51,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1558.71, -1903.18, 400.51,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1558.70, -1910.07, 400.51,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1564.31, -1898.92, 396.85,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1564.31, -1896.09, 396.85,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1558.67, -1900.92, 400.51,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1558.66, -1894.12, 400.51,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1558.69, -1898.93, 402.51,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1558.69, -1896.13, 402.51,   0.00, 90.00, 90.00);
CreateDynamicObject(2435, 1575.45, -1894.63, 400.64,   0.00, 0.00, 0.00);
CreateDynamicObject(2435, 1576.31, -1894.63, 400.64,   0.00, 0.00, 0.00);
CreateDynamicObject(2435, 1577.13, -1894.63, 400.64,   0.00, 0.00, 0.00);
CreateDynamicObject(2435, 1577.92, -1894.63, 400.64,   0.00, 0.00, 0.00);
CreateDynamicObject(2435, 1578.74, -1894.63, 400.64,   0.00, 0.00, 0.00);
CreateDynamicObject(2435, 1579.62, -1894.63, 400.64,   0.00, 0.00, 0.00);
CreateDynamicObject(2434, 1580.49, -1894.64, 400.64,   0.00, 0.00, 0.00);
CreateDynamicObject(2435, 1580.65, -1893.53, 400.64,   0.00, 0.00, 90.00);
CreateDynamicObject(2435, 1580.65, -1892.63, 400.64,   0.00, 0.00, 90.00);
CreateDynamicObject(2593, 1576.19, -1910.97, 401.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2593, 1578.40, -1911.04, 401.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2593, 1572.52, -1892.89, 401.48,   0.00, 0.00, 0.00);
CreateDynamicObject(2596, 1586.84, -1893.06, 403.46,   0.00, 0.00, -39.96);
CreateDynamicObject(2596, 1586.84, -1910.94, 403.46,   0.00, 0.00, -143.22);
CreateDynamicObject(2788, 1579.04, -1892.88, 401.14,   0.00, 0.00, 79.92);
CreateDynamicObject(2788, 1576.90, -1892.88, 401.14,   0.00, 0.00, 104.52);
CreateDynamicObject(2435, 1568.61, -1911.03, 404.11,   0.00, 0.00, -90.00);
CreateDynamicObject(2435, 1568.61, -1910.13, 404.11,   0.00, 0.00, -90.00);
CreateDynamicObject(2435, 1568.61, -1909.23, 404.11,   0.00, 0.00, -90.00);
CreateDynamicObject(2435, 1568.61, -1908.34, 404.11,   0.00, 0.00, -90.00);
CreateDynamicObject(2434, 1568.78, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2435, 1569.67, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2435, 1570.60, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2435, 1571.52, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2435, 1572.42, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2435, 1573.35, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2435, 1574.26, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2435, 1575.17, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2435, 1576.06, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2435, 1576.97, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2435, 1577.88, -1907.22, 404.11,   0.00, 0.00, 180.00);
CreateDynamicObject(2434, 1579.00, -1907.40, 404.11,   0.00, 0.00, 90.00);
CreateDynamicObject(2435, 1579.00, -1908.31, 404.11,   0.00, 0.00, 90.00);
CreateDynamicObject(2435, 1579.00, -1909.21, 404.11,   0.00, 0.00, 90.00);
CreateDynamicObject(2593, 1570.82, -1911.19, 404.96,   0.00, 0.00, -45.90);
CreateDynamicObject(2593, 1575.63, -1911.15, 404.96,   0.00, 0.00, -111.84);
CreateDynamicObject(2788, 1574.99, -1911.04, 404.62,   0.00, 0.00, -73.56);
CreateDynamicObject(2788, 1573.95, -1911.07, 404.62,   0.00, 0.00, -98.82);
CreateDynamicObject(2788, 1571.66, -1911.02, 404.62,   0.00, 0.00, -232.14);
CreateDynamicObject(16151, 1586.55, -1897.93, 404.43,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1579.02, -1896.85, 404.12,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1574.39, -1896.85, 404.12,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1568.07, -1896.85, 404.12,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1574.39, -1900.20, 404.12,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1568.07, -1900.20, 404.12,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1579.02, -1900.20, 404.12,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1579.02, -1903.39, 404.12,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1579.02, -1900.20, 404.12,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1574.39, -1903.39, 404.12,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1568.07, -1903.39, 404.12,   0.00, 0.00, 0.00);
CreateDynamicObject(2412, 1574.85, -1910.75, 400.63,   0.00, 0.00, 0.00);
CreateDynamicObject(2412, 1572.02, -1910.74, 400.63,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1579.40, -1899.20, 400.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1579.40, -1905.60, 400.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2059, 1576.78, -1894.48, 401.69,   0.00, 0.00, 0.00);
CreateDynamicObject(2059, 1579.57, -1894.41, 401.69,   0.00, 0.00, -31.32);
CreateDynamicObject(2460, 1579.40, -1902.62, 400.62,   0.00, 0.00, 0.00);
CreateDynamicObject(19418, 1579.37, -1905.53, 400.88,   90.00, 0.00, 30.54);
CreateDynamicObject(19418, 1579.74, -1905.74, 400.88,   90.00, 0.00, -38.22);
CreateDynamicObject(19418, 1579.68, -1905.52, 400.88,   90.00, 0.00, 30.30);
CreateDynamicObject(18641, 1579.45, -1905.74, 400.90,   90.00, 0.10, -112.08);
CreateDynamicObject(18873, 1580.02, -1905.54, 400.85,   0.00, 0.00, 0.00);
CreateDynamicObject(18873, 1579.32, -1902.65, 400.85,   0.00, 0.00, 0.00);
CreateDynamicObject(19418, 1579.79, -1902.67, 400.88,   90.00, 0.00, -36.96);
CreateDynamicObject(19418, 1579.51, -1902.53, 400.88,   90.00, 0.00, 49.80);
CreateDynamicObject(19418, 1580.35, -1902.41, 400.88,   90.00, 0.00, 49.80);
CreateDynamicObject(18641, 1580.76, -1902.85, 400.90,   90.00, 0.10, -112.08);
CreateDynamicObject(2460, 1574.45, -1902.62, 400.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1569.60, -1902.62, 400.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1574.45, -1905.60, 400.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1569.60, -1905.60, 400.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1574.45, -1899.20, 400.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2460, 1569.60, -1899.20, 400.62,   0.00, 0.00, 0.00);
// Lavanderia (By MaluGonza)
CreateDynamicObject(14665, 3937.37, -827.41, 1875.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3932.90, -817.00, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3934.80, -816.90, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3936.50, -817.00, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3938.30, -816.90, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1208, 3936.50, -816.90, 1874.10,   0.00, 0.00, 178.00);
CreateDynamicObject(1208, 3938.30, -816.90, 1874.10,   0.00, 0.00, 177.99);
CreateDynamicObject(1208, 3934.80, -816.90, 1874.10,   0.00, 0.00, 177.99);
CreateDynamicObject(1208, 3932.90, -816.90, 1874.10,   0.00, 0.00, 177.99);
CreateDynamicObject(2340, 3940.10, -816.90, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3941.90, -816.90, 1873.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2340, 3933.10, -837.90, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2340, 3935.00, -837.90, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2340, 3936.90, -837.90, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2340, 3939.00, -837.70, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2340, 3940.90, -837.90, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2340, 3942.60, -837.90, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(1208, 3935.00, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3933.20, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3936.80, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3939.00, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3940.80, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3942.50, -837.90, 1874.10,   0.00, 0.00, 3.99);
CreateDynamicObject(1208, 3940.10, -816.90, 1874.10,   0.00, 0.00, 181.99);
CreateDynamicObject(1208, 3941.90, -816.90, 1874.10,   0.00, 0.00, 181.99);
CreateDynamicObject(2390, 3941.70, -837.90, 1874.60,   0.00, 0.00, 186.00);
CreateDynamicObject(2390, 3939.90, -837.90, 1874.60,   0.00, 0.00, 180.00);
CreateDynamicObject(2390, 3938.00, -837.90, 1874.50,   0.00, 0.00, 179.99);
CreateDynamicObject(2390, 3935.90, -837.90, 1874.60,   0.00, 0.00, 179.99);
CreateDynamicObject(2390, 3934.10, -837.90, 1874.60,   0.00, 0.00, 179.99);
CreateDynamicObject(2390, 3933.90, -816.90, 1874.60,   0.00, 0.00, 359.99);
CreateDynamicObject(2390, 3935.70, -816.90, 1874.60,   0.00, 0.00, 359.99);
CreateDynamicObject(2390, 3937.40, -816.90, 1874.60,   0.00, 0.00, 359.99);
CreateDynamicObject(2390, 3939.30, -816.90, 1874.60,   0.00, 0.00, 359.99);
CreateDynamicObject(2390, 3940.90, -816.90, 1874.60,   0.00, 0.00, 359.99);
CreateDynamicObject(2689, 3942.60, -818.30, 1875.60,   0.00, 0.00, 274.00);
CreateDynamicObject(2689, 3942.60, -819.30, 1875.60,   0.00, 0.00, 274.00);
CreateDynamicObject(2704, 3942.60, -820.30, 1875.60,   0.00, 0.00, 284.00);
CreateDynamicObject(2704, 3942.60, -821.30, 1875.60,   0.00, 0.00, 284.00);
CreateDynamicObject(2705, 3942.60, -822.30, 1875.60,   0.00, 0.00, 278.00);
CreateDynamicObject(2705, 3942.60, -823.10, 1875.60,   0.00, 0.00, 278.00);
CreateDynamicObject(2706, 3942.60, -823.90, 1875.60,   0.00, 0.00, 282.00);
CreateDynamicObject(2706, 3942.60, -824.60, 1875.60,   0.00, 0.00, 282.00);
CreateDynamicObject(1808, 3932.30, -825.70, 1873.00,   0.00, 0.00, 92.00);
CreateDynamicObject(1808, 3932.30, -829.20, 1873.00,   0.00, 0.00, 92.00);
CreateDynamicObject(1828, 3934.20, -827.30, 1873.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2391, 3942.60, -818.20, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2391, 3942.60, -819.30, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2396, 3942.60, -820.20, 1874.40,   0.00, 0.00, 270.00);
CreateDynamicObject(2396, 3942.60, -821.30, 1874.40,   0.00, 0.00, 270.00);
CreateDynamicObject(2398, 3942.60, -822.30, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2398, 3942.60, -823.20, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2399, 3942.60, -825.50, 1875.70,   0.00, 0.00, 274.00);
CreateDynamicObject(2399, 3942.60, -826.50, 1875.70,   0.00, 0.00, 274.00);
CreateDynamicObject(2401, 3942.60, -823.90, 1874.40,   0.00, 0.00, 270.00);
CreateDynamicObject(2401, 3942.60, -824.60, 1874.40,   0.00, 0.00, 270.00);
CreateDynamicObject(2374, 3942.60, -825.50, 1874.40,   0.00, 0.00, 276.00);
CreateDynamicObject(2374, 3942.60, -826.40, 1874.40,   0.00, 0.00, 276.00);
CreateDynamicObject(2377, 3942.60, -827.30, 1874.40,   0.00, 0.00, 280.00);
CreateDynamicObject(2377, 3942.60, -828.20, 1874.40,   0.00, 0.00, 280.00);
CreateDynamicObject(2378, 3942.60, -829.10, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2378, 3942.60, -830.00, 1874.40,   0.00, 0.00, 274.00);
CreateDynamicObject(2383, 3942.60, -827.40, 1875.70,   0.00, 0.00, 190.00);
CreateDynamicObject(2383, 3942.60, -828.20, 1875.70,   0.00, 0.00, 190.00);
CreateDynamicObject(2704, 3942.60, -829.20, 1875.70,   0.00, 0.00, 284.00);
CreateDynamicObject(2704, 3942.60, -830.10, 1875.70,   0.00, 0.00, 284.00);
CreateDynamicObject(997, 3933.90, -816.90, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3935.60, -816.90, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3937.40, -816.90, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3939.20, -816.90, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3940.90, -817.00, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3941.70, -835.00, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3940.00, -835.00, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3937.80, -835.00, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3935.90, -834.90, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(997, 3934.10, -835.00, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(1504, 3932.10, -827.40, 1873.00,   0.00, 0.00, 268.00);
CreateDynamicObject(1504, 3932.10, -827.40, 1873.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1723, 3932.90, -831.90, 1873.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1723, 3932.90, -825.00, 1873.00,   0.00, 0.00, 88.00);
CreateDynamicObject(2180, 3942.50, -830.70, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2180, 3942.50, -832.60, 1873.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2054, 3942.60, -830.40, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2054, 3942.60, -830.80, 1873.90,   0.00, 0.00, 340.00);
CreateDynamicObject(2054, 3942.60, -831.20, 1873.90,   0.00, 0.00, 330.00);
CreateDynamicObject(2054, 3942.60, -831.60, 1873.90,   0.00, 0.00, 330.00);
CreateDynamicObject(2054, 3942.60, -832.00, 1873.90,   0.00, 0.00, 330.00);
CreateDynamicObject(2054, 3942.60, -832.40, 1873.90,   0.00, 0.00, 330.00);
CreateDynamicObject(2054, 3942.60, -832.80, 1873.90,   0.00, 0.00, 330.00);
CreateDynamicObject(2053, 3942.20, -830.50, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2053, 3942.20, -830.90, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2053, 3942.20, -831.30, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2053, 3942.20, -831.70, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2053, 3942.20, -832.10, 1873.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2052, 3942.30, -832.50, 1873.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2052, 3942.30, -833.00, 1873.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2053, 3932.90, -816.90, 1873.99,   0.00, 0.00, 0.00);
// -================= Decorado 24/7 Ayunta (By Ximena) ================-//
CreateDynamicObject(1360, 1340.80, -1755.00, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1340.80, -1750.90, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1340.80, -1747.00, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1340.80, -1743.20, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1361.60, -1754.90, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1361.60, -1751.60, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1360, 1361.60, -1748.20, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 1341.40, -1750.00, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1361.00, -1753.40, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1361.00, -1750.20, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(983, 1357.70, -1756.30, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1344.70, -1756.30, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(983, 1347.90, -1756.30, 13.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1251, 1349.30, -1752.60, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1251, 1345.10, -1752.50, 12.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1342, 1358.98, -1754.00, 13.40,   0.00, 0.00, 180.00);
CreateDynamicObject(1319, 1353.70, -1722.40, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1319, 1365.00, -1722.30, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1340, 1358.90, -1749.81, 13.50,   0.00, 0.00, 180.00);
CreateDynamicObject(1319, 1354.70, -1754.60, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1319, 1354.60, -1750.80, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1319, 1354.60, -1747.30, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(978, 1359.50, -1721.80, 13.70,   0.00, 0.00, 180.00);
// -================== HQ Grupo 4x4 (By Ale) =========================-//
CreateDynamicObject(987, 1008.80, -367.10, 72.90,   0.00, 0.00, 357.99);
CreateDynamicObject(987, 1009.30, -355.20, 73.00,   0.00, 0.00, 267.99);
CreateDynamicObject(987, 1009.10, -343.20, 73.00,   0.00, 0.00, 269.99);
CreateDynamicObject(987, 1009.10, -331.20, 73.00,   0.00, 0.00, 269.99);
CreateDynamicObject(987, 1009.10, -319.30, 73.00,   0.00, 0.00, 269.99);
CreateDynamicObject(987, 1009.10, -307.30, 73.00,   0.00, 0.00, 269.99);
CreateDynamicObject(987, 1009.10, -295.30, 73.00,   0.00, 0.00, 269.99);
CreateDynamicObject(987, 1009.00, -284.30, 73.00,   0.00, 0.00, 269.99);
CreateDynamicObject(987, 1020.80, -284.50, 73.00,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 1032.80, -284.50, 73.00,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 1044.80, -284.40, 73.00,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 1056.70, -284.40, 73.00,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 1068.70, -284.40, 73.00,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 1080.60, -284.40, 73.00,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 1092.30, -286.40, 73.00,   0.00, 0.00, 169.99);
CreateDynamicObject(987, 1104.20, -287.20, 73.00,   0.00, 0.00, 175.99);
CreateDynamicObject(987, 1116.20, -288.00, 73.00,   0.00, 0.00, 175.99);
CreateDynamicObject(987, 1125.00, -295.90, 73.00,   0.00, 0.00, 137.99);
CreateDynamicObject(987, 1124.70, -307.80, 73.10,   0.00, 0.00, 87.99);
CreateDynamicObject(987, 1124.30, -319.70, 73.20,   0.00, 0.00, 87.98);
CreateDynamicObject(987, 1123.90, -331.60, 73.20,   0.00, 0.00, 87.98);
CreateDynamicObject(987, 1123.40, -343.50, 73.30,   0.00, 0.00, 87.98);
CreateDynamicObject(987, 1122.90, -355.40, 72.80,   0.00, 0.00, 87.98);
CreateDynamicObject(987, 1122.50, -367.40, 72.70,   0.00, 0.00, 87.98);
CreateDynamicObject(987, 1122.30, -370.20, 72.60,   0.00, 0.00, 87.98);
CreateDynamicObject(987, 1110.50, -369.90, 72.90,   0.00, 0.00, 357.98);
CreateDynamicObject(987, 1098.60, -369.40, 72.90,   0.00, 0.00, 357.98);
CreateDynamicObject(987, 1086.70, -369.10, 72.90,   0.00, 0.00, 357.98);
CreateDynamicObject(987, 1074.80, -368.80, 73.00,   0.00, 0.00, 357.98);
CreateDynamicObject(987, 1062.80, -368.60, 73.20,   0.00, 0.00, 357.98);
CreateDynamicObject(987, 1050.80, -369.00, 73.00,   0.00, 0.00, 1.98);
CreateDynamicObject(987, 1038.90, -368.00, 72.90,   0.00, 0.00, 355.99);
CreateDynamicObject(3749, 1026.70, -366.41, 78.80,   0.00, 0.00, 356.00);
CreateDynamicObject(987, 1036.30, -367.80, 72.90,   0.00, 0.00, 355.99);
CreateDynamicObject(10281, 1026.20, -369.70, 80.10,   1.97, 349.99, 356.35);
CreateDynamicObject(8406, 1069.60, -285.20, 78.50,   0.00, 0.00, 358.00);
CreateDynamicObject(18568, 1078.90, -335.30, 73.80,   0.00, 0.00, 0.00);
CreateDynamicObject(18609, 1070.80, -337.50, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(13640, 1053.50, -334.30, 74.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1676, 1096.50, -350.90, 74.70,   0.00, 0.00, 274.00);
CreateDynamicObject(1225, 1097.10, -353.30, 73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(18452, 1099.40, -351.60, 75.90,   0.00, 0.00, 272.00);
CreateDynamicObject(12978, 1113.80, -340.50, 73.50,   0.00, 0.00, 268.00);
CreateDynamicObject(13027, 1113.90, -340.50, 76.20,   0.00, 0.00, 88.00);
CreateDynamicObject(1098, 1121.10, -340.70, 76.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1098, 1121.10, -341.70, 75.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1098, 1121.10, -341.00, 75.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1116, 1121.10, -342.70, 76.30,   0.00, 0.00, 86.00);
CreateDynamicObject(14826, 1114.80, -340.40, 73.80,   0.00, 0.00, 0.00);
CreateDynamicObject(11392, 1101.00, -346.00, 73.00,   0.00, 0.00, 0.00);
CreateDynamicObject(10282, 1115.70, -340.10, 74.00,   0.00, 0.00, 270.00);
CreateDynamicObject(1225, 1096.70, -352.30, 73.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1020.50, -368.50, 73.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1032.50, -369.30, 73.30,   0.00, 0.00, 0.00);
CreateDynamicObject(3461, 1059.40, -289.20, 74.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3461, 1086.30, -289.50, 74.60,   0.00, 0.00, 0.00);
piratas = CreateDynamicObject(980, 1026.70, -366.81, 75.70,   0.00, 0.00, 177.00);
// -============================ Traficantes HQ (By Ale) =============================- //
CreateDynamicObject(802, -1078.1999511719, -1095.5999755859, 128.60000610352, 0, 0, 0);
CreateDynamicObject(802, -1082.4000244141, -1095.5, 128.60000610352, 0, 0, 0);
CreateDynamicObject(802, -1085.5999755859, -1095.4000244141, 128.60000610352, 0, 0, 0);
CreateDynamicObject(802, -1089.5999755859, -1095.3000488281, 128.60000610352, 0, 0, 0);
CreateDynamicObject(802, -1092.8000488281, -1095.1999511719, 128.60000610352, 0, 0, 0);
CreateDynamicObject(808, -1077.8000488281, -1084.0999755859, 129, 0, 0, 300);
CreateDynamicObject(808, -1086.0999755859, -1084.4000244141, 129, 0, 0, 299.99816894531);
CreateDynamicObject(808, -1092.4000244141, -1084.5999755859, 129, 0, 0, 299.99816894531);
CreateDynamicObject(810, -1124.3000488281, -1095.8000488281, 128.19999694824, 0, 0, 0);
CreateDynamicObject(810, -1128.3000488281, -1095.8000488281, 128.19999694824, 0, 0, 0);
CreateDynamicObject(810, -1132, -1095.5, 128.19999694824, 0, 0, 0);
CreateDynamicObject(810, -1136.5, -1095.5, 128.19999694824, 0, 0, 0);
CreateDynamicObject(820, -1125.1999511719, -1084.3000488281, 126.5, 0, 0, 251.99998474121);
CreateDynamicObject(820, -1132.1999511719, -1084.5999755859, 126.5, 0, 0, 251.99890136719);
CreateDynamicObject(820, -1138.6999511719, -1084.4000244141, 126.5, 0, 0, 251.99890136719);
CreateDynamicObject(821, -1140.6999511719, -1095.5, 128.10000610352, 0, 0, 78);
CreateDynamicObject(821, -1133.1999511719, -1095.4000244141, 128.10000610352, 0, 0, 77.997436523438);
CreateDynamicObject(821, -1126.4000244141, -1095.5, 128.10000610352, 0, 0, 77.997436523438);
CreateDynamicObject(809, -1187.5, -1095.8000488281, 128.19999694824, 0, 0, 0);
CreateDynamicObject(809, -1182.5, -1096, 128.19999694824, 0, 0, 0);
CreateDynamicObject(809, -1178.5, -1096.0999755859, 128.19999694824, 0, 0, 0);
CreateDynamicObject(809, -1174.3000488281, -1096.1999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(809, -1170.0999755859, -1096.6999511719, 127.69999694824, 0, 0, 0);
CreateDynamicObject(808, -1140.0999755859, -1134.5, 129.30000305176, 0, 0, 296);
CreateDynamicObject(808, -1145.8000488281, -1134.5, 129.30000305176, 0, 0, 295.99914550781);
CreateDynamicObject(808, -1149.5, -1134.5, 129.30000305176, 0, 0, 295.99914550781);
CreateDynamicObject(808, -1153, -1134.5, 129.30000305176, 0, 0, 295.99914550781);
CreateDynamicObject(808, -1155.8000488281, -1134.5, 129.30000305176, 0, 0, 295.99914550781);
CreateDynamicObject(3375, -1097.6999511719, -1172.6999511719, 132.60000610352, 0, 0, 90);
CreateDynamicObject(17054, -1098, -1204.3000488281, 128.19999694824, 0, 0, 2);
CreateDynamicObject(3374, -1025.5999755859, -1181.9000244141, 129.69999694824, 0, 0, 0);
CreateDynamicObject(2901, -1028.6999511719, -1180.3000488281, 128.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.6999511719, -1180.8000488281, 128.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.6999511719, -1181.3000488281, 128.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.6999511719, -1181.8000488281, 128.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.6999511719, -1182.3000488281, 128.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.6999511719, -1182.8000488281, 128.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.6999511719, -1183.3000488281, 128.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5999755859, -1180.3000488281, 129.10000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5999755859, -1180.8000488281, 129.10000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5999755859, -1181.3000488281, 129.10000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5999755859, -1181.8000488281, 129.10000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5999755859, -1182.3000488281, 129.10000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5999755859, -1182.8000488281, 129.10000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5999755859, -1183.3000488281, 129.10000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5, -1180.5999755859, 129.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5, -1181.0999755859, 129.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5, -1181.5999755859, 129.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.5, -1182.0999755859, 129.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.4000244141, -1182.5999755859, 129.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1028.3000488281, -1183.0999755859, 129.60000610352, 0, 0, 0);
CreateDynamicObject(2891, -1023.9000244141, -1184.1999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1023.9000244141, -1184.6999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1023.9000244141, -1185.1999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1024.3000488281, -1184.1999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1024.3000488281, -1184.6999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1024.3000488281, -1185.1999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1024.6999511719, -1184.1999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1024.6999511719, -1184.6999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1024.6999511719, -1185.1999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1025.0999755859, -1184.1999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1025.0999755859, -1184.6999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1025.0999755859, -1185.1999511719, 128.19999694824, 0, 0, 0);
CreateDynamicObject(2891, -1023.9000244141, -1184.1999511719, 128.39999389648, 0, 0, 0);
CreateDynamicObject(2891, -1023.9000244141, -1184.6999511719, 128.39999389648, 0, 0, 0);
CreateDynamicObject(2891, -1023.9000244141, -1185.1999511719, 128.39999389648, 0, 0, 0);
CreateDynamicObject(2891, -1024.3000488281, -1184.1999511719, 128.39999389648, 0, 0, 0);
CreateDynamicObject(2891, -1024.3000488281, -1184.6999511719, 128.39999389648, 0, 0, 0);
CreateDynamicObject(2891, -1024.1999511719, -1185.1999511719, 128.39999389648, 0, 0, 0);
CreateDynamicObject(2891, -1024.6999511719, -1184.1999511719, 128.39999389648, 0, 0, 0);
CreateDynamicObject(2891, -1024.6999511719, -1184.6999511719, 128.39999389648, 0, 0, 0);
CreateDynamicObject(2891, -1024.5999755859, -1185.1999511719, 128.39999389648, 0, 0, 0);
CreateDynamicObject(2891, -1025.1999511719, -1184.1999511719, 128.5, 0, 0, 0);
CreateDynamicObject(2891, -1025.0999755859, -1184.6999511719, 128.5, 0, 0, 0);
CreateDynamicObject(2891, -1025.0999755859, -1185.1999511719, 128.5, 0, 0, 0);
CreateDynamicObject(17011, -1024.0999755859, -1142.9000244141, 128.19999694824, 0, 0, 90);
CreateDynamicObject(14875, -1077.3000488281, -1156.5, 129, 0, 0, 86);
CreateDynamicObject(14873, -1077, -1153.1999511719, 129, 0, 0, 0);
CreateDynamicObject(2901, -1076, -1153.4000244141, 128.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1076, -1153.9000244141, 128.60000610352, 0, 0, 0);
CreateDynamicObject(2901, -1076, -1153.4000244141, 129.10000610352, 0, 0, 0);
CreateDynamicObject(2901, -1076, -1153.9000244141, 129.10000610352, 0, 0, 0);
CreateDynamicObject(2901, -1076, -1152.4000244141, 129.39999389648, 0, 0, 0);
CreateDynamicObject(2901, -1076, -1152.9000244141, 129.39999389648, 0, 0, 0);
CreateDynamicObject(2901, -1076, -1153.4000244141, 129.39999389648, 0, 0, 0);
CreateDynamicObject(2901, -1076, -1153.9000244141, 129.39999389648, 0, 0, 0);
CreateDynamicObject(14873, -1185.6999511719, -1144.0999755859, 129, 0, 0, 90);
CreateDynamicObject(3092, -1182.6999511719, -1145.9000244141, 130, 0, 0, 0);
CreateDynamicObject(2907, -1186.3000488281, -1143.4000244141, 129.30000305176, 0, 0, 0);
CreateDynamicObject(2906, -1185.4000244141, -1143.5, 128.30000305176, 0, 0, 0);
CreateDynamicObject(2905, -1184.9000244141, -1143.4000244141, 128.30000305176, 0, 0, 0);
CreateDynamicObject(2908, -1186.5, -1142.5999755859, 129.19999694824, 0, 0, 138);
CreateDynamicObject(2905, -1185.5, -1142.5, 128.30000305176, 0, 170, 190);
CreateDynamicObject(2906, -1185.0999755859, -1144.3000488281, 129.19999694824, 0, 0, 66);
CreateDynamicObject(337, -1180.6999511719, -1143.9000244141, 128.5, 0, 0, 0);
CreateDynamicObject(2045, -1185.3000488281, -1145.4000244141, 129.19999694824, 0, 0, 0);
CreateDynamicObject(2228, -1185.5, -1145.8000488281, 129.69999694824, 0, 0, 0);
CreateDynamicObject(2237, -1185.0999755859, -1145.8000488281, 130.19999694824, 0, 0, 0);
// -========================================= Cine interior PANTALLA =======================================- //
CreateDynamicObject(8428,-1348.3000500,-192.8000000,1072.0500500,7.7450000,0.0000000,87.9950000); //object(villa_inn02_lvs) (1)
CreateDynamicObject(8428,-1341.5996100,-223.5000000,1071.1999500,353.2380000,0.0000000,267.9950000); //object(villa_inn02_lvs) (2)
CreateDynamicObject(8428,-1348.3000500,-192.8999900,1078.5799600,7.7400000,0.0000000,87.9900000); //object(villa_inn02_lvs) (5)
CreateDynamicObject(8428,-1341.5999800,-223.3999900,1077.5999800,353.2430000,0.0000000,267.9950000); //object(villa_inn02_lvs) (6)
CreateDynamicObject(4048,-1377.0000000,-217.3999900,1062.4000200,0.0000000,0.0000000,262.0000000); //object(lacityhall4_lan) (1)
CreateDynamicObject(5142,-1422.6999500,-207.7000000,1056.6999500,0.0000000,0.0000000,262.0000000); //object(las2plaza1bit) (1)
CreateDynamicObject(4048,-1407.0000000,-251.2000000,1062.4000200,0.0000000,0.0000000,173.9960000); //object(lacityhall4_lan) (4)
CreateDynamicObject(7052,-1395.9000200,-217.5000000,1050.1999500,0.0000000,0.0000000,262.0000000); //object(vegasnroad079) (1)
CreateDynamicObject(16061,-1401.5000000,-212.8999900,1050.0000000,0.0000000,0.0000000,354.0000000); //object(des_treeline2) (1)
CreateDynamicObject(4048,-1396.0999800,-182.3999900,1062.4000200,0.0000000,0.0000000,173.9960000); //object(lacityhall4_lan) (5)
CreateDynamicObject(4048,-1429.0999800,-288.5000000,1062.4000200,0.0000000,0.0000000,263.9960000); //object(lacityhall4_lan) (12)
CreateDynamicObject(4048,-1429.0999800,-288.5000000,1075.4000200,0.0000000,0.0000000,263.9900000); //object(lacityhall4_lan) (13)
CreateDynamicObject(4048,-1428.9000200,-266.6000100,1081.6999500,0.0000000,0.0000000,261.9900000); //object(lacityhall4_lan) (14)
CreateDynamicObject(3933,-1341.9000200,-228.1000100,1034.9000200,0.0000000,0.0000000,351.9960000); //object(fake_sky) (2)
CreateDynamicObject(3933,-1173.9000200,-251.0000000,1057.5000000,0.0000000,0.0000000,351.9960000); //object(fake_sky) (3)
CreateDynamicObject(3933,-1173.9000200,-251.0000000,1034.8000500,0.0000000,0.0000000,351.9960000); //object(fake_sky) (4)
CreateDynamicObject(10757,-1254.8000500,-220.8999900,1054.6999500,0.0000000,0.0000000,171.0000000); //object(airport_04_sfse) (1)
CreateDynamicObject(10767,-1461.9000200,-241.3000000,1059.1999500,0.0000000,0.0000000,36.0000000); //object(airport_11_sfse) (1)
CreateDynamicObject(3933,-1478.1999500,-231.3000000,1080.0999800,0.0000000,0.0000000,81.9960000); //object(fake_sky) (6)
CreateDynamicObject(3933,-1478.1999500,-231.3000000,1102.8000500,0.0000000,0.0000000,81.9960000); //object(fake_sky) (5)
CreateDynamicObject(4048,-1436.0999800,-322.2000100,1081.6999500,0.0000000,0.0000000,261.9850000); //object(lacityhall4_lan) (16)
CreateDynamicObject(4048,-1421.1999500,-210.0000000,1081.6999500,0.0000000,0.0000000,261.9850000); //object(lacityhall4_lan) (15)
CreateDynamicObject(10378,-1404.1999500,-170.0000000,1041.6999500,0.0000000,0.0000000,263.2500000); //object(ctiyhallsquare_sfs) (1)
CreateDynamicObject(5729,-1402.1999500,-172.8999900,1045.8000500,0.0000000,0.0000000,84.0000000); //object(melblok02_lawn) (1)
CreateDynamicObject(5729,-1353.0999800,-178.2000000,1045.8000500,0.0000000,0.0000000,83.9960000); //object(melblok02_lawn) (2)
CreateDynamicObject(4048,-1339.1999500,-187.5000000,1062.4000200,0.0000000,0.0000000,173.9960000); //object(lacityhall4_lan) (17)
CreateDynamicObject(8428,-1365.0996100,-212.2998000,1073.5999800,359.7420000,358.2480000,177.9790000); //object(villa_inn02_lvs) (7)
CreateDynamicObject(8428,-1365.0999800,-212.3000000,1079.6999500,359.7420000,358.2480000,177.9840000); //object(villa_inn02_lvs) (8)
CreateDynamicObject(973,-1333.5000000,-218.6000100,1070.0000000,359.9930000,269.7500000,73.7500000); //object(sub_roadbarrier) (1)
CreateDynamicObject(973,-1333.5000000,-218.6000100,1078.0000000,359.9890000,269.7470000,73.7460000); //object(sub_roadbarrier) (2)
CreateDynamicObject(973,-1333.5999800,-198.5000000,1071.0000000,359.9890000,269.7470000,73.7460000); //object(sub_roadbarrier) (3)
CreateDynamicObject(973,-1333.5999800,-198.5000000,1077.8000500,359.9890000,269.7470000,73.7460000); //object(sub_roadbarrier) (4)
CreateDynamicObject(973,-1333.6999500,-203.5000000,1068.0000000,2.0000000,359.7500000,90.0090000); //object(sub_roadbarrier) (6)
CreateDynamicObject(973,-1333.5999800,-212.7000000,1067.9000200,2.0000000,359.7470000,90.0050000); //object(sub_roadbarrier) (7)
CreateDynamicObject(973,-1333.6999500,-216.7000000,1067.9000200,2.0000000,359.7470000,90.0050000); //object(sub_roadbarrier) (8)
CreateDynamicObject(973,-1333.5000000,-213.6000100,1078.3000500,356.0000000,179.7470000,89.9790000); //object(sub_roadbarrier) (9)
CreateDynamicObject(973,-1333.5000000,-204.5000000,1078.3000500,355.9950000,179.7420000,89.9780000); //object(sub_roadbarrier) (10)
CreateDynamicObject(973,-1333.5000000,-196.0000000,1078.3000500,355.9950000,179.7420000,89.9780000); //object(sub_roadbarrier) (11)
CreateDynamicObject(2232,-1357.2600100,-218.3999900,1073.6500200,0.0000000,0.0000000,180.7720000); //object(med_speaker_4) (2)
CreateDynamicObject(2232,-1357.5100100,-197.0300000,1074.2900400,0.0000000,0.0000000,356.8890000); //object(med_speaker_4) (4)
CreateDynamicObject(1536,-1360.2099600,-207.1900000,1073.1300000,359.2470000,0.0000000,267.7360000); //object(gen_doorext15) (1)
CreateDynamicObject(3352,-1263.0439500,-201.2421900,1073.3689000,0.0000000,0.0000000,0.0000000); //object(burbdoorrename_me) (1)
CreateDynamicObject(8378,-1332.4000200,-210.0000000,1076.8000500,0.0000000,0.0000000,268.0000000); //object(vgsbighngrdoor) (1)
CreateDynamicObject(1232,-1392.1999500,-229.1000100,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (2)
CreateDynamicObject(1232,-1390.8000500,-217.8000000,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (3)
CreateDynamicObject(1232,-1388.5999800,-203.3000000,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (4)
CreateDynamicObject(1232,-1386.8000500,-190.3999900,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (5)
CreateDynamicObject(1232,-1397.5000000,-189.3999900,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (6)
CreateDynamicObject(1232,-1400.1999500,-210.8000000,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (8)
CreateDynamicObject(1232,-1402.0000000,-221.3000000,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (9)
CreateDynamicObject(1232,-1403.0000000,-231.3999900,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (10)
CreateDynamicObject(1232,-1404.1999500,-239.3999900,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (11)
CreateDynamicObject(1232,-1418.4000200,-214.8000000,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (12)
CreateDynamicObject(1232,-1416.4000200,-199.3999900,1051.1999500,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (13)
CreateDynamicObject(3452,-1358.6099900,-211.3500100,1073.0999800,358.0560000,0.0000000,269.1720000); //object(bballintvgn1) (2)
CreateDynamicObject(2232,-1351.8499800,-197.2100100,1073.5200200,0.0000000,0.0000000,356.8850000); //object(med_speaker_4) (4)
CreateDynamicObject(2232,-1352.2500000,-218.5600000,1072.7900400,0.0000000,0.0000000,180.7690000); //object(med_speaker_4) (2)
CreateDynamicObject(1562,-1358.7299800,-215.8100000,1073.3100600,0.0000000,0.0000000,89.0450000); //object(ab_jetseat) (1)
CreateDynamicObject(1562,-1358.6999500,-214.5099900,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (2)
CreateDynamicObject(1562,-1358.6700400,-213.2000000,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (3)
CreateDynamicObject(1562,-1358.6600300,-211.8800000,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (4)
CreateDynamicObject(1562,-1358.6700400,-210.5800000,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (5)
CreateDynamicObject(1562,-1358.6400100,-209.3500100,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (6)
CreateDynamicObject(1562,-1358.6200000,-208.0000000,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (7)
CreateDynamicObject(1562,-1358.5699500,-206.6400000,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (8)
CreateDynamicObject(1562,-1358.5799600,-205.3900000,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (9)
CreateDynamicObject(1562,-1358.5799600,-204.1300000,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (10)
CreateDynamicObject(1562,-1358.6099900,-202.8000000,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (11)
CreateDynamicObject(1562,-1358.6600300,-201.3999900,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (12)
CreateDynamicObject(1562,-1358.6300000,-200.0099900,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (13)
CreateDynamicObject(1562,-1358.6200000,-198.5500000,1073.3199500,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (14)
CreateDynamicObject(1562,-1357.4100300,-215.8200100,1072.8399700,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (15)
CreateDynamicObject(1562,-1357.4100300,-214.4800000,1072.8399700,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (16)
CreateDynamicObject(1562,-1357.4100300,-213.1100000,1072.8499800,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (17)
CreateDynamicObject(1562,-1357.3800000,-211.8400000,1072.8399700,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (18)
CreateDynamicObject(1562,-1357.3499800,-210.5300000,1072.8399700,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (19)
CreateDynamicObject(1562,-1357.3499800,-209.3800000,1072.8499800,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (20)
CreateDynamicObject(1562,-1357.3499800,-208.0399900,1072.8499800,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (21)
CreateDynamicObject(1562,-1357.3100600,-206.6300000,1072.8499800,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (22)
CreateDynamicObject(1562,-1357.2399900,-205.3200100,1072.8399700,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (23)
CreateDynamicObject(1562,-1357.2399900,-204.1100000,1072.8399700,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (24)
CreateDynamicObject(1562,-1357.1500200,-202.8100000,1072.8399700,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (25)
CreateDynamicObject(1562,-1357.1700400,-201.5000000,1072.8399700,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (26)
CreateDynamicObject(1562,-1357.2099600,-200.0900000,1072.8399700,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (27)
CreateDynamicObject(1562,-1357.1600300,-198.6499900,1072.8399700,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (28)
CreateDynamicObject(1562,-1355.7099600,-198.7100100,1072.3599900,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (29)
CreateDynamicObject(1562,-1355.6400100,-200.1499900,1072.3499800,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (30)
CreateDynamicObject(1562,-1355.6999500,-201.4100000,1072.3599900,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (31)
CreateDynamicObject(1562,-1355.7299800,-202.8200100,1072.3599900,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (32)
CreateDynamicObject(1562,-1355.7900400,-204.1200000,1072.3599900,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (33)
CreateDynamicObject(1562,-1355.8100600,-205.3400000,1072.3599900,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (34)
CreateDynamicObject(1562,-1355.8499800,-206.5399900,1072.3700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (35)
CreateDynamicObject(1562,-1355.8700000,-208.0600000,1072.3700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (36)
CreateDynamicObject(1562,-1355.8800000,-209.3600000,1072.3700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (37)
CreateDynamicObject(1562,-1355.8900100,-210.5900000,1072.3700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (38)
CreateDynamicObject(1562,-1355.9100300,-211.8700000,1072.3700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (39)
CreateDynamicObject(1562,-1355.9499500,-213.0900000,1072.3700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (40)
CreateDynamicObject(1562,-1355.9699700,-214.4299900,1072.3700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (41)
CreateDynamicObject(1562,-1355.9300500,-215.9200000,1072.3599900,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (42)
CreateDynamicObject(1562,-1354.5500500,-215.9299900,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (43)
CreateDynamicObject(1562,-1354.4799800,-214.5399900,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (44)
CreateDynamicObject(1562,-1354.5300300,-213.0800000,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (45)
CreateDynamicObject(1562,-1354.5000000,-211.8999900,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (46)
CreateDynamicObject(1562,-1354.5100100,-210.6600000,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (47)
CreateDynamicObject(1562,-1354.4100300,-209.3700000,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (48)
CreateDynamicObject(1562,-1354.4499500,-208.1000100,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (49)
CreateDynamicObject(1562,-1354.4100300,-206.5900000,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (50)
CreateDynamicObject(1562,-1354.4399400,-205.3600000,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (51)
CreateDynamicObject(1562,-1354.4100300,-204.2100100,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (52)
CreateDynamicObject(1562,-1354.4100300,-202.9299900,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (53)
CreateDynamicObject(1562,-1354.4499500,-201.4600100,1071.8800000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (54)
CreateDynamicObject(1562,-1354.3900100,-200.2400100,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (55)
CreateDynamicObject(1562,-1354.3700000,-198.7800000,1071.8700000,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (56)
CreateDynamicObject(1562,-1352.9300500,-198.9100000,1071.3900100,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (57)
CreateDynamicObject(1562,-1351.4499500,-199.0399900,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (58)
CreateDynamicObject(1562,-1352.9100300,-200.2400100,1071.3900100,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (59)
CreateDynamicObject(1562,-1353.0100100,-201.5399900,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (60)
CreateDynamicObject(1562,-1353.0899700,-202.9400000,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (64)
CreateDynamicObject(1562,-1353.0799600,-204.2100100,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (65)
CreateDynamicObject(1562,-1353.1400100,-205.4200000,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (66)
CreateDynamicObject(1562,-1353.1400100,-206.6200000,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (67)
CreateDynamicObject(1562,-1353.2500000,-208.1100000,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (68)
CreateDynamicObject(1562,-1353.2199700,-209.4100000,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (69)
CreateDynamicObject(1562,-1353.2299800,-210.6400000,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (70)
CreateDynamicObject(1562,-1353.2299800,-211.9299900,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (71)
CreateDynamicObject(1562,-1353.2099600,-213.1600000,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (72)
CreateDynamicObject(1562,-1353.1899400,-214.5300000,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (73)
CreateDynamicObject(1562,-1353.2099600,-215.9500000,1071.4000200,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (74)
CreateDynamicObject(1562,-1351.5899700,-200.2899900,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (75)
CreateDynamicObject(1562,-1351.6899400,-201.5700100,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (76)
CreateDynamicObject(1562,-1351.7299800,-203.0900000,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (77)
CreateDynamicObject(1562,-1351.7600100,-204.2500000,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (78)
CreateDynamicObject(1562,-1351.7299800,-205.5500000,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (79)
CreateDynamicObject(1562,-1351.7500000,-206.7300000,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (80)
CreateDynamicObject(1562,-1351.8299600,-208.1100000,1070.9200400,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (81)
CreateDynamicObject(1562,-1351.7900400,-209.4100000,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (82)
CreateDynamicObject(1562,-1351.7900400,-210.7100100,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (83)
CreateDynamicObject(1562,-1351.7900400,-211.9400000,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (84)
CreateDynamicObject(1562,-1351.8800000,-213.2300000,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (85)
CreateDynamicObject(1562,-1351.8000500,-214.5399900,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (86)
CreateDynamicObject(1562,-1351.9200400,-216.0099900,1070.9100300,0.0000000,0.0000000,89.0440000); //object(ab_jetseat) (87)
CreateDynamicObject(3526,-1351.4399400,-216.8200100,1069.8900100,358.0960000,11.6700000,178.4160000); //object(vegasairportlight) (1)
CreateDynamicObject(3526,-1351.4394500,-216.8193400,1069.8900100,358.0940000,11.6670000,178.4120000); //object(vegasairportlight) (2)
CreateDynamicObject(3526,-1353.3100600,-216.7700000,1070.2399900,0.0000000,350.2810000,0.0000000); //object(vegasairportlight) (3)
CreateDynamicObject(3526,-1354.8199500,-216.9500000,1070.9899900,0.0000000,0.0000000,0.0000000); //object(vegasairportlight) (6)
CreateDynamicObject(3526,-1356.3399700,-216.8800000,1071.4300500,0.0000000,0.0000000,0.0000000); //object(vegasairportlight) (7)
CreateDynamicObject(3526,-1357.7399900,-216.9400000,1072.0300300,0.0000000,0.0000000,0.0000000); //object(vegasairportlight) (8)
CreateDynamicObject(3526,-1359.0899700,-216.8500100,1072.4699700,0.0000000,0.0000000,0.0000000); //object(vegasairportlight) (9)
CreateDynamicObject(8880,-1354.6200000,-207.9800000,1074.7700200,9.7190000,0.0000000,270.9550000); //object(vgsecnstrct09) (1)
CreateDynamicObject(1253,-1360.2099600,-208.0099900,1075.8100600,0.0000000,0.0000000,270.9550000); //object(camerapickup) (1)
CreateDynamicObject(8428,-1350.5400400,-213.2700000,1066.5500500,7.7400000,359.6760000,88.0330000); //object(villa_inn02_lvs) (1)
CreateDynamicObject(8428,-1349.7600100,-204.1200000,1066.5400400,7.7400000,359.6760000,88.0330000); //object(villa_inn02_lvs) (1)
CreateDynamicObject(8428,-1349.1200000,-195.0000000,1066.5400400,7.7400000,359.6760000,88.0330000); //object(villa_inn02_lvs) (1)
CreateDynamicObject(17546,-1343.6600300,-202.6499900,1089.6400100,277.7800000,91.8960000,91.9130000); //object(hydro3_lae) (1)
CreateDynamicObject(3578,-1349.5999800,-213.3100000,1069.4899900,0.0000000,0.0000000,89.3440000); //object(dockbarr1_la) (1)
CreateDynamicObject(3578,-1349.4699700,-203.0200000,1069.4799800,0.0000000,0.0000000,89.3410000); //object(dockbarr1_la) (2)
CreateDynamicObject(3578,-1349.3399700,-192.8200100,1069.4899900,0.0000000,0.0000000,89.3410000); //object(dockbarr1_la)
// -========================================= PORTA AVIONES =======================================- //
CreateDynamicObject(10771, 2758.51, -2696.79, 6.76,   0.00, 0.00, 0.00);
CreateDynamicObject(11145, 2695.45, -2696.79, 5.58,   0.00, 0.00, 0.00);
CreateDynamicObject(10770, 2761.74, -2704.30, 40.01,   0.00, 0.00, 0.00);
CreateDynamicObject(11237, 2759.53, -2704.37, 39.76,   0.00, 0.00, 0.00);
CreateDynamicObject(10772, 2759.91, -2696.97, 18.56,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2659.52, -2696.79, 18.10,   0.00, 0.00, 0.00);
CreateDynamicObject(3934, 2653.83, -2697.59, 18.38,   0.00, 0.00, -90.00);
CreateDynamicObject(3934, 2665.13, -2697.63, 18.38,   0.00, 0.00, 90.00);
CreateDynamicObject(3277, 2722.54, -2702.92, 19.23,   0.00, 0.00, 0.00);
CreateDynamicObject(3267, 2722.54, -2704.15, 19.31,   0.00, 0.00, 98.00);
CreateDynamicObject(3277, 2801.91, -2704.48, 19.23,   0.00, 0.00, -40.00);
CreateDynamicObject(3267, 2800.96, -2705.18, 19.26,   0.00, 0.00, 131.00);
CreateDynamicObject(3385, 2650.87, -2700.79, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2662.30, -2694.60, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2668.14, -2694.47, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2668.08, -2701.02, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2662.33, -2700.94, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2656.62, -2700.77, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2656.67, -2694.21, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2650.82, -2694.24, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(2985, 2743.76, -2701.77, 23.81,   0.00, -33.00, 149.00);
CreateDynamicObject(2985, 2743.73, -2701.89, 23.87,   0.00, -33.00, 146.00);
CreateDynamicObject(2985, 2743.94, -2701.75, 23.81,   0.00, -33.00, 149.00);
CreateDynamicObject(10771, 2758.51, -2696.79, 6.76,   0.00, 0.00, 0.00);
CreateDynamicObject(11145, 2695.45, -2696.79, 5.58,   0.00, 0.00, 0.00);
CreateDynamicObject(11149, 2752.39, -2702.02, 13.31,   0.00, 0.00, 0.00);
CreateDynamicObject(11237, 2759.53, -2704.37, 39.76,   0.00, 0.00, 0.00);
CreateDynamicObject(10772, 2759.91, -2696.97, 18.56,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2659.52, -2696.79, 18.10,   0.00, 0.00, 0.00);
CreateDynamicObject(3934, 2653.83, -2697.59, 18.38,   0.00, 0.00, -90.00);
CreateDynamicObject(3934, 2665.13, -2697.63, 18.38,   0.00, 0.00, 90.00);
CreateDynamicObject(3277, 2722.54, -2702.92, 19.23,   0.00, 0.00, 0.00);
CreateDynamicObject(3267, 2722.54, -2704.15, 19.31,   0.00, 0.00, 98.00);
CreateDynamicObject(3277, 2801.91, -2704.48, 19.23,   0.00, 0.00, -40.00);
CreateDynamicObject(3267, 2800.96, -2705.18, 19.26,   0.00, 0.00, 131.00);
CreateDynamicObject(3385, 2650.87, -2700.79, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2662.30, -2694.60, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2668.14, -2694.47, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2668.08, -2701.02, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2662.33, -2700.94, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2656.62, -2700.77, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2656.67, -2694.21, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2650.82, -2694.24, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(10771, 2758.51, -2696.79, 6.76,   0.00, 0.00, 0.00);
CreateDynamicObject(11237, 2759.53, -2704.37, 39.76,   0.00, 0.00, 0.00);
CreateDynamicObject(10772, 2759.91, -2696.97, 18.56,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2659.52, -2696.79, 18.10,   0.00, 0.00, 0.00);
CreateDynamicObject(3934, 2653.83, -2697.59, 18.38,   0.00, 0.00, -90.00);
CreateDynamicObject(3934, 2665.13, -2697.63, 18.38,   0.00, 0.00, 90.00);
CreateDynamicObject(3277, 2722.54, -2702.92, 19.23,   0.00, 0.00, 0.00);
CreateDynamicObject(3267, 2722.54, -2704.15, 19.31,   0.00, 0.00, 98.00);
CreateDynamicObject(3277, 2801.91, -2704.48, 19.23,   0.00, 0.00, -40.00);
CreateDynamicObject(3267, 2800.96, -2705.18, 19.26,   0.00, 0.00, 131.00);
CreateDynamicObject(3385, 2650.87, -2700.79, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2662.30, -2694.60, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2668.14, -2694.47, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2724.68, -2683.08, 18.61,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2662.33, -2700.94, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2656.62, -2700.77, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2656.67, -2694.21, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2650.82, -2694.24, 18.39,   0.00, 0.00, 0.00);
CreateDynamicObject(2971, 2718.43, -2691.40, 3.35,   0.00, 0.00, 0.00);
CreateDynamicObject(2991, 2714.07, -2688.41, 3.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3630, 2731.50, -2685.46, 4.77,   0.00, 0.00, 0.00);
CreateDynamicObject(3787, 2724.51, -2694.16, 3.85,   0.00, 0.00, 0.00);
CreateDynamicObject(3787, 2727.81, -2696.34, 3.86,   0.00, 0.00, -140.00);
CreateDynamicObject(3794, 2723.70, -2695.80, 3.87,   0.00, 0.00, 0.00);
CreateDynamicObject(1893, 2739.05, -2702.74, 9.62,   0.00, 0.00, 91.00);
CreateDynamicObject(3785, 2740.56, -2703.48, 8.26,   0.00, 0.00, 92.00);
CreateDynamicObject(3785, 2740.72, -2701.21, 8.34,   0.00, 0.00, -91.00);
CreateDynamicObject(3785, 2742.49, -2701.20, 9.80,   0.00, 0.00, -91.00);
CreateDynamicObject(3785, 2763.94, -2703.20, 19.31,   0.00, 0.00, -91.00);
CreateDynamicObject(3785, 2744.74, -2703.56, 10.61,   0.00, 0.00, 91.00);
CreateDynamicObject(3785, 2742.68, -2703.55, 10.01,   0.00, 0.00, 91.00);
CreateDynamicObject(1893, 2758.49, -2704.85, 19.31,   0.00, 0.00, 91.00);
CreateDynamicObject(1893, 2755.05, -2704.89, 17.00,   0.00, 0.00, 91.00);
CreateDynamicObject(1893, 2756.75, -2704.87, 18.15,   0.00, 0.00, 91.00);
CreateDynamicObject(3785, 2744.71, -2701.19, 10.61,   0.00, 0.00, -91.00);
CreateDynamicObject(3785, 2754.99, -2703.16, 13.58,   0.00, 0.00, -91.00);
CreateDynamicObject(3785, 2756.33, -2703.21, 14.48,   0.00, 0.00, -91.00);
CreateDynamicObject(3785, 2757.71, -2703.21, 15.30,   0.00, 0.00, -91.00);
CreateDynamicObject(3785, 2759.31, -2703.19, 16.32,   0.00, 0.00, -91.00);
CreateDynamicObject(3785, 2761.69, -2703.21, 18.16,   0.00, 0.00, -91.00);
CreateDynamicObject(11146, 2749.54, -2696.28, 13.60,   -0.02, 0.00, 360.00);
CreateDynamicObject(3114, 2722.82, -2681.63, 17.98,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2701.76, -2681.63, 17.98,   0.00, 0.00, 0.00);
CreateDynamicObject(3934, 2721.49, -2680.12, 18.54,   0.00, 0.00, 0.00);
CreateDynamicObject(3934, 2701.04, -2680.15, 18.54,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2697.59, -2683.10, 18.61,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2704.37, -2677.32, 18.61,   0.00, 0.00, 0.00);
CreateDynamicObject(3385, 2718.05, -2677.27, 18.61,   0.00, 0.00, 0.00);
// -========================================= FBI Interior =======================================- //
CreateDynamicObject(1723,248.96083069,144.72656250,1002.02343750,0.00000000,0.00000000,271.75000000); //object(mrk_seating1) (1)
CreateDynamicObject(1723,246.82830811,140.90718079,1002.02343750,0.00000000,0.00000000,180.49499512); //object(mrk_seating1) (2)
CreateDynamicObject(1808,248.77156067,145.57914734,1002.02343750,0.00000000,0.00000000,308.00000000); //object(cj_watercooler2) (1)
CreateDynamicObject(2190,234.15289307,166.16770935,1003.02343750,0.00000000,0.00000000,274.00000000); //object(pc_1) (1)
CreateDynamicObject(3851,234.24269104,167.44023132,1009.87829590,90.00000000,179.30432129,180.69561768); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,234.23074341,163.80702209,1009.87304688,90.00000000,180.69726562,179.29724121); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,233.15132141,160.26115417,1009.87817383,90.00000000,179.30810547,144.68090820); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,230.06669617,158.50778198,1009.87915039,90.00000000,179.30786133,94.67895508); //object(carshowwin_sfsx) (5)
CreateDynamicObject(630,249.30334473,141.75549316,1003.04858398,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8) (2)
CreateDynamicObject(2235,245.17286682,143.58271790,1002.02343750,0.00000000,0.00000000,318.00000000); //object(coffee_med_6) (1)
CreateDynamicObject(7191,257.36721802,170.16687012,1003.68292236,0.00000000,0.00000000,270.00000000); //object(vegasnnewfence2b) (1)
CreateDynamicObject(7191,257.38705444,170.13291931,1007.59033203,0.00000000,0.00000000,270.00000000); //object(vegasnnewfence2b) (2)
CreateDynamicObject(7191,257.39160156,170.14839172,1011.48651123,0.00000000,0.00000000,270.00000000); //object(vegasnnewfence2b) (3)
CreateDynamicObject(792,246.10531616,155.95323181,1002.27368164,0.00000000,0.00000000,0.00000000); //object(aw_streettree1) (2)
CreateDynamicObject(638,233.20417786,140.09146118,1002.72045898,0.00000000,0.00000000,268.50000000); //object(kb_planter_bush) (2)
CreateDynamicObject(638,229.66973877,140.12370300,1002.72045898,0.00000000,0.00000000,268.49487305); //object(kb_planter_bush) (3)
CreateDynamicObject(2773,236.33601379,139.27552795,1002.54064941,0.00000000,0.00000000,36.00000000); //object(cj_airprt_bar) (1)
CreateDynamicObject(2773,240.75494385,139.19107056,1002.54064941,0.00000000,0.00000000,325.49768066); //object(cj_airprt_bar) (2)
CreateDynamicObject(2922,196.98715210,164.23437500,1003.45135498,0.00000000,0.00000000,0.00000000); //object(kmb_keypad) (1)
fbidoor1 = CreateDynamicObject(1495,228.26893616,149.72817993,1002.02343750,0.00000000,0.00000000,90.00000000); //object(gen_doorext01) (1)
fbidoor2 = CreateDynamicObject(1495,228.20497131,152.73513794,1002.02343750,0.00000000,0.00000000,271.00000000); //object(gen_doorext01) (2)
fbidoor3 = CreateDynamicObject(1495,230.44369507,158.50949097,1001.94860840,0.00000000,0.00000000,180.49975586); //object(gen_doorext01) (3)
fbig1 = CreateDynamicObject(969,200.02711487,160.48478699,1002.02343750,0.00000000,0.00000000,270.00000000); //object(electricgate) (1)
fbig2 = CreateDynamicObject(969,200.15646362,185.94311523,1002.03552246,0.00000000,0.00000000,270.00000000); //object(electricgate) (2)
 //------------------------------------------------Aeropuerto Mappeo Nuevo-----------------------------------------------------//
	CreateDynamicObject(3851,1971.61169434,-2183.27465820,14.54687500,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (2)
	CreateDynamicObject(3851,1971.61169434,-2183.98608398,14.54687500,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
	CreateDynamicObject(3851,1951.51367188,-2183.26855469,14.55418587,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (4)
	CreateDynamicObject(3851,1951.56665039,-2184.39892578,14.55418587,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (5)
	CreateDynamicObject(1649,1969.47033691,-2189.60791016,14.21261692,0.00000000,0.00000000,179.07324219); //object(wglasssmash) (4)
	CreateDynamicObject(1649,1969.16796875,-2189.60253906,14.21261692,0.00000000,0.00000000,179.07165527); //object(wglasssmash) (5)
	CreateDynamicObject(1649,1953.85571289,-2189.60791016,14.21261692,0.00000000,0.00000000,179.07165527); //object(wglasssmash) (6)
	CreateDynamicObject(1649,1969.42150879,-2189.91259766,14.21261692,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (7)
	CreateDynamicObject(1649,1969.11376953,-2189.91259766,14.21261692,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (8)
	CreateDynamicObject(1649,1953.85083008,-2189.91259766,14.21261692,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (9)
	CreateDynamicObject(1692,1954.66076660,-2183.95458984,16.82754135,0.00000000,0.00000000,90.91796875); //object(roofstuff18) (1)
	CreateDynamicObject(1692,1952.92956543,-2183.97607422,16.82754135,0.00000000,0.00000000,90.91735840); //object(roofstuff18) (2)
	CreateDynamicObject(3749,1961.43688965,-2178.53564453,18.33028984,0.00000000,0.00000000,0.00000000); //object(clubgate01_lax) (1)
	CreateDynamicObject(3749,2054.90136719,-2194.87402344,18.15528870,0.00000000,0.00000000,90.00549316); //object(clubgate01_lax) (2)
	CreateDynamicObject(5837,2054.25878906,-2182.19067383,14.19650841,0.00000000,0.00000000,268.17077637); //object(ci_guardhouse1) (1)
	CreateDynamicObject(16770,1947.55029297,-2197.30371094,14.13743401,0.00000000,0.00000000,179.07324219); //object(des_gunbldg01) (1)
	CreateDynamicObject(2680,1956.38208008,-2183.10424805,13.58006287,0.00000000,0.00000000,88.19042969); //object(cj_padlock) (1)
	CreateDynamicObject(1622,1967.26965332,-2178.60595703,17.54320335,0.00000000,0.00000000,0.00000000); //object(nt_securecam2_01) (1)
	CreateDynamicObject(1622,1943.70471191,-2192.67602539,18.61160660,0.00000000,0.00000000,127.28521729); //object(nt_securecam2_01) (2)
	CreateDynamicObject(979,1998.09228516,-2226.93652344,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (2)
	CreateDynamicObject(979,2006.93420410,-2226.94140625,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (3)
	CreateDynamicObject(979,2016.16210938,-2226.94140625,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (4)
	CreateDynamicObject(979,2025.20031738,-2226.94140625,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (5)
	CreateDynamicObject(979,2034.28979492,-2226.94140625,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (6)
	CreateDynamicObject(979,2043.61804199,-2226.93896484,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (7)
	CreateDynamicObject(979,2048.26269531,-2222.34179688,13.38709545,0.00000000,0.00000000,90.91735840); //object(sub_roadleft) (8)
	CreateDynamicObject(979,2048.15991211,-2213.26098633,13.38709545,0.00000000,0.00000000,90.91735840); //object(sub_roadleft) (9)
	CreateDynamicObject(979,2009.96777344,-2206.73828125,13.43609524,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (10)
	CreateDynamicObject(979,2019.22851562,-2206.77441406,13.39423275,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (11)
	CreateDynamicObject(979,2026.19934082,-2206.74438477,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (12)
	CreateDynamicObject(982,1951.45214844,-2188.20190430,13.18436050,0.00000000,0.00000000,181.83599854); //object(fenceshit) (1)
	CreateDynamicObject(982,1964.65917969,-2201.00000000,13.23042965,0.00000000,0.00000000,270.02197266); //object(fenceshit) (2)
	CreateDynamicObject(982,1982.27832031,-2200.97753906,13.23042965,0.00000000,0.00000000,270.02197266); //object(fenceshit) (3)
	CreateDynamicObject(979,1956.55871582,-2200.95654297,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (10)
	CreateDynamicObject(979,1965.88208008,-2200.95556641,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (10)
	CreateDynamicObject(979,1975.26525879,-2200.98803711,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (10)
	CreateDynamicObject(979,1984.63159180,-2200.98535156,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (10)
	CreateDynamicObject(979,1990.40600586,-2200.98754883,13.38709545,0.00000000,0.00000000,0.00000000); //object(sub_roadleft) (10)
	CreateDynamicObject(979,1951.67065430,-2194.64892578,13.41209507,0.00000000,0.00000000,271.96875000); //object(sub_roadleft) (10)
	CreateDynamicObject(979,1951.71435547,-2196.28515625,13.45018578,0.00000000,0.00000000,271.96362305); //object(sub_roadleft) (10)
	CreateDynamicObject(11547,2039.53454590,-2224.39062500,15.49153137,0.00000000,0.00000000,90.00878906); //object(desn_tscanopy) (1)
	CreateDynamicObject(11547,2028.50000000,-2224.15917969,15.49153137,0.00000000,0.00000000,90.00549316); //object(desn_tscanopy) (2)
	CreateDynamicObject(979,1976.46386719,-2177.67968750,13.38709545,0.00000000,0.00000000,180.01647949); //object(sub_roadleft) (11)
	CreateDynamicObject(979,1985.77905273,-2177.68066406,13.38709545,0.00000000,0.00000000,180.01647949); //object(sub_roadleft) (11)
	CreateDynamicObject(979,1995.11267090,-2177.68066406,13.38709545,0.00000000,0.00000000,180.01647949); //object(sub_roadleft) (11)
	CreateDynamicObject(979,2004.31335449,-2177.67968750,13.38709545,0.00000000,0.00000000,180.01647949); //object(sub_roadleft) (11)
	CreateDynamicObject(979,2013.53466797,-2177.67968750,13.38709545,0.00000000,0.00000000,180.01647949); //object(sub_roadleft) (11)
	CreateDynamicObject(979,2022.81970215,-2177.67968750,13.38709545,0.00000000,0.00000000,180.01647949); //object(sub_roadleft) (11)
	CreateDynamicObject(979,2032.19018555,-2177.69775391,13.38709545,0.00000000,0.00000000,179.51647949); //object(sub_roadleft) (11)
	CreateDynamicObject(979,2041.46484375,-2177.97290039,13.39423275,0.00000000,0.00000000,176.78356934); //object(sub_roadleft) (11)
	CreateDynamicObject(979,2050.25805664,-2178.45336914,13.39423275,0.00000000,0.00000000,176.78100586); //object(sub_roadleft) (11)
	CreateDynamicObject(979,1971.69494629,-2182.41479492,13.38709545,0.00000000,0.00000000,268.20690918); //object(sub_roadleft) (11)
	CreateDynamicObject(1216,1943.95654297,-2198.61718750,13.28939629,0.00000000,0.00000000,90.91796875); //object(phonebooth1) (1)
	CreateDynamicObject(1216,1943.97949219,-2197.20166016,13.23887730,0.00000000,0.00000000,90.91735840); //object(phonebooth1) (2)
	CreateDynamicObject(1216,1944.00610352,-2195.56250000,13.23887730,0.00000000,0.00000000,90.91735840); //object(phonebooth1) (3)
	CreateDynamicObject(1216,1944.02929688,-2194.12744141,13.23887730,0.00000000,0.00000000,90.91735840); //object(phonebooth1) (4)
	CreateDynamicObject(1216,1944.05371094,-2192.62280273,13.23887730,0.00000000,0.00000000,90.91735840); //object(phonebooth1) (5)
	CreateDynamicObject(1216,1944.07824707,-2191.10766602,13.23887730,0.00000000,0.00000000,90.91735840); //object(phonebooth1) (6)
	CreateDynamicObject(3578,2072.03613281,-2202.03515625,11.84991169,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (1)
	CreateDynamicObject(3578,2066.73730469,-2196.80371094,11.87493038,0.00000000,0.00000000,269.74731445); //object(dockbarr1_la) (2)
	CreateDynamicObject(3578,2033.81555176,-2206.38403320,11.79993153,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (3)
	CreateDynamicObject(3578,2000.11181641,-2206.05273438,11.82493114,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (4)
	CreateDynamicObject(3578,2000.25915527,-2201.31933594,11.84571457,0.00000000,0.00000000,359.75000000); //object(dockbarr1_la) (5)
	CreateDynamicObject(11547,2005.01171875,-2224.30566406,15.49153137,0.00000000,0.00000000,90.00549316); //object(desn_tscanopy) (2)
	CreateDynamicObject(3578,2034.12878418,-2201.62573242,11.82071495,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (6)
	CreateDynamicObject(970,1984.00500488,-2190.83447266,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
	CreateDynamicObject(3578,1976.61254883,-2190.61376953,11.79569626,0.00000000,0.00000000,359.74731445); //object(dockbarr1_la) (7)
	CreateDynamicObject(3578,1976.77832031,-2186.11914062,11.82068825,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (8)
	CreateDynamicObject(3578,2047.60717773,-2191.34521484,11.82071495,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (9)
	CreateDynamicObject(3578,2047.64880371,-2186.67016602,11.84571457,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (10)
	CreateDynamicObject(970,1988.68273926,-2190.87792969,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1993.56347656,-2190.87109375,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1998.37963867,-2190.90283203,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,2003.31030273,-2190.92626953,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (6)
	CreateDynamicObject(970,2008.27722168,-2190.96386719,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (7)
	CreateDynamicObject(970,2013.06103516,-2190.93750000,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (8)
	CreateDynamicObject(970,2017.84497070,-2190.97973633,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (9)
	CreateDynamicObject(970,2022.73388672,-2190.92358398,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (10)
	CreateDynamicObject(970,2027.57995605,-2191.00146484,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (11)
	CreateDynamicObject(970,2032.55871582,-2191.03320312,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (12)
	CreateDynamicObject(970,2037.68261719,-2191.07128906,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (13)
	CreateDynamicObject(970,2040.36462402,-2191.18432617,13.11913967,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (14)
	CreateDynamicObject(3666,1986.32141113,-2190.74926758,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
	CreateDynamicObject(3666,1990.99523926,-2190.76049805,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (2)
	CreateDynamicObject(3666,1995.94824219,-2190.85595703,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)
	CreateDynamicObject(3666,2000.90417480,-2190.87963867,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (4)
	CreateDynamicObject(3666,2005.78857422,-2191.02490234,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (5)
	CreateDynamicObject(3666,2010.63171387,-2191.04150391,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (6)
	CreateDynamicObject(3666,2015.45776367,-2191.10644531,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (7)
	CreateDynamicObject(3666,2020.23937988,-2191.10400391,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (8)
	CreateDynamicObject(3666,2025.13928223,-2191.18505859,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (9)
	CreateDynamicObject(3666,2030.13122559,-2191.17675781,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (10)
	CreateDynamicObject(3666,2035.14074707,-2191.25561523,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (11)
	CreateDynamicObject(3666,2042.55554199,-2191.16943359,13.11565018,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (12)
	CreateDynamicObject(3666,1981.91613770,-2190.76245117,13.08134365,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (13)
	CreateDynamicObject(970,1981.67016602,-2179.82421875,13.09835625,0.00000000,0.00000000,90.91796875); //object(fencesmallb) (15)
	CreateDynamicObject(970,1983.65649414,-2179.86230469,13.09835625,0.00000000,0.00000000,90.00817871); //object(fencesmallb) (16)
	CreateDynamicObject(970,1985.71069336,-2179.86523438,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (17)
	CreateDynamicObject(970,1987.84765625,-2179.83374023,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (18)
	CreateDynamicObject(970,1990.19543457,-2179.81591797,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (19)
	CreateDynamicObject(970,1992.50830078,-2179.83105469,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (20)
	CreateDynamicObject(970,1994.90246582,-2179.78515625,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (21)
	CreateDynamicObject(970,1997.15100098,-2179.81347656,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (22)
	CreateDynamicObject(970,1999.44567871,-2180.01757812,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (23)
	CreateDynamicObject(970,2001.78405762,-2179.93774414,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (24)
	CreateDynamicObject(970,2004.52661133,-2179.78369141,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (25)
	CreateDynamicObject(3578,1961.53222656,-2171.40234375,11.64637375,0.00000000,0.00000000,359.99731445); //object(dockbarr1_la) (11)
	CreateDynamicObject(3666,1970.13085938,-2171.29882812,12.89649773,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,1953.29296875,-2171.24316406,12.89649773,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (15)
	CreateDynamicObject(3666,1967.84899902,-2172.50415039,12.93510056,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (16)
	CreateDynamicObject(3666,1966.73168945,-2174.29370117,12.99368858,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (17)
	CreateDynamicObject(3666,1966.52807617,-2176.51928711,13.06655121,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (18)
	CreateDynamicObject(3666,1955.12426758,-2172.91210938,12.94845676,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (19)
	CreateDynamicObject(3666,1956.35607910,-2174.51049805,13.00078583,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (20)
	CreateDynamicObject(3666,1956.65063477,-2176.60791016,13.06056023,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (21)
	CreateDynamicObject(970,2007.59948730,-2179.73046875,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (26)
	CreateDynamicObject(970,2011.00280762,-2179.74877930,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (27)
	CreateDynamicObject(970,2013.50720215,-2179.78955078,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (28)
	CreateDynamicObject(970,2016.00305176,-2179.78491211,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (29)
	CreateDynamicObject(970,2018.65563965,-2179.85156250,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (30)
	CreateDynamicObject(970,2021.19421387,-2179.83959961,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (31)
	CreateDynamicObject(970,2024.15979004,-2179.80346680,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (32)
	CreateDynamicObject(970,2027.85314941,-2179.77197266,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (33)
	CreateDynamicObject(970,2031.72619629,-2179.78955078,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (34)
	CreateDynamicObject(970,2034.89880371,-2179.75219727,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (35)
	CreateDynamicObject(970,2038.00244141,-2179.89062500,13.09835625,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (36)
	CreateDynamicObject(970,2041.08801270,-2180.02099609,13.10549355,0.00000000,0.00000000,90.00549316); //object(fencesmallb) (37)
	CreateDynamicObject(970,2043.84497070,-2180.26611328,13.10549355,0.00000000,0.00000000,88.36352539); //object(fencesmallb) (38)
	CreateDynamicObject(1215,1981.68432617,-2181.91308594,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1983.64599609,-2181.95117188,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,1985.70922852,-2181.95410156,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,1987.84313965,-2181.92260742,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1990.26074219,-2181.90478516,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,1992.45837402,-2181.91992188,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,1994.86999512,-2181.87402344,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,1997.16198730,-2181.90234375,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,1999.43188477,-2182.10644531,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
	CreateDynamicObject(1215,2001.80615234,-2182.02661133,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,2004.51855469,-2181.87255859,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(1215,2007.63793945,-2181.81933594,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
	CreateDynamicObject(1215,2011.00012207,-2181.83764648,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
	CreateDynamicObject(1215,2013.46716309,-2181.87841797,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
	CreateDynamicObject(1215,2016.00158691,-2181.89233398,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
	CreateDynamicObject(1215,2018.61389160,-2181.94042969,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
	CreateDynamicObject(1215,2021.19299316,-2181.92846680,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (17)
	CreateDynamicObject(1215,2024.19091797,-2181.89233398,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (18)
	CreateDynamicObject(1215,2027.82067871,-2181.86083984,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (19)
	CreateDynamicObject(1215,2031.74060059,-2181.87841797,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (20)
	CreateDynamicObject(1215,2034.92541504,-2181.84106445,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (21)
	CreateDynamicObject(1215,2038.01574707,-2181.97949219,13.11833572,0.00000000,0.00000000,0.00000000); //object(bollardlight) (22)
	CreateDynamicObject(1215,2041.09082031,-2182.10937500,13.11833572,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
	CreateDynamicObject(1215,2043.77526855,-2182.35375977,13.21061802,0.00000000,0.00000000,0.00000000); //object(bollardlight) (24)
	CreateDynamicObject(2773,1992.31152344,-2206.70776367,13.06410313,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (1)
	CreateDynamicObject(2773,1991.35290527,-2205.72998047,13.08488655,0.00000000,0.00000000,90.00878906); //object(cj_airprt_bar) (2)
	CreateDynamicObject(2773,1989.43273926,-2205.73022461,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (3)
	CreateDynamicObject(2773,1987.51196289,-2205.73120117,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,1985.58129883,-2205.73730469,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (5)
	CreateDynamicObject(2773,1983.66552734,-2205.73461914,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (6)
	CreateDynamicObject(2773,1981.59130859,-2204.18798828,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (7)
	CreateDynamicObject(2773,1983.50390625,-2204.18261719,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (8)
	CreateDynamicObject(2773,1985.43518066,-2204.19970703,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (9)
	CreateDynamicObject(2773,1987.37622070,-2204.19702148,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (10)
	CreateDynamicObject(2773,1989.29724121,-2204.18896484,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (11)
	CreateDynamicObject(2773,1991.19982910,-2204.18139648,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (12)
	CreateDynamicObject(2773,1948.17773438,-2205.41503906,13.08488655,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (25)
	CreateDynamicObject(2773,1948.17687988,-2203.63208008,13.08488655,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (26)
	CreateDynamicObject(2773,1949.13171387,-2202.68359375,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (27)
	CreateDynamicObject(2773,1951.07312012,-2202.66284180,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (28)
	CreateDynamicObject(2773,1952.98498535,-2202.65161133,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (29)
	CreateDynamicObject(2773,1954.92724609,-2202.66528320,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (30)
	CreateDynamicObject(2773,1956.83679199,-2202.66772461,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (31)
	CreateDynamicObject(2773,1958.75671387,-2202.66674805,13.08488655,0.00000000,0.00000000,90.00549316); //object(cj_airprt_bar) (32)
	CreateDynamicObject(970,2052.93310547,-2179.80053711,16.48236465,0.00000000,0.00000000,87.28125000); //object(fencesmallb) (13)
	CreateDynamicObject(970,2052.74316406,-2183.87744141,16.48236465,0.00000000,0.00000000,87.28088379); //object(fencesmallb) (13)
	CreateDynamicObject(1215,2052.20874023,-2184.53149414,16.49520683,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
	CreateDynamicObject(1215,2052.37158203,-2184.73535156,16.49520683,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
	CreateDynamicObject(1215,2052.52368164,-2184.94726562,16.49520683,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
	CreateDynamicObject(1215,2052.66479492,-2185.16674805,16.49520683,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
	CreateDynamicObject(2775,2002.08789062,-2220.12622070,18.06337738,0.00000000,0.00000000,179.10461426); //object(cj_airprt_mon) (1)
	CreateDynamicObject(2775,1998.57092285,-2220.12670898,17.88389587,0.00000000,0.00000000,179.10461426); //object(cj_airprt_mon) (2)
	CreateDynamicObject(2797,1969.10412598,-2189.60156250,14.40474129,0.00000000,0.00000000,0.00000000); //object(cj_air_d_5) (1)
	CreateDynamicObject(10757,1962.28405762,-2175.49633789,25.25063705,0.00000000,0.00000000,173.64990234); //object(airport_04_sfse) (1)
	CreateDynamicObject(2792,2004.83227539,-2249.17407227,20.21862602,0.00000000,0.00000000,270.90039062); //object(cj_air_d_1) (1)
	CreateDynamicObject(2793,2005.08068848,-2315.08569336,20.52916908,0.00000000,0.00000000,269.99121094); //object(cj_air_d_2) (1)
	CreateDynamicObject(2794,2005.21862793,-2381.79443359,19.94733620,0.00000000,0.00000000,271.80957031); //object(cj_air_d_3) (1)
	CreateDynamicObject(3749,2053.39306641,-2348.91235352,18.40528870,0.00000000,0.00000000,269.08203125); //object(clubgate01_lax) (3)
	CreateDynamicObject(3749,2053.11914062,-2282.23803711,18.40528870,0.00000000,0.00000000,269.07714844); //object(clubgate01_lax) (4)
	CreateDynamicObject(2792,2055.61254883,-2282.67749023,18.66874123,0.00000000,0.00000000,270.89538574); //object(cj_air_d_1) (2)
	CreateDynamicObject(2793,2055.88696289,-2349.32031250,18.66330719,0.00000000,0.00000000,269.98901367); //object(cj_air_d_2) (2)
	CreateDynamicObject(2789,1961.51513672,-2176.03515625,19.63507080,0.00000000,0.00000000,178.15979004); //object(cj_depart_board) (1)
	CreateDynamicObject(2791,1969.07312012,-2176.43505859,22.66379929,0.00000000,0.00000000,0.00000000); //object(cj_index_board) (1)
	CreateDynamicObject(2791,2070.95654297,-2362.72509766,21.52229881,0.00000000,0.00000000,0.00000000); //object(cj_index_board) (2)
	CreateDynamicObject(3264,2041.40490723,-2191.33593750,12.64710903,0.00000000,0.00000000,0.00000000); //object(privatesign3) (1)
	CreateDynamicObject(8406,2014.70434570,-2201.56152344,17.84299850,0.00000000,0.00000000,0.00000000); //object(carparksign01_lvs) (1)
	CreateDynamicObject(3660,1940.57385254,-2166.17333984,15.04317379,0.00000000,0.00000000,0.00000000); //object(lasairfbed_las) (1)
	CreateDynamicObject(3660,1982.18420410,-2166.27368164,15.02955723,0.00000000,0.00000000,0.00000000); //object(lasairfbed_las) (2)
	CreateDynamicObject(3660,1961.36328125,-2146.26074219,15.03588009,0.00000000,0.00000000,90.00549316); //object(lasairfbed_las) (3)
	CreateDynamicObject(3666,1930.93872070,-2166.52636719,14.16669273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (15)
	CreateDynamicObject(3666,1950.19958496,-2166.48339844,14.16669273,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (15)
	CreateDynamicObject(3666,1972.48754883,-2166.61914062,14.15307617,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (15)
	CreateDynamicObject(3666,1991.91149902,-2166.58105469,14.15307617,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (15)
	CreateDynamicObject(3666,1961.61413574,-2155.87866211,14.15939903,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (15)
	CreateDynamicObject(3666,1961.64831543,-2136.58789062,14.15939903,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (15)
	CreateDynamicObject(3578,1961.70593262,-2156.25537109,11.61086845,0.00000000,0.00000000,359.99450684); //object(dockbarr1_la) (11)
	CreateDynamicObject(3578,1972.21374512,-2166.41674805,11.62954521,0.00000000,0.00000000,271.80407715); //object(dockbarr1_la) (11)
	CreateDynamicObject(3578,1950.59423828,-2166.60937500,11.61816216,0.00000000,0.00000000,269.80175781); //object(dockbarr1_la) (11)
	CreateDynamicObject(3578,1961.69543457,-2176.87670898,11.82493019,0.00000000,0.00000000,359.99450684); //object(dockbarr1_la) (11)
	CreateDynamicObject(3578,1961.73059082,-2136.31176758,11.61086845,0.00000000,0.00000000,359.99450684); //object(dockbarr1_la) (11)
	CreateDynamicObject(3578,1930.53186035,-2166.50390625,11.66086769,0.00000000,0.00000000,269.79675293); //object(dockbarr1_la) (11)
	CreateDynamicObject(3578,1992.24169922,-2166.44458008,11.63586807,0.00000000,0.00000000,271.80175781); //object(dockbarr1_la) (11)
	CreateDynamicObject(3666,1953.23498535,-2195.64331055,13.38452816,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,1955.01440430,-2195.64794922,13.38452816,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,1968.90197754,-2195.89843750,13.38452816,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,1970.72192383,-2195.91381836,13.38452816,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,1991.13110352,-2196.08251953,13.38452911,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,1992.37475586,-2196.12939453,13.38452911,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2005.27746582,-2196.25146484,13.38452816,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2006.52087402,-2196.26196289,13.44270897,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2026.05322266,-2196.26367188,13.38452816,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2027.29772949,-2196.21215820,13.38452816,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2071.89868164,-2225.14868164,13.06056786,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2071.96972656,-2236.88525391,13.38716507,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2071.63525391,-2241.55004883,13.44951057,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2071.53002930,-2254.86938477,13.46842670,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2071.46850586,-2265.33325195,13.48404503,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2071.55957031,-2278.65869141,13.42583561,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2071.46752930,-2285.82177734,13.45717239,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2071.25463867,-2299.42260742,13.53047466,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2071.03491211,-2310.58666992,13.45137119,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2070.98535156,-2323.96582031,13.50981712,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2071.03320312,-2326.68579102,13.52122116,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(3666,2070.98510742,-2339.87915039,13.45975018,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
	CreateDynamicObject(11544,1991.04980469,-2314.08227539,13.93668175,0.00000000,0.00000000,180.00000000); //object(des_ntfrescape2) (1)
	CreateDynamicObject(11544,1988.03063965,-2222.60131836,14.51167297,0.00000000,0.00000000,359.99450684); //object(des_ntfrescape2) (2)
	CreateDynamicObject(11544,1987.97583008,-2225.15283203,14.51167297,0.00000000,0.00000000,179.98901367); //object(des_ntfrescape2) (3)
	CreateDynamicObject(4100,1983.64355469,-2306.30151367,14.24854469,0.00000000,0.00000000,49.75000000); //object(meshfence1_lan) (1)
	CreateDynamicObject(4100,1983.63452148,-2292.66674805,14.24854469,0.00000000,0.00000000,50.24609375); //object(meshfence1_lan) (2)
	CreateDynamicObject(4100,1983.64916992,-2278.93505859,14.24854469,0.00000000,0.00000000,49.99609375); //object(meshfence1_lan) (3)
	CreateDynamicObject(4100,1983.67492676,-2265.23364258,14.24854469,0.00000000,0.00000000,49.99328613); //object(meshfence1_lan) (4)
	CreateDynamicObject(4100,1983.72680664,-2251.52148438,14.24854469,0.00000000,0.00000000,49.99328613); //object(meshfence1_lan) (5)
	CreateDynamicObject(4100,1983.70336914,-2237.85791016,14.24854469,0.00000000,0.00000000,49.99328613); //object(meshfence1_lan) (6)
	CreateDynamicObject(4100,1983.69714355,-2233.94995117,14.24854469,0.00000000,0.00000000,49.99328613); //object(meshfence1_lan) (7)
	CreateDynamicObject(4100,2004.07617188,-2313.17285156,14.24854469,0.00000000,0.00000000,318.24096680); //object(meshfence1_lan) (8)
	CreateDynamicObject(3666,1995.35363770,-2297.69921875,13.09847260,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (50)
	CreateDynamicObject(3666,1994.96936035,-2283.93774414,13.09847260,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (51)
	CreateDynamicObject(3666,1994.81445312,-2276.71508789,13.07347298,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (52)
	CreateDynamicObject(3666,1994.36401367,-2259.89501953,13.07347298,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (53)
	CreateDynamicObject(3666,1994.23474121,-2253.63476562,13.07347298,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (54)
	CreateDynamicObject(3666,1993.90356445,-2244.80004883,13.07347298,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (55)
	CreateDynamicObject(7939,1995.99499512,-2277.16357422,14.13756752,0.00000000,0.00000000,90.75000000); //object(glfcrsgate29_vgn) (1)
	CreateDynamicObject(979,1990.52258301,-2296.16699219,12.46210957,88.00000000,180.00000000,272.01770020); //object(sub_roadleft) (11)
	CreateDynamicObject(979,1989.79101562,-2272.89941406,12.43710995,87.99499512,179.99450684,272.01599121); //object(sub_roadleft) (11)
	CreateDynamicObject(979,1988.93615723,-2248.34155273,12.38711071,87.98950195,179.99450684,272.01049805); //object(sub_roadleft) (11)
//=================================== Traficantes Puertas separaciones=========================================
CreateDynamicObject(2988,2571.29345703,-1299.64404297,1043.12500000,0.00000000,0.00000000,0.00000000); //object(comp_wood_gate)(1)
CreateDynamicObject(2988,2522.41625977,-1299.97534180,1047.28906250,0.00000000,0.00000000,0.00000000); //object(comp_wood_gate)(2)
CreateDynamicObject(1556,2522.45312500,-1285.90039062,1053.64062500,0.00000000,0.00000000,90.00000000); //object(gen_doorext18)(2)
CreateDynamicObject(1556,2522.46728516,-1287.39843750,1053.65332031,0.00000000,0.00000000,90.00000000); //object(gen_doorext18)(3)
//========================== Objeto para gobierno ==================================
CreateDynamicObject(5821,1356.04187012,-1629.78430176,12.81710815,0.00000000,0.00000000,269.00000000); //object(odrampbit03) (1)

	// -==================================== PRISIÓN by Stallone ===============================- //
    CreateObject(980,2772.1416016,423.4774170,2.8498540,0.0000000,0.0000000,270.0000000); //object(airportgate)(1)
CreateObject(980,2772.1416016,435.0991516,2.8498540,0.0000000,0.0000000,270.0000000); //object(airportgate)(2)
CreateObject(980,2761.5263672,423.4774170,2.8498540,0.0000000,0.0000000,90.0000000); //object(airportgate)(3)
CreateObject(980,2761.5263672,434.9514465,2.8498540,0.0000000,0.0000000,90.0000000); //object(airportgate)(4)
CreateObject(980,2772.1416016,446.5480347,2.8498540,0.0000000,0.0000000,270.0000000); //object(airportgate)(5)
CreateObject(980,2761.5263672,446.4264221,2.8498540,0.0000000,0.0000000,90.0000000); //object(airportgate)(6)
CreateObject(980,2766.8627930,452.2799072,2.8498540,0.0000000,0.0000000,0.0000000); //object(airportgate)(7)
CreateObject(10828,2761.9042969,434.4453125,-6.3849654,90.0000000,178.6981201,91.2963867); //object(drydock1_sfse)(1)
CreateObject(980,2772.1416016,423.4765625,-2.6501460,0.0000000,0.0000000,270.0000000); //object(airportgate)(8)
CreateObject(980,2772.1416016,435.0986328,-2.6501460,0.0000000,0.0000000,270.0000000); //object(airportgate)(9)
CreateObject(980,2772.1416016,446.5478516,-2.6501460,0.0000000,0.0000000,270.0000000); //object(airportgate)(10)
CreateObject(980,2766.8623047,452.2792969,-2.6501460,0.0000000,0.0000000,0.0000000); //object(airportgate)(11)
CreateObject(980,2761.5263672,446.4257812,-2.6501460,0.0000000,0.0000000,90.0000000); //object(airportgate)(12)
CreateObject(980,2761.5263672,434.9511719,-2.6501460,0.0000000,0.0000000,90.0000000); //object(airportgate)(13)
CreateObject(980,2761.5263672,423.4765625,-2.6501460,0.0000000,0.0000000,90.0000000); //object(airportgate)(14)
CreateObject(3092,2766.5239258,417.9972534,3.0250020,0.0000000,0.0000000,0.0000000); //object(dead_tied_cop)(1)
    // Exterior VIP
    CreateDynamicObject(18651,1801.69775391,-1580.07006836,16.20111656,0.00000000,0.00000000,310.50000000); //object(?) (1)
    CreateDynamicObject(18649,1802.29785156,-1578.30346680,16.21812439,0.00000000,0.00000000,9.74658203); //object(?) (4)
    CreateDynamicObject(1231,1811.30334473,-1601.99914551,15.27726746,0.00000000,0.00000000,0.00000000); //object(streetlamp2) (2)
    CreateDynamicObject(2773,1799.42272949,-1580.08850098,13.59138870,0.00000000,0.00000000,111.99993896); //object(cj_airprt_bar) (1)
    CreateDynamicObject(18651,1800.25659180,-1581.27722168,16.20872498,0.00000000,0.00000000,310.49560547); //object(?) (3)
    CreateDynamicObject(18649,1802.00158691,-1576.67321777,16.20733261,0.00000000,0.00000000,9.74487305); //object(?) (11)
    CreateDynamicObject(18649,1801.76110840,-1575.22558594,16.20807266,0.00000000,0.00000000,9.74487305); //object(?) (12)
    CreateDynamicObject(997,1812.56103516,-1578.55871582,12.54687500,0.00000000,0.00000000,256.00000000); //object(lhouse_barrier3) (1)
    CreateDynamicObject(997,1814.05090332,-1572.83923340,12.54687500,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (2)
    CreateDynamicObject(997,1815.62902832,-1566.97583008,12.54582596,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (3)
    CreateDynamicObject(997,1817.38867188,-1560.39196777,12.54559422,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (4)
    CreateDynamicObject(997,1818.94812012,-1554.78149414,12.54675865,0.00000000,0.00000000,255.99792480); //object(lhouse_barrier3) (5)
    CreateDynamicObject(997,1792.78674316,-1601.26025391,12.54468727,0.00000000,0.00000000,167.24792480); //object(lhouse_barrier3) (6)
    CreateDynamicObject(997,1787.48547363,-1600.02307129,12.54336357,0.00000000,0.00000000,166.99743652); //object(lhouse_barrier3) (7)
    CreateDynamicObject(18647,1797.10388184,-1578.98486328,15.54859447,0.00000000,0.00000000,9.50000000); //object(bar2) (2)
    CreateDynamicObject(1280,1807.01550293,-1584.59997559,12.91286850,0.00000000,0.00000000,309.75000000); //object(parkbench1) (1)
    CreateDynamicObject(1280,1801.79589844,-1588.47436523,12.93736362,0.00000000,0.00000000,309.74853516); //object(parkbench1) (2)
    CreateDynamicObject(1280,1796.06933594,-1593.20556641,12.93888855,0.00000000,0.00000000,309.74853516); //object(parkbench1) (3)
    CreateDynamicObject(6462,1794.72363281,-1576.30712891,14.55592728,0.00000000,0.00000000,130.25000000); //object(pier04a_law2) (1)
    //El Avion y Todo eso by Jose Vazquez
	CreateDynamicObject(3068,1733.00000000,-1342.50000000,845.40002441,0.00000000,0.00000000,0.00000000); //object(cargo_rear) (1)
	CreateDynamicObject(3069,1732.90002441,-1349.00000000,843.00000000,0.00000000,0.00000000,0.75003052); //object(d9_ramp) (2)
	CreateDynamicObject(1683,1735.00000000,-1342.19995117,854.00000000,0.00000000,0.00000000,269.75000000); //object(ap_jumbo_01) (1)
	CreateDynamicObject(5020,1734.59997559,-1360.40002441,845.90002441,0.00000000,0.00000000,269.50000000); //object(mul_las) (1)
	CreateDynamicObject(5020,1731.00000000,-1360.80004883,843.50000000,0.00000000,0.00000000,269.49462891); //object(mul_las) (2)
	CreateDynamicObject(5020,1728.29980469,-1360.39941406,845.90002441,0.00000000,0.00000000,269.49462891); //object(mul_las) (3)
	CreateDynamicObject(5020,1737.19995117,-1360.50000000,843.50000000,0.00000000,0.00000000,269.49462891); //object(mul_las) (4)
	CreateDynamicObject(5020,1728.80004883,-1360.59997559,846.50000000,0.00000000,0.00000000,269.49462891); //object(mul_las) (5)
	CreateDynamicObject(5020,1735.09997559,-1360.50000000,846.50000000,0.00000000,0.00000000,269.49462891); //object(mul_las) (6)
	AddPlayerClass(0, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	// -===================================  Mecado Negro LS =========================================- //
	CreateDynamicObject(8674,1401.76562500,-1450.83703613,14.31416416,0.00000000,0.00000000,0.00000000); //object(csrsfence02_lvs)(1)
	CreateDynamicObject(17969,1382.18884277,-1467.57958984,14.57242393,0.00000000,0.00000000,164.00000000); //object(hub_grafitti)(1)
	CreateDynamicObject(1490,1382.77233887,-1465.54687500,15.03289032,0.00000000,0.00000000,158.00000000); //object(tag_01)(1)
	CreateDynamicObject(8674,1379.87365723,-1484.23828125,14.01379108,0.00000000,0.00000000,344.00000000); //object(csrsfence02_lvs)(2)
	CreateDynamicObject(5069,1378.32324219,-1468.30468750,14.83640575,0.00000000,0.00000000,161.99890137); //object(ctscene1_las)(1)
	CreateDynamicObject(3265,1391.80175781,-1452.72595215,12.55260468,0.00000000,0.00000000,170.00000000); //object(privatesign4)(1)
	CreateDynamicObject(17037,1381.49707031,-1482.27246094,15.03834915,0.00000000,0.00000000,73.99841309); //object(cuntw_carport2_)(1)
	CreateDynamicObject(1431,1378.53198242,-1483.23266602,13.09448814,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile)(1)
	CreateDynamicObject(1431,1378.85083008,-1482.43750000,13.09448814,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile)(2)
	CreateDynamicObject(1362,1379.76416016,-1483.53051758,13.14535809,0.00000000,0.00000000,0.00000000); //object(cj_firebin)(1)
	CreateDynamicObject(1439,1383.57739258,-1484.73852539,12.54687500,0.00000000,0.00000000,164.00000000); //object(dyn_dumpster_1)(1)
	CreateDynamicObject(1329,1382.33093262,-1484.17504883,12.99951172,0.00000000,0.00000000,168.00000000); //object(binnt13_la)(1)
	CreateDynamicObject(2670,1383.16943359,-1482.47253418,12.63892746,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_1)(1)
	CreateDynamicObject(2670,1379.69787598,-1481.43542480,12.63892746,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_1)(2)
	CreateDynamicObject(3594,1385.71069336,-1476.12670898,13.17805195,0.00000000,0.00000000,346.00000000); //object(la_fuckcar1)(1)
	CreateDynamicObject(3035,1385.00488281,-1480.17675781,13.06701088,0.00000000,0.00000000,343.99841309); //object(tmp_bin)(1)
	CreateDynamicObject(3119,1383.33007812,-1478.57128906,12.70637417,0.00000000,0.00000000,0.00000000); //object(cs_ry_props)(1)
	CreateDynamicObject(2953,1383.95971680,-1480.04687500,13.84279823,0.00000000,0.00000000,0.00000000); //object(kmb_paper_code)(1)
	CreateDynamicObject(1442,1380.23083496,-1482.75073242,13.14535809,0.00000000,0.00000000,0.00000000); //object(dyn_firebin0)(1)
	CreateDynamicObject(1369,1380.88085938,-1483.51220703,13.16874886,0.00000000,0.00000000,118.00000000); //object(cj_wheelchair1)(1

// Interior VIP by Ale
CreateDynamicObject(14614, 1756.654296, -1560.980712, -44.358551, 0.000000, 0.000000, 359.997558);
CreateDynamicObject(14563, 1756.693359, -1560.914062, -44.385906, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(14607, 1755.629882, -1561.629882, -44.342460, 0.000000, 0.000000, 359.494628);
CreateDynamicObject(9339,1723.33618164,-1579.47045898,-52.21807861,0.00000000,0.00000000,270.50000000); //object(sfnvilla001_cm) (1)
CreateDynamicObject(9339,1722.85351562,-1579.46459961,-50.81413651,0.00000000,0.00000000,270.49987793); //object(sfnvilla001_cm) (2)
CreateDynamicObject(9339,1722.98706055,-1579.46081543,-49.43519592,0.00000000,0.00000000,270.49987793); //object(sfnvilla001_cm) (3)
CreateDynamicObject(9339,1722.92724609,-1579.46740723,-48.05278778,0.00000000,0.00000000,270.49987793); //object(sfnvilla001_cm) (4)
CreateDynamicObject(9339,1722.91821289,-1579.46569824,-46.66991043,0.00000000,0.00000000,270.49987793); //object(sfnvilla001_cm) (5)
CreateDynamicObject(9339,1726.56652832,-1579.44494629,-45.26596832,0.00000000,0.00000000,270.49987793); //object(sfnvilla001_cm) (6)
CreateDynamicObject(9339,1744.67492676,-1578.91503906,-44.02746582,0.00000000,312.00000000,270.49987793); //object(sfnvilla001_cm) (7)
CreateDynamicObject(9339,1753.93103027,-1579.24230957,-52.21807861,0.00000000,0.00000000,269.99987793); //object(sfnvilla001_cm) (8)
CreateDynamicObject(9339,1753.90161133,-1579.24560547,-50.81413651,0.00000000,0.00000000,269.99450684); //object(sfnvilla001_cm) (9)
CreateDynamicObject(9339,1753.90307617,-1579.25439453,-49.41019440,0.00000000,0.00000000,269.99450684); //object(sfnvilla001_cm) (10)
CreateDynamicObject(9339,1753.86999512,-1579.25659180,-48.00625229,0.00000000,0.00000000,269.99450684); //object(sfnvilla001_cm) (11)
CreateDynamicObject(9339,1753.84350586,-1579.25756836,-46.60231018,0.00000000,0.00000000,269.99450684); //object(sfnvilla001_cm) (12)
CreateDynamicObject(9339,1752.61437988,-1579.24645996,-45.24837112,0.00000000,0.00000000,269.99450684); //object(sfnvilla001_cm) (13)
CreateDynamicObject(9339,1760.40637207,-1579.13586426,-45.34318161,0.00000000,0.00000000,270.49450684); //object(sfnvilla001_cm) (14)
CreateDynamicObject(9339,1722.93310547,-1543.16198730,-50.99047852,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (15)
CreateDynamicObject(9339,1723.53173828,-1543.16223145,-52.34073257,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (16)
CreateDynamicObject(9339,1716.26562500,-1543.21655273,-49.58653641,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (17)
CreateDynamicObject(9339,1719.88659668,-1543.17553711,-48.18259430,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (18)
CreateDynamicObject(9339,1719.48815918,-1543.17443848,-46.77865219,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (19)
CreateDynamicObject(9339,1720.07470703,-1543.13696289,-45.53613663,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (20)
CreateDynamicObject(9339,1739.07739258,-1542.98815918,-44.70337677,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (21)
CreateDynamicObject(9339,1753.71435547,-1543.23950195,-46.11571884,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (22)
CreateDynamicObject(9339,1753.70471191,-1543.24023438,-47.40096664,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (23)
CreateDynamicObject(9339,1743.43286133,-1543.38964844,-43.49567413,0.00000000,42.75000000,270.49450684); //object(sfnvilla001_cm) (24)
CreateDynamicObject(9339,1753.71533203,-1543.22583008,-48.68606949,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (25)
CreateDynamicObject(9339,1753.58325195,-1543.21289062,-50.07004166,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (26)
CreateDynamicObject(9339,1753.59875488,-1543.19665527,-51.36567307,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (27)
CreateDynamicObject(9339,1753.85510254,-1543.18823242,-52.71574020,0.00000000,0.00000000,270.49438477); //object(sfnvilla001_cm) (28)
CreateDynamicObject(9339,1744.54150391,-1544.29248047,-42.56487274,0.00000000,42.74780273,270.49438477); //object(sfnvilla001_cm) (29)
CreateDynamicObject(9339,1744.68347168,-1578.20092773,-43.20279312,0.00000000,311.99523926,270.49438477); //object(sfnvilla001_cm) (30)
CreateDynamicObject(9339,1744.67944336,-1577.16113281,-42.73591614,0.00000000,274.74520874,270.49438477); //object(sfnvilla001_cm) (31)
CreateDynamicObject(9339,1744.56311035,-1545.24462891,-41.90493393,0.21133423,64.99862671,270.79129028); //object(sfnvilla001_cm) (32)
CreateDynamicObject(2946,1763.73449707,-1579.15490723,-50.91715622,0.00000000,0.00000000,270.00000000); //object(cr_door_03) (1)
CreateDynamicObject(2773,1761.89160156,-1577.60656738,-50.39992905,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (1)
CreateDynamicObject(14537, 1777.017578, -1561.868164, -48.855495, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(8483, 1737.828125, -1540.638671, -47.408531, 0.000000, 0.000000, 264.495849);
CreateDynamicObject(8483, 1736.311035, -1582.308959, -47.785827, 0.000000, 0.000000, 85.745849);
CreateDynamicObject(2780, 1737.717407, -1575.394653, -53.317180, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2780, 1736.742919, -1547.453857, -52.672538, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1544, 1773.926513, -1557.407348, -49.685646, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1544, 1776.820434, -1556.658203, -49.685646, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1544, 1780.669311, -1557.399047, -49.685646, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1664, 1781.539550, -1562.406982, -49.518943, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1664, 1777.341186, -1567.209716, -49.518943, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1551, 1777.486816, -1566.983886, -49.445381, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1543, 1776.769409, -1566.958129, -49.685646, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(16091, 1748.570678, -1560.265136, -52.917156, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19129, 1734.949340, -1561.346313, -52.854656, 0.000000, 0.000000, 270.000000);
CreateDynamicObject(16091, 1722.751708, -1560.720581, -52.889801, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2291, 1775.048217, -1548.383422, -50.873710, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2291, 1773.435180, -1550.069702, -50.873710, 0.000000, 0.000000, 60.000000);
CreateDynamicObject(2292, 1777.541137, -1549.728759, -50.873710, 0.000000, 0.000000, 240.000000);
CreateDynamicObject(2291, 1780.779296, -1549.945068, -50.873710, 0.000000, 0.000000, 59.996337);
CreateDynamicObject(2291, 1782.733154, -1548.048095, -50.873710, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2292, 1784.962646, -1549.972167, -50.873710, 0.000000, 0.000000, 239.996337);
CreateDynamicObject(1823, 1774.962036, -1550.476684, -50.873710, 0.000000, 0.000000, 350.000000);
CreateDynamicObject(1823, 1782.536621, -1550.483886, -50.873710, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1754, 1767.680541, -1549.752441, -50.889801, 0.000000, 0.000000, 48.000000);
CreateDynamicObject(1754, 1770.095947, -1548.707275, -50.873710, 0.000000, 0.000000, 331.999267);
CreateDynamicObject(1754, 1770.734008, -1551.121704, -50.873710, 0.000000, 0.000000, 245.995849);
CreateDynamicObject(1823, 1768.289916, -1550.603393, -50.873710, 0.000000, 0.000000, 322.000000);
CreateDynamicObject(1753, 1769.782958, -1574.273437, -50.873710, 0.000000, 0.000000, 178.000000);
CreateDynamicObject(2291, 1766.751220, -1572.608032, -50.873710, 0.000000, 0.000000, 82.000000);
CreateDynamicObject(2292, 1771.477783, -1571.641479, -50.873710, 0.000000, 0.000000, 239.996337);
CreateDynamicObject(1823, 1768.228515, -1572.204833, -50.873710, 0.000000, 0.000000, 321.998291);
CreateDynamicObject(2292, 1785.365356, -1573.401489, -50.873710, 0.000000, 0.000000, 191.996337);
CreateDynamicObject(1753, 1782.083374, -1575.933959, -50.873710, 0.000000, 0.000000, 123.994995);
CreateDynamicObject(2291, 1781.850097, -1572.248779, -50.873710, 0.000000, 0.000000, 81.996459);
CreateDynamicObject(1823, 1782.505371, -1573.966430, -50.873710, 0.000000, 0.000000, 321.998291);
CreateDynamicObject(2072, 1786.391723, -1571.535766, -49.358314, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2072, 1779.221679, -1572.719726, -49.358314, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2072, 1773.023559, -1574.571166, -49.358314, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2072, 1767.088378, -1570.514526, -49.358314, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2072, 1773.610595, -1551.813110, -49.358314, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3533, 1712.319946, -1571.557373, -46.671592, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3533, 1711.994750, -1549.417724, -46.644241, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(18092, 1713.892700, -1560.475463, -50.628379, 0.000000, 0.000000, 270.500000);
CreateDynamicObject(3503, 1712.026367, -1561.656860, -45.583934, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3503, 1712.045776, -1559.111938, -45.606567, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1957, 1714.052734, -1559.864746, -50.045673, 0.000000, 0.000000, 0.250000);
CreateDynamicObject(1954, 1714.064453, -1561.095825, -50.045673, 0.000000, 0.000000, 0.250000);
CreateDynamicObject(1958, 1713.949829, -1560.467773, -50.077945, 0.000000, 0.000000, 270.750000);
CreateDynamicObject(1960, 1714.017822, -1559.844604, -49.977870, 271.820068, 105.930908, 21.188507);
CreateDynamicObject(1960, 1714.011962, -1561.098388, -49.977870, 271.818237, 105.930175, 21.187133);
CreateDynamicObject(18102, 1721.777221, -1565.780029, -46.981742, 40.000000, 0.000000, 270.000000);
CreateDynamicObject(18102, 1749.444580, -1555.725341, -46.964904, 39.995727, 0.000000, 89.750000);
CreateDynamicObject(2104, 1710.061767, -1561.303344, -50.892154, 0.000000, 0.000000, 92.000000);
CreateDynamicObject(2104, 1710.031738, -1560.722900, -50.889801, 0.000000, 0.000000, 91.999511);
CreateDynamicObject(2104, 1710.033203, -1560.150024, -50.889801, 0.000000, 0.000000, 91.999511);
CreateDynamicObject(2104, 1710.000122, -1559.573486, -50.889801, 0.000000, 0.000000, 91.999511);
CreateDynamicObject(2100, 1710.025634, -1560.815917, -49.539718, 0.000000, 0.000000, 90.750000);
CreateDynamicObject(2229, 1748.017578, -1554.542724, -50.389801, 0.000000, 0.000000, 290.000000);
CreateDynamicObject(2229, 1748.003295, -1554.516601, -48.988533, 0.000000, 0.000000, 289.995117);
CreateDynamicObject(2231, 1784.912109, -1546.933715, -47.542537, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2231, 1771.169189, -1546.812500, -47.451492, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2231, 1776.116455, -1546.856201, -47.446346, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2231, 1769.739868, -1576.905273, -47.992053, 0.000000, 0.000000, 180.500000);
CreateDynamicObject(2231, 1776.279296, -1576.758666, -47.913700, 0.000000, 0.000000, 180.499877);
CreateDynamicObject(2231, 1784.588012, -1576.832031, -47.989543, 0.000000, 0.000000, 180.499877);
CreateDynamicObject(2233, 1713.778686, -1562.320800, -50.141529, 0.000000, 0.000000, 118.000000);
CreateDynamicObject(2233, 1714.064575, -1558.067504, -50.127861, 0.000000, 0.000000, 59.998657);
CreateDynamicObject(2230, 1710.362792, -1562.573486, -50.917156, 0.000000, 0.000000, 100.250000);
CreateDynamicObject(2230, 1710.381958, -1562.563476, -49.620571, 0.000000, 0.000000, 100.244750);
CreateDynamicObject(2230, 1710.644287, -1557.820800, -50.889801, 0.000000, 0.000000, 72.244750);
CreateDynamicObject(2230, 1710.648437, -1557.824218, -49.641395, 0.000000, 0.000000, 70.990600);
CreateDynamicObject(2229, 1747.811645, -1566.676391, -49.225425, 0.000000, 0.000000, 228.000000);
CreateDynamicObject(2229, 1747.845825, -1566.670532, -50.577480, 0.000000, 0.000000, 227.999282);
CreateDynamicObject(2230, 1723.526123, -1554.125122, -46.196075, 0.000000, 0.000000, 64.988159);
CreateDynamicObject(2230, 1723.526123, -1554.130981, -47.472583, 0.000000, 0.000000, 64.984130);
CreateDynamicObject(2230, 1723.526123, -1554.128417, -48.768112, 0.000000, 0.000000, 64.984130);
CreateDynamicObject(2230, 1723.518432, -1554.137817, -50.063522, 0.000000, 0.000000, 64.984130);
CreateDynamicObject(2230, 1723.507202, -1566.626098, -46.103874, 0.000000, 0.000000, 122.244750);
CreateDynamicObject(2230, 1723.354980, -1566.713989, -47.424285, 0.000000, 0.000000, 122.239379);
CreateDynamicObject(2230, 1723.370483, -1566.712646, -48.708675, 0.000000, 0.000000, 122.239379);
CreateDynamicObject(2230, 1723.384277, -1566.711425, -49.970153, 0.000000, 0.000000, 122.239379);
CreateDynamicObject(19124, 1748.609008, -1553.640625, -52.325477, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1748.580932, -1566.879150, -52.352832, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1722.706542, -1567.489135, -52.352832, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1722.731689, -1553.971557, -52.325477, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19149, 1711.744628, -1561.698364, -46.783248, 0.000000, 0.000000, 279.500000);
CreateDynamicObject(19149, 1712.009033, -1559.119384, -46.847427, 0.000000, 0.000000, 244.247924);
CreateDynamicObject(19151, 1761.757690, -1564.397216, -45.386569, 0.000000, 0.000000, 86.000000);
CreateDynamicObject(19151, 1761.726684, -1557.484497, -45.388141, 5.750030, 0.000000, 92.245483);
CreateDynamicObject(19159, 1736.467041, -1560.246704, -45.122871, 0.000000, 0.000000, 292.000000);
CreateDynamicObject(3503, 1736.457641, -1560.208862, -43.672954, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19148, 1747.693603, -1564.571289, -45.658233, 0.000000, 0.000000, 67.500000);
CreateDynamicObject(19148, 1747.638061, -1555.799316, -45.483207, 0.000000, 0.000000, 73.497436);
CreateDynamicObject(19147, 1723.366210, -1565.841552, -45.766925, 0.000000, 0.000000, 276.000000);
CreateDynamicObject(19147, 1723.545410, -1557.462768, -45.582569, 0.000000, 0.000000, 265.996093);
CreateDynamicObject(19151, 1761.942016, -1561.371093, -45.396717, 0.000000, 0.000000, 85.995483);
CreateDynamicObject(19122, 1714.033203, -1571.224853, -50.352832, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1713.216918, -1549.317504, -50.325477, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1763.462036, -1550.094726, -50.325477, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1764.052368, -1571.952392, -50.254489, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2946, 1803.782836, -1563.728881, -48.450771, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(2946, 1803.806884, -1560.548217, -48.442459, 0.000000, 0.000000, 178.000000);
//Rejas cerrar transfender LV
CreateDynamicObject(980,2385.96093750,1043.56250000,12.59370422,0.00000000,0.00000000,0.00000000); //object(airportgate) (1)
CreateDynamicObject(980,1968.78955078,2162.33325195,12.59370422,0.00000000,0.00000000,270.00000000); //object(airportgate) (2)
CreateDynamicObject(980,-1421.79968262,2590.89697266,56.80568314,0.00000000,0.00000000,0.00000000); //object(airportgate) (3)
CreateDynamicObject(980,-1935.38757324,239.34281921,36.12965393,0.00000000,0.00000000,0.00000000); //object(airportgate) (4)
CreateDynamicObject(980,-2425.79125977,1028.10961914,52.17105103,0.00000000,0.00000000,0.00000000); //object(airportgate) (5)
CreateDynamicObject(971,-99.74066925,1111.51843262,20.36210823,0.00000000,0.00000000,0.00000000); //object(subwaygate) (1)
// Interior Militares Armeria
CreateDynamicObject(2205,251.99491882,2033.37866211,-7.76234436,0.00000000,0.00000000,90.25000000); //object(med_office8_desk_1)(2)
CreateDynamicObject(16656,253.78053284,2027.60839844,-4.76234436,0.00000000,0.00000000,0.00000000); //object(a51_rocketlab)(1)
CreateDynamicObject(14782,257.87554932,2035.70214844,-6.74629688,0.00000000,0.00000000,0.00000000); //object(int3int_boxing30)(1)
CreateDynamicObject(14782,263.86056519,2032.05310059,-6.77129698,0.00000000,0.00000000,270.25000000); //object(int3int_boxing30)(2)
CreateDynamicObject(2605,253.41371155,2026.79553223,-7.35682487,0.00000000,0.00000000,90.00000000); //object(polce_desk1)(1)
CreateDynamicObject(2606,264.14068604,2022.34460449,-4.67414236,0.00000000,0.00000000,272.25000000); //object(cj_police_counter2)(1)
CreateDynamicObject(14782,263.91711426,2025.14880371,-6.73921490,0.00000000,0.00000000,270.24719238); //object(int3int_boxing30)(3)
CreateDynamicObject(3794,248.20317078,2026.53479004,-7.16294241,0.00000000,0.00000000,359.75000000); //object(missile_07_sfxr)(1)
CreateDynamicObject(3794,244.49853516,2026.63598633,-7.16294241,0.00000000,0.00000000,359.74731445); //object(missile_07_sfxr)(2)
CreateDynamicObject(3795,244.54804993,2036.62731934,-7.42133904,0.00000000,0.00000000,0.00000000); //object(missile_04_sfxr)(1)
CreateDynamicObject(3795,248.99366760,2036.56054688,-7.42133904,0.00000000,0.00000000,0.00000000); //object(missile_04_sfxr)(2)
CreateDynamicObject(2951,247.34559631,2038.17883301,-7.79913712,0.00000000,0.00000000,179.75000000); //object(a51_labdoor)(1)
CreateDynamicObject(16782,258.82321167,2019.11987305,-6.26918650,0.00000000,0.00000000,91.25000000); //object(a51_radar_scan)(1)
CreateDynamicObject(1210,253.40109253,2026.97363281,-6.84128809,89.49993896,0.00000000,90.00000000); //object(briefcase)(1)
CreateDynamicObject(2254,262.54443359,2036.20312500,-5.85200024,0.00000000,0.00000000,0.00000000); //object(frame_clip_1)(1)
CreateDynamicObject(2811,253.54484558,2035.55078125,-7.76234436,0.00000000,0.00000000,39.00000000); //object(gb_romanpot01)(2)
CreateDynamicObject(2241,263.88464355,2024.14294434,-7.25854397,0.00000000,0.00000000,0.00000000); //object(plant_pot_5)(1)
CreateDynamicObject(2011,253.71002197,2020.56835938,-7.76220036,0.00000000,0.00000000,0.00000000); //object(nu_plant2_ofc)(1)
CreateDynamicObject(2619,261.98822021,2019.23388672,-6.31918573,0.00000000,0.00000000,274.25000000); //object(mp_ammoambient)(1)
CreateDynamicObject(2011,263.88497925,2035.67797852,-7.85511875,0.00000000,0.00000000,0.00000000); //object(nu_plant2_ofc)(2)
CreateDynamicObject(2614,258.92572021,2035.81481934,-3.94510818,0.00000000,0.00000000,0.00000000); //object(cj_us_flag)(1)
CreateDynamicObject(2612,252.95281982,2027.10571289,-5.89596510,0.00000000,0.00000000,90.25000000); //object(police_nb2)(1)
CreateDynamicObject(2967,253.73011780,2027.63757324,-6.93972540,0.00000000,0.00000000,0.00000000); //object(mobile1993a)(1)
CreateDynamicObject(14782,242.34774780,2030.46362305,-6.73921490,0.00000000,0.00000000,89.74719238); //object(int3int_boxing30)(4)
CreateDynamicObject(2064,242.77241516,2035.06872559,-7.13312387,0.00000000,0.00000000,0.00000000); //object(cj_feildgun)(1)
CreateDynamicObject(2061,252.21388245,2035.14282227,-6.53395224,0.00000000,0.00000000,0.00000000); //object(cj_shells1)(1)
CreateDynamicObject(2061,251.83770752,2035.13806152,-6.53395224,0.00000000,0.00000000,0.00000000); //object(cj_shells1)(2)
CreateDynamicObject(2061,251.84693909,2034.93847656,-6.53395224,0.00000000,0.00000000,0.00000000); //object(cj_shells1)(3)
CreateDynamicObject(2061,252.22109985,2034.95214844,-6.53395224,0.00000000,0.00000000,0.00000000); //object(cj_shells1)(4)
CreateDynamicObject(2061,251.86299133,2034.74328613,-6.53395224,0.00000000,0.00000000,0.00000000); //object(cj_shells1)(5)
CreateDynamicObject(2061,252.20904541,2034.75427246,-6.53395224,0.00000000,0.00000000,0.00000000); //object(cj_shells1)(6)
CreateDynamicObject(1337,252.15600586,2034.41625977,-6.74778032,278.89382935,127.97528076,35.31176758); //object(1)
CreateDynamicObject(1337,251.88641357,2033.64379883,-6.77588224,278.48489380,42.76660156,316.45245361); //object(2)
CreateDynamicObject(1337,252.20182800,2033.00256348,-6.70088196,0.00000000,22.00000000,0.00000000); //object(3)
CreateDynamicObject(1337,252.21644592,2033.06677246,-6.70088196,0.00000000,21.99462891,0.00000000); //object(4)
CreateDynamicObject(2955,252.82812500,2025.09484863,-6.56359816,0.00000000,0.00000000,359.75000000); //object(imy_compin)(1)
CreateDynamicObject(2955,252.78659058,2022.35766602,-6.57068014,0.00000000,0.00000000,179.24743652); //object(imy_compin)(2)
CreateDynamicObject(1649,252.85073853,2023.53942871,-3.74659300,0.00000000,0.00000000,89.75000000); //object(wglasssmash)(1)
CreateDynamicObject(1508,252.72532654,2023.30541992,-7.15403891,0.00000000,0.00000000,359.00000000); //object(dyn_garage_door)(1)
CreateDynamicObject(964,251.79437256,2026.17663574,-7.76234436,0.00000000,0.00000000,0.75000000); //object(cj_metal_crate)(1)
CreateDynamicObject(964,250.36143494,2026.16589355,-7.76234436,0.00000000,0.00000000,179.50000000); //object(cj_metal_crate)(2)
CreateDynamicObject(1348,251.53036499,2036.62829590,-7.05981779,0.00000000,0.00000000,270.50000000); //object(cj_o2tanks)(1)
CreateDynamicObject(1578,251.74107361,2034.40527344,-6.84845972,0.00000000,0.00000000,0.00000000); //object(drug_green)(1)
CreateDynamicObject(1578,251.72775269,2034.41186523,-6.70874214,0.00000000,0.00000000,0.00000000); //object(drug_green)(2)
CreateDynamicObject(3264,95.71330261,1922.87158203,17.09635925,0.00000000,0.00000000,296.00000000); //object(privatesign3)(1)
CreateDynamicObject(3263,349.76940918,1800.30395508,17.58733749,0.00000000,0.00000000,0.00000000); //object(privatesign2)(1)
// Cuarteles
CreateDynamicObject(16150,2911.38671875,2132.02832031,-0.67968750,0.00000000,0.00000000,357.99499512); //object(ufo_barinterior) (1)
CreateDynamicObject(14842,2918.41918945,2132.07641602,-0.08257473,0.00000000,0.00000000,269.00000000); //object(int_policea07) (1)
CreateDynamicObject(2738,2919.18725586,2125.79589844,-0.06902504,0.00000000,0.00000000,178.00000000); //object(cj_toilet_bs) (1)
CreateDynamicObject(2738,2917.95947266,2125.76635742,-0.06902504,0.00000000,0.00000000,177.99499512); //object(cj_toilet_bs) (2)
CreateDynamicObject(2738,2916.61914062,2125.77783203,-0.06902504,0.00000000,0.00000000,177.99499512); //object(cj_toilet_bs) (3)
CreateDynamicObject(2739,2915.72265625,2130.07666016,-0.64300251,0.00000000,0.00000000,86.00000000); //object(cj_b_sink1) (1)
CreateDynamicObject(2603,2909.25463867,2136.75048828,-0.21862763,0.00000000,0.00000000,266.25000000); //object(police_cell_bed) (1)
CreateDynamicObject(2603,2909.19555664,2134.43017578,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (2)
CreateDynamicObject(2603,2909.06030273,2131.92919922,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (3)
CreateDynamicObject(2603,2913.96582031,2136.75756836,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (4)
CreateDynamicObject(2603,2913.87060547,2133.76928711,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (5)
CreateDynamicObject(2603,2913.84692383,2131.59375000,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (6)
CreateDynamicObject(2603,2908.90722656,2129.15844727,-0.21862763,0.00000000,0.00000000,266.24816895); //object(police_cell_bed) (7)
CreateDynamicObject(2596,2911.75000000,2137.87133789,1.69875479,0.00000000,0.00000000,0.00000000); //object(cj_sex_tv) (1)
CreateDynamicObject(2331,2907.95239258,2130.53564453,-0.42821521,0.00000000,0.00000000,0.00000000); //object(cj_bed_furn_1) (1)
CreateDynamicObject(2331,2907.88208008,2133.12353516,-0.42821521,0.00000000,0.00000000,0.00000000); //object(cj_bed_furn_1) (2)
CreateDynamicObject(2331,2908.10937500,2135.66601562,-0.42821521,0.00000000,0.00000000,0.00000000); //object(cj_bed_furn_1) (3)
CreateDynamicObject(2331,2914.83081055,2135.27392578,-0.42821521,0.00000000,0.00000000,0.00000000); //object(cj_bed_furn_1) (4)
CreateDynamicObject(2331,2914.93212891,2132.67895508,-0.42821521,0.00000000,0.00000000,0.00000000); //object(cj_bed_furn_1) (5)
CreateDynamicObject(2002,2912.03564453,2119.21630859,-0.07541287,0.00000000,0.00000000,178.00000000); //object(water_coolnu) (1)
CreateDynamicObject(1828,2909.48168945,2126.70898438,-0.67968750,0.00000000,0.00000000,0.00000000); //object(man_sdr_rug) (1)
CreateDynamicObject(1481,2914.12426758,2119.21435547,0.61733305,0.00000000,0.00000000,219.75000000); //object(dyn_bar_b_q) (1)
CreateDynamicObject(2762,2909.51318359,2121.48510742,0.31939495,0.00000000,0.00000000,0.00000000); //object(cj_chick_table) (1)
CreateDynamicObject(2762,2909.51806641,2122.52612305,0.31939495,0.00000000,0.00000000,0.00000000); //object(cj_chick_table) (2)
CreateDynamicObject(2762,2911.58984375,2122.53100586,0.32706249,0.00000000,0.00000000,0.00000000); //object(cj_chick_table) (3)
CreateDynamicObject(2762,2911.58325195,2121.49291992,0.31939495,0.00000000,0.00000000,0.00000000); //object(cj_chick_table) (4)
CreateDynamicObject(2121,2911.63989258,2120.15551758,0.42747712,0.00000000,0.00000000,180.00000000); //object(low_din_chair_2) (1)
CreateDynamicObject(2121,2910.44311523,2120.15673828,0.42747712,0.00000000,0.00000000,179.99450684); //object(low_din_chair_2) (2)
CreateDynamicObject(2121,2909.40649414,2120.12133789,0.42747712,0.00000000,0.00000000,179.99450684); //object(low_din_chair_2) (3)
CreateDynamicObject(2121,2909.31469727,2124.02441406,0.42747712,0.00000000,0.00000000,358.24450684); //object(low_din_chair_2) (4)
CreateDynamicObject(2121,2910.70751953,2124.03564453,0.42747712,0.00000000,0.00000000,358.24218750); //object(low_din_chair_2) (5)
CreateDynamicObject(2121,2911.96997070,2124.01025391,0.42747712,0.00000000,0.00000000,358.24218750); //object(low_din_chair_2) (6)
//===== Prisión Militar
CreateDynamicObject(14412,615.78137207,847.28698730,-81.85933685,0.00000000,0.00000000,0.00000000); //object(carter_drugfloor) (1)
CreateDynamicObject(2951,633.22283936,839.21752930,-91.25302887,0.00000000,0.00000000,269.50000000); //object(a51_labdoor) (2)
CreateDynamicObject(974,606.24859619,860.64294434,-90.20045471,0.00000000,0.00000000,270.00000000); //object(tall_fence) (1)
CreateDynamicObject(974,615.07238770,860.68023682,-89.92543793,0.00000000,0.00000000,270.00000000); //object(tall_fence) (2)
CreateDynamicObject(974,624.01391602,860.53326416,-90.20039368,0.00000000,0.00000000,270.00000000); //object(tall_fence) (3)
CreateDynamicObject(10244,600.36383057,839.32269287,-90.67967224,0.00000000,0.00000000,180.25000000); //object(vicjump_sfe) (1)
CreateDynamicObject(1998,632.31713867,857.31060791,-91.20308685,0.00000000,0.00000000,179.50000000); //object(officedesk1l) (2)
CreateDynamicObject(1998,628.27124023,858.33392334,-91.20308685,0.00000000,0.00000000,89.99450684); //object(officedesk1l) (3)
CreateDynamicObject(2309,628.80157471,859.26489258,-91.20308685,0.00000000,0.00000000,90.00000000); //object(med_office_chair2) (1)
CreateDynamicObject(2309,631.39935303,857.62768555,-91.20308685,0.00000000,0.00000000,179.00000000); //object(med_office_chair2) (2)
CreateDynamicObject(15038,632.41613770,860.59429932,-90.58589935,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (1)
CreateDynamicObject(15038,628.83160400,852.79248047,-90.58589935,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (2)
CreateDynamicObject(3851,592.82928467,844.12921143,-82.97804260,0.00000000,0.00000000,358.50000000); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,592.86151123,849.48962402,-82.96470642,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(5856,584.18750000,839.34197998,-85.03285217,0.00000000,0.00000000,0.00000000); //object(lawnspraydoor1) (1)
CreateDynamicObject(982,615.98748779,837.23931885,-86.36843872,0.00000000,0.00000000,270.00000000); //object(fenceshit) (3)
CreateDynamicObject(982,616.12329102,857.30126953,-86.36559296,0.00000000,0.00000000,270.00000000); //object(fenceshit) (4)
CreateDynamicObject(983,629.09228516,840.83258057,-86.35546875,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (4)
CreateDynamicObject(983,629.07537842,847.23492432,-86.35546875,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (5)
CreateDynamicObject(983,629.06280518,853.64178467,-86.35546875,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (6)
CreateDynamicObject(983,600.14123535,857.22741699,-86.37047577,0.00000000,0.00000000,270.75000000); //object(fenceshit3) (7)
CreateDynamicObject(983,596.14746094,857.14874268,-86.35546875,0.00000000,0.00000000,270.74707031); //object(fenceshit3) (8)
CreateDynamicObject(983,601.59661865,837.24938965,-86.35546875,0.00000000,0.00000000,270.74707031); //object(fenceshit3) (9)
CreateDynamicObject(1215,629.11126709,837.23767090,-86.47470093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
CreateDynamicObject(1215,629.08911133,857.16937256,-86.47470093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
CreateDynamicObject(1215,593.76672363,837.14868164,-86.47470093,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
CreateDynamicObject(1216,597.79144287,850.98852539,-90.51108551,0.00000000,0.00000000,91.75000000); //object(phonebooth1) (2)
CreateDynamicObject(1216,597.75109863,851.58166504,-90.51108551,0.00000000,0.00000000,91.74682617); //object(phonebooth1) (3)
CreateDynamicObject(1216,597.72137451,852.15960693,-90.51108551,0.00000000,0.00000000,91.74682617); //object(phonebooth1) (4)
CreateDynamicObject(2606,587.20196533,861.26373291,-83.88135529,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (2)
CreateDynamicObject(2606,589.18109131,861.26373291,-83.87923431,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (3)
CreateDynamicObject(2606,589.16925049,861.26373291,-84.32472992,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (4)
CreateDynamicObject(2606,587.18566895,861.26373291,-84.33766174,0.00000000,0.00000000,0.00000000); //object(cj_police_counter2) (5)
CreateDynamicObject(2609,585.38281250,861.26373291,-86.32429504,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (1)
CreateDynamicObject(2609,585.84710693,861.24859619,-86.30731201,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (2)
CreateDynamicObject(2609,586.30236816,861.25897217,-86.30731201,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (3)
CreateDynamicObject(2609,586.75256348,861.25360107,-86.30731201,0.00000000,0.00000000,0.00000000); //object(cj_p_fileing1) (4)
CreateDynamicObject(2604,589.21783447,860.75445557,-86.24214935,0.00000000,0.00000000,0.00000000); //object(cj_police_counter) (1)
CreateDynamicObject(1703,588.35546875,844.76611328,-87.03902435,0.00000000,0.00000000,181.00000000); //object(kb_couch02) (1)
CreateDynamicObject(1703,586.39172363,849.75042725,-87.03902435,0.00000000,0.00000000,358.99975586); //object(kb_couch02) (2)
CreateDynamicObject(2074,602.54382324,859.65155029,-87.64872742,0.00000000,0.00000000,0.00000000); //object(cj_mlight8) (1)
CreateDynamicObject(2109,587.43835449,846.94415283,-86.64791870,0.00000000,0.00000000,0.00000000); //object(low_dinning_3) (1)
CreateDynamicObject(2106,587.45599365,846.86895752,-86.22494507,0.00000000,0.00000000,0.00000000); //object(cj_mlight15) (1)
CreateDynamicObject(2256,591.50878906,861.23937988,-83.41544342,0.00000000,0.00000000,0.00000000); //object(frame_clip_3) (1)
CreateDynamicObject(2239,585.50231934,849.75665283,-87.03902435,0.00000000,0.00000000,0.00000000); //object(cj_mlight16) (1)
CreateDynamicObject(1671,590.48974609,859.27911377,-86.57881165,0.00000000,0.00000000,182.00000000); //object(swivelchair_a) (1)
CreateDynamicObject(2165,584.96478271,854.24078369,-87.03902435,0.00000000,0.00000000,88.75000000); //object(med_office_desk_1) (1)
CreateDynamicObject(1671,586.52288818,854.71789551,-86.57881165,0.00000000,0.00000000,263.99951172); //object(swivelchair_a) (2)
CreateDynamicObject(1670,586.98498535,847.14306641,-86.22494507,0.00000000,0.00000000,0.00000000); //object(propcollecttable) (1)
CreateDynamicObject(2922,592.47760010,838.94757080,-85.86143494,0.00000000,0.00000000,90.00000000); //object(kmb_keypad) (1)
CreateDynamicObject(2921,592.50012207,836.91625977,-82.11330414,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (1)
CreateDynamicObject(2921,632.99652100,837.03424072,-88.60442352,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (2)
CreateDynamicObject(2921,597.24102783,855.04864502,-87.35303497,354.04174805,353.21316528,223.29225159); //object(kmb_cam) (3)
CreateDynamicObject(3387,592.18200684,857.08758545,-87.03902435,0.00000000,0.00000000,0.00000000); //object(a51_srack3_) (1)
CreateDynamicObject(3387,592.19024658,856.08770752,-87.03902435,0.00000000,0.00000000,0.00000000); //object(a51_srack3_) (2)
CreateDynamicObject(3387,592.16955566,855.12414551,-87.03902435,0.00000000,0.00000000,0.00000000); //object(a51_srack3_) (3)
CreateDynamicObject(14855,629.89465332,856.10174561,-88.05695343,0.00000000,0.00000000,261.50000000); //object(counterb) (1)
CreateDynamicObject(8957,593.48791504,857.30523682,-90.28941345,0.00000000,0.00000000,270.00000000); //object(vgsespdr01) (1)
CreateDynamicObject(8957,593.59973145,854.81341553,-91.23956299,0.02835083,270.49926758,269.99987793); //object(vgsespdr01) (2)
CreateDynamicObject(2776,595.00518799,856.38317871,-90.64956665,0.00000000,0.00000000,0.00000000); //object(lee_stripchair2) (1)
CreateDynamicObject(3657,593.42749023,844.82995605,-90.68487549,0.00000000,0.00000000,90.00000000); //object(airseata_las) (1)
CreateDynamicObject(1215,593.27801514,846.91503906,-90.63876343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
CreateDynamicObject(1215,606.20446777,838.54064941,-90.63876343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
CreateDynamicObject(2603,598.73052979,859.89050293,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (1)
CreateDynamicObject(2603,605.04431152,860.02496338,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (2)
CreateDynamicObject(2603,607.45782471,859.71130371,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (3)
CreateDynamicObject(2603,612.94519043,859.16772461,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (4)
CreateDynamicObject(2603,615.77783203,859.77984619,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (5)
CreateDynamicObject(2603,622.72192383,859.67974854,-90.74983978,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (6)
CreateDynamicObject(2596,584.77294922,847.07635498,-83.84789276,12.75000000,0.00000000,90.00000000); //object(cj_sex_tv) (1)
// SAEM LS (by Tinged Price)
CreateDynamicObject(987, 2762.60, -2565.60, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2729.90, -2565.60, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2718.00, -2565.60, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2741.90, -2565.60, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2706.00, -2565.60, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2694.10, -2565.60, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2682.10, -2565.60, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2670.10, -2565.60, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2670.20, -2553.70, 12.60,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2670.20, -2541.70, 12.60,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2670.20, -2529.70, 12.60,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2670.20, -2517.80, 12.60,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2670.10, -2512.80, 12.60,   0.00, 0.00, 272.00);
CreateDynamicObject(3749, 2671.70, -2503.80, 18.40,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2670.20, -2482.30, 12.60,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2670.20, -2470.30, 12.60,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2670.20, -2458.80, 12.60,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2658.20, -2458.80, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2646.20, -2458.80, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2634.20, -2458.80, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2618.90, -2458.60, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2611.90, -2449.70, 12.60,   0.00, 0.00, 310.00);
CreateDynamicObject(987, 2611.70, -2437.90, 11.60,   0.00, 0.00, 272.00);
CreateDynamicObject(3115, 2744.40, -2365.70, 28.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2744.40, -2352.10, 28.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2723.40, -2352.10, 28.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2702.40, -2352.10, 28.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2681.40, -2352.10, 28.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2660.50, -2352.10, 28.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2639.30, -2352.10, 28.50,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2744.40, -2379.00, 28.50,   0.00, 0.00, 179.99);
CreateDynamicObject(3114, 2723.40, -2379.00, 28.50,   0.00, 0.00, 179.99);
CreateDynamicObject(3114, 2702.40, -2379.00, 28.50,   0.00, 0.00, 179.99);
CreateDynamicObject(3114, 2681.40, -2379.00, 28.50,   0.00, 0.00, 179.99);
CreateDynamicObject(3114, 2660.50, -2379.00, 28.50,   0.00, 0.00, 179.99);
CreateDynamicObject(3114, 2639.30, -2379.00, 28.50,   0.00, 0.00, 179.99);
CreateDynamicObject(3115, 2723.20, -2365.70, 28.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2702.10, -2365.70, 28.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2681.00, -2365.70, 28.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2659.90, -2365.70, 28.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2639.20, -2365.70, 28.80,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2751.50, -2346.80, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2744.80, -2346.80, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2738.30, -2346.80, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2731.80, -2346.80, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2725.30, -2346.80, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2718.80, -2346.80, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2632.00, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2638.60, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2645.30, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2652.00, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2658.60, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2665.20, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2671.70, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2678.40, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2685.10, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2691.80, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2698.50, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2705.00, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2711.50, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2717.80, -2346.90, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2751.30, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2744.80, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2738.30, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2731.80, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2725.30, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2718.80, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2712.30, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2705.80, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2699.30, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2692.80, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2686.30, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2679.80, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2673.30, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2666.80, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2660.30, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2653.80, -2384.70, 26.10,   0.00, 0.00, 2.00);
CreateDynamicObject(974, 2647.30, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2640.80, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2632.30, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2635.80, -2384.70, 26.10,   0.00, 0.00, 0.00);
CreateDynamicObject(974, 2629.00, -2381.30, 26.10,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2629.00, -2374.80, 26.10,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2629.00, -2368.30, 26.30,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2629.00, -2361.80, 26.30,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2629.00, -2355.30, 26.10,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2629.00, -2350.30, 26.10,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2754.50, -2350.10, 25.90,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2754.40, -2356.80, 26.10,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2754.40, -2363.50, 26.30,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2754.40, -2370.00, 26.30,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2754.40, -2376.50, 26.10,   0.00, 0.00, 270.00);
CreateDynamicObject(974, 2754.40, -2381.50, 26.10,   0.00, 0.00, 270.00);
CreateDynamicObject(3884, 2750.80, -2348.70, 29.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3277, 2751.10, -2350.30, 29.60,   0.00, 0.00, 170.00);
CreateDynamicObject(3277, 2633.10, -2350.30, 29.10,   0.00, 0.00, 169.99);
CreateDynamicObject(3884, 2632.70, -2348.70, 29.40,   0.00, 0.00, 0.00);
CreateDynamicObject(12942, 2743.90, -2471.00, 12.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1082, 2736.30, -2472.90, 14.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1082, 2736.30, -2471.80, 14.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1082, 2736.30, -2472.90, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1082, 2736.30, -2471.80, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1193, 2736.20, -2469.00, 14.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1193, 2736.20, -2469.00, 13.40,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2616.50, -2383.80, 12.60,   0.00, 0.00, 272.00);
CreateDynamicObject(987, 2616.40, -2371.90, 12.60,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2616.30, -2412.00, 12.60,   0.00, 0.00, 272.00);
CreateDynamicObject(3749, 2617.40, -2404.50, 18.30,   0.00, 0.00, 270.00);
CreateDynamicObject(1186, 2745.40, -2467.20, 16.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1186, 2745.40, -2467.20, 15.70,   0.00, 0.00, 0.00);
CreateDynamicObject(936, 2746.20, -2467.80, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(937, 2744.20, -2467.70, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2509, 2745.60, -2467.20, 16.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2509, 2746.90, -2467.20, 16.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2509, 2736.20, -2473.00, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(2509, 2736.20, -2471.80, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(2509, 2736.20, -2471.80, 12.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2509, 2736.20, -2473.00, 12.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2509, 2736.10, -2469.10, 13.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2509, 2736.10, -2469.10, 13.50,   0.00, 0.00, 89.99);
CreateDynamicObject(2509, 2736.10, -2470.30, 13.50,   0.00, 0.00, 89.99);
CreateDynamicObject(2509, 2736.10, -2470.30, 14.00,   0.00, 0.00, 89.99);
CreateDynamicObject(2509, 2736.10, -2469.00, 14.00,   0.00, 0.00, 89.99);
CreateDynamicObject(3017, 2744.00, -2467.90, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2894, 2744.10, -2467.70, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2238, 2744.80, -2467.50, 14.30,   0.00, 0.00, 0.00);
CreateDynamicObject(3350, 2750.60, -2455.30, 15.70,   0.00, 0.00, 90.00);
CreateDynamicObject(2966, 2744.60, -2468.00, 14.00,   0.00, 0.00, 320.00);
CreateDynamicObject(2961, 2750.80, -2474.80, 14.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2611, 2741.69, -2467.30, 14.23,   0.00, 0.00, 0.00);
CreateDynamicObject(1518, 2746.50, -2467.70, 14.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2826, 2745.70, -2467.80, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(4697, 2731.90, -2398.90, 12.70,   0.00, 0.00, 270.00);
CreateDynamicObject(1215, 2725.10, -2390.50, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2729.60, -2390.50, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2734.30, -2390.50, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2738.80, -2390.50, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2743.30, -2390.50, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2747.80, -2390.50, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 2752.30, -2390.50, 13.20,   0.00, 0.00, 0.00);
CreateDynamicObject(11010, 2767.90, -2529.40, 18.60,   0.00, 0.00, 270.00);
CreateDynamicObject(987, 2774.50, -2565.80, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2786.50, -2565.90, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2798.50, -2565.80, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2810.50, -2566.10, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2554.00, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2542.30, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2530.30, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2518.50, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2518.50, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2506.50, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2494.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2482.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2470.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2458.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2446.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2434.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2422.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2410.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2398.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2386.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2374.80, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2363.00, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2351.00, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.50, -2342.00, 12.60,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 2810.60, -2330.40, 12.60,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 2798.50, -2330.50, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2786.50, -2330.50, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2774.60, -2330.50, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2762.60, -2330.70, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2750.60, -2330.60, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2738.60, -2330.50, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2726.80, -2330.70, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2714.80, -2330.60, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2708.80, -2330.60, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2684.90, -2330.60, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2672.70, -2330.40, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2660.70, -2330.30, 12.60,   0.00, 0.00, 181.99);
CreateDynamicObject(987, 2648.70, -2330.70, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2648.70, -2330.70, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2636.70, -2330.60, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2627.70, -2330.59, 12.60,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 2616.50, -2330.60, 12.60,   0.00, 0.00, 269.99);
CreateDynamicObject(987, 2616.40, -2342.50, 12.60,   0.00, 0.00, 269.99);
CreateDynamicObject(11010, 2782.90, -2529.40, 18.60,   0.00, 0.00, 270.00);
CreateDynamicObject(3114, 2626.90, -2352.10, 28.49,   0.00, 0.00, 0.00);
CreateDynamicObject(3115, 2627.00, -2365.70, 28.78,   0.00, 0.00, 0.00);
CreateDynamicObject(3114, 2627.00, -2379.00, 28.49,   0.00, 0.00, 179.99);
CreateDynamicObject(3788, 2639.50, -2350.70, 29.60,   0.00, 0.00, 270.00);
CreateDynamicObject(3788, 2640.80, -2350.70, 29.60,   0.00, 0.00, 270.00);
CreateDynamicObject(3788, 2642.00, -2350.70, 29.60,   0.00, 0.00, 270.00);
CreateDynamicObject(3788, 2643.30, -2350.70, 29.60,   0.00, 0.00, 270.00);
CreateDynamicObject(3790, 2643.30, -2350.80, 29.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3790, 2642.00, -2350.80, 29.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3790, 2639.50, -2350.80, 29.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3791, 2643.90, -2354.60, 29.50,   0.00, 0.00, 310.00);
CreateDynamicObject(3786, 2646.00, -2349.40, 29.50,   0.00, 0.00, 210.00);
CreateDynamicObject(3786, 2646.40, -2350.00, 29.50,   0.00, 0.00, 210.00);
CreateDynamicObject(3786, 2646.80, -2350.60, 29.50,   0.00, 0.00, 210.00);
CreateDynamicObject(3786, 2646.60, -2350.20, 29.70,   318.00, 0.00, 210.00);
CreateDynamicObject(3786, 2646.20, -2349.60, 29.70,   318.00, 0.00, 210.00);
CreateDynamicObject(3786, 2646.50, -2350.00, 30.00,   318.00, 0.00, 210.00);
CreateDynamicObject(3787, 2646.30, -2353.40, 29.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1337, 1339.91, -38.33, -80.31,   0.00, 0.00, 0.00);
CreateDynamicObject(2632, 1374.90, -69.10, -30.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2509, 2736.10, -2469.10, 13.50,   0.00, 0.00, 89.99);
CreateDynamicObject(987, 2625.20, -2458.60, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 2696.80, -2330.80, 12.30,   0.00, 0.00, 179.99);
saem1 = CreateDynamicObject(971, 2758.20, -2565.70, 16.20,   0.00, 0.00, 0.00);
saem2 = CreateDynamicObject(980, 2671.70, -2504.00, 15.30,   0.00, 0.00, 90.00);
saem3 = CreateDynamicObject(980, 2617.10, -2404.50, 15.30,   0.00, 0.00, 90.00);
// Hitman
CreateDynamicObject(987, -292.57, -2170.57, 27.40,   0.00, 0.00, 292.00);
CreateDynamicObject(3749, -283.16, -2190.07, 33.50,   0.00, 0.00, 294.00);
CreateDynamicObject(987, -296.94, -2159.58, 27.30,   0.00, 0.00, 291.99);
CreateDynamicObject(987, -300.35, -2150.96, 27.30,   0.00, 0.00, 291.07);
CreateDynamicObject(987, -303.90, -2142.00, 27.20,   0.00, 0.00, 291.99);
CreateDynamicObject(987, -292.20, -2139.00, 27.50,   0.00, 0.00, 193.99);
CreateDynamicObject(987, -280.30, -2137.70, 27.50,   0.00, 0.00, 185.99);
CreateDynamicObject(987, -268.40, -2138.10, 27.60,   0.00, 0.00, 177.99);
CreateDynamicObject(987, -257.10, -2141.80, 27.70,   0.00, 0.00, 161.98);
CreateDynamicObject(987, -255.50, -2153.40, 28.00,   0.00, 0.00, 97.98);
CreateDynamicObject(987, -253.80, -2165.20, 28.00,   0.00, 0.00, 97.98);
CreateDynamicObject(987, -252.20, -2177.10, 28.00,   0.00, 0.00, 97.98);
CreateDynamicObject(987, -248.90, -2188.60, 28.10,   0.00, 0.00, 105.98);
CreateDynamicObject(987, -245.60, -2200.10, 28.10,   0.00, 0.00, 105.98);
CreateDynamicObject(987, -242.30, -2211.60, 28.00,   0.00, 0.00, 105.98);
CreateDynamicObject(987, -242.60, -2223.60, 27.80,   0.00, 0.00, 87.98);
CreateDynamicObject(987, -243.30, -2235.63, 27.79,   0.00, 0.00, 87.22);
CreateDynamicObject(987, -243.84, -2241.67, 28.10,   0.00, 0.00, 86.53);
CreateDynamicObject(987, -252.33, -2248.81, 28.10,   0.00, 0.00, 42.36);
CreateDynamicObject(987, -258.56, -2238.92, 28.00,   0.00, 0.00, 302.22);
CreateDynamicObject(987, -263.28, -2231.24, 27.90,   0.00, 0.00, 301.19);
CreateDynamicObject(987, -269.36, -2220.93, 27.80,   0.00, 0.00, 299.97);
CreateDynamicObject(987, -274.91, -2210.56, 27.70,   0.00, 0.00, 297.97);
CreateDynamicObject(987, -280.10, -2199.80, 27.60,   0.00, 0.00, 295.96);
mafia2 = CreateDynamicObject(980, -284.00, -2190.38, 30.40,   0.00, 0.00, 114.00);
// mapas informativos ls
CreateDynamicObject(1444, 1181.39,-1317.95,13.62,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 772.53, -1327.30, 13.35,   0.00, 0.00, 274.29);
CreateDynamicObject(1444, 1813.88, -1901.38, 13.36,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1639.07, -2187.55, 13.37,   0.00, 0.00, 270.12);
CreateDynamicObject(1444, 1839.23, -1422.26, 13.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1193.81, -1156.84, 23.69,   0.00, 0.00, 266.00);
CreateDynamicObject(1444, 456.63, -1494.42, 30.89,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1450.84, -1026.94, 23.62,   0.00, 0.00, 278.03);
CreateDynamicObject(1444, 2089.01, -1824.00, 13.34,   0.00, 0.00, 0.00);
CreateDynamicObject(1444, 1718.75,-1866.16,13.57,   0.00, 0.00, 0.00);
// Iglesia
CreateDynamicObject(9931,1486.55859375,837.69335938,-53.95624542,0.00000000,0.00000000,180.99975586); //object(church_sfe) (2)
CreateDynamicObject(9931,1485.95117188,870.78906250,-53.95635223,0.00000000,0.00000000,180.99975586); //object(church_sfe) (3)
CreateDynamicObject(3976,1489.52539062,835.36523438,-53.31316376,0.00000000,0.00000000,90.98876953); //object(policest02_lan) (1)
CreateDynamicObject(3976,1448.45214844,854.00976562,-49.58849335,0.00000000,0.00000000,180.24719238); //object(policest02_lan) (2)
CreateDynamicObject(11472,1492.43750000,854.27636719,-70.11368561,0.00000000,268.49768066,0.99975586); //object(des_swtstairs1) (2)
CreateDynamicObject(11472,1489.43359375,854.22167969,-70.18869019,0.00000000,268.24768066,0.99975586); //object(des_swtstairs1) (3)
CreateDynamicObject(6959,1480.74401855,851.49420166,-54.48571777,0.00000000,0.00000000,0.00000000); //object(vegasnbball1) (1)
CreateDynamicObject(2960,1491.72595215,854.18212891,-64.32915497,0.02041626,270.74963379,1.99993896); //object(kmb_beam) (2)
CreateDynamicObject(2960,1491.72863770,854.18023682,-65.28768158,0.02041626,270.74963379,1.99993896); //object(kmb_beam) (3)
CreateDynamicObject(2960,1491.70715332,854.12542725,-63.57369995,88.52954102,210.79498291,60.94931030); //object(kmb_beam) (4)
CreateDynamicObject(1698,1486.35900879,853.74407959,-70.09292603,0.00000000,0.00000000,0.25000000); //object(esc_step8) (1)
CreateDynamicObject(1698,1486.70971680,853.75299072,-69.92232513,0.00000000,0.00000000,0.25000000); //object(esc_step8) (2)
CreateDynamicObject(2946,1464.31726074,852.26568604,-70.05713654,0.00000000,0.00000000,359.75000000); //object(cr_door_03) (1)
CreateDynamicObject(2946,1464.34863281,855.48071289,-70.06368256,0.00000000,0.00000000,179.75000000); //object(cr_door_03) (2)
CreateDynamicObject(3872,1494.89172363,854.16369629,-60.79240799,0.00000000,145.24475098,0.00000000); //object(ws_floodbeams) (1)
CreateDynamicObject(3657,1478.32458496,857.01525879,-69.59547424,0.00000000,0.00000000,88.75000000); //object(airseata_las) (1)
CreateDynamicObject(3657,1476.19604492,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (2)
CreateDynamicObject(3657,1473.94482422,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (3)
CreateDynamicObject(3657,1471.98486328,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (4)
CreateDynamicObject(3657,1471.85913086,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (5)
CreateDynamicObject(3657,1473.80468750,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (6)
CreateDynamicObject(3657,1475.80883789,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (7)
CreateDynamicObject(3657,1478.21154785,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (8)
CreateDynamicObject(3439,1491.20922852,861.81793213,-66.00033569,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (1)
CreateDynamicObject(3439,1491.57543945,846.41058350,-66.00033569,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (2)
CreateDynamicObject(3462,1489.42199707,850.11035156,-67.92717743,0.00000000,0.00000000,0.25000000); //object(csrangel_lvs) (1)
CreateDynamicObject(3462,1489.32116699,857.82922363,-67.92613983,0.00000000,0.00000000,1.00000000); //object(csrangel_lvs) (2)
CreateDynamicObject(2868,1488.90454102,854.85382080,-68.58234406,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (1)
CreateDynamicObject(2868,1488.88110352,852.93615723,-68.55734253,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (2)
CreateDynamicObject(2207,1488.21228027,854.76940918,-69.36368561,0.00000000,0.00000000,269.75000000); //object(med_office7_desk_1) (1)
CreateDynamicObject(2894,1488.26757812,853.82714844,-68.58631134,0.00000000,0.00000000,270.00000000); //object(kmb_rhymesbook) (2)
CreateDynamicObject(2842,1484.55505371,853.26849365,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (1)
CreateDynamicObject(2842,1482.72216797,853.27215576,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (2)
CreateDynamicObject(2842,1480.89453125,853.28710938,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (3)
CreateDynamicObject(2842,1479.06896973,853.28985596,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (4)
CreateDynamicObject(2842,1477.25146484,853.28991699,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (5)
CreateDynamicObject(2842,1475.41406250,853.28125000,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (6)
CreateDynamicObject(2842,1473.60546875,853.27435303,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (7)
CreateDynamicObject(2842,1471.76989746,853.27740479,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (8)
CreateDynamicObject(2842,1469.94689941,853.26287842,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (9)
CreateDynamicObject(2842,1468.12060547,853.26165771,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (10)
CreateDynamicObject(2842,1466.29992676,853.25488281,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (11)
CreateDynamicObject(2842,1464.47155762,853.24865723,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (12)
CreateDynamicObject(1720,1491.69433594,852.16210938,-69.39298248,0.00000000,0.00000000,269.24743652); //object(rest_chair) (1)
CreateDynamicObject(1720,1491.70898438,851.42382812,-69.39285278,0.00000000,0.00000000,268.74462891); //object(rest_chair) (2)
CreateDynamicObject(948,1556.50170898,907.01184082,-83.20445251,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (1)
CreateDynamicObject(948,1486.81567383,858.92468262,-69.51581573,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (2)
CreateDynamicObject(948,1486.97290039,848.90582275,-69.51637268,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (3)
CreateDynamicObject(949,1472.10925293,861.92718506,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (1)
CreateDynamicObject(949,1478.15686035,861.93243408,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (2)
CreateDynamicObject(949,1477.97363281,846.08349609,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (3)
CreateDynamicObject(949,1471.76525879,845.77685547,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (4)
CreateDynamicObject(949,1467.48242188,856.13964844,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (5)
CreateDynamicObject(949,1467.33996582,851.61102295,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (6)
CreateDynamicObject(2842,1486.79052734,853.30078125,-69.51958466,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (13)
CreateDynamicObject(2842,1487.91479492,853.29595947,-69.48745728,0.00000000,356.00000000,0.00000000); //object(gb_bedrug04) (14)
CreateDynamicObject(3440,1468.04956055,846.46435547,-67.73719025,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (1)
CreateDynamicObject(3440,1468.30798340,861.13378906,-67.73719025,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (2)
CreateDynamicObject(1215,1468.03002930,846.44238281,-65.06007385,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,1468.33190918,861.07635498,-65.01007080,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(3657,1481.19042969,857.01464844,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (10)
CreateDynamicObject(3657,1481.05957031,850.52734375,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (11)
CreateDynamicObject(970,1488.38928223,860.21148682,-68.91707611,0.00000000,0.00000000,0.25000000); //object(fencesmallb) (1)
CreateDynamicObject(970,1488.60888672,847.72064209,-68.99224854,0.00000000,0.00000000,1.74682617); //object(fencesmallb) (2)
CreateDynamicObject(970,1486.54992676,849.75415039,-68.98716736,0.00000000,0.00000000,270.99682617); //object(fencesmallb) (3)
CreateDynamicObject(970,1486.34521484,858.05175781,-68.97917175,0.00000000,0.00000000,270.99426270); //object(fencesmallb) (4)
CreateDynamicObject(1215,1491.28063965,859.75567627,-68.83144379,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1215,1491.49182129,848.65087891,-68.83090973,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
// ================================================= Parkin del Gobierno============================================
CreateDynamicObject(978,1359.29980469,-1683.19921875,13.39999962,0.00000000,0.00000000,0.00000000); //object(sub_roadright) (3)
CreateDynamicObject(978,1359.29980469,-1683.19921875,13.39999962,0.00000000,0.00000000,180.00000000); //object(sub_roadright) (4)
CreateDynamicObject(978,1359.09997559,-1619.59997559,13.39999962,0.00000000,0.00000000,0.00000000); //object(sub_roadright) (5)
CreateDynamicObject(978,1359.09960938,-1619.59960938,13.39999962,0.00000000,0.00000000,180.25004578); //object(sub_roadright) (6)
CreateDynamicObject(978,1363.09997559,-1592.19995117,13.39999962,0.00000000,0.00000000,344.00000000); //object(sub_roadright) (7)
CreateDynamicObject(978,1368.09997559,-1574.59997559,13.39999962,0.00000000,0.00000000,163.99841309); //object(sub_roadright) (8)
CreateDynamicObject(978,1363.09960938,-1592.19921875,13.39999962,0.00000000,0.00000000,163.99841309); //object(sub_roadright) (9)
CreateDynamicObject(978,1368.09960938,-1574.59960938,13.39999962,0.00000000,0.00000000,343.74838257); //object(sub_roadright) (10)
CreateDynamicObject(8674,1386.50000000,-1704.00000000,14.00000000,0.00000000,0.00000000,89.99996948); //object(csrsfence02_lvs) (4)
CreateDynamicObject(8674,1352.30004883,-1620.30004883,14.10000038,0.00000000,0.00000000,270.00000000); //object(csrsfence02_lvs) (5)
CreateDynamicObject(8674,1352.29980469,-1679.59960938,14.10000038,0.00000000,0.00000000,269.99450684); //object(csrsfence02_lvs) (6)
CreateDynamicObject(8674,1374.50000000,-1598.19995117,14.00000000,0.00000000,0.00000000,344.00000000); //object(csrsfence02_lvs) (7)
CreateDynamicObject(8674,1371.29980469,-1611.19921875,14.00000000,0.00000000,0.00000000,347.99743652); //object(csrsfence02_lvs) (8)
CreateDynamicObject(983,1148.69995117,-1342.19995117,19.10000038,0.00000000,0.00000000,90.98913574); //object(fenceshit3) (11)
CreateDynamicObject(978,1368.69995117,-1698.90002441,9.00000000,0.00000000,2.00000000,300.25000000); //object(sub_roadright) (3)
// ================================================= Badenes============================================
CreateDynamicObject(8210,2132.6999500,1453.1999500,12.9000000,0.0000000,0.0000000,0.0000000); //object(vgsselecfence12) (1)
CreateDynamicObject(3578,2462.1999500,-1658.8000500,11.6000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(1)
CreateDynamicObject(3578,2342.6999500,-1669.5999800,11.7000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(2)
CreateDynamicObject(3578,2342.6999500,-1722.0999800,11.7000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(3)
CreateDynamicObject(3578,2261.8999000,-1732.1999500,11.7000000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(4)
CreateDynamicObject(3578,2242.1001000,-1732.1999500,11.7000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(5)
CreateDynamicObject(3578,2226.1001000,-1732.1999500,11.7000000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(6)
CreateDynamicObject(3578,2431.0000000,-1637.7998000,25.7000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(7)
CreateDynamicObject(3578,2431.0000000,-1574.0000000,22.2000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(8)
CreateDynamicObject(3578,2443.6999500,-1732.4000200,11.9000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(9)
CreateDynamicObject(3578,2516.8000500,-1732.3000500,11.7000000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(10)
CreateDynamicObject(3578,2627.5000000,-1732.3000500,9.4000000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(11)
CreateDynamicObject(1319,2175.1001000,-1723.3000500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(1)
CreateDynamicObject(1319,2175.0996100,-1729.2998000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(2)
CreateDynamicObject(1319,2175.0996100,-1728.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(3)
CreateDynamicObject(1319,2175.0996100,-1727.5996100,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(4)
CreateDynamicObject(1319,2175.0996100,-1726.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(5)
CreateDynamicObject(1319,2175.0996100,-1725.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(6)
CreateDynamicObject(1319,2175.0996100,-1724.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(7)
CreateDynamicObject(1319,2111.5000000,-1725.0999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(8)
CreateDynamicObject(1319,2113.0000000,-1720.7998000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(9)
CreateDynamicObject(1319,2112.6992200,-1721.5996100,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(10)
CreateDynamicObject(1319,2112.3994100,-1722.2998000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(11)
CreateDynamicObject(1319,2112.1992200,-1723.1992200,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(12)
CreateDynamicObject(1319,2111.7998000,-1724.0996100,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(13)
CreateDynamicObject(1319,2110.8000500,-1727.0999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(14)
CreateDynamicObject(1319,2111.1992200,-1726.0000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(15)
CreateDynamicObject(1319,2110.3999000,-1728.1999500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(16)
CreateDynamicObject(3578,2129.8000500,-1752.1999500,11.7000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(12)
CreateDynamicObject(3578,2104.0000000,-1752.2998000,11.8000000,0.0000000,0.0000000,255.9980000); //object(dockbarr1_la)(13)
CreateDynamicObject(3578,2038.0000000,-1752.5000000,11.7000000,0.0000000,0.0000000,268.0000000); //object(dockbarr1_la)(14)
CreateDynamicObject(3578,1974.0000000,-1752.4000200,11.8000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(15)
CreateDynamicObject(3578,1874.3000500,-1752.1999500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(16)
CreateDynamicObject(3578,1832.8000500,-1752.4000200,11.7000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(17)
CreateDynamicObject(3578,1821.6999500,-1763.8000500,11.7000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(18)
CreateDynamicObject(3578,1821.8000500,-1821.5999800,11.7800000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(19)
CreateDynamicObject(1214,1695.3000500,-1859.5999800,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(1)
CreateDynamicObject(1319,1695.8000500,-1858.6999500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(17)
CreateDynamicObject(1214,1696.3994100,-1857.7998000,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(2)
CreateDynamicObject(1319,1694.5000000,-1860.5999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(18)
CreateDynamicObject(1214,1694.0000000,-1861.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(3)
CreateDynamicObject(1319,1690.0999800,-1867.1999500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(19)
CreateDynamicObject(1214,1692.5999800,-1863.5999800,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(4)
CreateDynamicObject(1319,1693.1992200,-1862.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(20)
CreateDynamicObject(1214,1689.3000500,-1868.3000500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(5)
CreateDynamicObject(1319,1691.7998000,-1864.5996100,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(21)
CreateDynamicObject(1214,1690.8994100,-1865.8994100,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(6)
CreateDynamicObject(1319,1687.9000200,-1870.1999500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(22)
CreateDynamicObject(1214,1686.5999800,-1871.4000200,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(7)
CreateDynamicObject(1319,1685.4000200,-1872.0999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(23)
CreateDynamicObject(1214,1679.3000500,-1876.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(8)
CreateDynamicObject(1319,1683.0999800,-1873.6999500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(24)
CreateDynamicObject(1214,1684.0996100,-1873.0996100,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(9)
CreateDynamicObject(1319,1680.6999500,-1875.4000200,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(25)
CreateDynamicObject(1214,1682.0996100,-1874.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(10)
CreateDynamicObject(1319,1677.8000500,-1877.4000200,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(26)
CreateDynamicObject(1214,1676.5000000,-1878.3000500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(11)
CreateDynamicObject(1319,1674.9000200,-1879.1999500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(27)
CreateDynamicObject(1214,1674.4000200,-1880.6999500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(12)
CreateDynamicObject(1319,1673.6999500,-1882.4000200,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(28)
CreateDynamicObject(1214,1697.3000500,-1853.1999500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(13)
CreateDynamicObject(1319,1697.5999800,-1852.0999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(29)
CreateDynamicObject(1214,1696.8994100,-1855.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(14)
CreateDynamicObject(1319,1696.5996100,-1856.7998000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(30)
CreateDynamicObject(1319,1697.0996100,-1854.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(31)
CreateDynamicObject(1214,1697.8000500,-1851.0000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(15)
CreateDynamicObject(1319,1699.1999500,-1844.0000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(32)
CreateDynamicObject(1214,1698.3000500,-1848.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(16)
CreateDynamicObject(1319,1698.0000000,-1849.6992200,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(33)
CreateDynamicObject(1214,1699.5000000,-1839.0000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(17)
CreateDynamicObject(1319,1698.5996100,-1847.0996100,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(34)
CreateDynamicObject(1214,1698.8994100,-1845.6992200,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(18)
CreateDynamicObject(1319,1699.5000000,-1840.4000200,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(35)
CreateDynamicObject(1319,1699.5000000,-1838.0000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(36)
CreateDynamicObject(1214,1699.5000000,-1841.5996100,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(19)
CreateDynamicObject(1319,1699.5000000,-1835.8000500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(37)
CreateDynamicObject(1214,1699.5999800,-1836.8000500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(20)
CreateDynamicObject(3578,1657.6999500,-1872.3000500,11.7400000,0.0000000,0.0000000,92.0000000); //object(dockbarr1_la)(20)
CreateDynamicObject(3578,1630.5000000,-1872.3000500,11.7000000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(21)
CreateDynamicObject(3578,1600.6999500,-1872.1999500,11.7000000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(22)
CreateDynamicObject(3578,1569.5000000,-1817.4000200,11.7600000,0.0000000,0.0000000,358.0000000); //object(dockbarr1_la)(23)
CreateDynamicObject(3578,1569.5000000,-1854.0999800,11.7000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(24)
CreateDynamicObject(3578,1569.6999500,-1747.1999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(25)
CreateDynamicObject(3578,1607.4000200,-1592.4000200,11.9000000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(26)
CreateDynamicObject(3578,1672.5999800,-1592.4000200,11.7000000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(27)
CreateDynamicObject(3578,1769.2998000,-1605.7998000,11.7000000,0.0000000,0.0000000,75.9980000); //object(dockbarr1_la)(28)
CreateDynamicObject(3578,2216.0000000,-1768.8000500,11.7000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(29)
CreateDynamicObject(3578,2217.8999000,-1912.6999500,11.7600000,0.0000000,0.0000000,356.0000000); //object(dockbarr1_la)(30)
CreateDynamicObject(3578,2217.1001000,-2010.4000200,11.7000000,0.0000000,0.0000000,22.0000000); //object(dockbarr1_la)(31)
CreateDynamicObject(1214,2228.6001000,-2011.3000500,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollard)(21)
CreateDynamicObject(1319,2229.3000500,-2012.0999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(38)
CreateDynamicObject(1214,2230.1999500,-2012.9000200,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(22)
CreateDynamicObject(1319,2236.3999000,-2019.1999500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(39)
CreateDynamicObject(1214,2235.1001000,-2017.8000500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(23)
CreateDynamicObject(1319,2231.2998000,-2014.0996100,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(40)
CreateDynamicObject(1214,2232.6001000,-2015.3000500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(24)
CreateDynamicObject(1319,2233.8000500,-2016.5999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(41)
CreateDynamicObject(1214,2240.3000500,-2023.0999800,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(25)
CreateDynamicObject(1319,2241.3999000,-2024.3000500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(42)
CreateDynamicObject(1214,2237.6992200,-2020.3994100,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(26)
CreateDynamicObject(1319,2239.0000000,-2021.7998000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(43)
CreateDynamicObject(1214,2242.6999500,-2025.4000200,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(27)
CreateDynamicObject(1319,2243.8000500,-2026.5999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(44)
CreateDynamicObject(1214,2245.1001000,-2027.8000500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(28)
CreateDynamicObject(1319,2246.3000500,-2029.0999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(45)
CreateDynamicObject(1214,2247.6001000,-2030.3000500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(29)
CreateDynamicObject(1319,2248.8000500,-2031.6999500,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(46)
CreateDynamicObject(1214,2250.3000500,-2032.6999500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(30)
CreateDynamicObject(1214,2251.8000500,-2033.0999800,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(31)
CreateDynamicObject(3578,2257.0000000,-2054.1001000,11.7000000,0.0000000,0.0000000,44.0000000); //object(dockbarr1_la)(32)
CreateDynamicObject(3578,2299.8000500,-2096.8999000,11.7000000,0.0000000,0.0000000,44.0000000); //object(dockbarr1_la)(33)
CreateDynamicObject(3578,2408.5000000,-2205.5000000,22.9600000,0.0000000,0.0000000,46.0000000); //object(dockbarr1_la)(34)
CreateDynamicObject(3578,2501.8999000,-2299.1001000,22.8900000,0.0000000,0.0000000,44.0000000); //object(dockbarr1_la)(35)
CreateDynamicObject(3578,2587.5000000,-2384.5000000,11.8000000,0.0000000,0.0000000,44.0000000); //object(dockbarr1_la)(36)
CreateDynamicObject(1215,2596.0000000,-2400.3999000,13.2000000,0.0000000,0.0000000,0.0000000); //object(bollardlight)(1)
CreateDynamicObject(1215,2604.5000000,-2407.0996100,13.2000000,0.0000000,0.0000000,0.0000000); //object(bollardlight)(2)
CreateDynamicObject(1215,2610.8999000,-2409.6001000,13.2000000,0.0000000,0.0000000,0.0000000); //object(bollardlight)(3)
CreateDynamicObject(1214,2611.8000500,-2413.8000500,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollard)(32)
CreateDynamicObject(1319,2609.5000000,-2413.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(47)
CreateDynamicObject(1214,2603.1001000,-2410.6001000,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollard)(33)
CreateDynamicObject(1319,2604.8999000,-2411.6001000,13.2000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(48)
CreateDynamicObject(1214,2607.5000000,-2412.3994100,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollard)(34)
CreateDynamicObject(1319,2601.5000000,-2409.6001000,13.2000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(49)
CreateDynamicObject(1214,2599.5000000,-2408.5000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollard)(35)
CreateDynamicObject(1319,2597.1001000,-2406.8999000,13.2000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(50)
CreateDynamicObject(1214,2595.1001000,-2405.6001000,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollard)(36)
CreateDynamicObject(1319,2592.8000500,-2403.8999000,13.2000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(51)
CreateDynamicObject(1214,2591.1001000,-2402.3000500,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollard)(37)
CreateDynamicObject(1319,2589.1999500,-2400.3999000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(52)
CreateDynamicObject(1214,2587.3000500,-2398.8999000,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollard)(38)
CreateDynamicObject(1319,2585.8999000,-2397.1001000,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(53)
CreateDynamicObject(1214,2584.3000500,-2395.8000500,12.5000000,0.0000000,0.0000000,0.0000000); //object(bollard)(39)
CreateDynamicObject(1319,2583.0000000,-2394.3000500,13.0000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard)(54)
CreateDynamicObject(3578,2047.9000200,-1932.5000000,11.7700000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(37)
CreateDynamicObject(3578,2020.0000000,-1932.3000500,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(39)
CreateDynamicObject(3578,1975.1999500,-1932.0999800,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(40)
CreateDynamicObject(3578,1922.9000200,-1932.3000500,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(41)
CreateDynamicObject(3578,1850.0000000,-1932.1999500,11.7600000,0.0000000,0.0000000,88.0000000); //object(dockbarr1_la)(42)
CreateDynamicObject(3578,1821.6999500,-1911.6999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(43)
CreateDynamicObject(3578,1862.1999500,-1884.5999800,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(44)
CreateDynamicObject(3578,1780.5999800,-1829.0000000,11.7600000,0.0000000,0.0000000,74.0000000); //object(dockbarr1_la)(45)
CreateDynamicObject(3578,1747.3000500,-1820.0000000,11.7600000,0.0000000,0.0000000,74.0000000); //object(dockbarr1_la)(46)
CreateDynamicObject(3578,1700.9000200,-1812.1999500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(47)
CreateDynamicObject(3578,1689.5000000,-1826.0000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(48)
CreateDynamicObject(3578,1689.5999800,-1784.1999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(49)
CreateDynamicObject(3578,1689.5999800,-1744.5999800,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(50)
CreateDynamicObject(3578,1689.5999800,-1697.4000200,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(51)
CreateDynamicObject(3578,1689.6999500,-1631.6999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(52)
CreateDynamicObject(3578,1689.5999800,-1604.5000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(53)
CreateDynamicObject(3578,1550.5999800,-1872.5000000,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(54)
CreateDynamicObject(3578,1485.0999800,-1872.3000500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(55)
CreateDynamicObject(3578,1440.6999500,-1872.4000200,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(56)
CreateDynamicObject(3578,1400.0999800,-1872.0999800,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(57)
CreateDynamicObject(3578,1389.0999800,-1835.5000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(58)
CreateDynamicObject(3578,1389.1999500,-1804.1999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(59)
CreateDynamicObject(3578,1389.1999500,-1745.1999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(60)
CreateDynamicObject(3578,1353.0996100,-1863.6992200,11.7000000,0.0000000,0.0000000,61.9960000); //object(dockbarr1_la)(61)
CreateDynamicObject(3578,1284.6999500,-1852.3000500,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(62)
CreateDynamicObject(3578,1238.4000200,-1852.3000500,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(63)
CreateDynamicObject(3578,1181.6999500,-1839.3000500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(64)
CreateDynamicObject(3578,1182.1999500,-1831.5999800,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(65)
CreateDynamicObject(3578,1172.0999800,-1724.5999800,11.9000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(66)
CreateDynamicObject(3578,1172.8000500,-1754.5999800,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(67)
CreateDynamicObject(3578,1142.3000500,-1852.0999800,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(68)
CreateDynamicObject(3578,1074.0000000,-1852.3000500,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(69)
CreateDynamicObject(3578,1037.0999800,-1766.6999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(70)
CreateDynamicObject(3578,1037.5000000,-1728.6999500,11.7000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(71)
CreateDynamicObject(3578,1037.5000000,-1700.3000500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(72)
CreateDynamicObject(3578,1037.5000000,-1668.4000200,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(73)
CreateDynamicObject(3578,1037.2998000,-1591.0996100,11.7000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(74)
CreateDynamicObject(3578,1053.0000000,-1572.0999800,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(75)
CreateDynamicObject(3578,1096.0000000,-1572.4000200,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(76)
CreateDynamicObject(3578,1134.1999500,-1572.1999500,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(77)
CreateDynamicObject(3578,1150.0000000,-1583.4000200,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(78)
CreateDynamicObject(3578,1149.9000200,-1696.4000200,12.2000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(79)
CreateDynamicObject(3578,1183.3000500,-1572.1999500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(80)
CreateDynamicObject(3578,1210.0999800,-1572.3000500,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(81)
CreateDynamicObject(3578,1245.3000500,-1572.3000500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(82)
CreateDynamicObject(3578,1284.0999800,-1572.1999500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(83)
CreateDynamicObject(3578,1297.5999800,-1837.0000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(84)
CreateDynamicObject(3578,1297.3000500,-1807.3000500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(85)
CreateDynamicObject(3578,1297.4000200,-1748.5000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(86)
CreateDynamicObject(3578,1297.4000200,-1700.5000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(87)
CreateDynamicObject(3578,1297.5000000,-1642.4000200,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(88)
CreateDynamicObject(3578,1297.5999800,-1589.0999800,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(89)
CreateDynamicObject(3578,1304.6999500,-1528.0999800,11.7600000,0.0000000,0.0000000,340.0000000); //object(dockbarr1_la)(90)
CreateDynamicObject(3578,1331.0000000,-1480.9000200,11.7500000,0.0000000,0.0000000,334.0000000); //object(dockbarr1_la)(91)
CreateDynamicObject(3578,1341.9000200,-1424.9000200,11.7500000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(92)
CreateDynamicObject(3578,1342.5999800,-1380.9000200,11.9000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(93)
CreateDynamicObject(3578,1342.5000000,-1296.5999800,11.8000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(94)
CreateDynamicObject(3578,1342.5999800,-1245.5000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(95)
CreateDynamicObject(3578,1342.6999500,-1170.8000500,22.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(96)
CreateDynamicObject(3578,1342.8000500,-1128.5999800,22.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(97)
CreateDynamicObject(3578,1353.5000000,-1056.0000000,25.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(98)
CreateDynamicObject(3578,1362.3000500,-957.4000200,32.4760000,0.0000000,0.0000000,354.0000000); //object(dockbarr1_la)(99)
CreateDynamicObject(3578,1368.6992200,-1020.7998000,24.9000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(100)
CreateDynamicObject(3578,1358.5000000,-1115.1999500,22.1000000,0.0000000,0.0000000,356.0000000); //object(dockbarr1_la)(101)
CreateDynamicObject(3578,1357.6999500,-1162.4000200,22.1000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(102)
CreateDynamicObject(3578,1357.5999800,-1230.6999500,11.8000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(103)
CreateDynamicObject(3578,1357.3000500,-1268.5000000,11.8000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(104)
CreateDynamicObject(3578,1357.5999800,-1318.8000500,11.7900000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(105)
CreateDynamicObject(3578,1357.6999500,-1378.0999800,11.8600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(106)
CreateDynamicObject(3578,1357.4000200,-1420.5999800,11.8000000,0.0000000,0.0000000,358.0000000); //object(dockbarr1_la)(107)
CreateDynamicObject(3578,1352.9000200,-1460.4000200,11.7600000,0.0000000,0.0000000,346.0000000); //object(dockbarr1_la)(108)
CreateDynamicObject(3578,1315.0999800,-1545.5000000,11.7600000,0.0000000,0.0000000,352.0000000); //object(dockbarr1_la)(109)
CreateDynamicObject(3578,1335.1999500,-1574.9000200,11.7400000,0.0000000,0.0000000,254.0000000); //object(dockbarr1_la)(110)
CreateDynamicObject(3578,1390.5999800,-1589.5000000,11.7600000,0.0000000,0.0000000,256.0000000); //object(dockbarr1_la)(111)
CreateDynamicObject(3578,1312.4000200,-1593.4000200,11.8000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(112)
CreateDynamicObject(3578,1312.6999500,-1663.1999500,11.7990000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(113)
CreateDynamicObject(3578,2101.6999500,-1722.5999800,11.7000000,0.0000000,0.0000000,342.0000000); //object(dockbarr1_la)(114)
CreateDynamicObject(3578,2112.6001000,-1519.3000500,22.1000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(115)
CreateDynamicObject(3578,2112.6001000,-1486.6999500,22.2000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(116)
CreateDynamicObject(3578,2102.3000500,-1466.0999800,22.2000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(117)
CreateDynamicObject(3578,2102.3000500,-1460.3000500,22.2000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(118)
CreateDynamicObject(3578,2086.8000500,-1466.1999500,22.1000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(119)
CreateDynamicObject(3578,2086.8000500,-1459.1999500,22.1000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(120)
CreateDynamicObject(3578,1987.0999800,-1450.3000500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(121)
CreateDynamicObject(3578,1986.9000200,-1364.4000200,22.1000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(122)
CreateDynamicObject(3578,1973.0000000,-1340.6999500,22.2000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(123)
CreateDynamicObject(3578,1874.5000000,-1341.0000000,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(124)
CreateDynamicObject(3578,1851.8000500,-1448.5000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(125)
CreateDynamicObject(3578,1846.0000000,-1448.5000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(128)
CreateDynamicObject(3578,1852.0999800,-1388.6999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(129)
CreateDynamicObject(3578,1846.8000500,-1388.6999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(130)
CreateDynamicObject(3578,1852.3000500,-1353.0000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(131)
CreateDynamicObject(3578,1846.8000500,-1353.0000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(132)
CreateDynamicObject(3578,1846.1999500,-1276.3000500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(133)
CreateDynamicObject(3578,1852.9000200,-1276.3000500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(134)
CreateDynamicObject(3578,1725.0000000,-1300.8000500,11.7700000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(135)
CreateDynamicObject(3578,1703.5000000,-1303.9000200,11.7700000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(136)
CreateDynamicObject(3578,1703.5000000,-1297.9000200,11.7700000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(137)
CreateDynamicObject(3578,1714.8000500,-1427.0999800,11.7700000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(138)
CreateDynamicObject(3578,1714.8000500,-1401.3000500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(139)
CreateDynamicObject(3578,1715.0999800,-1362.8000500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(140)
CreateDynamicObject(3578,1714.9000200,-1314.0000000,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(141)
CreateDynamicObject(3578,1714.5000000,-1285.6999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(142)
CreateDynamicObject(3578,1466.6999500,-1303.3000500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(143)
CreateDynamicObject(3578,1466.6999500,-1298.3000500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(144)
CreateDynamicObject(3578,1454.9000200,-1252.0999800,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(145)
CreateDynamicObject(3578,1444.5999800,-1240.8000500,11.7600000,0.0000000,0.0000000,90.0000000); //object(dockbarr1_la)(146)
CreateDynamicObject(3578,1454.8000500,-1329.0999800,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(148)
CreateDynamicObject(3578,1454.9000200,-1363.0999800,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(149)
CreateDynamicObject(3578,1454.8000500,-1391.4000200,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(150)
CreateDynamicObject(3578,1454.8000500,-1429.6999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(151)
CreateDynamicObject(3578,1588.9000200,-1298.5000000,15.8000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(152)
CreateDynamicObject(3578,1588.9000200,-1303.0000000,15.8000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(153)
CreateDynamicObject(3578,1465.1999500,-1440.9000200,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(154)
CreateDynamicObject(3578,1495.6999500,-1440.8000500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(155)
CreateDynamicObject(3578,1521.6999500,-1440.9000200,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(156)
CreateDynamicObject(3578,1561.1999500,-1440.9000200,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(157)
CreateDynamicObject(3578,1590.5000000,-1441.0000000,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(158)
CreateDynamicObject(3578,1623.3000500,-1440.9000200,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(159)
CreateDynamicObject(3578,1454.6999500,-1452.1999500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(160)
CreateDynamicObject(3578,1327.1999500,-1732.1999500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(161)
CreateDynamicObject(3578,1378.0000000,-1732.1999500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(162)
CreateDynamicObject(3578,1419.8000500,-1732.1999500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(163)
CreateDynamicObject(3578,1453.3000500,-1732.3000500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(164)
CreateDynamicObject(3578,1471.3000500,-1732.0999800,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(165)
CreateDynamicObject(3578,1500.5999800,-1732.5000000,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(166)
CreateDynamicObject(3578,1520.5000000,-1732.3000500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(167)
CreateDynamicObject(3578,1581.8000500,-1732.3000500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(168)
CreateDynamicObject(3578,1655.4000200,-1732.3000500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(169)
CreateDynamicObject(3578,1429.4000200,-1581.3000500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(170)
CreateDynamicObject(3578,1440.5999800,-1592.3000500,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(171)
CreateDynamicObject(3578,1472.0999800,-1592.4000200,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(172)
CreateDynamicObject(3578,1509.8000500,-1592.3000500,11.8000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(173)
CreateDynamicObject(3578,1550.5999800,-1592.0999800,11.7600000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la)(174)
CreateDynamicObject(3578,1429.4000200,-1603.8000500,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(175)
CreateDynamicObject(3578,1429.5999800,-1660.0999800,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(177)
CreateDynamicObject(3578,1429.5000000,-1715.0999800,11.7600000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la)(178)
CreateDynamicObject(3578,786.0999800,-1320.0999800,11.7000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la) (4)
CreateDynamicObject(3578,676.2000100,-1319.4000200,11.8000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la) (5)
CreateDynamicObject(3578,649.5000000,-1319.4000200,11.7000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la) (6)
CreateDynamicObject(3578,598.7000100,-1226.5999800,16.3000000,0.0000000,0.0000000,290.0000000); //object(dockbarr1_la) (7)
CreateDynamicObject(3578,595.2999900,-1217.3000500,16.3000000,0.0000000,0.0000000,290.0000000); //object(dockbarr1_la) (8)
CreateDynamicObject(3578,499.0000000,-1287.8000500,14.0800000,0.0000000,0.0000000,312.0000000); //object(dockbarr1_la) (9)
CreateDynamicObject(3578,435.2999900,-1322.8000500,13.2700000,0.0000000,0.0000000,304.0000000); //object(dockbarr1_la) (10)
CreateDynamicObject(3578,160.6000100,-1736.6999500,3.0700000,0.0000000,0.0000000,276.0000000); //object(dockbarr1_la) (11)
CreateDynamicObject(3578,323.2000100,-1600.1999500,31.5000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (12)
CreateDynamicObject(3578,333.7999900,-1600.3000500,31.4000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (13)
CreateDynamicObject(3578,656.7000100,-1394.9000200,11.8000000,0.0000000,0.0000000,268.0000000); //object(dockbarr1_la) (14)
CreateDynamicObject(3578,656.5000000,-1405.5999800,11.7800000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la) (15)
CreateDynamicObject(3578,782.2999900,-1395.3000500,11.7000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la) (16)
CreateDynamicObject(3578,782.2999900,-1405.8000500,11.7000000,0.0000000,0.0000000,270.0000000); //object(dockbarr1_la) (17)
CreateDynamicObject(8209,2139.00000000,983.09997559,12.89999962,0.00000000,0.00000000,0.00000000); //object(vgsselecfence11) (1)
CreateDynamicObject(8209,2129.30004883,1051.19995117,13.19999981,0.00000000,0.00000000,36.00000000); //object(vgsselecfence11) (2)
// ================================================= Vallado de consecionarios en LV (Autos nuevos)============================================
CreateDynamicObject(8210,-945.2000100,2728.1999500,48.2000000,0.0000000,0.0000000,6.0000000); //object(vgsselecfence12) (1)
CreateDynamicObject(8210,-913.2999900,2731.3999000,48.1000000,0.0000000,0.0000000,6.0000000); //object(vgsselecfence12) (2)
CreateDynamicObject(8210,-889.0999800,2761.3999000,48.1000000,0.0000000,0.0000000,96.0000000); //object(vgsselecfence12) (3)
CreateDynamicObject(8210,-892.4000200,2793.6999500,50.3000000,0.0000000,0.0000000,96.0000000); //object(vgsselecfence12) (4)
CreateDynamicObject(8210,-972.9000200,2752.6001000,48.1000000,0.0000000,0.0000000,278.0000000); //object(vgsselecfence12) (5)
CreateDynamicObject(8210,-977.0999800,2782.0000000,50.2000000,0.0000000,0.0000000,278.0000000); //object(vgsselecfence12) (6)
CreateDynamicObject(974,2089.50000000,986.20001221,12.60000038,0.00000000,0.00000000,270.00000000); //object(tall_fence) (1)
CreateDynamicObject(974,2089.50000000,992.79998779,12.60000038,0.00000000,0.00000000,270.00000000); //object(tall_fence) (2)
CreateDynamicObject(974,2089.50000000,999.50000000,12.60000038,0.00000000,0.00000000,270.00000000); //object(tall_fence) (3)
CreateDynamicObject(974,2089.50000000,1006.20001221,12.60000038,0.00000000,0.00000000,270.00000000); //object(tall_fence) (4)
CreateDynamicObject(974,2089.50000000,1012.70001221,12.60000038,0.00000000,0.00000000,270.00000000); //object(tall_fence) (5)
CreateDynamicObject(974,2089.50000000,1019.20001221,12.60000038,0.00000000,0.00000000,270.00000000); //object(tall_fence) (6)
CreateDynamicObject(974,2191.19995117,983.00000000,12.60000038,0.00000000,0.00000000,0.00000000); //object(tall_fence) (7)
CreateDynamicObject(974,2194.50000000,983.00000000,12.60000038,0.00000000,0.00000000,0.00000000); //object(tall_fence) (8)
CreateDynamicObject(974,2197.80004883,986.50000000,13.00000000,0.00000000,0.00000000,270.00000000); //object(tall_fence) (9)
CreateDynamicObject(974,2197.80004883,990.00000000,13.00000000,0.00000000,0.00000000,270.00000000); //object(tall_fence) (10)
CreateDynamicObject(8210,2115.30004883,1383.40002441,12.89999962,0.00000000,0.00000000,0.00000000); //object(vgsselecfence12) (1)
CreateDynamicObject(8210,2175.10009766,1423.09997559,12.89999962,0.00000000,0.00000000,270.00000000); //object(vgsselecfence12) (2)
CreateDynamicObject(8210,2087.30004883,1410.40002441,12.89999962,0.00000000,0.00000000,270.00000000); //object(vgsselecfence12) (3)
CreateDynamicObject(974,2087.30004883,1443.59997559,12.60000038,0.00000000,0.00000000,270.00000000); //object(tall_fence) (11)
CreateDynamicObject(974,2087.30004883,1440.30004883,12.60000038,0.00000000,0.00000000,270.00000000); //object(tall_fence) (12)
CreateDynamicObject(974,2089.50000000,1449.19995117,12.60000038,0.00000000,0.00000000,226.00000000); //object(tall_fence) (13)
CreateDynamicObject(8210,2141.50000000,1383.39941406,12.89999962,0.00000000,0.00000000,0.00000000); //object(vgsselecfence12) (4)
CreateDynamicObject(974,2175.00000000,1392.30004883,12.60000038,0.00000000,0.00000000,274.00000000); //object(tall_fence) (14)
CreateDynamicObject(974,2175.19995117,1387.40002441,12.60000038,0.00000000,0.00000000,273.99902344); //object(tall_fence) (15)
CreateDynamicObject(974,2171.80004883,1383.39941406,13.39999962,0.00000000,0.00000000,179.99902344); //object(tall_fence) (16)
CreateDynamicObject(974,2175.10009766,1386.90002441,12.60000038,0.00000000,0.00000000,267.99902344); //object(tall_fence) (17)
CreateDynamicObject(8210,2161.80004883,1783.40002441,13.50000000,0.00000000,0.00000000,0.00000000); //object(vgsselecfence12) (5)
CreateDynamicObject(8210,2217.00000000,1783.50000000,13.50000000,0.00000000,0.00000000,0.00000000); //object(vgsselecfence12) (6)
CreateDynamicObject(8210,2229.19995117,1783.40002441,13.60000038,0.00000000,0.00000000,0.00000000); //object(vgsselecfence12) (7)
CreateDynamicObject(8210,2146.50000000,1819.30004883,13.50000000,0.00000000,0.00000000,244.00000000); //object(vgsselecfence12) (8)
CreateDynamicObject(8210,2185.80004883,1841.69995117,13.10000038,0.00000000,0.00000000,176.00000000); //object(vgsselecfence12) (9)
CreateDynamicObject(8210,2202.80004883,1840.50000000,13.10000038,0.00000000,0.00000000,176.00000000); //object(vgsselecfence12) (10)
CreateDynamicObject(974,2134.00000000,1791.00000000,13.10000038,0.00000000,0.00000000,270.00000000); //object(tall_fence) (18)
CreateDynamicObject(974,2134.00000000,1786.50000000,13.10000038,0.00000000,0.00000000,270.00000000); //object(tall_fence) (19)
CreateDynamicObject(8210,1717.40002441,2015.30004883,13.39999962,0.00000000,0.00000000,270.00000000); //object(vgsselecfence12) (11)
CreateDynamicObject(8210,1717.40002441,1960.30004883,13.39999962,0.00000000,0.00000000,270.00000000); //object(vgsselecfence12) (12)
CreateDynamicObject(8210,1717.40002441,1906.80004883,13.39999962,0.00000000,0.00000000,270.00000000); //object(vgsselecfence12) (13)
CreateDynamicObject(8210,1717.40002441,1852.30004883,13.39999962,0.00000000,0.00000000,270.00000000); //object(vgsselecfence12) (14)
CreateDynamicObject(8210,1757.40002441,1852.50000000,13.39999962,0.00000000,0.00000000,90.00000000); //object(vgsselecfence12) (15)
CreateDynamicObject(8210,1757.40002441,1907.80004883,13.60000038,0.00000000,0.00000000,90.00000000); //object(vgsselecfence12) (16)
CreateDynamicObject(8210,1757.40002441,1963.19995117,13.60000038,0.00000000,0.00000000,90.00000000); //object(vgsselecfence12) (17)
CreateDynamicObject(8210,1757.40002441,2015.00000000,13.60000038,0.00000000,0.00000000,90.00000000); //object(vgsselecfence12) (18)
CreateDynamicObject(8210,2132.6999500,1453.1999500,12.9000000,0.0000000,0.0000000,0.0000000); //object(vgsselecfence12) (1)
CreateDynamicObject(974,1754.19995117,2043.40002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(tall_fence) (20)
CreateDynamicObject(974,1748.50000000,2043.40002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(tall_fence) (21)
CreateDynamicObject(974,1742.00000000,2043.40002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(tall_fence) (22)
CreateDynamicObject(974,1735.59997559,2043.40002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(tall_fence) (23)
CreateDynamicObject(974,1729.50000000,2043.40002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(tall_fence) (24)
CreateDynamicObject(974,1723.30004883,2043.40002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(tall_fence) (25)
CreateDynamicObject(974,1720.50000000,2043.40002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(tall_fence) (26)
CreateDynamicObject(974,1753.90002441,1823.80004883,12.60000038,0.00000000,0.00000000,0.00000000); //object(tall_fence) (27)
//---------------------------------------------Restaurante LS-------------------------------------------//
CreateDynamicObject(19461, 1300.856689, -1862.322631, 14.256855, 0.000000, 0.000000, -90.599990);//no name
CreateDynamicObject(19397, 1294.496704, -1862.276367, 14.246870, 0.000000, 0.000000, -90.000000);//no name
CreateDynamicObject(19415, 1288.101074, -1862.332763, 14.236867, 0.000000, 0.000000, -89.900001);//no name
CreateDynamicObject(19415, 1291.322875, -1862.314819, 14.236865, 0.000000, 0.000000, -89.000000);//no name
CreateDynamicObject(19397, 1287.374023, -1878.516479, 14.316875, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19367, 1287.358154, -1881.371093, 14.276881, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19446, 1305.038085, -1867.270263, 14.286869, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19446, 1305.041259, -1876.894897, 14.282505, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19446, 1300.899902, -1862.327148, 14.276881, 0.000000, 0.000000, 89.400024);//no name
CreateDynamicObject(19384, 1294.500732, -1862.292358, 14.266871, 0.000000, 0.000000, -89.899993);//no name
CreateDynamicObject(19446, 1287.372558, -1867.353271, 14.236865, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19446, 1287.388183, -1872.655883, 14.236865, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19446, 1300.156250, -1880.642578, 14.256872, 0.000000, 0.000000, -90.000007);//no name
CreateDynamicObject(19446, 1292.250854, -1880.623901, 14.286870, 0.000000, 0.000000, -90.400009);//no name
CreateDynamicObject(19384, 1287.380493, -1878.516479, 14.226873, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19384, 1287.388793, -1881.606933, 14.236877, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19400, 1291.334716, -1862.328125, 14.256875, 0.000000, 0.000000, 91.300003);//no name
CreateDynamicObject(19400, 1288.139648, -1862.434814, 14.266880, 0.000000, 0.000000, -87.599983);//no name
CreateDynamicObject(19449, 1289.190795, -1867.118652, 15.978837, 0.000000, 90.400001, 0.000000);//no name
CreateDynamicObject(19449, 1292.641357, -1867.094848, 15.977119, 0.000000, -90.000000, 0.000000);//no name
CreateDynamicObject(19449, 1296.065307, -1867.087280, 15.983592, 0.000000, 90.599998, 0.000000);//no name
CreateDynamicObject(19449, 1299.469482, -1867.087402, 15.950279, 0.000000, -89.899978, 0.000000);//no name
CreateDynamicObject(19449, 1306.376586, -1867.109497, 15.944888, 0.000000, -90.000007, 0.000000);//no name
CreateDynamicObject(19449, 1302.900512, -1867.082641, 15.940600, 0.000000, -89.999977, 0.000000);//no name
CreateDynamicObject(19449, 1300.155151, -1871.648437, 19.896549, 0.000000, 0.000000, 90.099983);//no name
CreateDynamicObject(19449, 1291.525756, -1871.736083, 19.888921, 0.000000, 0.000000, -89.899993);//no name
CreateDynamicObject(19449, 1304.433593, -1876.458984, 21.577606, 0.000000, 90.299995, -0.099999);//no name
CreateDynamicObject(19449, 1300.902221, -1876.471191, 21.555501, 0.000000, -90.099960, 0.000000);//no name
CreateDynamicObject(19449, 1297.612670, -1876.476806, 21.530109, 0.000000, -90.799995, 0.000000);//no name
CreateDynamicObject(19449, 1294.267089, -1876.457519, 21.562549, 0.000000, -90.100006, 0.000000);//no name
CreateDynamicObject(19449, 1290.876220, -1876.434814, 21.530338, 0.000000, -90.000068, 0.000000);//no name
CreateDynamicObject(19449, 1288.950683, -1876.465820, 21.550909, 0.000000, -90.000038, 0.000000);//no name
CreateDynamicObject(19449, 1299.228393, -1881.150390, 19.932205, 0.000000, 0.199999, 90.500038);//no name
CreateDynamicObject(19449, 1291.994873, -1881.187622, 19.908241, 0.000000, 0.000000, -90.000015);//no name
CreateDynamicObject(19449, 1299.225830, -1881.161010, 16.371223, 0.000000, 0.000000, 90.599998);//no name
CreateDynamicObject(19449, 1291.953002, -1881.172119, 16.543472, 0.000000, 0.000000, -89.800025);//no name
CreateDynamicObject(19449, 1287.265502, -1876.334228, 17.849399, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19449, 1287.274291, -1876.513061, 19.903692, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19449, 1308.703857, -1879.910156, 18.064785, 0.000000, 0.000000, -75.800010);//no name
CreateDynamicObject(19449, 1308.760253, -1880.435302, 19.875904, 0.000000, 0.000000, -82.300003);//no name
CreateDynamicObject(19446, 1305.029052, -1876.551757, 17.702526, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19446, 1305.046142, -1876.551513, 19.882535, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19446, 1300.184204, -1880.647460, 17.706886, 0.000000, 0.000000, -90.100021);//no name
CreateDynamicObject(19446, 1300.293945, -1880.734008, 19.846904, 0.000000, 0.000000, 90.000007);//no name
CreateDynamicObject(19446, 1292.202880, -1880.619506, 17.696886, 0.000000, 0.000000, -90.399971);//no name
CreateDynamicObject(19446, 1292.202148, -1880.629394, 19.806915, 0.000000, 0.000000, -90.399978);//no name
CreateDynamicObject(19446, 1287.432739, -1876.641357, 19.882556, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19446, 1287.459960, -1876.506103, 17.702539, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19446, 1300.411865, -1871.689697, 19.892538, 0.000000, 0.000000, -89.500007);//no name
CreateDynamicObject(19446, 1291.514160, -1871.748413, 19.872528, 0.000000, 0.000000, -89.799987);//no name
CreateDynamicObject(3920, 1299.284545, -1871.617553, 15.072930, 0.000000, 0.000000, -179.900192);//no name
CreateDynamicObject(19452, 1294.088134, -1867.086303, 12.466876, 0.000000, 89.899971, 0.000000);//no name
CreateDynamicObject(19452, 1297.576538, -1867.049926, 12.473670, 0.000000, -90.100013, 0.000000);//no name
CreateDynamicObject(19452, 1301.041137, -1867.051757, 12.470579, 0.000000, -90.000038, 0.000000);//no name
CreateDynamicObject(19452, 1304.339233, -1867.064086, 12.465450, 0.000000, -89.899971, 0.000000);//no name
CreateDynamicObject(19452, 1290.601928, -1867.051879, 12.469447, 0.000000, -89.900062, 0.000000);//no name
CreateDynamicObject(19452, 1288.914672, -1867.145385, 12.467470, 0.000000, 90.100028, 0.000000);//no name
CreateDynamicObject(19452, 1303.629516, -1876.608276, 12.470005, 0.000000, 89.799995, 0.000000);//no name
CreateDynamicObject(19452, 1300.224853, -1876.626098, 12.469447, 0.000000, 90.199989, 0.000000);//no name
CreateDynamicObject(19452, 1296.807128, -1876.606933, 12.468647, 0.000000, 89.800025, 0.000000);//no name
CreateDynamicObject(19452, 1293.324951, -1876.664062, 12.461665, 0.000000, 90.000038, 0.000000);//no name
CreateDynamicObject(19452, 1289.841308, -1876.647338, 12.497240, 0.000000, 90.099945, 0.000000);//no name
CreateDynamicObject(19452, 1289.031494, -1875.988769, 12.467144, 0.000000, -89.900047, 0.000000);//no name
CreateDynamicObject(1536, 1293.745849, -1862.197998, 12.466876, 0.000000, 0.000000, -88.499946);//no name
CreateDynamicObject(1536, 1287.339111, -1877.771606, 12.452733, 0.000000, 0.000000, -89.899993);//no name
CreateDynamicObject(2412, 1293.569335, -1862.430664, 12.533473, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2412, 1295.757812, -1862.402343, 12.536801, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2435, 1287.802001, -1873.340820, 12.507589, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2435, 1288.678344, -1873.308715, 12.502831, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2435, 1289.611206, -1873.306884, 12.501567, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2435, 1290.520141, -1873.302612, 12.510162, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2434, 1291.418457, -1873.333374, 12.527601, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2435, 1291.582275, -1872.219360, 12.519968, 0.000000, 0.000000, 89.699981);//no name
CreateDynamicObject(2435, 1291.585205, -1871.304077, 12.521340, 0.000000, 0.000000, 89.700012);//no name
CreateDynamicObject(2435, 1291.606079, -1870.374633, 12.532094, 0.000000, 0.000000, 89.200004);//no name
CreateDynamicObject(2435, 1291.630126, -1869.514038, 12.531620, 0.000000, 0.000000, 87.800003);//no name
CreateDynamicObject(2434, 1291.651977, -1868.650878, 12.541419, 0.000000, 0.000000, 89.799972);//no name
CreateDynamicObject(2435, 1290.529541, -1868.465087, 12.535387, 0.000000, 0.000000, 178.600036);//no name
CreateDynamicObject(2435, 1289.623291, -1868.460205, 12.527647, 0.000000, 0.000000, 179.399978);//no name
CreateDynamicObject(2417, 1288.021362, -1870.354492, 12.517509, 0.000000, 0.000000, 88.200004);//no name
CreateDynamicObject(2636, 1292.502197, -1869.144165, 13.117383, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1292.629760, -1872.151977, 13.132657, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1290.298217, -1874.283325, 13.130635, 0.000000, 0.000000, -60.599998);//no name
CreateDynamicObject(2636, 1288.900512, -1874.301391, 13.084854, 0.000000, 0.000000, -85.799987);//no name
CreateDynamicObject(2636, 1290.565917, -1869.588867, 12.683958, 0.000000, 69.600006, -121.499992);//no name
CreateDynamicObject(2747, 1298.170410, -1870.775390, 12.946014, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2747, 1298.268066, -1867.466674, 12.948616, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2747, 1298.157104, -1863.825317, 12.938385, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2747, 1302.620483, -1870.957519, 12.976511, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2747, 1302.784912, -1867.762695, 12.946513, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2747, 1302.714111, -1863.915039, 12.916513, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2747, 1289.766113, -1876.503417, 12.942502, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2252, 1298.330566, -1867.376098, 13.559453, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2747, 1290.468139, -1866.432861, 12.913306, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(12950, 1292.338500, -1875.567504, 12.802496, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1299.341552, -1871.018920, 13.105319, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1299.661621, -1867.760498, 13.106509, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1299.719726, -1863.636108, 13.086503, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1304.048950, -1863.982543, 13.143239, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1304.127319, -1867.824707, 13.141921, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1303.811523, -1870.970092, 13.216341, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2240, 1290.907348, -1862.713500, 12.882555, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1290.267089, -1876.437500, 13.091382, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1291.147460, -1866.383056, 13.169832, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(1549, 1296.320678, -1862.582153, 12.456596, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1296.754638, -1867.508056, 13.047673, 0.000000, 0.000000, 177.499969);//no name
CreateDynamicObject(2636, 1296.701049, -1863.937133, 13.148468, 0.000000, 0.000000, 177.199966);//no name
CreateDynamicObject(2636, 1301.943237, -1863.714355, 13.116513, 0.000000, 0.000000, -178.000015);//no name
CreateDynamicObject(2636, 1301.873046, -1867.574340, 13.126515, 0.000000, 0.000000, -175.000030);//no name
CreateDynamicObject(2636, 1301.767211, -1870.980224, 13.106513, 0.000000, 0.000000, -179.400070);//no name
CreateDynamicObject(2636, 1298.124511, -1871.249633, 13.097187, 0.000000, 0.000000, -90.199981);//no name
CreateDynamicObject(2636, 1298.373901, -1868.607177, 13.108736, 0.000000, 0.000000, -88.699981);//no name
CreateDynamicObject(2636, 1298.323852, -1865.131103, 13.141510, 0.000000, 0.000000, -86.700004);//no name
CreateDynamicObject(2636, 1302.496459, -1864.519531, 13.146512, 0.000000, 0.000000, -100.200042);//no name
CreateDynamicObject(2636, 1302.748657, -1868.234497, 13.066514, 0.000000, 0.000000, -83.599998);//no name
CreateDynamicObject(2636, 1302.853637, -1871.531982, 13.042510, 0.000000, 0.000000, -87.600013);//no name
CreateDynamicObject(2245, 1298.285888, -1863.735961, 13.557967, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2249, 1303.044555, -1871.800170, 14.066514, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2636, 1289.078002, -1876.394653, 13.192517, 0.000000, 0.000000, -177.400009);//no name
CreateDynamicObject(2636, 1298.016845, -1870.122314, 13.148281, 0.000000, 0.000000, 99.899955);//no name
CreateDynamicObject(2636, 1298.060668, -1866.310668, 13.207139, 0.000000, 0.000000, 96.199981);//no name
CreateDynamicObject(2436, 1287.782592, -1869.422485, 12.512594, 0.000000, 0.000000, 90.999977);//no name
CreateDynamicObject(2011, 1300.799194, -1862.936645, 12.462509, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2011, 1287.796142, -1863.243286, 12.403193, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2010, 1291.684936, -1867.870849, 12.416543, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2010, 1294.546142, -1871.606079, 12.448040, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2011, 1292.680541, -1862.680664, 12.520689, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(1723, 1299.978271, -1874.851928, 12.480360, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(1723, 1302.031616, -1879.584716, 12.500144, 0.000000, 0.000000, -179.000030);//no name
CreateDynamicObject(1723, 1298.140258, -1878.329345, 12.413940, 0.000000, 0.000000, 92.400009);//no name
CreateDynamicObject(1724, 1303.501464, -1876.740112, 12.494498, 0.000000, 0.000000, -89.999984);//no name
CreateDynamicObject(1827, 1300.727416, -1877.282836, 12.392511, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(3660, 1307.949951, -1872.860107, 15.106524, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(3660, 1296.831787, -1884.248168, 15.122509, 0.000000, 0.000000, -89.099990);//no name
CreateDynamicObject(2252, 1291.532836, -1870.498168, 13.833394, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(3433, 1290.011108, -1861.257202, 15.269886, 0.000000, 0.000000, -91.200012);//no name
CreateDynamicObject(1893, 1293.852294, -1870.917480, 15.974804, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(1893, 1299.387695, -1871.141357, 15.966876, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2862, 1291.212524, -1868.615112, 13.575042, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2788, 1296.056152, -1864.021606, 16.555118, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2788, 1299.138549, -1864.182983, 16.558826, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19466, 1291.306274, -1862.274902, 14.176876, 0.000000, 0.000000, -90.499977);//no name
CreateDynamicObject(19466, 1288.250122, -1862.365234, 14.316864, 0.000000, 0.000000, -85.599990);//no name
CreateDynamicObject(1893, 1296.099853, -1867.604248, 15.950590, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(1893, 1300.445556, -1867.575683, 15.996520, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(1893, 1291.616943, -1867.603759, 15.952645, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2863, 1289.680541, -1873.340209, 13.533356, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(1893, 1298.446899, -1864.455200, 15.946535, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(1893, 1302.851562, -1863.556152, 15.936525, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(3785, 1293.179809, -1862.151611, 14.736881, 0.000000, 0.000000, 87.099983);//no name
CreateDynamicObject(3785, 1295.852416, -1862.098510, 14.586886, 0.000000, 0.000000, 87.000015);//no name
CreateDynamicObject(2240, 1303.681030, -1879.282958, 12.926980, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2245, 1300.784423, -1877.280029, 13.040578, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2854, 1300.638793, -1876.764892, 12.853858, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2853, 1300.246582, -1877.648681, 12.807891, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2764, 1303.826416, -1864.222656, 16.463047, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2764, 1303.786254, -1870.148315, 16.433181, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2764, 1300.979980, -1867.448364, 16.427057, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2764, 1297.751953, -1864.010864, 16.444919, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2764, 1297.636108, -1870.258056, 16.431211, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2764, 1287.910278, -1864.005249, 16.453041, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2764, 1289.038940, -1870.239501, 16.458589, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2764, 1292.000488, -1867.451171, 16.448593, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2764, 1294.627319, -1864.023071, 16.462669, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2764, 1294.653930, -1870.231811, 16.473047, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2788, 1303.932861, -1865.020751, 16.527683, 0.000000, 0.000000, -83.899993);//no name
CreateDynamicObject(2788, 1292.488403, -1867.368408, 16.577213, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2788, 1289.481811, -1870.222656, 16.573045, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2788, 1300.628295, -1866.872436, 16.593248, 0.000000, 0.000000, 96.300033);//no name
CreateDynamicObject(2788, 1303.762939, -1869.694213, 16.494251, 0.000000, 0.000000, 89.899978);//no name
CreateDynamicObject(2788, 1299.033813, -1870.138671, 16.548349, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2788, 1296.235961, -1870.209960, 16.608366, 0.000000, 0.000000, 174.699966);//no name
CreateDynamicObject(2788, 1291.462402, -1867.427978, 16.567588, 0.000000, 0.000000, 169.300033);//no name
CreateDynamicObject(2788, 1294.282592, -1863.968750, 16.553045, 0.000000, 0.000000, 162.700027);//no name
CreateDynamicObject(2788, 1293.983398, -1870.185180, 16.583044, 0.000000, 0.000000, -177.199966);//no name
CreateDynamicObject(2788, 1295.028442, -1870.179809, 16.621799, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2788, 1288.170043, -1864.587036, 16.573051, 0.000000, 0.000000, -96.099990);//no name
CreateDynamicObject(2788, 1288.494262, -1870.021972, 16.639003, 0.000000, 0.000000, -176.299957);//no name
CreateDynamicObject(2788, 1300.152221, -1867.510864, 16.524164, 0.000000, 0.000000, 173.900039);//no name
CreateDynamicObject(2788, 1301.247924, -1867.440917, 16.533737, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2788, 1300.865478, -1868.020385, 16.543478, 0.000000, 0.000000, -93.399978);//no name
CreateDynamicObject(2788, 1297.338623, -1864.115722, 16.558988, 0.000000, 0.000000, -173.599975);//no name
CreateDynamicObject(2788, 1297.848266, -1864.721313, 16.566686, 0.000000, 0.000000, -94.899978);//no name
CreateDynamicObject(2788, 1294.885620, -1864.798339, 16.596090, 0.000000, 0.000000, -73.899993);//no name
CreateDynamicObject(2011, 1287.867919, -1866.729980, 16.043878, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2011, 1292.532836, -1863.187622, 15.973034, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2011, 1304.760742, -1867.270385, 16.023042, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2010, 1301.897338, -1862.922485, 15.986515, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(2010, 1295.260131, -1867.237915, 16.056915, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(19430, 1293.588378, -1871.738403, 17.683055, 0.000000, 0.000000, -89.900016);//no name
CreateDynamicObject(19430, 1290.893798, -1871.745605, 17.753339, 0.000000, 0.000000, -90.000015);//no name
CreateDynamicObject(1649, 1289.444702, -1871.750366, 17.673294, 0.000000, 0.000000, -179.199996);//
CreateDynamicObject(970, 1303.192382, -1862.416992, 16.493984, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(970, 1299.017578, -1862.422729, 16.505115, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(970, 1294.883544, -1862.419433, 16.510757, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(970, 1290.779541, -1862.402221, 16.503044, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(970, 1286.650756, -1862.397827, 16.504604, 0.000000, 0.000000, 0.000000);//no name
CreateDynamicObject(1649, 1296.403198, -1871.699462, 17.723058, 0.000000, 0.000000, 0.000000);//
CreateDynamicObject(1649, 1300.791625, -1871.710571, 17.706232, 0.000000, 0.000000, 0.000000);//
CreateDynamicObject(1649, 1305.063964, -1871.690429, 17.676353, 0.000000, 0.000000, 0.000000);//
CreateDynamicObject(1649, 1289.087158, -1871.833251, 17.692825, 0.000000, 0.000000, 0.000000);//
CreateDynamicObject(1649, 1303.861694, -1871.627685, 17.687921, 0.000000, 0.000000, 179.999786);//
CreateDynamicObject(1649, 1299.443115, -1871.639648, 17.685724, 0.000000, 0.000000, -179.799987);//
CreateDynamicObject(1649, 1295.052246, -1871.684448, 17.705921, 0.000000, 0.000000, -178.799926);//
CreateDynamicObject(1536, 1291.691772, -1871.766479, 15.943043, 0.000000, 0.000000, 89.899986);//
CreateDynamicObject(1214,1299.30004883,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (1)
CreateDynamicObject(1214,1298.30004883,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (2)
CreateDynamicObject(1214,1297.30004883,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (3)
CreateDynamicObject(1214,1296.30004883,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (4)
CreateDynamicObject(1214,1300.30004883,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (5)
CreateDynamicObject(1214,1301.19995117,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (6)
CreateDynamicObject(1214,1302.00000000,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (7)
CreateDynamicObject(1214,1302.80004883,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (8)
CreateDynamicObject(1214,1303.59997559,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (9)
CreateDynamicObject(1214,1295.30004883,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (10)
CreateDynamicObject(1214,1294.40002441,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (11)
CreateDynamicObject(1214,1292.90002441,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (12)
CreateDynamicObject(1214,1292.09997559,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (13)
CreateDynamicObject(1214,1291.30004883,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (14)
CreateDynamicObject(1214,1290.59997559,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (15)
CreateDynamicObject(1214,1289.80004883,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (16)
CreateDynamicObject(1214,1289.09997559,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (17)
CreateDynamicObject(1214,1288.40002441,-1857.90002441,12.50000000,0.00000000,0.00000000,0.00000000); //object(bollard) (18)
// bar moteros
CreateDynamicObject(14777, 1133.15, -1.65, 1016.72, 0.00, 0.00, 180.09);
CreateDynamicObject(2125, 1127.45, -8.45, 1018.44, 0.00, 0.00, 0.00);
CreateDynamicObject(2125, 1125.18, -8.50, 1018.44, 0.00, 0.00, 0.00);
CreateDynamicObject(2125, 1124.35, -8.52, 1018.44, 0.00, 0.00, 0.00);
CreateDynamicObject(2125, 1122.25, -8.57, 1018.44, 0.00, 0.00, 0.00);
CreateDynamicObject(2125, 1121.20, -8.59, 1018.44, 0.00, 0.00, 0.00);
CreateDynamicObject(2125, 1119.10, -8.54, 1018.44, 0.00, 0.00, 0.00);
CreateDynamicObject(1541, 1140.87, -1.17, 1018.01, 0.00, 0.00, 270.00);
CreateDynamicObject(1541, 1140.86, -2.51, 1018.01, 0.00, 0.00, 270.00);
CreateDynamicObject(1541, 1140.86, -6.29, 1018.01, 0.00, 0.00, 270.00);
CreateDynamicObject(1541, 1140.86, -9.67, 1018.01, 0.00, 0.00, 270.00);
CreateDynamicObject(14820, 1141.17, 9.37, 1017.83, 0.00, 0.00, 270.00);
CreateDynamicObject(2290, 1117.84, -4.88, 1016.72, 0.00, 0.00, 90.00);
CreateDynamicObject(2290, 1117.84, -0.26, 1016.72, 0.00, 0.00, 90.00);
CreateDynamicObject(1520, 1140.60, -3.21, 1017.88, 0.00, 0.00, 0.00);
CreateDynamicObject(1520, 1140.45, -0.84, 1017.88, 0.00, 0.00, 0.00);
CreateDynamicObject(1520, 1140.40, 0.89, 1017.88, 0.00, 0.00, 0.00);
CreateDynamicObject(1520, 1140.36, -0.15, 1017.88, 0.00, 0.00, 0.00);
CreateDynamicObject(2232, 1129.58, -15.78, 1017.34, 0.00, 0.00, 138.71);
CreateDynamicObject(2232, 1136.53, -15.52, 1017.34, 0.00, 0.00, 232.70);
CreateDynamicObject(2681, 1129.70, -14.23, 1016.73, 0.00, 0.00, 90.00);
CreateDynamicObject(2681, 1136.65, -14.23, 1016.73, 0.00, 0.00, 270.14);
CreateDynamicObject(1491, 1139.20, 6.20, 1016.73, 0.00, 0.00, 313.79);
CreateDynamicObject(3851, 1139.17, 11.81, 1022.65, 0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1139.15, 13.13, 1018.66, 0.00, 0.00, 270.00);
CreateDynamicObject(3851, 1139.15, 13.13, 1022.65, 0.00, 0.00, 270.00);
CreateDynamicObject(3851, 1139.21, 12.33, 1022.65, 0.00, 0.00, 270.00);
CreateDynamicObject(3851, 1139.21, 12.33, 1018.66, 0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1139.17, 11.81, 1018.66, 0.00, 0.00, 180.00);
CreateDynamicObject(3851, 111139.08, 12.01, 1018.66, 0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1143.73, 9.20, 1022.65, 0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1139.17, 11.81, 1018.66, 0.00, 0.00, 180.00);
CreateDynamicObject(3851, 1139.17, 11.81, 1022.65, 0.00, 0.00, 180.00);
CreateDynamicObject(3851, 1143.73, 9.20, 1018.66, 0.00, 0.00, 0.00);
CreateDynamicObject(14651, 1122.86, -1.99, 1018.94, 0.00, 0.00, 0.00);
CreateDynamicObject(18092, 1141.35, 9.84, 1017.23, 0.00, 0.00, 90.37);
CreateDynamicObject(1665, 1141.90, 8.13, 1017.75, 0.00, 0.00, 0.00);
CreateDynamicObject(1543, 1141.62, 8.06, 1017.74, 0.00, 0.00, 0.00);
CreateDynamicObject(1543, 1141.85, 7.76, 1017.74, 0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1140.66, 4.86, 1024.86, 90.00, 0.00, 49.58);
CreateDynamicObject(2190, 1141.16, 11.46, 1017.72, 0.00, 0.00, 34.27);
CreateDynamicObject(1670, 1141.64, 11.64, 1017.76, 0.00, 0.00, 0.00);
CreateDynamicObject(1670, 1141.06, 7.76, 1017.76, 0.00, 0.00, 0.00);
CreateDynamicObject(1543, 1141.55, 7.78, 1017.74, 0.00, 0.00, 0.00);
CreateDynamicObject(2724, 1142.04, 9.66, 1017.25, 0.00, 0.00, 269.18);
CreateDynamicObject(2724, 1142.16, 10.73, 1017.25, 0.00, 0.00, 248.09);
CreateDynamicObject(3851, 1145.96, 5.18, 1018.66, 0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1145.96, 5.18, 1022.65, 0.00, 0.00, 270.00);
CreateDynamicObject(1754, 1140.02, 11.90, 1016.73, 0.00, 0.00, 0.02);
CreateDynamicObject(2232, 1143.39, 11.85, 1017.34, 0.00, 0.00, 335.98);
CreateDynamicObject(3851, 1140.66, 4.86, 1024.86, 90.00, 0.00, 49.58);
CreateDynamicObject(2232, 1136.77, -12.41, 1017.34, 0.00, 0.00, 328.72);
CreateDynamicObject(2232, 1129.38, -12.40, 1017.34, 0.00, 0.00, 57.90);
CreateDynamicObject(2232, 1125.97, -1.67, 1019.97, 0.00, 0.00, 90.00);
CreateDynamicObject(2232, 1134.26, -1.67, 1019.97, 0.00, 0.00, 270.00);
CreateDynamicObject(2232, 1134.26, -1.67, 1019.97, 0.00, 180.00, 270.00);
CreateDynamicObject(2232, 1125.97, -1.67, 1019.97, 0.00, 180.00, 90.00);
CreateDynamicObject(2011, 1143.39, 5.61, 1016.73, 0.00, 0.00, 0.00);
CreateDynamicObject(2011, 1117.86, -1.53, 1016.73, 0.00, 0.00, 0.00);
//---------------------------------------------Estacionamiento de Unity-------------------------------------------//
CreateDynamicObject(3996,1883.19921875,-1887.00000000,12.60000038,0.00000000,0.00000000,0.00000000); //object(roads08_lan) (1)
CreateDynamicObject(8041,1851.19995117,-1880.30004883,18.50000000,0.00000000,358.00000000,178.75000000); //object(apbarriergate06_lvs) (2)
CreateDynamicObject(4642,1891.50000000,-1879.00000000,14.19999981,0.00000000,0.00000000,0.00000000); //object(paypark_lan) (1)
CreateDynamicObject(1251,1893.80004883,-1879.09997559,15.89999962,299.99328613,351.97869873,93.04153442); //object(smashbar) (1)
CreateDynamicObject(8661,1881.39941406,-1867.00000000,12.60000038,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (1)
CreateDynamicObject(8661,1881.40002441,-1854.00000000,12.60000038,0.00000000,0.00000000,0.00000000); //object(gnhtelgrnd_lvs) (2)
CreateDynamicObject(8661,1880.00000000,-1846.00000000,12.60000038,0.00000000,0.00000000,343.99841309); //object(gnhtelgrnd_lvs) (3)
CreateDynamicObject(1251,1864.69995117,-1857.69995117,12.69999981,0.00000000,0.00000000,266.00000000); //object(smashbar) (2)
CreateDynamicObject(1251,1864.69995117,-1852.00000000,12.69999981,0.00000000,0.00000000,265.99548340); //object(smashbar) (3)
CreateDynamicObject(1251,1864.80004883,-1846.69995117,12.69999981,0.00000000,0.00000000,265.99548340); //object(smashbar) (4)
CreateDynamicObject(1251,1864.90002441,-1841.09997559,12.69999981,0.00000000,0.00000000,265.99548340); //object(smashbar) (5)
CreateDynamicObject(1251,1879.30004883,-1845.69995117,12.69999981,0.00000000,0.00000000,90.25000000); //object(smashbar) (6)
CreateDynamicObject(1251,1879.40002441,-1851.00000000,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (7)
CreateDynamicObject(1251,1879.40002441,-1855.40002441,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (8)
CreateDynamicObject(1251,1879.19995117,-1859.69995117,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (9)
CreateDynamicObject(1251,1879.09997559,-1864.00000000,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (10)
CreateDynamicObject(1251,1879.19995117,-1868.50000000,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (11)
CreateDynamicObject(1251,1886.09997559,-1845.69995117,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (12)
CreateDynamicObject(1251,1886.00000000,-1850.90002441,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (13)
CreateDynamicObject(1251,1886.00000000,-1855.40002441,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (14)
CreateDynamicObject(1251,1886.00000000,-1859.69995117,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (15)
CreateDynamicObject(1251,1885.90002441,-1864.00000000,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (16)
CreateDynamicObject(1251,1886.09997559,-1868.50000000,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (17)
CreateDynamicObject(994,1882.69995117,-1852.00000000,12.60000038,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (1)
CreateDynamicObject(994,1882.69995117,-1858.30004883,12.60000038,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (3)
CreateDynamicObject(994,1882.69995117,-1864.59997559,12.60000038,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (4)
CreateDynamicObject(994,1882.69995117,-1868.40002441,12.60000038,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (5)
CreateDynamicObject(1251,1898.40002441,-1868.19995117,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (18)
CreateDynamicObject(1251,1898.40002441,-1863.09997559,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (19)
CreateDynamicObject(1251,1898.69995117,-1858.09997559,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (20)
CreateDynamicObject(1251,1898.50000000,-1853.09997559,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (21)
CreateDynamicObject(1251,1898.90002441,-1848.30004883,12.69999981,0.00000000,0.00000000,90.24719238); //object(smashbar) (22)
CreateDynamicObject(996,1901.69995117,-1849.90002441,13.30000019,0.00000000,0.00000000,88.00000000); //object(lhouse_barrier1) (3)
CreateDynamicObject(996,1861.50000000,-1838.59997559,13.19999981,0.00000000,0.00000000,89.99499512); //object(lhouse_barrier1) (4)
CreateDynamicObject(996,1869.00000000,-1879.30004883,13.39999962,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier1) (5)
CreateDynamicObject(996,1877.19995117,-1879.30004883,13.39999962,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier1) (6)
CreateDynamicObject(996,1882.09997559,-1879.40002441,13.39999962,358.00000000,0.25015259,0.00872803); //object(lhouse_barrier1) (7)
CreateDynamicObject(996,1901.19995117,-1842.30004883,13.60000038,0.00000000,0.00000000,166.00000000); //object(lhouse_barrier1) (8)
CreateDynamicObject(996,1893.30004883,-1840.30004883,13.60000038,0.00000000,0.00000000,163.74792480); //object(lhouse_barrier1) (11)
CreateDynamicObject(996,1885.50000000,-1838.00000000,13.60000038,0.00000000,0.00000000,163.74572754); //object(lhouse_barrier1) (12)
CreateDynamicObject(996,1877.69995117,-1835.69995117,13.60000038,0.00000000,0.00000000,163.74572754); //object(lhouse_barrier1) (13)
CreateDynamicObject(996,1877.69921875,-1835.69921875,13.60000038,0.00000000,0.00000000,163.74572754); //object(lhouse_barrier1) (14)
CreateDynamicObject(996,1869.00000000,-1833.19995117,13.60000038,0.00000000,0.00000000,163.74572754); //object(lhouse_barrier1) (15)
CreateDynamicObject(1319,1901.50000000,-1880.30004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (1)
CreateDynamicObject(1319,1901.40002441,-1881.19995117,13.19999981,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (2)
CreateDynamicObject(1319,1894.19995117,-1887.90002441,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (3)
CreateDynamicObject(1319,1900.19995117,-1884.19995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (4)
CreateDynamicObject(1319,1901.19995117,-1882.00000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (5)
CreateDynamicObject(1319,1900.90002441,-1882.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (6)
CreateDynamicObject(1319,1900.59997559,-1883.50000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (7)
CreateDynamicObject(1319,1899.59997559,-1884.90002441,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (8)
CreateDynamicObject(1319,1898.80004883,-1885.40002441,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (9)
CreateDynamicObject(1319,1898.19995117,-1885.90002441,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (10)
CreateDynamicObject(1319,1897.40002441,-1886.30004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (11)
CreateDynamicObject(1319,1896.69995117,-1886.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (12)
CreateDynamicObject(1319,1895.90002441,-1887.09997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (13)
CreateDynamicObject(1319,1895.00000000,-1887.50000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(ws_ref_bollard) (14)
//======================================GOBIERNO=======================================================//
	CreateDynamicObject(4697,1418.09997559,-1796.69995117,12.69999981,0.00000000,359.50000000,0.00000000); //object(crprkblok1_lan2) (1)
	CreateDynamicObject(1251,1408.69995117,-1775.90002441,12.60000038,0.00000000,0.00000000,89.75000000); //object(smashbar) (1)
	CreateDynamicObject(1251,1408.69995117,-1776.69995117,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (2)
	CreateDynamicObject(1251,1408.69995117,-1780.40002441,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (3)
	CreateDynamicObject(1251,1408.69995117,-1781.30004883,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (4)
	CreateDynamicObject(1251,1408.69995117,-1785.00000000,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (5)
	CreateDynamicObject(1251,1408.69995117,-1785.80004883,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (6)
	CreateDynamicObject(1251,1408.80004883,-1789.50000000,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (7)
	CreateDynamicObject(1251,1408.80004883,-1790.30004883,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (8)
	CreateDynamicObject(1251,1408.90002441,-1794.00000000,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (9)
	CreateDynamicObject(1251,1408.90002441,-1794.80004883,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (10)
	CreateDynamicObject(1251,1408.90002441,-1798.59997559,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (11)
	CreateDynamicObject(1251,1408.90002441,-1799.30004883,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (12)
	CreateDynamicObject(1251,1408.90002441,-1803.09997559,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (13)
	CreateDynamicObject(1251,1408.90002441,-1803.80004883,12.60000038,0.00000000,0.00000000,89.74731445); //object(smashbar) (14)
//========================Cuarto de negocios LCN
CreateDynamicObject(19446, -2096.74, 77.20, 41.82,   0.00, 0.00, 0.00);
CreateDynamicObject(19446, -2092.01, 72.47, 41.82,   0.00, 0.00, 89.82);
CreateDynamicObject(19446, -2087.56, 77.26, 41.82,   0.00, 0.00, 0.00);
CreateDynamicObject(19446, -2092.06, 81.72, 41.82,   0.00, 0.00, 89.82);
CreateDynamicObject(3095, -2092.19, 77.14, 43.12,   0.00, 0.00, 0.00);
CreateDynamicObject(1536, -2093.47, 81.66, 40.13,   0.00, 0.00, 0.00);
CreateDynamicObject(2063, -2095.32, 81.35, 40.96,   0.00, 0.00, 1.49);
CreateDynamicObject(2063, -2089.05, 81.36, 40.96,   0.00, 0.00, 0.00);
CreateDynamicObject(11631, -2093.24, 73.23, 41.33,   0.00, 0.00, -182.16);
CreateDynamicObject(2228, -2090.84, 81.47, 40.66,   0.00, 0.00, 0.00);
CreateDynamicObject(2228, -2091.15, 81.49, 40.66,   0.00, 0.00, 0.00);
CreateDynamicObject(1829, -2088.08, 73.28, 40.56,   0.00, -0.02, -181.92);
CreateDynamicObject(336, -2092.30, 72.71, 40.34,   0.00, 0.00, 0.00);
CreateDynamicObject(336, -2092.27, 72.99, 40.34,   0.00, 0.00, 0.00);
CreateDynamicObject(336, -2092.29, 73.21, 40.34,   0.00, 0.00, 0.00);
CreateDynamicObject(2000, -2096.41, 73.06, 40.10,   0.00, 0.00, 181.44);
CreateDynamicObject(2000, -2095.94, 73.08, 40.10,   0.00, 0.00, 181.44);
CreateDynamicObject(1704, -2092.86, 79.34, 40.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1704, -2091.80, 79.34, 40.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1704, -2092.86, 79.34, 40.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1704, -2089.58, 77.78, 40.11,   0.00, 0.00, -91.08);
CreateDynamicObject(1704, -2089.59, 76.66, 40.11,   0.00, 0.00, -91.08);
CreateDynamicObject(1704, -2094.39, 75.86, 40.11,   0.00, 0.00, -270.90);
CreateDynamicObject(1704, -2094.35, 76.96, 40.11,   0.00, 0.00, -270.90);
CreateDynamicObject(2312, -2096.77, 76.98, 41.88,   0.00, 0.00, 91.32);
CreateDynamicObject(1433, -2091.54, 76.43, 40.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1433, -2092.70, 76.45, 40.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1433, -2092.68, 77.61, 40.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1433, -2091.52, 77.60, 40.30,   0.00, 0.00, 0.00);
//CreateDynamicObject(3935, 1338.51, -1799.89, 16.44,   0.00, 0.00, 56.23);//
CreateDynamicObject(1211, 1324.51, -1838.62, 13.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1359, 1331.73, -1825.28, 13.08,   0.00, 0.00, 0.10);
CreateDynamicObject(717, 1350.34, -1817.02, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1350.61, -1807.27, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1350.78, -1798.50, 12.38,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1347.67, -1798.11, 12.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1347.49, -1811.47, 12.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1347.38, -1816.81, 12.78,   0.00, 0.00, 0.00);
CreateDynamicObject(1280, 1347.63, -1804.40, 12.78,   0.00, 0.00, 0.10);
CreateDynamicObject(1280, 1347.77, -1792.13, 12.78,   0.00, 0.00, 0.10);
CreateDynamicObject(1359, 1347.43, -1814.28, 13.08,   0.00, 0.00, 0.00);
CreateDynamicObject(1359, 1347.61, -1801.04, 13.08,   0.00, 0.00, 0.00);
CreateDynamicObject(1359, 1347.88, -1788.75, 13.08,   0.00, 0.00, 0.00);
CreateDynamicObject(1359, 1329.63, -1785.70, 13.08,   0.00, 0.00, 0.00);
CreateDynamicObject(1359, 1329.77, -1797.91, 13.08,   0.00, 0.00, 0.00);
CreateDynamicObject(1359, 1330.74, -1810.03, 13.08,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1338.23, -1804.44, 15.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1337.76, -1767.42, 15.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1338.30, -1812.74, 15.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1338.08, -1794.20, 15.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1338.12, -1785.77, 15.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1378.43, -1775.68, 15.11,   0.00, 0.00, 90.24);
CreateDynamicObject(1231, 1337.90, -1776.64, 15.11,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1349.17, -1776.51, 15.11,   0.00, 0.00, 90.24);
CreateDynamicObject(1231, 1361.82, -1776.42, 15.11,   0.00, 0.00, 90.24);
CreateDynamicObject(3802, 1322.37, -1833.64, 16.47,   0.00, 0.00, 173.00);
CreateDynamicObject(8650, 1363.33, -1820.60, 13.02,   0.00, 0.00, 268.20);
CreateDynamicObject(8650, 1363.92, -1784.04, 13.02,   0.00, 0.00, 269.02);
CreateDynamicObject(8650, 1363.73, -1802.21, 13.02,   0.00, 0.00, 269.02);
CreateDynamicObject(983, 1375.40, -1742.22, 13.05,   0.00, 0.00, 90.51);
CreateDynamicObject(983, 1367.32, -1742.33, 13.05,   0.00, 0.00, 90.51);
CreateDynamicObject(983, 1373.81, -1742.23, 13.05,   0.00, 0.00, 90.51);
CreateDynamicObject(983, 1325.35, -1742.29, 13.15,   0.10, 0.00, 270.27);
CreateDynamicObject(983, 1333.37, -1742.28, 13.15,   0.10, 0.00, 270.27);
CreateDynamicObject(983, 1326.95, -1742.29, 13.15,   0.10, 0.00, 270.27);
//========================Plaza ayuntamiento

CreateObject(19454, 1522.88000, -1611.56995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1602.18994, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1516.62000, -1599.06006, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1498.07996, -1599.06006, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1507.23999, -1599.06006, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19381, 1515.94995, -1605.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1620.84998, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1630.35999, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1639.88000, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1649.16003, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1658.67004, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1668.18005, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1677.68994, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1687.19995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1696.71997, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1706.22998, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1715.73999, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1522.88000, -1722.55005, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19373, 1519.66003, -1601.87000, 12.40000,   0.00000, 90.00000, 0.00000);
CreateObject(19373, 1519.66003, -1605.06995, 12.40000,   0.00000, 90.00000, 0.00000);
CreateObject(19373, 1519.66003, -1608.18994, 12.40000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1469.57996, -1599.06006, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1479.07996, -1599.06006, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19381, 1505.94043, -1605.45178, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1516.38000, -1725.59998, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1506.87000, -1725.56995, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19381, 1515.94995, -1615.12000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1624.63000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1633.63000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1643.13000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1652.13000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1661.63000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1671.13000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1679.63000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1689.13000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1698.63000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1708.13000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1717.63000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1515.94995, -1719.13000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1505.91370, -1614.92334, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1505.86169, -1624.67480, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1505.94995, -1634.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1505.94995, -1643.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1505.94995, -1653.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1505.94995, -1662.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1505.94995, -1672.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1505.94995, -1681.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1497.37000, -1725.56995, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1488.57996, -1599.06006, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1459.37000, -1725.56995, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1449.87000, -1725.56995, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1440.37000, -1725.56995, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1436.28003, -1722.54004, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1713.06995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1703.56995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1694.06995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1684.56995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1675.06995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1665.56995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1656.06995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1646.56995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1637.06995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1627.56995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1618.06995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1608.56995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1436.28003, -1602.06995, 12.44000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1460.07996, -1599.06006, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1450.57996, -1599.06006, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19454, 1441.07996, -1599.06006, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(19381, 1463.94995, -1605.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1453.44995, -1605.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1442.94995, -1605.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1463.94995, -1615.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1453.44995, -1615.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1442.94995, -1615.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1463.94995, -1624.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1453.44995, -1624.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1442.94995, -1624.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1442.94995, -1634.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1453.44995, -1634.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1453.44995, -1643.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1442.94995, -1643.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1442.94995, -1653.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1453.44995, -1662.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1453.44995, -1672.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1442.94995, -1672.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1437.16772, -1691.07837, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1442.94995, -1700.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1463.94995, -1719.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1453.44995, -1719.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1442.94995, -1710.09998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1442.94995, -1719.59998, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(3578, 1519.53003, -1727.12000, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1509.50000, -1727.12000, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1499.50000, -1727.12000, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1459.50000, -1727.12000, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1449.50000, -1727.12000, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1439.65002, -1727.12000, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1434.79004, -1721.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1711.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1701.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1691.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1681.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1671.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1661.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1651.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1641.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1631.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1621.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1611.80005, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1434.79004, -1602.32996, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1439.67004, -1597.44995, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1449.67004, -1597.44995, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1459.67004, -1597.44995, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1469.67004, -1597.44995, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1479.67004, -1597.44995, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1489.67004, -1597.44995, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1499.67004, -1597.44995, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1509.67004, -1597.44995, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1524.45996, -1602.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1519.55005, -1597.44995, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(3578, 1524.45996, -1612.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1622.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1632.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1642.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1652.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1662.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1672.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1682.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1692.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1702.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1712.38000, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(3578, 1524.45996, -1722.23999, 11.76000,   0.00000, 0.00000, 90.00000);
CreateObject(18981, 1479.16003, -1714.97998, 11.92000,   0.00000, 90.00000, 0.00000);
CreateObject(19454, 1461.96997, -1725.58997, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(3578, 1461.68005, -1727.13000, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(19454, 1496.42004, -1725.54004, 12.44000,   0.00000, 90.00000, 90.00000);
CreateObject(3578, 1496.72998, -1727.12000, 11.76000,   0.00000, 0.00000, 0.00000);
CreateObject(18981, 1479.16003, -1690.97998, 11.92000,   0.00000, 90.00000, 0.00000);
CreateObject(18981, 1503.58325, -1691.04504, 11.92000,   0.00000, 90.00000, 0.00000);
CreateObject(18981, 1503.66003, -1705.97998, 11.92000,   0.00000, 90.00000, 0.00000);
CreateObject(18981, 1454.66003, -1706.97998, 11.92000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1505.94995, -1719.13000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1495.94995, -1719.13000, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(700, 1495.05005, -1721.05005, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1505.05005, -1721.05005, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1515.05005, -1721.05005, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1463.05005, -1721.05005, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1453.05005, -1721.05005, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1443.05005, -1721.05005, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(8843, 1485.76001, -1717.72998, 12.45000,   0.00000, 0.00000, 0.00000);
CreateObject(8843, 1473.76001, -1717.72998, 12.43000,   0.00000, 0.00000, 180.00000);
CreateObject(700, 1501.95996, -1603.67004, 23.98000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1463.39001, -1603.81006, 23.98000,   0.00000, 0.00000, 0.00000);
CreateObject(970, 1516.08997, -1681.06006, 12.84000,   0.00000, 0.00000, -88.86000);
CreateObject(970, 1516.18005, -1685.21997, 12.84000,   0.00000, 0.00000, -89.46000);
CreateObject(970, 1516.18994, -1689.34998, 12.84000,   0.00000, 0.00000, -90.30000);
CreateObject(970, 1516.18994, -1693.45996, 12.84000,   0.00000, 0.00000, -90.30000);
CreateObject(970, 1516.15002, -1697.57996, 12.84000,   0.00000, 0.00000, -90.30000);
CreateObject(970, 1516.12000, -1701.73999, 12.84000,   0.00000, 0.00000, -90.30000);
CreateObject(970, 1516.09998, -1705.91003, 12.84000,   0.00000, 0.00000, -89.76000);
CreateObject(970, 1516.13000, -1710.02002, 12.84000,   0.00000, 0.00000, -89.70000);
CreateObject(970, 1516.16003, -1714.10999, 12.84000,   0.00000, 0.00000, -89.70000);
CreateObject(970, 1516.18005, -1716.39001, 12.84000,   0.00000, 0.00000, -89.70000);
CreateObject(970, 1514.13000, -1718.46997, 12.84000,   0.00000, 0.00000, -179.94000);
CreateObject(970, 1510.02002, -1718.51001, 12.84000,   0.00000, 0.00000, -179.94000);
CreateObject(970, 1505.84998, -1718.50000, 12.84000,   0.00000, 0.00000, -180.17999);
CreateObject(970, 1501.73999, -1718.47998, 12.84000,   0.00000, 0.00000, -180.17999);
CreateObject(970, 1497.63000, -1718.47998, 12.84000,   0.00000, 0.00000, -180.17999);
CreateObject(970, 1493.75000, -1718.47998, 12.84000,   0.00000, 0.00000, -180.17999);
CreateObject(970, 1491.65002, -1720.56006, 12.84000,   0.00000, 0.00000, -89.52000);
CreateObject(970, 1491.68994, -1721.80005, 12.84000,   0.00000, 0.00000, -89.52000);
CreateObject(970, 1466.66003, -1721.66003, 12.84000,   0.00000, 0.00000, -89.52000);
CreateObject(970, 1464.60999, -1719.47998, 12.84000,   0.00000, 0.00000, 0.12000);
CreateObject(970, 1460.48999, -1719.51001, 12.84000,   0.00000, 0.00000, 0.12000);
CreateObject(970, 1456.39001, -1719.52002, 12.84000,   0.00000, 0.00000, 0.12000);
CreateObject(970, 1452.22998, -1719.52002, 12.84000,   0.00000, 0.00000, 0.12000);
CreateObject(970, 1448.13000, -1719.47998, 12.84000,   0.00000, 0.00000, 0.12000);
CreateObject(970, 1444.18994, -1719.48999, 12.84000,   0.00000, 0.00000, 0.12000);
CreateObject(970, 1442.15002, -1717.43005, 12.84000,   0.00000, 0.00000, -90.00000);
CreateObject(970, 1442.15002, -1713.30005, 12.84000,   0.00000, 0.00000, -90.00000);
CreateObject(970, 1442.15002, -1709.17004, 12.84000,   0.00000, 0.00000, -90.00000);
CreateObject(970, 1442.14001, -1705.03003, 12.84000,   0.00000, 0.00000, -90.00000);
CreateObject(970, 1442.15002, -1700.93005, 12.84000,   0.00000, 0.00000, -90.00000);
CreateObject(970, 1442.15002, -1696.83997, 12.84000,   0.00000, 0.00000, -90.00000);
CreateObject(970, 1442.14001, -1692.68994, 12.84000,   0.00000, 0.00000, -90.00000);
CreateObject(970, 1442.12000, -1688.58997, 12.84000,   0.00000, 0.00000, -90.00000);
CreateObject(970, 1442.13000, -1684.47998, 12.84000,   0.00000, 0.00000, -90.00000);
CreateObject(970, 1442.16699, -1680.63953, 12.84000,   0.00000, 0.00000, -90.00000);
CreateObject(970, 1479.42004, -1711.02002, 12.84000,   0.00000, 0.00000, -89.52000);
CreateObject(970, 1479.48999, -1715.13000, 12.84000,   0.00000, 0.00000, -89.52000);
CreateObject(970, 1479.54004, -1719.21997, 12.84000,   0.00000, 0.00000, -89.52000);
CreateObject(970, 1479.59998, -1723.30005, 12.84000,   0.00000, 0.00000, -89.52000);
CreateObject(970, 1479.63000, -1725.33997, 12.84000,   0.00000, 0.00000, -89.52000);
CreateObject(10183, 1446.10999, -1698.75000, 12.42000,   0.00000, 0.00000, 135.42000);
CreateObject(10183, 1512.34998, -1698.72998, 12.42000,   0.00000, 0.00000, 315.23999);
CreateObject(10378, 1479.48657, -1647.92651, 12.39704,   0.00000, 0.00000, 0.00000);
CreateObject(19381, 1437.09497, -1681.71082, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(18981, 1454.72241, -1691.18457, 11.92000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1443.19019, -1674.39600, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1443.11877, -1662.62463, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1495.33289, -1605.37744, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1484.85400, -1605.37744, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1474.34314, -1605.37744, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1495.55798, -1615.00732, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1485.10486, -1614.99548, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1474.83081, -1615.10522, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1472.59314, -1614.46313, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(19381, 1498.18469, -1605.78027, 12.25000,   0.00000, 90.00000, 0.00000);
CreateObject(8397, 1480.46472, -1608.24915, 20.80520,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1493.72668, -1671.90173, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1505.87671, -1671.90173, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1465.67285, -1672.44861, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1451.32129, -1672.95886, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1450.72534, -1626.48779, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1464.26111, -1626.48779, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1492.81641, -1626.48779, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(700, 1506.77173, -1626.48779, 12.67000,   0.00000, 0.00000, 0.00000);
CreateObject(732, 1457.88684, -1675.32532, 12.64350,   0.00000, 0.00000, 0.00000);
CreateObject(732, 1500.02551, -1676.26306, 12.64350,   0.00000, 0.00000, 0.00000);
CreateObject(732, 1458.27759, -1630.09351, 12.64350,   0.00000, 0.00000, 0.00000);
CreateObject(732, 1500.20081, -1629.11670, 12.64350,   0.00000, 0.00000, 0.00000);
//========================Moteros HQ los cobras
CreateDynamicObject(19505, 2620.07, -1069.04, 70.88,   0.00, 0.00, 182.60);
CreateDynamicObject(19505, 2620.07, -1069.04, 70.88,   0.00, 0.00, 182.60);
CreateDynamicObject(19506, 2620.07, -1069.04, 70.88,   0.00, 0.00, 182.60);
CreateDynamicObject(1649, 2624.29, -1062.62, 69.65,   0.00, 90.00, 2.00);
CreateDynamicObject(1649, 2620.64, -1062.79, 69.65,   0.00, 0.00, 3.00);
CreateDynamicObject(1649, 2617.10, -1062.95, 69.65,   0.00, 0.00, 2.00);
CreateDynamicObject(1649, 2613.85, -1063.12, 69.65,   0.00, 90.00, 3.00);
CreateDynamicObject(1649, 2612.45, -1072.21, 69.65,   0.00, 90.00, 93.00);
CreateDynamicObject(1649, 2623.89, -1074.48, 69.44,   2.00, 1.00, 2.00);
CreateDynamicObject(1649, 2626.36, -1072.50, 69.65,   0.00, 90.00, 93.00);
CreateDynamicObject(1649, 2626.03, -1065.22, 69.65,   0.00, 90.00, 92.00);
CreateDynamicObject(1734, 2620.89, -1070.96, 72.04,   0.00, 0.00, 0.00);
CreateDynamicObject(1734, 2620.51, -1065.54, 72.04,   0.00, 0.00, 0.00);
CreateDynamicObject(1734, 2616.11, -1068.29, 72.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 2619.52, -1073.75, 69.03,   0.00, 0.00, 183.00);
CreateDynamicObject(1724, 2613.89, -1074.23, 69.04,   0.00, 0.00, 142.00);
CreateDynamicObject(2319, 2617.76, -1070.58, 69.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1724, 2625.71, -1073.08, 69.04,   0.00, 0.00, 223.00);
CreateDynamicObject(3094, 2619.97, -1066.40, 69.04,   0.00, 0.00, 332.81);
CreateDynamicObject(19319, 2622.12, -1074.36, 69.75,   0.00, 0.00, 149.00);
CreateDynamicObject(19318, 2622.51, -1074.39, 69.75,   0.00, 0.00, 164.00);
CreateDynamicObject(19173, 2626.04, -1069.56, 70.71,   0.00, 0.00, 93.00);
CreateDynamicObject(19172, 2612.38, -1069.51, 70.67,   0.00, 0.00, 93.00);
CreateDynamicObject(632, 2617.02, -1073.71, 69.44,   0.00, 0.00, 0.00);
CreateDynamicObject(632, 2621.94, -1073.58, 69.44,   0.00, 0.00, 0.00);
CreateDynamicObject(1432, 2624.04, -1064.37, 69.14,   0.00, 0.00, 0.00);
CreateDynamicObject(16779, 2617.71, -1069.39, 72.04,   0.00, 0.00, 0.00);
CreateDynamicObject(18978, 2624.09, -1064.51, 69.83,   0.00, -25.00, 222.00);
CreateDynamicObject(18976, 2623.84, -1064.25, 69.85,   0.00, -11.00, 142.00);
CreateDynamicObject(18979, 2617.87, -1070.64, 69.61,   0.00, -24.00, 25.00);
CreateDynamicObject(18645, 2618.75, -1070.63, 69.59,   0.00, -32.00, 135.00);
CreateDynamicObject(1517, 2619.35, -1070.61, 69.73,   0.00, 0.00, 0.00);
//========================Gasolinera cerca de Alhambra (Jesus Moreno)
CreateDynamicObject(1280, 1952.22, -1765.40, 12.97,   0.00, 0.00, 180.26);
CreateDynamicObject(970, 1951.59, -1775.45, 13.04,   0.00, 0.00, 269.89);
CreateDynamicObject(970, 1951.63, -1764.20, 13.04,   0.00, 0.00, 269.89);
CreateDynamicObject(1280, 1952.22, -1765.40, 12.97,   0.00, 0.00, 180.26);
CreateDynamicObject(970, 1951.59, -1775.45, 13.04,   0.00, 0.00, 269.89);
CreateDynamicObject(970, 1951.63, -1764.20, 13.04,   0.00, 0.00, 269.89);
CreateDynamicObject(970, 1951.63, -1768.31, 13.04,   0.00, 0.00, 269.89);
CreateDynamicObject(970, 1951.60, -1772.39, 13.04,   0.00, 0.00, 269.89);
CreateDynamicObject(1280, 1952.07, -1776.18, 12.97,   0.00, 0.00, 180.26);
CreateDynamicObject(1280, 1952.02, -1770.92, 12.97,   0.00, 0.00, 180.26);
CreateDynamicObject(970, 1940.98, -1778.77, 13.04,   0.00, 0.00, 270.32);
CreateDynamicObject(970, 1940.94, -1766.83, 13.04,   0.00, 0.00, 270.62);
CreateDynamicObject(970, 1940.99, -1770.94, 13.04,   0.00, 0.00, 270.62);
CreateDynamicObject(970, 1940.98, -1775.07, 13.04,   0.00, 0.00, 270.62);
CreateDynamicObject(620, 1952.71, -1478.86, 9.93,   356.86, 0.00, -1.57);
CreateDynamicObject(970, 1942.24, -1766.79, 13.04,   0.00, 0.00, 270.62);
CreateDynamicObject(970, 1942.31, -1770.90, 13.04,   0.00, 0.00, 270.62);
CreateDynamicObject(970, 1942.31, -1775.03, 13.04,   0.00, 0.00, 270.62);
CreateDynamicObject(970, 1942.33, -1778.73, 13.04,   0.00, 0.00, 270.32);
CreateDynamicObject(1215, 1951.50, -1777.75, 13.05,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1951.76, -1761.91, 13.15,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1932.18, -1757.42, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1949.89, -1757.68, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1947.85, -1759.20, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1946.52, -1762.01, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1936.80, -1761.98, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1935.34, -1759.07, 12.67,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1928.63, -1775.17, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2010, 1928.62, -1778.39, 12.55,   0.00, 0.00, 0.00);
CreateDynamicObject(3920, 1929.42, -1781.12, 14.98,   0.00, 0.00, 270.53);
CreateDynamicObject(3920, 1929.41, -1771.47, 14.98,   0.00, 0.00, 270.53);
//======================== Pabellon de boxeo ( Jesus Moreno )
CreateDynamicObject(14623,2736.14257812,-1775.47460938,-8.92087936,0.00000000,0.00000000,0.00000000); //object(mafcasmain1) (1)
CreateDynamicObject(1491,473.79254150,-21.29999924,1002.68847656,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (1)
CreateDynamicObject(1649,2737.13696289,-1757.43701172,-12.79555225,0.00000000,0.00000000,1.00000000); //object(wglasssmash) (1)
CreateDynamicObject(1649,2745.65429688,-1759.15234375,-12.80201244,0.00000000,0.00000000,355.99548340); //object(wglasssmash) (2)
CreateDynamicObject(1649,2741.35937500,-1758.25292969,-12.80201244,0.00000000,0.00000000,336.00000000); //object(wglasssmash) (3)
CreateDynamicObject(1649,2726.58886719,-1758.83105469,-12.80201244,0.00000000,0.00000000,12.00000000); //object(wglasssmash) (4)
CreateDynamicObject(1649,2730.91601562,-1757.98730469,-12.80201244,0.00000000,0.00000000,9.99755859); //object(wglasssmash) (5)
CreateDynamicObject(1649,2730.91601562,-1757.98730469,-12.80201244,0.00000000,0.00000000,9.99755859); //object(wglasssmash) (6)
CreateDynamicObject(1649,2730.91601562,-1757.98730469,-12.80201244,0.00000000,0.00000000,187.00000000); //object(wglasssmash) (7)
CreateDynamicObject(1649,2726.58886719,-1758.83105469,-12.80201244,0.00000000,0.00000000,192.99682617); //object(wglasssmash) (8)
CreateDynamicObject(1649,2741.35937500,-1758.25292969,-12.80201244,0.00000000,0.00000000,157.99938965); //object(wglasssmash) (9)
CreateDynamicObject(1649,2745.65429688,-1759.15234375,-12.80201244,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (10)
CreateDynamicObject(1649,2737.13671875,-1757.43652344,-12.79555225,0.00000000,0.00000000,180.00000000); //object(wglasssmash) (11)
CreateDynamicObject(1491,2733.25195312,-1757.67431641,-14.46775436,0.00000000,0.00000000,4.00000000); //object(gen_doorint01) (2)
CreateDynamicObject(9131,2735.10253906,-1757.50000000,-13.33883858,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,2732.88745117,-1757.50000000,-11.19999981,0.00000000,0.00000000,2.00000000); //object(shbbyhswall13_lvs) (2)
CreateDynamicObject(9131,2735.10253906,-1757.50000000,-11.19999981,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (3)
CreateDynamicObject(9131,2732.88671875,-1757.50000000,-13.33883858,0.00000000,0.00000000,1.99951172); //object(shbbyhswall13_lvs) (4)
CreateDynamicObject(9131,2733.66601562,-1757.54003906,-10.86010170,0.00000000,90.00000000,2.00000000); //object(shbbyhswall13_lvs) (5)
CreateDynamicObject(9131,2733.66601562,-1757.54003906,-11.60000038,0.00000000,90.00000000,2.00000000); //object(shbbyhswall13_lvs) (6)
CreateDynamicObject(9131,2731.39941406,-1757.69995117,-10.80000019,0.00000000,90.00000000,7.99804688); //object(shbbyhswall13_lvs) (7)
CreateDynamicObject(9131,2729.19921875,-1758.00000000,-10.80000019,0.00000000,90.00000000,7.99951172); //object(shbbyhswall13_lvs) (8)
CreateDynamicObject(9131,2727.10009766,-1758.30004883,-10.80000019,0.00000000,90.00000000,7.99847412); //object(shbbyhswall13_lvs) (9)
CreateDynamicObject(9131,2725.19921875,-1758.69995117,-10.80000019,0.00000000,90.00000000,15.99609375); //object(shbbyhswall13_lvs) (10)
CreateDynamicObject(9131,2736.00000000,-1757.56152344,-10.86010170,0.00000000,90.00000000,0.00000000); //object(shbbyhswall13_lvs) (11)
CreateDynamicObject(9131,2738.00000000,-1757.56152344,-10.86010170,0.00000000,90.00000000,0.00000000); //object(shbbyhswall13_lvs) (12)
CreateDynamicObject(9131,2740.00000000,-1758.00000000,-10.86010170,0.00000000,90.00000000,336.00000000); //object(shbbyhswall13_lvs) (13)
CreateDynamicObject(9131,2742.00000000,-1758.90002441,-10.86010170,0.00000000,90.00000000,335.99475098); //object(shbbyhswall13_lvs) (14)
CreateDynamicObject(9131,2744.00000000,-1759.19995117,-10.86010170,0.00000000,90.00000000,359.99468994); //object(shbbyhswall13_lvs) (15)
CreateDynamicObject(9131,2746.00000000,-1759.19921875,-10.86010170,0.00000000,90.00000000,359.99453735); //object(shbbyhswall13_lvs) (16)
CreateDynamicObject(9131,2747.00000000,-1759.19921875,-10.86010170,0.00000000,90.00000000,359.99450684); //object(shbbyhswall13_lvs) (17)
CreateDynamicObject(4554,2733.29882812,-1722.69921875,-5.00000000,0.00000000,0.00000000,357.99499512); //object(libbase1_lan) (1)
CreateDynamicObject(2773,2735.00170898,-1755.91918945,-13.95052624,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (1)
CreateDynamicObject(2773,2732.86206055,-1755.93212891,-13.95052624,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (2)
CreateDynamicObject(2774,2743.21020508,-1759.00073242,-1.38719368,0.00000000,0.00000000,334.00000000); //object(cj_airp_pillars) (1)
CreateDynamicObject(2775,2734.07543945,-1757.00000000,-10.93270683,0.00000000,0.00000000,184.00000000); //object(cj_airprt_mon) (1)
CreateDynamicObject(2290,2747.41748047,-1753.26342773,-14.46775436,0.00000000,0.00000000,270.00000000); //object(swk_couch_1) (1)
CreateDynamicObject(2239,2725.02685547,-1755.51684570,-14.46775436,0.00000000,0.00000000,44.00000000); //object(cj_mlight16) (1)
CreateDynamicObject(2118,2747.20239258,-1757.33337402,-14.46775436,0.00000000,0.00000000,268.00000000); //object(swank_dinning_6) (1)
CreateDynamicObject(14705,2725.24438477,-1757.33728027,-13.42700195,0.00000000,0.00000000,0.00000000); //object(int2vase) (1)
CreateDynamicObject(2855,2725.20263672,-1756.48767090,-13.67596817,0.00000000,0.00000000,0.00000000); //object(gb_bedmags05) (1)
CreateDynamicObject(2290,2724.78710938,-1754.75097656,-14.46775436,0.00000000,0.00000000,90.00000000); //object(swk_couch_1) (2)
CreateDynamicObject(2118,2725.14746094,-1756.33007812,-14.46775436,0.00000000,0.00000000,271.99951172); //object(swank_dinning_6) (2)
CreateDynamicObject(2852,2747.12255859,-1757.46704102,-13.67596817,0.00000000,0.00000000,0.00000000); //object(gb_bedmags02) (1)
CreateDynamicObject(2870,2747.15747070,-1758.25646973,-13.67596817,0.00000000,0.00000000,0.00000000); //object(gb_ornament05) (1)
CreateDynamicObject(2239,2747.20214844,-1756.09436035,-14.46775436,0.00000000,0.00000000,308.00000000); //object(cj_mlight16) (2)
CreateDynamicObject(2946,2735.93359375,-1751.39941406,-14.46775436,0.00000000,0.00000000,85.99499512); //object(cr_door_03) (1)
CreateDynamicObject(2946,2732.75781250,-1751.27734375,-14.46775436,0.00000000,0.00000000,270.00000000); //object(cr_door_03) (2)
CreateDynamicObject(14791,2736.08764648,-1774.82360840,-12.42269325,0.00000000,0.00000000,0.00000000); //object(a_vgsgymboxa) (2)
CreateDynamicObject(2774,2728.94238281,-1758.21289062,-1.38719368,0.00000000,0.00000000,9.99755859); //object(cj_airp_pillars) (3)
CreateDynamicObject(3819,2744.03515625,-1781.02148438,-13.46999645,0.00000000,0.00000000,327.74963379); //object(bleacher_sfsx) (1)
CreateDynamicObject(3819,2745.61621094,-1771.78613281,-13.46999645,0.00000000,0.00000000,12.74963379); //object(bleacher_sfsx) (2)
CreateDynamicObject(3819,2727.79492188,-1771.58203125,-13.46999645,0.00000000,0.00000000,157.99987793); //object(bleacher_sfsx) (3)
CreateDynamicObject(3819,2728.86132812,-1780.77148438,-13.46999645,0.00000000,0.00000000,215.99670410); //object(bleacher_sfsx) (4)
CreateDynamicObject(16500,2741.98046875,-1794.30004883,-9.94923592,0.00000000,0.00000000,93.99902344); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,2733.91699219,-1794.55664062,-12.47354507,0.00000000,0.00000000,85.99548340); //object(cn2_savgardr1_) (2)
CreateDynamicObject(16500,2729.00000000,-1794.29980469,-10.19999981,0.00000000,0.00000000,87.99499512); //object(cn2_savgardr1_) (3)
CreateDynamicObject(1523,2742.37182617,-1794.15759277,-14.42041016,0.00000000,0.00000000,185.49511719); //object(gen_doorext10) (1)
CreateDynamicObject(1523,2730.00976562,-1794.39941406,-14.60000038,0.00000000,0.00000000,357.49511719); //object(gen_doorext10) (1)
CreateDynamicObject(16500,2738.90234375,-1794.55566406,-12.47354507,0.00000000,0.00000000,93.99902344); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,2740.75341797,-1809.42077637,-12.23105717,0.00000000,0.00000000,359.99902344); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,2736.53710938,-1797.30957031,-12.47354507,0.00000000,0.00000000,1.99401855); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,2736.71386719,-1802.31835938,-12.47354507,0.00000000,0.00000000,1.99401855); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,2734.36254883,-1809.56518555,-12.47354507,0.00000000,0.00000000,271.99401855); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,2732.00000000,-1809.56445312,-12.47354507,0.00000000,0.00000000,269.98852539); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,2739.39990234,-1809.56445312,-12.47354507,0.00000000,0.00000000,271.98852539); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,2739.89990234,-1809.56445312,-12.47354507,0.00000000,0.00000000,271.98852539); //object(cn2_savgardr1_) (1)
CreateDynamicObject(6037,2729.67602539,-1813.69995117,-16.27000046,0.00000000,0.00000000,0.00000000); //object(filler02_law) (1)
CreateDynamicObject(2080,2735.45947266,-1783.01257324,-14.46775436,0.00000000,0.00000000,358.00000000); //object(swank_dinning_2) (1)
CreateDynamicObject(1892,2733.52929688,-1758.18920898,-14.46775436,0.00000000,0.00000000,0.00000000); //object(security_gatsh) (2)
CreateDynamicObject(1955,2735.64843750,-1783.23266602,-13.60000038,30.00000000,0.00000000,212.00000000); //object(turn_arml) (1)
CreateDynamicObject(1778,2736.08398438,-1795.07202148,-14.40281296,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (1)
CreateDynamicObject(2518,2734.75878906,-1795.23583984,-14.40281296,0.00000000,0.00000000,358.00000000); //object(cj_b_sink2) (1)
CreateDynamicObject(2518,2732.33105469,-1795.12792969,-14.40281296,0.00000000,0.00000000,0.00000000); //object(cj_b_sink2) (2)
CreateDynamicObject(2528,2736.10302734,-1809.03637695,-14.41018295,0.00000000,0.00000000,182.00000000); //object(cj_toilet3) (1)
CreateDynamicObject(2528,2734.42993164,-1809.01354980,-14.41453266,0.00000000,0.00000000,181.99951172); //object(cj_toilet3) (2)
CreateDynamicObject(16500,2735.33349609,-1809.43469238,-12.42057037,0.00000000,0.00000000,1.99401855); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,2733.68115234,-1809.46813965,-12.41998482,0.00000000,0.00000000,359.99401855); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,2729.98999023,-1809.46752930,-12.41841412,0.00000000,0.00000000,357.98901367); //object(cn2_savgardr1_) (1)
CreateDynamicObject(14842,2738.58007812,-1808.55004883,-13.19999981,0.00000000,0.00000000,90.00000000); //object(int_policea07) (1)
CreateDynamicObject(14842,2731.67993164,-1808.54003906,-13.00000000,0.00000000,0.00000000,88.00000000); //object(int_policea07) (2)
CreateDynamicObject(16500,2736.87011719,-1807.28222656,-12.47354507,0.00000000,0.00000000,1.99401855); //object(cn2_savgardr1_) (1)
CreateDynamicObject(2528,2741.53344727,-1808.87500000,-14.40281296,0.00000000,0.00000000,181.99951172); //object(cj_toilet3) (5)
CreateDynamicObject(1975,2740.04150391,-1794.34997559,-12.94999981,0.00000000,0.00000000,184.00000000); //object(e_test) (1)
CreateDynamicObject(1976,2732.32788086,-1794.32202148,-13.10000038,0.00000000,0.00000000,174.00000000); //object(w_test) (1)
CreateDynamicObject(1715,2735.17358398,-1784.47998047,-14.46129417,0.00000000,0.00000000,158.00000000); //object(kb_swivelchair2) (1)
CreateDynamicObject(1715,2736.84863281,-1784.59997559,-14.46775436,0.00000000,0.00000000,201.99462891); //object(kb_swivelchair2) (2)
CreateDynamicObject(1615,2736.40161133,-1783.11633301,-13.67700005,0.00000000,90.00000000,0.00000000); //object(nt_alarm2_01) (1)
CreateDynamicObject(3350,2726.36743164,-1776.69030762,-14.69999981,0.00000000,0.00000000,98.00000000); //object(torino_mic) (1)
CreateDynamicObject(3350,2746.10595703,-1776.58386230,-14.69999981,0.00000000,0.00000000,244.00000000); //object(torino_mic) (2)
CreateDynamicObject(1958,2735.34838867,-1782.97570801,-13.62051296,0.00000000,0.00000000,326.00000000); //object(mxr_mix_body) (1)
CreateDynamicObject(14782,2736.22167969,-1800.91003418,-13.38676548,0.00000000,0.00000000,272.00000000); //object(int3int_boxing30) (1)
CreateDynamicObject(14782,2737.17651367,-1801.62634277,-13.38676548,0.00000000,0.00000000,92.00000000); //object(int3int_boxing30) (2)
CreateDynamicObject(941,2730.60766602,-1802.96545410,-14.39999962,0.00000000,0.00000000,92.00000000); //object(cj_df_worktop_3) (1)
CreateDynamicObject(941,2730.60742188,-1800.00000000,-14.39999962,0.00000000,0.00000000,91.99951172); //object(cj_df_worktop_3) (2)
CreateDynamicObject(941,2738.52465820,-1795.40002441,-14.30000019,0.00000000,0.00000000,4.00000000); //object(cj_df_worktop_3) (3)
CreateDynamicObject(2796,2741.65649414,-1794.21911621,-11.28517056,0.00000000,0.00000000,0.00000000); //object(cj_air_d_6) (1)
CreateDynamicObject(2796,2730.78320312,-1794.28698730,-11.37382603,0.00000000,0.00000000,358.00000000); //object(cj_air_d_6) (2)
CreateDynamicObject(1472,474.56347656,-21.37500000,1002.20001221,0.00000000,0.00000000,0.00000000); //object(dyn_porch_1) (1)
CreateDynamicObject(14820,476.60745239,-14.95596123,1003.59887695,0.00000000,0.00000000,90.00000000); //object(dj_stuff) (1)
CreateDynamicObject(1649,477.20001221,-14.84647083,1004.47454834,0.00000000,0.00000000,270.00000000); //object(wglasssmash) (12)
CreateDynamicObject(1649,477.19921875,-14.84570312,1004.47454834,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (14)
CreateDynamicObject(16500,2724.19995117,-1772.62475586,-8.90912628,0.00000000,0.00000000,85.99536133); //object(cn2_savgardr1_) (2)
CreateDynamicObject(16500,2724.50000000,-1775.00000000,-11.00000000,0.00000000,90.00000000,355.98992920); //object(cn2_savgardr1_) (2)
CreateDynamicObject(16500,2723.89990234,-1777.24316406,-8.90912628,0.00000000,0.00000000,85.98999023); //object(cn2_savgardr1_) (2)
CreateDynamicObject(16500,2724.53002930,-1775.00000000,-7.59999990,0.00000000,90.00000000,355.98992920); //object(cn2_savgardr1_) (2)
CreateDynamicObject(16500,2723.50000000,-1775.00000000,-11.00000000,0.00000000,90.00000000,355.98992920); //object(cn2_savgardr1_) (2)
CreateDynamicObject(8572,2720.83129883,-1771.66723633,-12.24258995,0.00000000,0.00000000,266.00000000); //object(vgssstairs02_lvs) (1)
CreateDynamicObject(2904,2721.55639648,-1775.74169922,-9.59717178,0.00000000,0.00000000,264.00000000); //object(warehouse_door1) (5)
CreateDynamicObject(1649,2726.50122070,-1775.13378906,-9.23759460,0.00000000,0.00000000,86.00000000); //object(wglasssmash) (17)
CreateDynamicObject(1649,2726.50097656,-1775.13378906,-9.23759460,0.00000000,0.00000000,267.00000000); //object(wglasssmash) (18)
CreateDynamicObject(1491,2721.63989258,-1774.02868652,-10.90333557,0.00000000,0.00000000,84.00000000); //object(gen_doorint01) (3)
CreateDynamicObject(2904,2721.61206055,-1775.22436523,-9.59717178,0.00000000,0.00000000,263.99597168); //object(warehouse_door1) (7)
CreateDynamicObject(2205,2725.80786133,-1775.13439941,-10.90333652,0.00000000,0.00000000,266.00000000); //object(med_office8_desk_1) (1)
CreateDynamicObject(2220,2725.74951172,-1775.44506836,-9.90999985,335.00000000,25.00000000,346.00000000); //object(pizzahigh) (1)
CreateDynamicObject(2860,2725.74682617,-1776.52807617,-9.96687317,0.00000000,0.00000000,0.00000000); //object(gb_kitchtakeway05) (1)
CreateDynamicObject(955,2723.99389648,-1760.51281738,-14.10000038,0.00000000,0.00000000,44.00000000); //object(cj_ext_sprunk) (1)
CreateDynamicObject(1671,2724.26538086,-1776.04064941,-10.44312191,0.00000000,0.00000000,100.00000000); //object(swivelchair_a) (1)
CreateDynamicObject(2346,2725.21728516,-1773.38781738,-10.90333652,0.00000000,0.00000000,320.00000000); //object(cj_hifi_table) (1)
CreateDynamicObject(1752,2726.00292969,-1773.74304199,-10.40704441,0.00000000,0.00000000,296.00000000); //object(swank_tv_3) (1)
CreateDynamicObject(3498,2726.42993164,-1772.80004883,-6.39142895,0.00000000,0.00000000,0.00000000); //object(wdpillar01_lvs) (1)
CreateDynamicObject(3498,2721.81811523,-1772.70971680,-15.50000000,0.00000000,0.00000000,0.00000000); //object(wdpillar01_lvs) (2)
CreateDynamicObject(3498,2721.54589844,-1777.18554688,-9.95584679,0.00000000,0.00000000,0.00000000); //object(wdpillar01_lvs) (3)
CreateDynamicObject(3498,2726.19921875,-1777.50000000,-9.95584679,0.00000000,0.00000000,0.00000000); //object(wdpillar01_lvs) (4)
CreateDynamicObject(1215,2727.36108398,-1867.09216309,-41.59490204,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,2719.93603516,-1774.30236816,-10.44389153,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(1215,2720.18652344,-1768.62756348,-13.90343094,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1215,2721.91235352,-1768.67089844,-13.90343094,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
CreateDynamicObject(1664,2725.53759766,-1775.80981445,-9.80016899,0.00000000,0.00000000,0.00000000); //object(propwinebotl2) (1)
CreateDynamicObject(1665,2725.44458008,-1775.52600098,-9.95499992,0.00000000,0.00000000,0.00000000); //object(propashtray1) (1)
CreateDynamicObject(2344,2725.17187500,-1773.55285645,-10.39696503,0.00000000,0.00000000,0.00000000); //object(cj_remote) (1)
CreateDynamicObject(3433,2694.23046875,-1709.15356445,13.69171906,0.00000000,0.00000000,314.00000000); //object(htlcnpy01_lvs) (1)
CreateDynamicObject(1215,2695.08911133,-1707.81701660,11.40807343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
CreateDynamicObject(1215,2692.80493164,-1710.05310059,11.41213131,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
CreateDynamicObject(2946,2693.12011719,-1710.30334473,10.84780788,0.00000000,0.00000000,316.00000000); //object(cr_door_03) (3)
CreateDynamicObject(2946,2695.34497070,-1708.15502930,10.85328293,0.00000000,0.00000000,131.99475098); //object(cr_door_03) (4)
CreateDynamicObject(7313,2726.65991211,-1775.02612305,-7.80899858,0.00000000,0.00000000,86.00000000); //object(vgsn_scrollsgn01) (1)
//========================Gasolinera vinewood ( Jesus Moreno )
CreateDynamicObject(11292,1011.29998779,-927.29998779,43.25000000,90.00000000,180.00000000,187.25048828); //object(gasstatiohut) (1)
CreateDynamicObject(11292,1006.46002197,-927.92999268,43.25000000,90.00000000,179.99450684,187.99816895); //object(gasstatiohut) (2)
CreateDynamicObject(11292,1011.29998779,-927.29998779,39.09999847,89.74975586,0.00000000,7.24002075); //object(gasstatiohut) (3)
CreateDynamicObject(11292,1006.50000000,-927.92999268,39.20000076,89.74975586,0.00000000,7.99261475); //object(gasstatiohut) (4)
CreateDynamicObject(11292,1003.16998291,-925.40002441,43.25000000,90.00000000,180.00549316,97.98706055); //object(gasstatiohut) (5)
CreateDynamicObject(11292,1003.16992188,-925.39941406,39.09999847,90.00000000,179.99450684,97.99804688); //object(gasstatiohut) (6)
CreateDynamicObject(11292,1002.27600098,-919.20001221,41.15999985,0.49996948,269.99060059,8.77032471); //object(gasstatiohut) (9)
CreateDynamicObject(11292,1001.50000000,-913.90002441,43.25000000,90.00000000,179.99450684,98.49829102); //object(gasstatiohut) (10)
CreateDynamicObject(11292,1001.50000000,-913.90002441,39.09999847,90.00000000,179.99450684,98.49792480); //object(gasstatiohut) (11)
CreateDynamicObject(11489,1002.20001221,-930.20001221,26.50000000,0.00000000,0.00000000,0.00000000); //object(dam_statues) (1)
CreateDynamicObject(11292,1013.90002441,-924.00000000,43.25000000,90.00000000,179.99450684,276.99566650); //object(gasstatiohut) (12)
CreateDynamicObject(11489,1016.00000000,-928.40002441,26.50000000,0.00000000,0.00000000,0.00000000); //object(dam_statues) (2)
CreateDynamicObject(11292,1013.90002441,-924.00000000,39.09999847,90.00000000,180.00549316,276.98181152); //object(gasstatiohut) (13)
CreateDynamicObject(11292,1012.29998779,-912.70001221,43.25000000,90.00000000,180.00549316,277.48181152); //object(gasstatiohut) (14)
CreateDynamicObject(11489,1013.22949219,-908.04980469,26.60000038,0.00000000,0.00000000,0.00000000); //object(dam_statues) (3)
CreateDynamicObject(11292,1009.00000000,-910.09997559,43.25000000,90.00000000,180.00549316,7.48171997); //object(gasstatiohut) (15)
CreateDynamicObject(11292,1004.00000000,-910.70001221,43.25000000,90.00000000,180.00549316,6.72622681); //object(gasstatiohut) (16)
CreateDynamicObject(11489,999.29998779,-909.78997803,26.60000038,0.00000000,0.00000000,0.00000000); //object(dam_statues) (4)
CreateDynamicObject(11292,1004.00000000,-910.70001221,39.29999924,90.00000000,179.99987793,6.72921753); //object(gasstatiohut) (17)
CreateDynamicObject(11292,1009.00000000,-910.09997559,39.09999847,89.49993896,0.00000000,187.48168945); //object(gasstatiohut) (18)
CreateDynamicObject(11292,1012.29998779,-912.70001221,39.09999847,90.00000000,180.00549316,277.48168945); //object(gasstatiohut) (19)
CreateDynamicObject(1522,1000.59997559,-918.59997559,41.29999924,0.00000000,0.00000000,97.75000000); //object(gen_doorshop3) (1)
CreateDynamicObject(1522,1000.79998779,-920.09002686,41.29999924,0.00000000,0.00000000,97.49758911); //object(gen_doorshop3) (2)
CreateDynamicObject(11489,1000.34997559,-917.19000244,26.60000038,0.00000000,0.00000000,0.00000000); //object(dam_statues) (5)
CreateDynamicObject(11489,1000.79998779,-920.20001221,26.60000038,0.00000000,0.00000000,0.00000000); //object(dam_statues) (6)
CreateDynamicObject(16107,1008.00000000,-921.39941406,41.65399933,0.00000000,0.00000000,279.74487305); //object(des_ngassta) (1)
CreateDynamicObject(1215,996.69921875,-949.39941406,41.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,1011.58001709,-947.50000000,41.90000153,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(970,998.89941406,-949.09960938,41.50000000,0.74707031,358.99475098,7.75634766); //object(fencesmallb) (4)
CreateDynamicObject(970,1003.00000000,-948.59997559,41.55500031,0.00000000,359.25000000,7.49536133); //object(fencesmallb) (5)
CreateDynamicObject(970,1007.09997559,-948.05999756,41.59999847,0.00000000,359.49743652,7.49267578); //object(fencesmallb) (6)
CreateDynamicObject(970,1009.40002441,-947.77001953,41.61999893,0.00000000,359.99462891,7.48718262); //object(fencesmallb) (7)
CreateDynamicObject(1676,998.50000000,-937.59997559,42.90000153,0.00000000,0.00000000,8.00000000); //object(washgaspump) (1)
CreateDynamicObject(1676,1002.40002441,-937.09997559,42.90000153,0.00000000,0.00000000,6.99829102); //object(washgaspump) (2)
CreateDynamicObject(1676,1005.50000000,-936.59997559,42.90000153,0.00000000,0.00000000,6.99829102); //object(washgaspump) (3)
CreateDynamicObject(1676,1009.29998779,-936.09997559,42.90000153,0.00000000,0.00000000,8.99829102); //object(washgaspump) (4)
CreateDynamicObject(7311,1017.50000000,-917.70001221,43.40000153,0.00000000,0.00000000,277.99505615); //object(vgsn_carwash) (3)
CreateDynamicObject(3034,1006.09997559,-929.70001221,43.20000076,0.00000000,0.00000000,7.25000000); //object(bd_window) (1)
CreateDynamicObject(3034,1012.19921875,-928.79980469,43.20000076,0.00000000,0.00000000,7.24548340); //object(bd_window) (2)
CreateDynamicObject(3034,1001.70001221,-926.79998779,43.20000076,0.00000000,0.00000000,277.99548340); //object(bd_window) (3)
CreateDynamicObject(3034,1001.09997559,-922.50000000,43.20000076,0.00000000,0.00000000,277.99255371); //object(bd_window) (4)
CreateDynamicObject(3034,999.59997559,-912.59997559,43.20000076,0.00000000,0.00000000,277.98706055); //object(bd_window) (5)
CreateDynamicObject(3034,1003.40002441,-909.09997559,43.20000076,0.00000000,0.00000000,186.74255371); //object(bd_window) (6)
CreateDynamicObject(3034,1009.00000000,-908.49121094,43.20000076,0.00000000,0.00000000,187.48718262); //object(bd_window) (7)
CreateDynamicObject(1280,1001.50000000,-926.79998779,41.70000076,0.00000000,0.00000000,7.99804688); //object(parkbench1) (1)
CreateDynamicObject(1280,1000.90002441,-922.50000000,41.70000076,0.00000000,0.00000000,7.99804688); //object(parkbench1) (2)
CreateDynamicObject(1280,999.40002441,-912.59997559,41.70000076,0.00000000,0.00000000,8.74511719); //object(parkbench1) (3)
CreateDynamicObject(1691,1002.79998779,-914.00000000,45.90000153,0.00000000,0.00000000,10.00000000); //object(gen_roofbit5) (1)
CreateDynamicObject(2714,1000.90002441,-921.40002441,43.50000000,0.00000000,0.00000000,278.00000000); //object(cj_open_sign_2) (1)
CreateDynamicObject(1775,999.79998779,-915.90002441,42.40000153,0.00000000,0.00000000,280.00000000); //object(cj_sprunk1) (1)
CreateDynamicObject(9192,1013.40002441,-947.29998779,44.59999847,0.00000000,0.00000000,280.00000000); //object(vgegassgn01_lvs) (1)
CreateDynamicObject(2780,1018.09997559,-917.50000000,35.00000000,0.00000000,0.00000000,280.00000000); //object(cj_smoke_mach) (1)
CreateDynamicObject(1430,1006.70001221,-908.40002441,41.59999847,0.00000000,0.00000000,9.25000000); //object(cj_dump1_low01) (1)
CreateDynamicObject(2670,1006.20001221,-908.70001221,41.40000153,0.00000000,0.00000000,20.00000000); //object(proc_rubbish_1) (1)
CreateDynamicObject(1484,1007.29998779,-908.70001221,41.45000076,0.00000000,0.00000000,70.00000000); //object(cj_bear_bottle) (1)
CreateDynamicObject(1484,1007.40002441,-908.50000000,41.29999924,74.00000000,0.00000000,289.99951172); //object(cj_bear_bottle) (2)
CreateDynamicObject(1484,1007.40002441,-908.50000000,41.33000183,58.00000000,0.00000000,9.99511719); //object(cj_bear_bottle) (3)
CreateDynamicObject(3034,1015.70001221,-925.50000000,43.20000076,0.00000000,0.00000000,96.49548340); //object(bd_window) (2)
CreateDynamicObject(3034,1013.70001221,-910.50000000,43.20000076,0.00000000,0.00000000,97.74291992); //object(bd_window) (2)
CreateDynamicObject(1229,1009.09997559,-952.40002441,42.79999924,0.00000000,0.00000000,100.00000000); //object(bussign1) (1)
CreateDynamicObject(1257,1004.90002441,-949.50000000,42.50000000,0.00000000,0.00000000,98.00000000); //object(bustopm) (1)
CreateDynamicObject(1549,1000.70001221,-920.40002441,41.29999924,0.00000000,0.00000000,274.00000000); //object(cj_ashtray_b) (1)
CreateDynamicObject(1886,995.20001221,-932.00000000,46.59999847,20.00000000,0.00000000,76.00000000); //object(shop_sec_cam) (1)
//========================INTERIOR ENTRADA CINE
CreateDynamicObject(6300,1336.2793000,-1710.7294900,1685.1899400,0.0000000,0.0000000,0.0000000); //object(pier04_law2) (1)
CreateDynamicObject(14674,1351.4399400,-1679.8000500,1685.1899400,0.0000000,0.0000000,0.0000000); //object(hotelferns1_lan) (1)
CreateDynamicObject(8393,1312.0600600,-1604.2099600,1694.5799600,0.0000000,0.0000000,91.3620000); //object(ballys01_lvs) (2)
CreateDynamicObject(8393,1272.4100300,-1672.6200000,1694.5100100,0.0000000,0.0000000,180.9340000); //object(ballys01_lvs) (3)
CreateDynamicObject(8393,1330.2399900,-1756.9499500,1694.5100100,0.0000000,0.0000000,269.7050000); //object(ballys01_lvs) (4)
CreateDynamicObject(8393,1417.6400100,-1640.1200000,1694.5100100,0.0000000,0.0000000,0.0000000); //object(ballys01_lvs) (5)
CreateDynamicObject(8393,1334.6899400,-1598.9300500,1694.5100100,0.0000000,0.0000000,91.3570000); //object(ballys01_lvs) (6)
CreateDynamicObject(1969,1355.3399700,-1673.5100100,1694.6999500,0.0000000,0.0000000,269.0060000); //object(dinerseat_3) (2)
CreateDynamicObject(8393,1392.3193400,-1728.7695300,1686.2600100,0.0000000,179.9950000,88.6820000); //object(ballys01_lvs) (9)
CreateDynamicObject(6300,1385.3599900,-1667.1700400,1686.1300000,0.0000000,0.0000000,358.3630000); //object(pier04_law2) (2)
CreateDynamicObject(1969,1355.2900400,-1676.0300300,1694.6999500,0.0000000,0.0000000,269.0060000); //object(dinerseat_3) (3)
CreateDynamicObject(1649,1354.7500000,-1673.9000200,1695.8499800,0.0000000,0.0000000,268.4030000); //object(wglasssmash) (2)
CreateDynamicObject(1649,1354.6300000,-1678.2800300,1695.8499800,0.0000000,0.0000000,87.8240000); //object(wglasssmash) (3)
CreateDynamicObject(1649,1354.5000000,-1682.6999500,1695.8499800,0.0000000,0.0000000,268.4010000); //object(wglasssmash) (4)
CreateDynamicObject(1649,1354.7500000,-1673.8994100,1695.8499800,0.0000000,0.0000000,88.9810000); //object(wglasssmash) (6)
CreateDynamicObject(1649,1354.6298800,-1678.2793000,1695.8499800,0.0000000,0.0000000,268.4010000); //object(wglasssmash) (7)
CreateDynamicObject(1649,1354.5000000,-1682.6992200,1695.8499800,0.0000000,0.0000000,87.8020000); //object(wglasssmash) (8)
CreateDynamicObject(3430,1351.4100300,-1675.1600300,1694.9100300,0.0000000,0.0000000,0.0000000); //object(vegasbooth01) (1)
CreateDynamicObject(3430,1344.0300300,-1675.2099600,1694.9100300,0.0000000,0.0000000,11.1310000); //object(vegasbooth01) (2)
CreateDynamicObject(3498,1354.4492200,-1684.8291000,1693.0100100,0.0000000,0.0000000,0.0000000); //object(wdpillar01_lvs) (1)
CreateDynamicObject(8393,1431.1400100,-1663.5999800,1694.3299600,0.0000000,0.0000000,0.0000000); //object(ballys01_lvs) (12)
CreateDynamicObject(8393,1424.5999800,-1720.1999500,1694.2399900,0.0000000,0.0000000,0.0000000); //object(ballys01_lvs) (13)
CreateDynamicObject(2770,1354.9799800,-1684.1500200,1694.8100600,0.0000000,0.0000000,0.0000000); //object(cj_cb_bin) (1)
CreateDynamicObject(16063,1365.7199700,-1680.1899400,1701.1099900,0.0000000,0.0000000,3.3180000); //object(des_cockbunting) (1)
CreateDynamicObject(7037,1366.2900400,-1696.5600600,1697.2099600,0.0000000,0.0000000,269.0110000); //object(vgnwalburger1) (1)
CreateDynamicObject(2643,1352.5100100,-1688.1600300,1696.4599600,0.0000000,0.0000000,181.7820000); //object(cj_burger_poster3) (1)
CreateDynamicObject(2642,1352.5300300,-1688.1600300,1694.7099600,0.0000000,0.0000000,179.1950000); //object(cj_burger_poster2) (1)
CreateDynamicObject(1445,1350.9599600,-1684.7600100,1693.8499800,0.0000000,0.0000000,122.4350000); //object(dyn_ff_stand) (1)
CreateDynamicObject(2430,1362.2199700,-1677.9899900,1696.4899900,0.0000000,0.0000000,270.4430000); //object(cj_ff_list1) (1)
CreateDynamicObject(2599,1349.1500200,-1672.9899900,1693.7099600,0.0000000,0.0000000,337.7390000); //object(cj_sex_shop_sign) (1)
CreateDynamicObject(2587,1349.8199500,-1672.3399700,1695.0400400,0.0000000,0.0000000,0.0000000); //object(sex_2) (1)
CreateDynamicObject(2588,1341.4599600,-1677.1999500,1695.0500500,0.0000000,0.0000000,91.9090000); //object(sex_3) (1)
CreateDynamicObject(10281,1342.2399900,-1680.1500200,1698.0100100,0.0000000,0.0000000,90.9170000); //object(michsign_sfe) (1)
CreateDynamicObject(18092,1359.8599900,-1679.5600600,1694.6500200,0.0000000,0.0000000,90.7970000); //object(ammun3_counter) (1)
CreateDynamicObject(2753,1359.9399400,-1677.5699500,1695.3700000,0.0000000,0.0000000,226.4330000); //object(cj_ff_till_que) (1)
CreateDynamicObject(2500,1359.8299600,-1681.3299600,1695.1500200,0.0000000,0.0000000,122.4370000); //object(cj_ff_coffee) (1)
CreateDynamicObject(2443,1361.2500000,-1672.6700400,1694.1800500,0.0000000,0.0000000,0.0000000); //object(cj_ff_frige) (1)
CreateDynamicObject(2964,1358.4000200,-1685.5500500,1694.1800500,0.0000000,0.0000000,326.6080000); //object(k_pooltablesm) (1)
CreateDynamicObject(1969,1355.1600300,-1678.6200000,1694.6999500,0.0000000,0.0000000,269.0060000); //object(dinerseat_3) (7)
CreateDynamicObject(1969,1355.0799600,-1681.4399400,1694.6999500,0.0000000,0.0000000,269.0060000); //object(dinerseat_3) (8)
CreateDynamicObject(1969,1358.2700200,-1672.6999500,1694.6999500,0.0000000,0.0000000,178.0170000); //object(dinerseat_3) (9)
CreateDynamicObject(3499,1362.1400100,-1683.3800000,1701.3700000,270.1100000,180.0000000,180.0000000); //object(wdpillar02_lvs) (1)
CreateDynamicObject(3499,1362.1400100,-1674.8000500,1701.3599900,270.1100000,179.9950000,179.9950000); //object(wdpillar02_lvs) (2)
CreateDynamicObject(2416,1361.5799600,-1679.0600600,1694.1800500,0.0000000,0.0000000,270.7310000); //object(cj_ff_disp) (1)
CreateDynamicObject(1775,1361.5500500,-1687.6400100,1695.2800300,0.0000000,0.0000000,179.9660000); //object(cj_sprunk1) (1)
CreateDynamicObject(2946,1342.8399700,-1688.1700400,1693.1600300,0.0000000,0.0000000,270.7310000); //object(cr_door_03) (1)
CreateDynamicObject(2946,1346.0200200,-1688.1700400,1693.1600300,0.0000000,0.0000000,90.6970000); //object(cr_door_03) (2)
CreateDynamicObject(2946,1347.1300000,-1688.1800500,1693.1600300,0.0000000,0.0000000,270.6580000); //object(cr_door_03) (3)
CreateDynamicObject(2946,1350.3000500,-1688.1700400,1693.1600300,0.0000000,0.0000000,90.6920000); //object(cr_door_03) (7)
CreateDynamicObject(14414,1347.5600600,-1670.2399900,1690.0500500,0.0000000,0.0000000,0.0000000); //object(carter-stairs05) (1)
CreateDynamicObject(14414,1346.9000200,-1662.6899400,1685.2299800,0.0000000,0.0000000,0.0000000); //object(carter-stairs05) (2)
CreateDynamicObject(8393,1417.6591800,-1640.1093700,1688.8199500,0.0000000,0.0000000,0.0000000); //object(ballys01_lvs) (19)
CreateDynamicObject(6300,1364.3399700,-1637.4100300,1674.1999500,0.0000000,0.0000000,0.0000000); //object(pier04_law2) (4)
CreateDynamicObject(8393,1417.6699200,-1687.6796900,1680.0799600,0.0000000,0.0000000,0.0000000); //object(ballys01_lvs) (22)
CreateDynamicObject(8393,1277.3199500,-1689.0600600,1679.2199700,0.0000000,0.0000000,181.3950000); //object(ballys01_lvs) (23)
CreateDynamicObject(8393,1264.6400100,-1640.0200200,1679.2199700,0.0000000,0.0000000,181.3900000); //object(ballys01_lvs) (24)
CreateDynamicObject(3095,1340.9499500,-1651.1300000,1686.8399700,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (1)
CreateDynamicObject(3095,1349.9399400,-1651.1099900,1686.8399700,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (2)
CreateDynamicObject(3095,1349.9394500,-1651.1093700,1686.8399700,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (3)
CreateDynamicObject(3095,1358.9100300,-1651.0999800,1686.8299600,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
CreateDynamicObject(3095,1367.7900400,-1651.1099900,1686.8299600,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (5)
CreateDynamicObject(3095,1331.9899900,-1651.1200000,1686.8399700,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (6)
CreateDynamicObject(8393,1409.2500000,-1623.4399400,1694.5600600,0.0000000,0.0000000,0.0000000); //object(ballys01_lvs) (19)
CreateDynamicObject(8393,1402.7800300,-1614.6300000,1680.0799600,0.0000000,0.0000000,0.0000000); //object(ballys01_lvs) (22)
CreateDynamicObject(8393,1402.2900400,-1589.8000500,1679.3700000,0.0000000,0.0000000,89.0450000); //object(ballys01_lvs) (22)
CreateDynamicObject(1491,1342.5899700,-1653.7600100,1682.2500000,0.0000000,0.0000000,269.2270000); //object(gen_doorint01) (1)
CreateDynamicObject(2514,1341.9200400,-1647.5500500,1682.2600100,0.0000000,0.0000000,0.0000000); //object(cj_toilet1) (3)
CreateDynamicObject(2523,1334.3199500,-1648.7900400,1682.2500000,0.0000000,0.0000000,91.5000000); //object(cj_b_sink3) (3)
CreateDynamicObject(18001,1333.9499500,-1651.1600300,1684.0200200,0.0000000,0.0000000,91.3970000); //object(int_barbera07) (1)
CreateDynamicObject(2523,1334.4200400,-1650.8499800,1682.2500000,0.0000000,0.0000000,91.5000000); //object(cj_b_sink3) (5)
CreateDynamicObject(2523,1334.4599600,-1652.6899400,1682.2500000,0.0000000,0.0000000,91.5000000); //object(cj_b_sink3) (6)
CreateDynamicObject(2523,1334.4799800,-1654.7399900,1682.2500000,0.0000000,0.0000000,91.5000000); //object(cj_b_sink3) (7)
CreateDynamicObject(5422,1339.4499500,-1647.6099900,1682.7600100,0.0000000,0.0000000,0.0000000); //object(laespraydoor1) (1)
CreateDynamicObject(5422,1341.0999800,-1647.6099900,1682.7199700,0.0000000,0.0000000,0.0000000); //object(laespraydoor1) (2)
CreateDynamicObject(1491,1341.0400400,-1649.6099900,1682.2500000,0.0000000,0.0000000,180.1810000); //object(gen_doorint01) (2)
CreateDynamicObject(1491,1342.6800500,-1649.5699500,1682.2500000,0.0000000,0.0000000,180.1760000); //object(gen_doorint01) (3)
CreateDynamicObject(2514,1340.3100600,-1647.5799600,1682.2600100,0.0000000,0.0000000,0.0000000); //object(cj_toilet1) (4)
CreateDynamicObject(5422,1337.8199500,-1647.6600300,1682.7600100,0.0000000,0.0000000,0.0000000); //object(laespraydoor1) (4)
CreateDynamicObject(1491,1339.3900100,-1649.5899700,1682.2500000,0.0000000,0.0000000,180.1760000); //object(gen_doorint01) (4)
CreateDynamicObject(2514,1338.6800500,-1647.5400400,1682.2600100,0.0000000,0.0000000,0.0000000); //object(cj_toilet1) (5)
CreateDynamicObject(5422,1342.6500200,-1647.5799600,1682.7199700,0.0000000,0.0000000,359.2640000); //object(laespraydoor1) (5)
CreateDynamicObject(1980,1342.5999800,-1650.0999800,1683.8299600,0.0000000,0.0000000,0.0000000); //object(wilshire7dr1_law) (1)
CreateDynamicObject(1535,1369.1200000,-1650.3599900,1682.2500000,0.0000000,0.0000000,269.7620000); //object(gen_doorext14) (1)
CreateDynamicObject(2064,1366.9200400,-1648.2600100,1682.8800000,0.0000000,0.0000000,326.6080000); //object(cj_feildgun) (1)
CreateDynamicObject(1253,1369.0999800,-1651.0699500,1685.0400400,0.0000000,0.0000000,270.9550000); //object(camerapickup) (1)
CreateDynamicObject(2985,1366.1600300,-1653.8000500,1682.2500000,0.0000000,0.0000000,133.5670000); //object(minigun_base) (1)
CreateDynamicObject(2510,1362.9899900,-1648.2600100,1682.5400400,0.0000000,0.0000000,326.6080000); //object(model_plane_big2) (1)
CreateDynamicObject(3385,1367.5799600,-1649.7600100,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (1)
CreateDynamicObject(2773,1367.7800300,-1652.4599600,1682.7700200,0.0000000,0.0000000,270.9550000); //object(cj_airprt_bar) (1)
CreateDynamicObject(2773,1365.3800000,-1652.5000000,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (2)
CreateDynamicObject(2773,1362.9899900,-1652.5600600,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (3)
CreateDynamicObject(2773,1360.6300000,-1652.6899400,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (4)
CreateDynamicObject(2773,1358.2500000,-1652.7199700,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (5)
CreateDynamicObject(2773,1355.9300500,-1652.7500000,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (6)
CreateDynamicObject(2773,1353.5500500,-1652.7900400,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (7)
CreateDynamicObject(2773,1351.5899700,-1654.0300300,1682.7700200,0.0000000,0.0000000,337.7340000); //object(cj_airprt_bar) (8)
CreateDynamicObject(2773,1367.6999500,-1649.8000500,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (10)
CreateDynamicObject(2773,1365.2500000,-1649.8399700,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (11)
CreateDynamicObject(2773,1362.8499800,-1649.8700000,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (12)
CreateDynamicObject(2773,1360.4799800,-1649.8700000,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (13)
CreateDynamicObject(2773,1358.1099900,-1649.8499800,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (14)
CreateDynamicObject(2773,1355.6999500,-1649.9000200,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (15)
CreateDynamicObject(2773,1353.2399900,-1649.9499500,1682.7700200,0.0000000,0.0000000,270.9500000); //object(cj_airprt_bar) (16)
CreateDynamicObject(2773,1351.4399400,-1648.6400100,1682.7700200,0.0000000,0.0000000,211.4090000); //object(cj_airprt_bar) (17)
CreateDynamicObject(3385,1365.2099600,-1649.7700200,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (2)
CreateDynamicObject(3385,1362.7700200,-1649.8000500,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (3)
CreateDynamicObject(3385,1360.2399900,-1649.8199500,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (4)
CreateDynamicObject(3385,1358.1999500,-1649.7399900,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (5)
CreateDynamicObject(3385,1355.6899400,-1649.7399900,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (6)
CreateDynamicObject(3385,1353.0200200,-1649.7299800,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (7)
CreateDynamicObject(3385,1353.3599900,-1652.7299800,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (8)
CreateDynamicObject(3385,1356.0500500,-1652.7099600,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (9)
CreateDynamicObject(3385,1358.4599600,-1652.5799600,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (10)
CreateDynamicObject(3385,1360.8000500,-1652.5500500,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (11)
CreateDynamicObject(3385,1363.2099600,-1652.4200400,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (12)
CreateDynamicObject(3385,1365.5500500,-1652.3900100,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (13)
CreateDynamicObject(3385,1367.9000200,-1652.4499500,1682.2099600,0.0000000,0.0000000,0.0000000); //object(a51_light1_) (14)
CreateDynamicObject(2775,1350.8800000,-1676.6099900,1696.3499800,0.0000000,0.0000000,333.3180000); //object(cj_airprt_mon) (1)
CreateDynamicObject(1980,1342.5999800,-1650.0999800,1687.1500200,0.0000000,0.0000000,0.0000000); //object(wilshire7dr1_law) (3)
CreateDynamicObject(1980,1342.5400400,-1657.4300500,1686.4000200,0.0000000,0.0000000,0.0000000); //object(wilshire7dr1_law) (4)
CreateDynamicObject(2796,1345.3000500,-1654.6500200,1685.8100600,0.0000000,0.0000000,259.8240000); //object(cj_air_d_6) (1)
CreateDynamicObject(2907,1359.1200000,-1648.1600300,1682.4100300,0.0000000,0.0000000,226.4330000); //object(kmb_deadtorso) (1)
CreateDynamicObject(2906,1359.0100100,-1648.7700200,1682.3299600,0.0000000,0.0000000,0.0000000); //object(kmb_deadarm) (1)
CreateDynamicObject(2908,1359.5400400,-1647.7099600,1682.3299600,0.0000000,0.0000000,0.0000000); //object(kmb_deadhead) (1)
CreateDynamicObject(2906,1358.4799800,-1648.2099600,1682.3299600,0.0000000,0.0000000,0.0000000); //object(kmb_deadarm) (2)
CreateDynamicObject(2907,1359.9699700,-1648.8299600,1682.4100300,0.0000000,0.0000000,0.0000000); //object(kmb_deadtorso) (2)
CreateDynamicObject(2484,1354.9200400,-1654.4000200,1683.0899700,0.0000000,0.0000000,326.6080000); //object(model_yaught) (1)
CreateDynamicObject(1585,1355.9100300,-1648.0600600,1682.2500000,0.0000000,0.0000000,155.8290000); //object(tar_civ2) (1)
CreateDynamicObject(1584,1353.6700400,-1648.0400400,1682.2500000,0.0000000,0.0000000,152.4740000); //object(tar_gun1) (1)
CreateDynamicObject(1583,1353.0799600,-1654.5899700,1682.2500000,0.0000000,0.0000000,33.3920000); //object(tar_gun2) (1)
CreateDynamicObject(3095,1349.7800300,-1663.0600600,1692.7099600,0.0000000,0.0000000,0.5760000); //object(a51_jetdoor) (9)
CreateDynamicObject(3095,1349.7199700,-1654.1300000,1692.7099600,0.0000000,0.0000000,0.5710000); //object(a51_jetdoor) (10)
CreateDynamicObject(2775,1347.2294900,-1667.5595700,1693.7099600,0.0000000,0.0000000,0.0000000); //object(cj_airprt_mon) (2)
CreateDynamicObject(2775,1344.4296900,-1676.6093700,1696.5100100,0.0000000,0.0000000,17.8360000); //object(cj_airprt_mon) (3)
CreateDynamicObject(2587,1341.5200200,-1679.5699500,1695.1300000,0.0000000,0.0000000,92.4000000); //object(sex_2) (2)
CreateDynamicObject(2587,1341.5600600,-1683.1300000,1695.1300000,0.0000000,0.0000000,92.3950000); //object(sex_2) (3)
CreateDynamicObject(2587,1341.7299800,-1686.2600100,1695.1300000,0.0000000,0.0000000,92.3950000); //object(sex_2) (4)
CreateDynamicObject(2685,1342.4200400,-1653.1999500,1683.8599900,0.0000000,0.0000000,267.6000000); //object(cj_food_post1) (1)
CreateDynamicObject(2687,1335.8900100,-1646.8700000,1683.9399400,0.0000000,0.0000000,0.0000000); //object(cj_food_post3) (1)
CreateDynamicObject(2745,1358.5500500,-1654.1600300,1683.4599600,0.0000000,0.0000000,204.1710000); //object(cj_stat_3) (1)
CreateDynamicObject(3334,1347.5500500,-1646.7199700,1683.3599900,0.0000000,0.0000000,270.0030000); //object(big_cock_sign) (1)
CreateDynamicObject(3468,1351.1999500,-1684.1400100,1693.8800000,0.0000000,0.0000000,204.1710000); //object(vegstreetsign2) (1)
CreateDynamicObject(14467,1362.7800300,-1654.0899700,1684.2299800,0.0000000,0.0000000,193.0410000); //object(carter_statue) (1)
CreateDynamicObject(5130,1348.5999800,-1686.4300500,1691.1700400,0.0000000,0.0000000,134.9240000); //object(imcompstrs02) (1)
CreateDynamicObject(3044,1369.0600600,-1655.6800500,1696.5899700,0.0000000,0.0000000,0.0000000); //object(cigar) (1)
CreateDynamicObject(3044,1369.0600600,-1655.8000500,1696.5899700,0.0000000,0.0000000,0.0000000); //object(cigar) (2)
CreateDynamicObject(3044,1369.3299600,-1655.7399900,1696.5899700,0.0000000,0.0000000,259.8240000); //object(cigar) (3)
CreateDynamicObject(3044,1369.3199500,-1655.8499800,1696.5899700,0.0000000,0.0000000,259.8210000); //object(cigar) (4)
CreateDynamicObject(3044,1369.3100600,-1655.9899900,1696.5899700,0.0000000,0.0000000,181.9070000); //object(cigar) (5)
CreateDynamicObject(3044,1369.3299600,-1655.9799800,1696.5899700,0.0000000,0.0000000,226.4290000); //object(cigar) (6)
CreateDynamicObject(3044,1369.3800000,-1655.9799800,1696.5899700,0.0000000,0.0000000,181.9060000); //object(cigar) (7)
CreateDynamicObject(3044,1369.3800000,-1656.0799600,1696.5899700,0.0000000,0.0000000,181.9010000); //object(cigar) (8)
CreateDynamicObject(3044,1369.4699700,-1656.0899700,1696.5899700,0.0000000,0.0000000,181.9010000); //object(cigar) (9)
CreateDynamicObject(3044,1369.4699700,-1655.9899900,1696.5899700,0.0000000,0.0000000,181.9010000); //object(cigar) (10)
CreateDynamicObject(3044,1369.4899900,-1655.7399900,1696.5899700,0.0000000,0.0000000,270.9460000); //object(cigar) (11)
CreateDynamicObject(3044,1369.4799800,-1655.8599900,1696.5899700,0.0000000,0.0000000,270.9450000); //object(cigar) (12)
CreateDynamicObject(3044,1369.6200000,-1655.9300500,1696.5899700,0.0000000,0.0000000,270.9450000); //object(cigar) (13)
CreateDynamicObject(3044,1369.6200000,-1656.0600600,1696.5899700,0.0000000,0.0000000,181.9000000); //object(cigar) (14)
CreateDynamicObject(3044,1369.5100100,-1656.0699500,1696.5899700,0.0000000,0.0000000,181.8950000); //object(cigar) (15)
CreateDynamicObject(3044,1369.4699700,-1655.9799800,1696.5899700,0.0000000,0.0000000,137.3730000); //object(cigar) (16)
CreateDynamicObject(3044,1369.6800500,-1655.9899900,1696.5899700,0.0000000,0.0000000,181.8900000); //object(cigar) (17)
CreateDynamicObject(3044,1369.6800500,-1656.1099900,1696.5899700,0.0000000,0.0000000,181.8900000); //object(cigar) (18)
CreateDynamicObject(3044,1369.7900400,-1655.9499500,1696.5899700,0.0000000,0.0000000,270.9350000); //object(cigar) (19)
CreateDynamicObject(3811,1354.1999500,-1682.8900100,1693.6500200,0.0000000,0.0000000,179.9660000); //object(sfx_winplant08) (1)
CreateDynamicObject(8393,1392.3193400,-1728.7695300,1686.2600100,0.0000000,179.9950000,88.6820000); //object(ballys01_lvs) (9)
CreateDynamicObject(3811,1354.1999500,-1682.8900100,1693.6500200,0.0000000,0.0000000,179.9620000); //object(sfx_winplant08) (2)
CreateDynamicObject(3811,1354.3599900,-1679.0699500,1693.6500200,0.0000000,0.0000000,179.9620000); //object(sfx_winplant08) (3)
CreateDynamicObject(3811,1354.3199500,-1675.6600300,1693.6500200,0.0000000,0.0000000,179.9620000); //object(sfx_winplant08) (4)
CreateDynamicObject(1337,1362.2334000,-1682.0800800,1697.8115200,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (5)
CreateDynamicObject(14605,1336.1999500,-1679.6899400,1693.8900100,0.0000000,0.0000000,0.0000000); //object(triad_lights2) (1)
CreateDynamicObject(3785,1342.5200200,-1681.5799600,1698.5300300,283.9040000,180.0000000,180.0000000); //object(bulkheadlight) (1)
CreateDynamicObject(3785,1342.4799800,-1678.6800500,1697.7500000,283.9030000,179.9950000,179.9950000); //object(bulkheadlight) (2)
CreateDynamicObject(3785,1342.4794900,-1678.6796900,1697.7500000,283.9030000,179.9950000,179.9950000); //object(bulkheadlight) (3)
CreateDynamicObject(3785,1342.4794900,-1678.6796900,1697.7500000,283.9030000,179.9950000,179.9950000); //object(bulkheadlight) (4)
CreateDynamicObject(3785,1342.4794900,-1678.6796900,1697.7500000,283.9030000,179.9950000,179.9950000); //object(bulkheadlight) (5)
CreateDynamicObject(3785,1342.5195300,-1681.5791000,1698.5300300,283.9030000,179.9950000,179.9950000); //object(bulkheadlight) (6)
CreateDynamicObject(3785,1342.5195300,-1681.5791000,1698.5300300,283.9030000,179.9950000,179.9950000); //object(bulkheadlight) (7)
//========================Entrada de Pabellon boxeo  y  Cine
CreateDynamicObject(4019,1772.4394500,-1773.8798800,12.5100000,0.0000000,0.0000000,0.0000000); //object(newbuildsm01) (1)
CreateDynamicObject(2773,1777.2500000,-1809.7500000,13.0400000,0.0000000,0.0000000,11.6630000); //object(cj_airprt_bar) (1)
CreateDynamicObject(2773,1773.0699500,-1809.7199700,13.0400000,0.0000000,0.0000000,349.4010000); //object(cj_airprt_bar) (2)
CreateDynamicObject(2773,1772.6300000,-1812.0100100,13.0500000,0.0000000,0.0000000,349.3980000); //object(cj_airprt_bar) (3)
CreateDynamicObject(2773,1777.5500500,-1812.0999800,13.0500000,0.0000000,0.0000000,3.1010000); //object(cj_airprt_bar) (4)
CreateDynamicObject(2773,1777.7299800,-1814.5100100,13.0500000,0.0000000,0.0000000,3.0980000); //object(cj_airprt_bar) (6)
CreateDynamicObject(2773,1772.1300000,-1814.4399400,13.0600000,0.0000000,0.0000000,349.3980000); //object(cj_airprt_bar) (7)
CreateDynamicObject(7313,1774.8398400,-1807.8291000,17.6000000,0.0000000,0.0000000,0.0000000); //object(vgsn_scrollsgn01) (1)
CreateDynamicObject(2642,1772.4000200,-1809.6700400,56.3800000,0.0000000,0.0000000,180.0000000); //object(cj_burger_poster2) (1)
CreateDynamicObject(2642,1772.4000200,-1809.6800500,58.2600000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (2)
CreateDynamicObject(2642,1773.5300300,-1809.6600300,60.7800000,0.0000000,90.0000000,179.9950000); //object(cj_burger_poster2) (3)
CreateDynamicObject(2642,1772.3994100,-1809.6699200,60.1400000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (4)
CreateDynamicObject(2642,1773.5200200,-1809.6700400,58.2900000,0.0000000,90.0000000,179.9950000); //object(cj_burger_poster2) (5)
CreateDynamicObject(2642,1773.5300300,-1809.6600300,55.7800000,0.0000000,90.0000000,179.9950000); //object(cj_burger_poster2) (6)
CreateDynamicObject(2642,1774.8299600,-1809.6500200,55.7700000,0.0000000,90.0000000,179.9630000); //object(cj_burger_poster2) (7)
CreateDynamicObject(2642,1774.8199500,-1809.6600300,58.2900000,0.0000000,90.0000000,179.9630000); //object(cj_burger_poster2) (8)
CreateDynamicObject(2642,1774.8193400,-1809.6591800,60.7800000,0.0000000,90.0000000,179.9620000); //object(cj_burger_poster2) (9)
CreateDynamicObject(2642,1775.4200400,-1809.6700400,60.1400000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (10)
CreateDynamicObject(2642,1775.4200400,-1809.6700400,58.2600000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (11)
CreateDynamicObject(2642,1775.4200400,-1809.6700400,56.3800000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (12)
CreateDynamicObject(2642,1777.5799600,-1809.6899400,55.7800000,0.0000000,90.0000000,179.9620000); //object(cj_burger_poster2) (14)
CreateDynamicObject(2642,1778.8499800,-1809.6899400,55.7800000,0.0000000,90.0000000,179.9620000); //object(cj_burger_poster2) (15)
CreateDynamicObject(2642,1776.9499500,-1809.7500000,56.4000000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (16)
CreateDynamicObject(2642,1776.9499500,-1809.7500000,58.2800000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (17)
CreateDynamicObject(2642,1776.9599600,-1809.7399900,60.0600000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (18)
CreateDynamicObject(2642,1779.4799800,-1809.7099600,56.4000000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (19)
CreateDynamicObject(2642,1779.4799800,-1809.7099600,58.2800000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (20)
CreateDynamicObject(2642,1779.4799800,-1809.7099600,60.0900000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (21)
CreateDynamicObject(2642,1777.5799600,-1809.6899400,60.7100000,0.0000000,90.0000000,179.9620000); //object(cj_burger_poster2) (22)
CreateDynamicObject(2642,1778.8499800,-1809.6899400,60.7200000,0.0000000,90.0000000,179.9620000); //object(cj_burger_poster2) (24)
CreateDynamicObject(2642,1785.3299600,-1809.6700400,55.7800000,0.0000000,90.0000000,179.9620000); //object(cj_burger_poster2) (35)
CreateDynamicObject(2642,1786.3199500,-1809.6700400,55.7800000,0.0000000,90.0000000,179.9570000); //object(cj_burger_poster2) (36)
CreateDynamicObject(2642,1784.6899400,-1809.6700400,56.4000000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (37)
CreateDynamicObject(2642,1784.6899400,-1809.6700400,58.2700000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (38)
CreateDynamicObject(2642,1784.6899400,-1809.6800500,60.0800000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (39)
CreateDynamicObject(2642,1786.3199500,-1809.6700400,60.7400000,0.0000000,90.0000000,179.9560000); //object(cj_burger_poster2) (40)
CreateDynamicObject(2642,1785.3299600,-1809.6700400,60.7100000,0.0000000,90.0000000,179.9620000); //object(cj_burger_poster2) (41)
CreateDynamicObject(2642,1785.3299600,-1809.6700400,58.1800000,0.0000000,90.0000000,179.9620000); //object(cj_burger_poster2) (42)
CreateDynamicObject(2642,1786.3199500,-1809.6700400,58.1800000,0.0000000,90.0000000,179.9560000); //object(cj_burger_poster2) (43)
CreateDynamicObject(2642,1781.0100100,-1809.6899400,56.4000000,0.0000000,334.7300000,179.9700000); //object(cj_burger_poster2) (45)
CreateDynamicObject(2642,1781.8199500,-1809.7199700,58.1100000,0.0000000,334.7260000,179.9670000); //object(cj_burger_poster2) (46)
CreateDynamicObject(2642,1781.7700200,-1809.7099600,58.1000000,0.0000000,29.6180000,179.9660000); //object(cj_burger_poster2) (47)
CreateDynamicObject(2642,1782.6191400,-1809.7197300,59.8000000,0.0000000,334.7260000,179.9670000); //object(cj_burger_poster2) (48)
CreateDynamicObject(2642,1782.6700400,-1809.7099600,56.5100000,0.0000000,29.6140000,179.9620000); //object(cj_burger_poster2) (53)
CreateDynamicObject(2642,1780.8399700,-1809.6999500,59.7300000,0.0000000,29.6140000,179.9620000); //object(cj_burger_poster2) (54)
CreateDynamicObject(2642,1780.5899700,-1809.7099600,60.1900000,0.0000000,29.6140000,179.9620000); //object(cj_burger_poster2) (55)
CreateDynamicObject(2642,1782.8399700,-1809.7099600,60.2700000,0.0000000,334.7260000,179.9670000); //object(cj_burger_poster2) (56)
CreateDynamicObject(2642,1780.8800000,-1809.6999500,56.1200000,0.0000000,334.7260000,179.9670000); //object(cj_burger_poster2) (57)
CreateDynamicObject(2642,1782.8900100,-1809.6999500,56.1200000,0.0000000,29.6140000,179.9620000); //object(cj_burger_poster2) (58)
CreateDynamicObject(2642,1788.8700000,-1809.6700400,55.7800000,0.0000000,90.0000000,179.9560000); //object(cj_burger_poster2) (59)
CreateDynamicObject(2642,1790.0100100,-1809.6700400,55.7800000,0.0000000,90.0000000,179.9560000); //object(cj_burger_poster2) (60)
CreateDynamicObject(2642,1788.2600100,-1809.6700400,56.3600000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (61)
CreateDynamicObject(2642,1788.2600100,-1809.6700400,58.2400000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (62)
CreateDynamicObject(2642,1788.2600100,-1809.6600300,60.0700000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (63)
CreateDynamicObject(2642,1790.6099900,-1809.6800500,56.3600000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (64)
CreateDynamicObject(2642,1790.6099900,-1809.6800500,58.2400000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (65)
CreateDynamicObject(2642,1790.6099900,-1809.6700400,60.0400000,0.0000000,0.0000000,179.9950000); //object(cj_burger_poster2) (66)
CreateDynamicObject(2642,1790.0100100,-1809.6700400,60.6800000,0.0000000,90.0000000,179.9560000); //object(cj_burger_poster2) (67)
CreateDynamicObject(2642,1788.8700000,-1809.6700400,60.6800000,0.0000000,90.0000000,179.9560000); //object(cj_burger_poster2) (70)
CreateDynamicObject(1673,1781.8299600,-1809.6999500,55.2800000,0.0000000,0.0000000,180.0000000); //object(roadsign) (1)
CreateDynamicObject(1673,1782.5693400,-1808.8193400,55.2800000,0.0000000,0.0000000,0.0000000); //object(roadsign) (2)
CreateDynamicObject(16000,1781.8599900,-1809.7099600,50.9100000,0.0000000,0.0000000,179.9510000); //object(drvin_screen) (1)
CreateDynamicObject(8590,1338.1999500,-1682.0999800,0.6400000,350.4120000,134.6740000,262.7350000); //object(filmrllprop01_lvs) (1)
CreateDynamicObject(8590,1338.2099600,-1682.0999800,0.6400000,350.4090000,134.6700000,262.7330000); //object(filmrllprop01_lvs) (3)
CreateDynamicObject(1568,1318.9499500,-1715.8499800,17.3600000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (1)
CreateDynamicObject(1568,1318.9399400,-1706.9300500,17.3600000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (2)
CreateDynamicObject(3872,1317.2700200,-1705.6400100,25.9400000,0.0000000,0.0000000,0.0000000); //object(ws_floodbeams) (1)
CreateDynamicObject(3872,1318.8199500,-1700.3499800,21.3500000,0.0000000,0.0000000,0.0000000); //object(ws_floodbeams) (2)
CreateDynamicObject(3472,1317.7800300,-1721.6400100,12.5500000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (1)
CreateDynamicObject(3472,1317.7299800,-1700.7099600,12.5500000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (2)
CreateDynamicObject(3472,1317.7800300,-1686.1300000,12.5500000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (3)
CreateDynamicObject(3472,1317.9799800,-1670.8100600,12.5500000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (4)
CreateDynamicObject(3472,1317.8800000,-1655.4200400,12.5500000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (5)
CreateDynamicObject(3472,1325.5300300,-1727.1800500,12.5500000,0.0000000,0.0000000,226.4330000); //object(circuslampost03) (6)
CreateDynamicObject(902,1320.0100100,-1721.5300300,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (1)
CreateDynamicObject(902,1383.6800500,-1666.9499500,72.1700000,0.0000000,0.0000000,0.0000000); //object(starfish) (2)
CreateDynamicObject(902,1319.9799800,-1716.6500200,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (3)
CreateDynamicObject(902,1319.8599900,-1711.6099900,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (4)
CreateDynamicObject(902,1319.8000500,-1706.8700000,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (5)
CreateDynamicObject(902,1319.9300500,-1702.0300300,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (6)
CreateDynamicObject(902,1320.0799600,-1696.9599600,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (7)
CreateDynamicObject(902,1320.2299800,-1691.8900100,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (8)
CreateDynamicObject(902,1319.9699700,-1686.5100100,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (9)
CreateDynamicObject(902,1319.9499500,-1682.3100600,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (10)
CreateDynamicObject(8880,1789.2099600,-1811.0100100,58.6300000,71.3530000,179.9840000,357.4930000); //object(vgsecnstrct09) (36)
CreateDynamicObject(3115,1327.9899900,-1712.9399400,12.2900000,0.0000000,0.0000000,180.0270000); //object(carrier_lift1_sfse) (3)
CreateDynamicObject(3115,1328.0000000,-1694.4000200,12.2900000,0.0000000,0.0000000,180.0270000); //object(carrier_lift1_sfse) (4)
CreateDynamicObject(3115,1328.0100100,-1675.6999500,12.2900000,0.0000000,0.0000000,180.0270000); //object(carrier_lift1_sfse) (5)
CreateDynamicObject(3115,1327.9899900,-1657.2299800,12.2800000,0.0000000,0.0000000,180.0270000); //object(carrier_lift1_sfse) (6)
CreateDynamicObject(3115,1327.9799800,-1638.7099600,12.2800000,0.0000000,0.0000000,180.0270000); //object(carrier_lift1_sfse) (7)
CreateDynamicObject(3115,1327.9799800,-1620.2199700,12.2800000,0.0000000,0.0000000,180.0270000); //object(carrier_lift1_sfse) (8)
CreateDynamicObject(3115,1327.9699700,-1601.7700200,12.2900000,0.0000000,0.0000000,180.0270000); //object(carrier_lift1_sfse) (9)
CreateDynamicObject(902,1319.8900100,-1677.4599600,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (11)
CreateDynamicObject(902,1319.9300500,-1672.4200400,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (12)
CreateDynamicObject(902,1319.7800300,-1668.5200200,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (13)
CreateDynamicObject(902,1319.7900400,-1664.1899400,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (14)
CreateDynamicObject(902,1319.7900400,-1660.4899900,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (15)
CreateDynamicObject(902,1319.8000500,-1656.6999500,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (16)
CreateDynamicObject(902,1319.7399900,-1652.8100600,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (17)
CreateDynamicObject(902,1319.7500000,-1648.4799800,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (18)
CreateDynamicObject(902,1319.7600100,-1642.9899900,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (19)
CreateDynamicObject(902,1319.6300000,-1636.7700200,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (20)
CreateDynamicObject(902,1319.6700400,-1631.6200000,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (21)
CreateDynamicObject(902,1319.6999500,-1627.5300300,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (22)
CreateDynamicObject(902,1319.7399900,-1622.6400100,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (23)
CreateDynamicObject(902,1319.7800300,-1617.9300500,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (24)
CreateDynamicObject(902,1319.8100600,-1613.8399700,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (25)
CreateDynamicObject(902,1319.8499800,-1608.6899400,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (26)
CreateDynamicObject(902,1319.8900100,-1604.3399700,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (27)
CreateDynamicObject(902,1319.9399400,-1598.7399900,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (28)
CreateDynamicObject(902,1319.9799800,-1593.5899700,12.0400000,0.0000000,0.0000000,0.0000000); //object(starfish) (29)
CreateDynamicObject(3472,1317.4899900,-1641.4100300,12.5900000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (7)
CreateDynamicObject(3472,1317.7099600,-1625.0699500,12.5800000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (8)
CreateDynamicObject(3472,1317.6400100,-1609.9300500,12.5800000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (9)
CreateDynamicObject(3472,1317.5500500,-1596.6999500,12.6200000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (10)
CreateDynamicObject(2773,1320.2099600,-1707.7500000,13.1300000,0.0000000,0.0000000,93.8110000); //object(cj_airprt_bar) (8)
CreateDynamicObject(2773,1320.0799600,-1715.5799600,13.1300000,0.0000000,0.0000000,93.8070000); //object(cj_airprt_bar) (9)
CreateDynamicObject(2773,1323.8399700,-1711.4799800,13.1300000,0.0000000,0.0000000,93.8070000); //object(cj_airprt_bar) (10)
CreateDynamicObject(2773,1321.1400100,-1711.5999800,13.1300000,0.0000000,0.0000000,93.8070000); //object(cj_airprt_bar) (11)
CreateDynamicObject(8880,1785.2700200,-1811.1999500,58.6300000,71.3510000,179.9840000,359.4330000); //object(vgsecnstrct09) (39)
CreateDynamicObject(8880,1780.9899900,-1811.3000500,58.6300000,71.3450000,179.9840000,359.4290000); //object(vgsecnstrct09) (40)
CreateDynamicObject(8880,1777.0699500,-1811.4499500,58.6300000,71.3450000,179.9840000,359.4290000); //object(vgsecnstrct09) (41)
CreateDynamicObject(8880,1773.1300000,-1811.4200400,58.6300000,71.3450000,179.9840000,359.4290000); //object(vgsecnstrct09) (42)
CreateDynamicObject(8880,1775.7900400,-1811.4899900,58.6300000,71.3450000,179.9840000,359.4290000); //object(vgsecnstrct09) (43)
CreateDynamicObject(8880,1779.5899700,-1811.6200000,58.6300000,71.3450000,179.9840000,359.4290000); //object(vgsecnstrct09) (45)
CreateDynamicObject(8880,1782.9899900,-1811.6099900,58.6300000,71.3450000,179.9840000,359.4290000); //object(vgsecnstrct09) (46)
CreateDynamicObject(8880,1787.2900400,-1811.6899400,58.6300000,71.3450000,179.9840000,359.4290000); //object(vgsecnstrct09) (47)
CreateDynamicObject(7666,1808.7800300,-1809.8700000,51.8100000,0.0000000,0.0000000,299.7870000); //object(vgswlcmsign2) (1)
CreateDynamicObject(7666,1791.8399700,-1809.9000200,51.8100000,0.0000000,0.0000000,299.7840000); //object(vgswlcmsign2) (2)
CreateDynamicObject(7666,1774.8399700,-1809.7399900,51.8100000,0.0000000,0.0000000,299.7840000); //object(vgswlcmsign2) (3)
CreateDynamicObject(7666,1759.4399400,-1809.8499800,51.8100000,0.0000000,0.0000000,299.7840000); //object(vgswlcmsign2) (4)
CreateDynamicObject(7666,1743.6099900,-1809.8900100,51.8100000,0.0000000,0.0000000,299.7840000); //object(vgswlcmsign2) (5)
CreateDynamicObject(971,1780.5799600,-1823.6600300,9.8700000,0.0000000,0.0000000,344.4490000); //object(subwaygate) (1)
CreateDynamicObject(971,1789.1099900,-1826.0300300,9.8700000,0.0000000,0.0000000,344.6730000); //object(subwaygate) (2)
CreateDynamicObject(971,1797.7900400,-1827.1700400,9.8700000,0.0000000,0.0000000,0.2190000); //object(subwaygate) (3)
CreateDynamicObject(971,1806.6899400,-1827.1800500,9.8700000,0.0000000,0.0000000,0.2140000); //object(subwaygate) (4)
CreateDynamicObject(971,1764.9100300,-1819.5500500,9.8700000,0.0000000,0.0000000,345.2600000); //object(subwaygate) (5)
CreateDynamicObject(971,1756.3299600,-1817.2600100,9.8700000,0.0000000,0.0000000,345.2560000); //object(subwaygate) (6)
CreateDynamicObject(971,1747.7600100,-1814.9200400,9.8700000,0.0000000,0.0000000,344.4960000); //object(subwaygate) (7)
CreateDynamicObject(971,1739.1700400,-1812.6600300,9.8700000,0.0000000,0.0000000,345.1650000); //object(subwaygate) (8)
CreateDynamicObject(971,1730.5899700,-1810.3900100,9.8700000,0.0000000,0.0000000,344.8750000); //object(subwaygate) (9)
CreateDynamicObject(971,1723.2299800,-1808.4000200,9.8700000,0.0000000,0.0000000,345.2160000); //object(subwaygate) (10)
CreateDynamicObject(975,1699.4699700,-1795.0400400,11.6800000,0.0000000,0.0000000,269.5440000); //object(columbiangate) (1)
CreateDynamicObject(975,1699.5100100,-1786.1400100,11.6800000,0.0000000,0.0000000,269.5390000); //object(columbiangate) (2)
CreateDynamicObject(975,1699.5400400,-1777.2099600,11.6800000,0.0000000,0.0000000,270.0500000); //object(columbiangate) (3)
CreateDynamicObject(975,1699.5400400,-1768.3000500,11.6800000,0.0000000,0.0000000,270.0490000); //object(columbiangate) (4)
CreateDynamicObject(975,1699.5200200,-1759.4100300,11.6800000,0.0000000,0.0000000,270.0490000); //object(columbiangate) (5)
CreateDynamicObject(975,1699.5100100,-1750.5000000,11.6800000,0.0000000,0.0000000,270.0490000); //object(columbiangate) (6)
CreateDynamicObject(975,1699.5100100,-1746.5799600,11.6700000,0.0000000,0.0000000,270.0490000); //object(columbiangate) (7)
CreateDynamicObject(975,1703.9399400,-1742.2399900,11.6500000,0.0000000,0.0000000,179.2850000); //object(columbiangate) (8)
CreateDynamicObject(975,1712.7900400,-1742.3399700,11.6500000,0.0000000,0.0000000,179.2800000); //object(columbiangate) (9)
CreateDynamicObject(975,1728.5100100,-1742.3100600,11.6500000,0.0000000,0.0000000,179.2800000); //object(columbiangate) (10)
CreateDynamicObject(1251,1720.6999500,-1742.2500000,12.5100000,0.0000000,0.0000000,90.7080000); //object(smashbar) (1)
CreateDynamicObject(975,1737.4100300,-1742.4000200,11.6500000,0.0000000,0.0000000,179.2800000); //object(columbiangate) (12)
CreateDynamicObject(1251,1720.7299800,-1737.2700200,12.4800000,0.0000000,0.0000000,89.9670000); //object(smashbar) (2)
CreateDynamicObject(1374,1723.9399400,-1743.0400400,14.0100000,0.0000000,0.0000000,90.8290000); //object(traincross2) (1)
CreateDynamicObject(1250,1723.8700000,-1742.7299800,13.5700000,0.0000000,0.0000000,270.9550000); //object(smashbarpost) (1)
CreateDynamicObject(8406,1717.4100300,-1742.1500200,17.9100000,0.0000000,0.0000000,359.8400000); //object(carparksign01_lvs) (1)
CreateDynamicObject(3928,1779.4200400,-1763.3900100,51.4700000,0.0000000,0.0000000,0.0000000); //object(helipad) (1)
CreateDynamicObject(7091,1761.6999500,-1807.0899700,36.6900000,0.0000000,0.0000000,270.9550000); //object(vegasflag02) (1)
CreateDynamicObject(7091,1744.4100300,-1807.5699500,36.6900000,0.0000000,0.0000000,270.9500000); //object(vegasflag02) (2)
CreateDynamicObject(7091,1777.7500000,-1807.4200400,36.6900000,0.0000000,0.0000000,270.9500000); //object(vegasflag02) (3)
CreateDynamicObject(7091,1788.6400100,-1807.0300300,36.6900000,0.0000000,0.0000000,270.9500000); //object(vegasflag02) (4)
CreateDynamicObject(7091,1809.2800300,-1797.0000000,39.5700000,0.0000000,0.0000000,3.3500000); //object(vegasflag02) (5)
CreateDynamicObject(7091,1799.3398400,-1807.3095700,36.6900000,0.0000000,0.0000000,270.9500000); //object(vegasflag02) (6)
CreateDynamicObject(7091,1809.2500000,-1753.0100100,39.5700000,0.0000000,0.0000000,3.3450000); //object(vegasflag02) (7)
CreateDynamicObject(7091,1799.3000500,-1742.2800300,39.5700000,0.0000000,0.0000000,89.0350000); //object(vegasflag02) (8)
CreateDynamicObject(7091,1750.9499500,-1742.2099600,39.5700000,0.0000000,0.0000000,89.0330000); //object(vegasflag02) (9)
CreateDynamicObject(7091,1740.3299600,-1756.9300500,39.5700000,0.0000000,0.0000000,178.0780000); //object(vegasflag02) (10)
CreateDynamicObject(7091,1740.1400100,-1790.6999500,39.5700000,0.0000000,0.0000000,181.9650000); //object(vegasflag02) (11)
CreateDynamicObject(8841,1720.5100100,-1772.7600100,15.7200000,0.0000000,0.0000000,269.0110000); //object(rsdncarprk01_lvs) (1)
CreateDynamicObject(8407,1716.5699500,-1743.6700400,13.8600000,0.0000000,0.0000000,0.0000000); //object(carparkhut01_lvs) (1)
CreateDynamicObject(5992,1323.9200400,-1711.8000500,12.2900000,1.9440000,180.2000000,92.9260000); //object(ltsreg01_lawn) (2)
CreateDynamicObject(5992,1332.5699500,-1704.8000500,15.4800000,0.0000000,0.0000000,0.0000000); //object(ltsreg01_lawn) (4)
CreateDynamicObject(5992,1332.3800000,-1715.9799800,15.4800000,0.0000000,0.0000000,0.0000000); //object(ltsreg01_lawn) (5)
CreateDynamicObject(5992,1332.3900100,-1715.9799800,24.1900000,0.0000000,0.0000000,0.0000000); //object(ltsreg01_lawn) (6)
CreateDynamicObject(5992,1332.4799800,-1704.7900400,24.1100000,0.0000000,0.0000000,0.0000000); //object(ltsreg01_lawn) (7)
CreateDynamicObject(9126,1778.9300500,-1804.1700400,12.5700000,0.0000000,0.0000000,0.0000000); //object(cmtneon01) (1)
CreateDynamicObject(9126,1782.4000200,-1804.1999500,12.5700000,0.0000000,0.0000000,0.0000000); //object(cmtneon01) (2)
CreateDynamicObject(9126,1775.2700200,-1804.5100100,12.0400000,0.0000000,0.0000000,0.0000000); //object(cmtneon01) (3)
CreateDynamicObject(1251,1725.8599900,-1791.2600100,12.5100000,0.0000000,0.0000000,108.1980000); //object(smashbar) (3)
CreateDynamicObject(1251,1726.1899400,-1786.9699700,12.5100000,0.0000000,0.0000000,108.1930000); //object(smashbar) (4)
CreateDynamicObject(1251,1725.8199500,-1782.7800300,12.5100000,0.0000000,0.0000000,108.1930000); //object(smashbar) (5)
CreateDynamicObject(1251,1726.2600100,-1777.8599900,12.5100000,0.0000000,0.0000000,108.1930000); //object(smashbar) (6)
CreateDynamicObject(1251,1726.1200000,-1772.6800500,12.5100000,0.0000000,0.0000000,108.1930000); //object(smashbar) (7)
CreateDynamicObject(1251,1726.1099900,-1767.5000000,12.5100000,0.0000000,0.0000000,108.1930000); //object(smashbar) (8)
CreateDynamicObject(1251,1726.2099600,-1761.6999500,12.5100000,0.0000000,0.0000000,108.1930000); //object(smashbar) (9)
CreateDynamicObject(1251,1726.2299800,-1756.1400100,12.5100000,0.0000000,0.0000000,108.1930000); //object(smashbar) (10)
CreateDynamicObject(1251,1715.3399700,-1756.0899700,12.6000000,0.0000000,0.0000000,108.1930000); //object(smashbar) (11)
CreateDynamicObject(1251,1714.8100600,-1761.5200200,12.6800000,0.0000000,0.0000000,108.1930000); //object(smashbar) (12)
CreateDynamicObject(1251,1715.0600600,-1765.5100100,12.6600000,0.0000000,0.0000000,108.1930000); //object(smashbar) (13)
CreateDynamicObject(1251,1715.0100100,-1770.2600100,12.6600000,0.0000000,0.0000000,108.1930000); //object(smashbar) (14)
CreateDynamicObject(1251,1714.8499800,-1775.0200200,12.6600000,0.0000000,0.0000000,108.1930000); //object(smashbar) (15)
CreateDynamicObject(1251,1714.8800000,-1779.3299600,12.6600000,0.0000000,0.0000000,108.1930000); //object(smashbar) (16)
CreateDynamicObject(1251,1714.6300000,-1783.6200000,12.6600000,0.0000000,0.0000000,108.1930000); //object(smashbar) (17)
CreateDynamicObject(1251,1714.5899700,-1788.0400400,12.6600000,0.0000000,0.0000000,108.1930000); //object(smashbar) (18)
CreateDynamicObject(1251,1714.3700000,-1792.8100600,12.6600000,0.0000000,0.0000000,108.1930000); //object(smashbar) (19)
CreateDynamicObject(869,1701.4899900,-1769.0799600,12.9200000,0.0000000,0.0000000,259.8240000); //object(veg_pflowerswee) (1)
CreateDynamicObject(869,1701.1999500,-1776.3599900,12.9200000,0.0000000,0.0000000,259.8210000); //object(veg_pflowerswee) (2)
CreateDynamicObject(869,1701.8299600,-1783.0999800,12.9200000,0.0000000,0.0000000,259.8210000); //object(veg_pflowerswee) (3)
CreateDynamicObject(869,1701.6600300,-1791.4699700,12.9200000,0.0000000,0.0000000,259.8210000); //object(veg_pflowerswee) (4)
CreateDynamicObject(869,1701.3100600,-1797.1700400,12.9200000,0.0000000,0.0000000,259.8210000); //object(veg_pflowerswee) (5)
CreateDynamicObject(869,1701.1999500,-1760.6400100,12.9200000,0.0000000,0.0000000,259.8210000); //object(veg_pflowerswee) (6)
CreateDynamicObject(869,1701.2500000,-1748.9599600,12.9200000,0.0000000,0.0000000,259.8210000); //object(veg_pflowerswee) (7)
CreateDynamicObject(1597,1720.3900100,-1765.2700200,15.0500000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (1)
CreateDynamicObject(1597,1719.8599900,-1780.1999500,15.2300000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (2)
CreateDynamicObject(971,1714.5100100,-1807.2700200,9.8700000,0.0000000,0.0000000,0.0590000); //object(subwaygate) (11)
CreateDynamicObject(971,1705.6600300,-1807.2500000,9.8700000,0.0000000,0.0000000,0.0550000); //object(subwaygate) (12)
CreateDynamicObject(1318,1736.1300000,-1805.6899400,14.4800000,274.5310000,180.0000000,256.9220000); //object(arrow) (1)
CreateDynamicObject(2908,810.1799900,-1103.0699500,24.9700000,0.0000000,0.0000000,282.0860000); //object(kmb_deadhead) (1)
CreateDynamicObject(2907,810.7199700,-1103.0899700,24.9900000,0.0000000,0.0000000,267.8880000); //object(kmb_deadtorso) (1)
CreateDynamicObject(2905,811.4699700,-1103.2199700,25.0000000,0.0000000,74.3720000,270.9550000); //object(kmb_deadleg) (1)
CreateDynamicObject(2905,811.5399800,-1103.0000000,25.0000000,0.0000000,74.3720000,276.7820000); //object(kmb_deadleg) (2)
CreateDynamicObject(2906,810.2899800,-1102.7700200,24.9800000,0.0000000,0.0000000,55.6530000); //object(kmb_deadarm) (1)
CreateDynamicObject(2906,810.5999800,-1103.3800000,24.9500000,0.0000000,0.0000000,226.4310000); //object(kmb_deadarm) (2)
CreateDynamicObject(1337,810.1099900,-1102.9200400,25.0300000,280.3620000,180.0000000,187.7750000); //object(3)
CreateDynamicObject(3044,809.7500000,-1103.9599600,27.6800000,0.0000000,0.0000000,0.0000000); //object(cigar) (2)
CreateDynamicObject(3044,810.3100000,-1102.7900400,26.0000000,0.0000000,0.0000000,95.9420000); //object(cigar) (3)
CreateDynamicObject(3044,810.4099700,-1102.7800300,26.0000000,0.0000000,0.0000000,95.9380000); //object(cigar) (4)
CreateDynamicObject(3044,810.5200200,-1102.7700200,26.0000000,0.0000000,0.0000000,95.9380000); //object(cigar) (5)
CreateDynamicObject(3044,810.5300300,-1102.5799600,26.0000000,0.0000000,0.0000000,40.2850000); //object(cigar) (6)
CreateDynamicObject(3044,810.4600200,-1102.4899900,26.0000000,0.0000000,0.0000000,40.2810000); //object(cigar) (7)
CreateDynamicObject(3044,810.4000200,-1102.4000200,26.0000000,0.0000000,0.0000000,40.2810000); //object(cigar) (8)
CreateDynamicObject(3044,810.4199800,-1102.3700000,26.0000000,0.0000000,0.0000000,73.6730000); //object(cigar) (9)
CreateDynamicObject(3044,810.5200200,-1102.4000200,26.0000000,0.0000000,0.0000000,73.6690000); //object(cigar) (10)
CreateDynamicObject(3044,810.6099900,-1102.4300500,26.0000000,0.0000000,0.0000000,73.6690000); //object(cigar) (11)
CreateDynamicObject(3044,810.6599700,-1102.3199500,26.0000000,0.0000000,0.0000000,73.6690000); //object(cigar) (12)
CreateDynamicObject(3044,810.5700100,-1102.2900400,26.0000000,0.0000000,0.0000000,73.6690000); //object(cigar) (13)
CreateDynamicObject(3044,810.4699700,-1102.2600100,26.0000000,0.0000000,0.0000000,73.6690000); //object(cigar) (14)
CreateDynamicObject(3044,810.5300300,-1102.3000500,26.0000000,0.0000000,0.0000000,107.0610000); //object(cigar) (15)
CreateDynamicObject(3044,810.6300000,-1102.2900400,26.0000000,0.0000000,0.0000000,107.0560000); //object(cigar) (16)
CreateDynamicObject(3044,810.7399900,-1102.2700200,26.0000000,0.0000000,0.0000000,107.0560000); //object(cigar) (17)
CreateDynamicObject(3044,810.7100200,-1102.1600300,26.0000000,0.0000000,0.0000000,73.6640000); //object(cigar) (18)
CreateDynamicObject(3044,810.6099900,-1102.1200000,26.0000000,0.0000000,0.0000000,73.6630000); //object(cigar) (19)
CreateDynamicObject(3044,810.5300300,-1102.0899700,26.0000000,0.0000000,0.0000000,73.6630000); //object(cigar) (20)
CreateDynamicObject(1225,810.7600100,-1103.1099900,24.5600000,327.4700000,201.3080000,26.6380000); //object(barrel4) (1)
CreateDynamicObject(3044,1799.5699500,-1742.0300300,38.9500000,310.2400000,180.0000000,180.0000000); //object(cigar) (21)
CreateDynamicObject(3044,1799.5699500,-1742.0799600,38.8700000,310.2370000,179.9950000,179.9950000); //object(cigar) (22)
CreateDynamicObject(3044,1799.4599600,-1741.9200400,39.1800000,2.5260000,87.8610000,89.3660000); //object(cigar) (23)
CreateDynamicObject(3044,1799.4599600,-1741.9899900,39.1100000,2.5210000,87.8580000,89.3630000); //object(cigar) (24)
CreateDynamicObject(3044,1799.4699700,-1742.0600600,38.9600000,310.2370000,179.9950000,179.9950000); //object(cigar) (26)
CreateDynamicObject(3044,1799.4599600,-1742.0600600,38.9500000,325.8930000,127.8550000,120.8310000); //object(cigar) (27)
CreateDynamicObject(3044,1799.3199500,-1741.9899900,39.1000000,2.5210000,87.8580000,89.3630000); //object(cigar) (29)
CreateDynamicObject(3044,1799.3199500,-1741.9300500,39.1800000,2.5210000,87.8580000,89.3630000); //object(cigar) (30)
CreateDynamicObject(3044,1799.4300500,-1742.0600600,38.9600000,310.2370000,179.9950000,179.9950000); //object(cigar) (34)
CreateDynamicObject(3044,1799.4200400,-1742.1300000,38.8700000,310.2370000,179.9950000,179.9950000); //object(cigar) (35)
CreateDynamicObject(3044,1799.3199500,-1742.1099900,38.8700000,310.2370000,179.9950000,179.9950000); //object(cigar) (36)
CreateDynamicObject(3044,1799.3199500,-1742.0500500,38.9500000,310.2370000,179.9950000,179.9950000); //object(cigar) (37)
CreateDynamicObject(3044,1799.2399900,-1742.0500500,38.9500000,310.2370000,179.9950000,179.9950000); //object(cigar) (38)
CreateDynamicObject(3044,1799.2399900,-1742.0999800,38.8800000,310.2370000,179.9950000,179.9950000); //object(cigar) (39)
CreateDynamicObject(3044,1799.1400100,-1742.1099900,38.8900000,310.2370000,179.9950000,179.9950000); //object(cigar) (40)
CreateDynamicObject(3044,1799.1400100,-1742.0500500,38.9600000,310.2370000,179.9950000,179.9950000); //object(cigar) (41)
CreateDynamicObject(3044,1799.1200000,-1742.0000000,39.0500000,2.5210000,87.8580000,89.3630000); //object(cigar) (45)
CreateDynamicObject(3044,1798.9699700,-1742.0300300,39.0500000,2.5210000,87.8580000,89.3630000); //object(cigar) (46)
CreateDynamicObject(3044,1799.0799600,-1742.1099900,38.8900000,310.2370000,179.9950000,179.9950000); //object(cigar) (49)
CreateDynamicObject(3044,1799.0799600,-1742.0400400,38.9700000,310.2370000,179.9950000,179.9950000); //object(cigar) (50)
CreateDynamicObject(3044,1789.8199500,-1809.5200200,61.6000000,0.0000000,0.0000000,269.0110000); //object(cigar) (51)
CreateDynamicObject(3044,1789.5699500,-1809.5000000,61.6000000,0.0000000,0.0000000,0.0000000); //object(cigar) (52)
CreateDynamicObject(3044,1789.8199500,-1809.5600600,61.6000000,0.0000000,0.0000000,269.0060000); //object(cigar) (53)
CreateDynamicObject(3044,1789.7900400,-1809.7399900,61.6000000,0.0000000,0.0000000,179.9610000); //object(cigar) (54)
CreateDynamicObject(3044,1789.8100600,-1809.7099600,61.6000000,0.0000000,0.0000000,224.4790000); //object(cigar) (55)
CreateDynamicObject(3044,1789.8599900,-1809.7700200,61.6000000,0.0000000,0.0000000,179.9560000); //object(cigar) (56)
CreateDynamicObject(3044,1789.9499500,-1809.7700200,61.6000000,0.0000000,0.0000000,179.9510000); //object(cigar) (57)
CreateDynamicObject(3044,1789.9799800,-1809.5300300,61.6000000,0.0000000,0.0000000,268.9950000); //object(cigar) (58)
CreateDynamicObject(3044,1789.9699700,-1809.5699500,61.6000000,0.0000000,0.0000000,268.9950000); //object(cigar) (59)
CreateDynamicObject(3044,1789.8700000,-1809.5200200,61.6000000,0.0000000,0.0000000,3.3390000); //object(cigar) (60)
CreateDynamicObject(3044,1789.9599600,-1809.5200200,61.6000000,0.0000000,0.0000000,3.3340000); //object(cigar) (61)
CreateDynamicObject(3044,1790.1200000,-1809.6200000,61.6000000,0.0000000,0.0000000,274.2890000); //object(cigar) (62)
CreateDynamicObject(3044,1790.0200200,-1809.5200200,61.6000000,0.0000000,0.0000000,3.3300000); //object(cigar) (63)
CreateDynamicObject(3044,1790.0300300,-1809.7600100,61.6000000,0.0000000,0.0000000,92.3740000); //object(cigar) (64)
//========================Cartel Zona Zero ( Raul _ Rey )
CreateDynamicObject(2932,1378.1500200,-807.2299800,79.4800000,0.0000000,0.0000000,270.0590000); //object(kmb_container_blue) (1)
CreateDynamicObject(2932,1378.3199500,-807.2199700,81.8300000,36.9340000,0.0000000,270.0550000); //object(kmb_container_blue) (4)
CreateDynamicObject(2932,1384.0400400,-807.2199700,86.1100000,36.9310000,0.0000000,270.0550000); //object(kmb_container_blue) (5)
CreateDynamicObject(2932,1384.1899400,-807.2299800,88.5100000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (7)
CreateDynamicObject(2932,1378.1500200,-807.2299800,88.5300000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (8)
CreateDynamicObject(2932,1384.1899400,-807.2299800,79.4600000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (9)
CreateDynamicObject(2932,1394.8299600,-807.2100200,79.4600000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (10)
CreateDynamicObject(2932,1399.0699500,-807.2299800,79.4600000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (11)
CreateDynamicObject(2932,1392.7500000,-807.2100200,84.4400000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (12)
CreateDynamicObject(2932,1399.0699500,-807.2299800,88.7800000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (16)
CreateDynamicObject(2932,1394.8299600,-807.2100200,88.7900000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (18)
CreateDynamicObject(2932,1401.1999500,-807.2100200,84.4400000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (19)
CreateDynamicObject(2932,1406.6700400,-807.2199700,86.6500000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (23)
CreateDynamicObject(2932,1406.6600300,-807.2299800,81.5600000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (24)
CreateDynamicObject(2932,1409.4499500,-807.2100200,86.5700000,47.9540000,180.0000000,90.0550000); //object(kmb_container_blue) (27)
CreateDynamicObject(2932,1413.8900100,-807.2199700,81.6500000,47.9500000,179.9950000,90.0490000); //object(kmb_container_blue) (28)
CreateDynamicObject(2932,1416.5600600,-807.3400300,81.5600000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (29)
CreateDynamicObject(2932,1416.5699500,-807.3499800,86.5500000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (31)
CreateDynamicObject(2932,1421.2099600,-807.2399900,86.5500000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (32)
CreateDynamicObject(2932,1421.1999500,-807.2500000,81.4900000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (33)
CreateDynamicObject(2932,1425.2099600,-807.2199700,88.6700000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (34)
CreateDynamicObject(2932,1425.2099600,-807.2199700,83.1900000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (35)
CreateDynamicObject(2932,1429.0799600,-807.2199700,81.4900000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (36)
CreateDynamicObject(2932,1429.0899700,-807.2299800,86.5400000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (37)
CreateDynamicObject(2932,1448.0899700,-807.2800300,88.5300000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (39)
CreateDynamicObject(2932,1447.9499500,-807.2700200,86.1100000,36.9310000,0.0000000,270.0550000); //object(kmb_container_blue) (40)
CreateDynamicObject(2932,1442.2800300,-807.2100200,81.8300000,36.9310000,0.0000000,270.0550000); //object(kmb_container_blue) (41)
CreateDynamicObject(2932,1442.1300000,-807.2199700,79.4300000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (42)
CreateDynamicObject(2932,1448.0899700,-807.2800300,79.4600000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (43)
CreateDynamicObject(2932,1442.1300000,-807.2199700,88.5200000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (44)
CreateDynamicObject(2932,1455.2500000,-807.2100200,86.5400000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (45)
CreateDynamicObject(2932,1455.2500000,-807.2199700,81.5300000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (46)
CreateDynamicObject(2932,1460.1400100,-807.2000100,79.4200000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (47)
CreateDynamicObject(2932,1460.1400100,-807.2000100,88.6500000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (48)
CreateDynamicObject(2932,1460.1400100,-807.2000100,84.0400000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (49)
CreateDynamicObject(2932,1469.6500200,-807.3200100,86.5400000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (50)
CreateDynamicObject(2932,1469.6400100,-807.2999900,81.7100000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (51)
CreateDynamicObject(2932,1474.1400100,-807.2899800,88.6700000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (52)
CreateDynamicObject(2932,1474.1400100,-807.2899800,83.7500000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (53)
CreateDynamicObject(2932,1476.2500000,-807.2700200,86.5400000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (54)
CreateDynamicObject(2932,1473.9599600,-807.2500000,81.3500000,316.3570000,0.5420000,270.4290000); //object(kmb_container_blue) (56)
CreateDynamicObject(2932,1482.9899900,-807.2299800,79.6300000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (59)
CreateDynamicObject(2932,1486.6899400,-807.2199700,79.6200000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (60)
CreateDynamicObject(2932,1480.8499800,-807.2399900,81.7100000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (61)
CreateDynamicObject(2932,1480.8399700,-807.2500000,86.5100000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (62)
CreateDynamicObject(2932,1489.0000000,-807.2600100,81.7100000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (63)
CreateDynamicObject(2932,1488.9899900,-807.2800300,86.3900000,90.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (64)
CreateDynamicObject(2932,1482.9899900,-807.2299800,88.6100000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (65)
CreateDynamicObject(2932,1486.6899400,-807.2100200,88.6000000,0.0000000,0.0000000,270.0550000); //object(kmb_container_blue) (67)
CreateDynamicObject(2774,1376.0200200,-807.8499800,68.4200000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (1)
CreateDynamicObject(2774,1385.2800300,-807.8100000,68.5200000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (2)
CreateDynamicObject(2774,1392.7199700,-807.5000000,68.4200000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (3)
CreateDynamicObject(2774,1400.8499800,-807.7999900,68.4200000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (4)
CreateDynamicObject(2774,1406.8399700,-807.9199800,68.4200000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (5)
CreateDynamicObject(2774,1416.4100300,-808.0100100,68.4200000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (6)
CreateDynamicObject(2774,1421.1600300,-807.9699700,68.4200000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (7)
CreateDynamicObject(2774,1428.9699700,-807.9000200,68.4200000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (8)
CreateDynamicObject(2774,1440.2199700,-807.8800000,67.8000000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (9)
CreateDynamicObject(2774,1449.5200200,-807.9500100,67.2600000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (10)
CreateDynamicObject(2774,1455.0699500,-807.6699800,67.2600000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (12)
CreateDynamicObject(2774,1461.7399900,-807.2700200,67.2600000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (13)
CreateDynamicObject(2774,1469.4699700,-807.6900000,67.2600000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (14)
CreateDynamicObject(2774,1475.3700000,-807.5399800,67.8800000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (15)
CreateDynamicObject(2774,1481.0000000,-807.6099900,67.8800000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (16)
CreateDynamicObject(2774,1489.0400400,-807.6300000,67.8800000,0.0000000,0.0000000,0.0000000); //object(cj_airp_pillars) (17)
CreateDynamicObject(3044,1425.2399900,-807.1699800,87.3100000,0.0000000,0.0000000,0.0000000); //object(cigar) (1)
CreateDynamicObject(3044,1425.2399900,-807.0600000,87.3100000,0.0000000,0.0000000,0.0000000); //object(cigar) (2)
CreateDynamicObject(3044,1425.3700000,-807.2700200,87.3100000,0.0000000,0.0000000,274.8430000); //object(cigar) (3)
CreateDynamicObject(3044,1425.3800000,-807.1699800,87.3100000,0.0000000,0.0000000,274.8390000); //object(cigar) (4)
CreateDynamicObject(3044,1425.3900100,-807.2500000,87.3100000,0.0000000,0.0000000,219.1860000); //object(cigar) (5)
CreateDynamicObject(3044,1425.1400100,-807.1799900,87.3100000,0.0000000,0.0000000,3.8810000); //object(cigar) (6)
CreateDynamicObject(3044,1425.0500500,-807.1799900,87.3100000,0.0000000,0.0000000,3.8780000); //object(cigar) (7)
CreateDynamicObject(3044,1425.0400400,-807.0800200,87.3100000,0.0000000,0.0000000,3.8780000); //object(cigar) (8)
CreateDynamicObject(3044,1424.9399400,-807.0999800,87.3100000,0.0000000,0.0000000,3.8780000); //object(cigar) (9)
CreateDynamicObject(3044,1424.9399400,-807.1900000,87.3100000,0.0000000,0.0000000,3.8780000); //object(cigar) (10)
CreateDynamicObject(3044,1424.9399400,-807.3499800,87.3100000,0.0000000,0.0000000,92.9230000); //object(cigar) (11)
CreateDynamicObject(3044,1424.9499500,-807.4400000,87.3100000,0.0000000,0.0000000,92.9220000); //object(cigar) (12)
CreateDynamicObject(3044,1424.7600100,-807.2399900,87.3100000,0.0000000,0.0000000,92.9220000); //object(cigar) (13)
CreateDynamicObject(3044,1424.7800300,-807.0999800,87.3100000,0.0000000,0.0000000,358.0460000); //object(cigar) (14)
CreateDynamicObject(3044,1424.7700200,-807.2000100,87.3100000,0.0000000,0.0000000,358.0440000); //object(cigar) (15)
CreateDynamicObject(3044,1424.8700000,-807.0999800,87.3100000,0.0000000,0.0000000,358.0440000); //object(cigar) (16)
CreateDynamicObject(3044,1424.8599900,-807.2000100,87.3100000,0.0000000,0.0000000,358.0440000); //object(cigar) (17)
CreateDynamicObject(3044,1424.7099600,-807.1799900,87.3100000,0.0000000,0.0000000,358.0440000); //object(cigar) (18)
CreateDynamicObject(3044,1424.7099600,-807.0800200,87.3100000,0.0000000,0.0000000,358.0440000); //object(cigar) (19)
CreateDynamicObject(3044,1424.8499800,-807.1099900,87.3100000,0.0000000,0.0000000,269.0000000); //object(cigar) (20)
CreateDynamicObject(8880,1377.5300300,-808.1900000,80.6300000,48.0980000,180.0000000,180.0000000); //object(vgsecnstrct09) (1)
CreateDynamicObject(8880,1383.8900100,-808.4400000,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (2)
CreateDynamicObject(8880,1393.7500000,-808.8300200,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (3)
CreateDynamicObject(8880,1398.5100100,-808.5700100,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (4)
CreateDynamicObject(8880,1406.3100600,-808.4299900,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (5)
CreateDynamicObject(8880,1411.1899400,-808.6200000,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (6)
CreateDynamicObject(8880,1415.9300500,-808.7999900,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (7)
CreateDynamicObject(8880,1421.5699500,-808.5800200,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (8)
CreateDynamicObject(8880,1426.5799600,-808.5999800,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (9)
CreateDynamicObject(8880,1440.9000200,-809.3400300,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (10)
CreateDynamicObject(8880,1446.6099900,-808.8499800,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (11)
CreateDynamicObject(8880,1456.7099600,-809.2500000,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (12)
CreateDynamicObject(8880,1461.5500500,-809.0000000,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (13)
CreateDynamicObject(8880,1471.0799600,-809.5499900,80.6300000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (14)
CreateDynamicObject(8880,1475.2299800,-808.9099700,78.8500000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (15)
CreateDynamicObject(8880,1471.0600600,-809.3700000,78.8500000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (16)
CreateDynamicObject(8880,1481.0899700,-807.5900300,76.7200000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (17)
CreateDynamicObject(8880,1488.1600300,-807.6099900,76.1900000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (18)
CreateDynamicObject(8880,1488.1600300,-807.6099900,78.1700000,48.0930000,179.9950000,179.9950000); //object(vgsecnstrct09) (19)
//========================Isla premium
CreateDynamicObject(4340,503.6400100,-2586.1001000,-17.9400000,0.0000000,0.0000000,131.6240000); //object(sbseabed_11_sfse) (1)
CreateDynamicObject(7940,444.5799900,-2612.3100600,15.1200000,0.0000000,0.0000000,176.6470000); //object(vegirlfrhouse02) (1)
CreateDynamicObject(8437,481.6300000,-2614.7900400,18.0100000,0.0000000,0.0000000,358.0560000); //object(residntial01_lvs) (1)
CreateDynamicObject(9259,616.6200000,-2627.8999000,17.4600000,0.0000000,0.0000000,267.0670000); //object(preshoosbig02_sfn) (1)
CreateDynamicObject(9271,514.6900000,-2622.8300800,18.6600000,0.0000000,0.0000000,266.0540000); //object(preshoos03_sfn01) (1)
CreateDynamicObject(9515,541.2700200,-2633.0300300,15.3600000,0.0000000,0.0000000,176.0110000); //object(bigboxtmp18) (1)
CreateDynamicObject(9762,659.4899900,-2625.2600100,-2.0400000,0.0000000,0.0000000,241.3230000); //object(sfw_boxwest07) (1)
CreateDynamicObject(6356,477.7999900,-2613.4299300,23.0400000,0.0000000,0.0000000,236.8650000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,476.5300000,-2641.3898900,23.2600000,0.0000000,0.0000000,237.2810000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,445.9200100,-2639.8898900,23.0900000,0.0000000,0.4800000,235.6210000); //object(sunset06_law2) (2)
CreateDynamicObject(8650,501.1000100,-2618.1398900,13.3800000,0.0000000,0.0000000,357.8240000); //object(shbbyhswall06_lvs) (1)
CreateDynamicObject(8650,459.2500000,-2615.6101100,13.3400000,0.0000000,0.0000000,356.0990000); //object(shbbyhswall06_lvs) (2)
CreateDynamicObject(8650,441.5700100,-2657.7700200,13.1200000,0.0000000,0.0000000,263.7030000); //object(shbbyhswall06_lvs) (5)
CreateDynamicObject(8650,441.5700100,-2657.7800300,11.0800000,0.0000000,0.0000000,263.6990000); //object(shbbyhswall06_lvs) (6)
CreateDynamicObject(17031,462.0300000,-2662.8501000,-7.2500000,0.0000000,0.0000000,270.9550000); //object(cunt_rockgp2_13) (1)
CreateDynamicObject(17031,489.1000100,-2660.6999500,-5.3800000,0.0000000,0.0000000,270.9500000); //object(cunt_rockgp2_13) (3)
CreateDynamicObject(17031,501.8900100,-2660.1001000,-5.3800000,0.0000000,0.0000000,270.9500000); //object(cunt_rockgp2_13) (4)
CreateDynamicObject(17031,486.1200000,-2666.4299300,-5.3800000,0.0000000,0.0000000,248.6890000); //object(cunt_rockgp2_13) (5)
CreateDynamicObject(6356,510.7600100,-2615.3898900,23.0300000,0.0000000,0.0000000,236.9250000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,539.8700000,-2617.3200700,23.1200000,0.0000000,0.0000000,236.6640000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,571.2999900,-2619.1999500,23.1300000,0.0000000,0.0000000,236.8860000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,601.7199700,-2621.0000000,23.1300000,0.0000000,0.0000000,236.8820000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,631.0800200,-2622.7099600,23.1300000,0.0000000,0.0000000,236.8820000); //object(sunset06_law2) (2)
CreateDynamicObject(9762,691.2999900,-2627.3000500,-2.0500000,0.0000000,0.0000000,241.3200000); //object(sfw_boxwest07) (1)
CreateDynamicObject(9762,723.1099900,-2629.3100600,-2.0400000,0.0000000,0.0000000,241.3200000); //object(sfw_boxwest07) (1)
CreateDynamicObject(901,678.6400100,-2614.6298800,9.1100000,0.0000000,0.0000000,0.0000000); //object(searock05) (1)
CreateDynamicObject(901,702.7700200,-2614.4099100,9.1100000,0.0000000,0.0000000,0.0000000); //object(searock05) (2)
CreateDynamicObject(901,710.3300200,-2614.8798800,9.5500000,0.0000000,0.0000000,358.1200000); //object(searock05) (3)
CreateDynamicObject(901,737.4400000,-2615.8701200,9.5500000,0.0000000,0.0000000,356.1110000); //object(searock05) (4)
CreateDynamicObject(901,648.0700100,-2611.5500500,9.5500000,0.0000000,0.0000000,356.1110000); //object(searock05) (5)
CreateDynamicObject(6356,508.4500100,-2642.9099100,23.2100000,0.0000000,0.0000000,237.2770000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,538.2299800,-2645.1899400,23.3600000,0.0000000,0.0000000,237.2810000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,569.8100000,-2647.3501000,23.3100000,0.0000000,0.0000000,237.2770000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,599.8599900,-2649.2800300,23.3400000,0.0000000,0.0960000,237.2770000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,630.4099700,-2651.4799800,23.3600000,0.0000000,0.0930000,237.2770000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,661.5100100,-2653.9599600,23.3800000,0.0000000,0.0930000,237.2770000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,692.3200100,-2656.2399900,23.3700000,0.0000000,0.0930000,237.2770000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,722.6799900,-2658.6999500,23.4000000,0.0000000,0.0930000,237.2770000); //object(sunset06_law2) (2)
CreateDynamicObject(6356,744.3800000,-2629.4099100,23.1100000,0.0000000,0.0930000,236.8930000); //object(sunset06_law2) (2)
CreateDynamicObject(9762,723.0999800,-2629.3200700,-2.6600000,0.0000000,0.0000000,241.3200000); //object(sfw_boxwest07) (1)
CreateDynamicObject(17031,526.7800300,-2660.0300300,-5.3800000,0.0000000,0.0000000,270.9500000); //object(cunt_rockgp2_13) (11)
CreateDynamicObject(17031,536.5300300,-2662.5100100,-5.3800000,0.0000000,0.0000000,270.9500000); //object(cunt_rockgp2_13) (12)
CreateDynamicObject(17031,561.4899900,-2666.5000000,-5.3800000,0.0000000,0.0000000,263.1750000); //object(cunt_rockgp2_13) (13)
CreateDynamicObject(17031,572.1400100,-2665.8300800,-5.3800000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (14)
CreateDynamicObject(17031,597.1500200,-2668.7399900,-5.7400000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (15)
CreateDynamicObject(17031,605.9799800,-2666.9799800,-4.6700000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (16)
CreateDynamicObject(17031,624.6200000,-2671.1001000,-4.6700000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (17)
CreateDynamicObject(17031,635.8700000,-2670.7700200,-5.9100000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (18)
CreateDynamicObject(17031,661.3400300,-2673.2299800,-5.9100000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (19)
CreateDynamicObject(17031,672.6599700,-2675.2399900,-5.6400000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (20)
CreateDynamicObject(17031,696.9199800,-2674.8898900,-6.2600000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (21)
CreateDynamicObject(17031,707.3900100,-2677.3701200,-6.2600000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (22)
CreateDynamicObject(17031,732.9099700,-2679.5300300,-6.2600000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (23)
CreateDynamicObject(17031,741.3499800,-2680.1201200,-6.2600000,0.0000000,0.0000000,263.1720000); //object(cunt_rockgp2_13) (24)
CreateDynamicObject(17031,749.1699800,-2655.1101100,-5.7600000,0.0000000,0.0000000,328.0120000); //object(cunt_rockgp2_13) (25)
CreateDynamicObject(17031,756.3400300,-2647.1799300,-5.7600000,0.0000000,0.0000000,328.0080000); //object(cunt_rockgp2_13) (26)
CreateDynamicObject(17031,775.1099900,-2630.0100100,-6.3200000,0.0000000,0.0000000,328.0080000); //object(cunt_rockgp2_13) (27)
CreateDynamicObject(17031,769.0900300,-2631.6599100,-3.0300000,0.0000000,0.0000000,328.0080000); //object(cunt_rockgp2_13) (28)
CreateDynamicObject(17031,766.9699700,-2604.2099600,-3.0300000,0.0000000,0.0000000,12.5300000); //object(cunt_rockgp2_13) (29)
CreateDynamicObject(17031,755.7800300,-2597.9299300,-3.0300000,0.0000000,0.0000000,12.5300000); //object(cunt_rockgp2_13) (30)
CreateDynamicObject(17031,755.1200000,-2584.6101100,-3.0300000,0.0000000,0.0000000,352.7450000); //object(cunt_rockgp2_13) (31)
CreateDynamicObject(17031,747.3800000,-2565.3100600,-3.0300000,0.0000000,0.0000000,37.2660000); //object(cunt_rockgp2_13) (32)
CreateDynamicObject(17031,740.5100100,-2551.8300800,-8.3000000,0.0000000,0.0000000,37.2660000); //object(cunt_rockgp2_13) (33)
CreateDynamicObject(17031,719.5900300,-2528.6799300,-14.8500000,0.0000000,0.0000000,25.6020000); //object(cunt_rockgp2_13) (34)
CreateDynamicObject(17031,708.4199800,-2507.6499000,-18.3500000,0.0000000,0.0000000,25.5980000); //object(cunt_rockgp2_13) (35)
CreateDynamicObject(17031,698.0999800,-2494.2299800,-21.1900000,0.0000000,0.0000000,25.5980000); //object(cunt_rockgp2_13) (36)
CreateDynamicObject(17031,685.7600100,-2483.0800800,-22.7900000,0.0000000,0.0000000,36.7290000); //object(cunt_rockgp2_13) (37)
CreateDynamicObject(17031,665.5200200,-2463.5300300,-29.5200000,0.0000000,0.0000000,36.7270000); //object(cunt_rockgp2_13) (38)
CreateDynamicObject(17031,637.4099700,-2441.3400900,-31.3900000,0.0000000,0.0000000,47.8580000); //object(cunt_rockgp2_13) (39)
CreateDynamicObject(17031,613.1200000,-2417.5500500,-33.4300000,0.0000000,0.0000000,47.8560000); //object(cunt_rockgp2_13) (40)
CreateDynamicObject(17031,592.3100000,-2391.0400400,-39.3000000,0.0000000,0.0000000,47.8560000); //object(cunt_rockgp2_13) (41)
CreateDynamicObject(17031,531.0999800,-2324.6001000,-31.0400000,0.0000000,0.0000000,47.8560000); //object(cunt_rockgp2_13) (42)
CreateDynamicObject(17031,504.3800000,-2338.4199200,-31.0400000,0.0000000,0.0000000,136.9010000); //object(cunt_rockgp2_13) (43)
CreateDynamicObject(17031,488.3200100,-2348.2099600,-37.9400000,0.0000000,0.0000000,136.9010000); //object(cunt_rockgp2_13) (44)
CreateDynamicObject(17031,517.7500000,-2341.1298800,-35.9000000,0.0000000,0.0000000,170.2920000); //object(cunt_rockgp2_13) (45)
CreateDynamicObject(9516,574.5700100,-2631.8501000,14.9200000,0.0000000,0.0000000,265.1240000); //object(bigboxtmp17) (1)
CreateDynamicObject(17031,462.0300000,-2662.8501000,-5.2900000,0.0000000,0.0000000,270.9500000); //object(cunt_rockgp2_13) (46)
CreateDynamicObject(8650,457.6494100,-2645.8798800,13.4200000,0.0000000,0.0000000,357.8190000); //object(shbbyhswall06_lvs) (9)
CreateDynamicObject(8650,500.1400100,-2643.7600100,13.3800000,0.0000000,0.0000000,357.8190000); //object(shbbyhswall06_lvs) (10)
CreateDynamicObject(8650,558.9600200,-2646.3100600,13.1400000,0.0000000,0.0000000,357.8240000); //object(shbbyhswall06_lvs) (11)
CreateDynamicObject(8650,527.8900100,-2619.6899400,13.2600000,0.0000000,0.0000000,357.8190000); //object(shbbyhswall06_lvs) (12)
CreateDynamicObject(8650,527.0900300,-2640.8400900,13.2700000,0.0000000,0.0000000,357.8190000); //object(shbbyhswall06_lvs) (13)
CreateDynamicObject(8650,597.9899900,-2648.3200700,13.3200000,0.0000000,0.0000000,357.8190000); //object(shbbyhswall06_lvs) (14)
CreateDynamicObject(8650,559.8800000,-2621.9099100,13.1300000,0.0000000,0.0000000,357.8190000); //object(shbbyhswall06_lvs) (15)
CreateDynamicObject(8650,598.8800000,-2624.1999500,13.3300000,0.0000000,0.0000000,357.8190000); //object(shbbyhswall06_lvs) (16)
CreateDynamicObject(8650,644.4000200,-2630.1699200,11.6400000,0.0000000,0.0000000,357.0190000); //object(shbbyhswall06_lvs) (19)
CreateDynamicObject(8650,643.0999800,-2655.0800800,13.1400000,0.0000000,0.0000000,357.0170000); //object(shbbyhswall06_lvs) (20)
CreateDynamicObject(8650,674.7299800,-2662.0300300,13.1500000,0.0000000,0.0000000,357.0170000); //object(shbbyhswall06_lvs) (22)
CreateDynamicObject(8650,706.8700000,-2657.0200200,13.1500000,0.0000000,0.0000000,357.0190000); //object(shbbyhswall06_lvs) (23)
CreateDynamicObject(8650,739.6799900,-2635.5400400,13.1400000,0.0000000,0.0000000,357.0170000); //object(shbbyhswall06_lvs) (25)
CreateDynamicObject(8650,754.3400300,-2648.4699700,11.4700000,0.0000000,0.0000000,86.0620000); //object(shbbyhswall06_lvs) (26)
CreateDynamicObject(8650,675.0100100,-2656.7099600,11.6300000,0.0000000,0.0000000,357.0170000); //object(shbbyhswall06_lvs) (27)
CreateDynamicObject(622,723.0800200,-2599.0500500,9.5700000,0.0000000,0.0000000,0.0000000); //object(veg_palm03) (2)
CreateDynamicObject(622,703.7199700,-2559.6499000,3.4600000,0.0000000,0.0000000,44.5220000); //object(veg_palm03) (3)
CreateDynamicObject(622,620.1099900,-2590.2199700,8.6100000,0.0000000,0.0000000,0.0000000); //object(veg_palm03) (4)
CreateDynamicObject(622,575.3400300,-2587.3701200,7.3300000,0.0000000,0.0000000,0.0000000); //object(veg_palm03) (5)
CreateDynamicObject(622,528.2000100,-2584.5600600,6.2100000,0.0000000,0.0000000,0.0000000); //object(veg_palm03) (6)
CreateDynamicObject(622,488.1300000,-2582.9599600,6.2100000,0.0000000,0.0000000,0.0000000); //object(veg_palm03) (7)
CreateDynamicObject(622,450.5600000,-2581.5800800,6.4700000,0.0000000,0.0000000,0.0000000); //object(veg_palm03) (8)
CreateDynamicObject(622,413.9800100,-2667.3898900,7.4200000,0.0000000,0.0000000,144.6980000); //object(veg_palm03) (9)
CreateDynamicObject(622,417.2294900,-2594.6992200,9.0800000,0.0000000,0.0000000,33.3870000); //object(veg_palm03) (10)
CreateDynamicObject(622,397.5898400,-2637.3398400,6.5600000,0.0000000,0.0000000,89.0440000); //object(veg_palm03) (11)
CreateDynamicObject(622,397.5898400,-2637.3398400,6.5600000,0.0000000,0.0000000,89.0440000); //object(veg_palm03) (12)
CreateDynamicObject(622,673.8193400,-2591.1699200,7.2200000,0.0000000,0.0000000,0.0000000); //object(veg_palm03) (13)
CreateDynamicObject(621,725.1200000,-2666.6201200,12.6600000,0.0000000,0.0000000,0.0000000); //object(veg_palm02) (2)
CreateDynamicObject(621,683.7899800,-2664.8300800,12.6400000,0.0000000,0.0000000,0.0000000); //object(veg_palm02) (3)
CreateDynamicObject(621,646.6300000,-2662.7399900,12.6500000,0.0000000,0.0000000,0.0000000); //object(veg_palm02) (4)
CreateDynamicObject(621,606.5000000,-2651.1599100,12.5700000,0.0000000,0.0000000,0.0000000); //object(veg_palm02) (5)
CreateDynamicObject(621,591.8800000,-2658.5900900,12.6100000,0.0000000,0.0000000,0.0000000); //object(veg_palm02) (6)
CreateDynamicObject(621,550.0600000,-2651.8400900,12.6100000,0.0000000,0.0000000,0.0000000); //object(veg_palm02) (7)
CreateDynamicObject(621,508.1600000,-2649.1398900,12.4700000,0.0000000,0.0000000,0.0000000); //object(veg_palm02) (8)
CreateDynamicObject(621,487.6499900,-2643.9699700,12.4900000,0.0000000,0.0000000,0.0000000); //object(veg_palm02) (9)
CreateDynamicObject(615,632.1099900,-2650.0200200,12.5800000,0.0000000,0.0000000,0.0000000); //object(veg_tree3) (1)
CreateDynamicObject(615,436.1093800,-2641.1699200,12.2800000,0.0000000,0.0000000,0.0000000); //object(veg_tree3) (2)
CreateDynamicObject(615,568.6200000,-2618.5300300,12.3500000,0.0000000,0.0000000,0.0000000); //object(veg_tree3) (3)
CreateDynamicObject(615,710.9199800,-2623.9199200,12.5900000,0.0000000,0.0000000,0.0000000); //object(veg_tree3) (4)
CreateDynamicObject(615,463.6400100,-2606.1899400,12.2400000,0.0000000,0.0000000,0.0000000); //object(veg_tree3) (5)
CreateDynamicObject(870,430.8800000,-2631.8400900,12.5100000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (1)
CreateDynamicObject(870,437.2200000,-2649.8100600,12.5200000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (2)
CreateDynamicObject(870,452.6300000,-2643.7600100,12.5800000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (3)
CreateDynamicObject(870,444.9200100,-2632.6499000,12.5600000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (4)
CreateDynamicObject(870,429.7399900,-2647.8701200,12.5000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (5)
CreateDynamicObject(870,521.8100000,-2632.7199700,12.7600000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (6)
CreateDynamicObject(870,511.8900100,-2637.7500000,12.6400000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (7)
CreateDynamicObject(870,517.5800200,-2649.2399900,12.7100000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (8)
CreateDynamicObject(870,506.0400100,-2652.8898900,12.7400000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (9)
CreateDynamicObject(870,504.8900100,-2638.3999000,12.6500000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (10)
CreateDynamicObject(870,510.9500100,-2610.9799800,12.4700000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (11)
CreateDynamicObject(870,522.1300000,-2611.3999000,12.5700000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (12)
CreateDynamicObject(870,638.5100100,-2622.6599100,12.5800000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (13)
CreateDynamicObject(870,623.6599700,-2614.0500500,12.5500000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (14)
CreateDynamicObject(870,605.4299900,-2613.0400400,12.5400000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (15)
CreateDynamicObject(870,616.6400100,-2615.7600100,12.5700000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (16)
CreateDynamicObject(870,603.9899900,-2654.8701200,12.8300000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (17)
CreateDynamicObject(870,622.1300000,-2654.9499500,12.8500000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (18)
CreateDynamicObject(870,625.5399800,-2643.7500000,12.7900000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (19)
CreateDynamicObject(870,609.4699700,-2642.9599600,12.7700000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (20)
CreateDynamicObject(870,703.0499900,-2658.6398900,12.8500000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (21)
CreateDynamicObject(870,694.4099700,-2664.5200200,12.8700000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (22)
CreateDynamicObject(870,679.9000200,-2663.2900400,12.8800000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (23)
CreateDynamicObject(870,744.8300200,-2634.7900400,12.6000000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (24)
CreateDynamicObject(870,742.9099700,-2642.9599600,12.6400000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (25)
CreateDynamicObject(870,754.2899800,-2639.8200700,12.6200000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (26)
CreateDynamicObject(870,751.0100100,-2625.1899400,12.5500000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (27)
CreateDynamicObject(870,733.5800200,-2660.5100100,12.8800000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (28)
CreateDynamicObject(621,753.0791000,-2633.4394500,12.3500000,0.0000000,0.0000000,0.0000000); //object(veg_palm02) (12)
CreateDynamicObject(871,447.9299900,-2652.4199200,12.5900000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (1)
CreateDynamicObject(871,441.4400000,-2641.5100100,12.5800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (2)
CreateDynamicObject(871,452.4400000,-2634.4699700,12.6200000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (3)
CreateDynamicObject(871,475.2900100,-2632.1799300,12.7100000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (4)
CreateDynamicObject(871,465.0700100,-2647.4299300,12.8200000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (5)
CreateDynamicObject(871,481.8800000,-2649.7700200,12.8100000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (6)
CreateDynamicObject(871,482.5300000,-2639.4899900,12.7500000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (7)
CreateDynamicObject(871,516.0999800,-2640.2299800,12.6900000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (8)
CreateDynamicObject(871,512.5100100,-2653.6799300,12.7800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (9)
CreateDynamicObject(871,504.2900100,-2615.4699700,12.5500000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (10)
CreateDynamicObject(871,519.1900000,-2608.1398900,12.4800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (11)
CreateDynamicObject(871,491.2399900,-2608.1599100,12.4900000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (12)
CreateDynamicObject(871,472.3500100,-2604.6599100,12.5000000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (13)
CreateDynamicObject(871,536.3599900,-2613.2700200,12.6100000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (14)
CreateDynamicObject(871,552.7600100,-2610.5000000,12.5600000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (15)
CreateDynamicObject(871,557.2899800,-2631.7500000,12.7300000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (16)
CreateDynamicObject(871,555.4699700,-2643.7600100,12.8400000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (17)
CreateDynamicObject(871,538.3700000,-2650.4399400,12.9000000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (18)
CreateDynamicObject(871,585.4500100,-2612.5900900,12.6000000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (19)
CreateDynamicObject(871,574.7999900,-2613.5400400,12.5900000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (20)
CreateDynamicObject(871,590.8499800,-2622.4399400,12.6600000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (21)
CreateDynamicObject(871,565.5900300,-2652.7800300,12.8600000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (22)
CreateDynamicObject(871,566.3900100,-2634.3300800,12.7400000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (23)
CreateDynamicObject(871,594.1500200,-2650.1398900,12.8500000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (24)
CreateDynamicObject(871,603.9899900,-2645.9799800,12.8300000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (25)
CreateDynamicObject(871,614.8200100,-2650.6899400,12.8700000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (26)
CreateDynamicObject(871,616.2999900,-2657.9399400,12.9000000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (27)
CreateDynamicObject(871,631.8800000,-2659.9199200,12.9100000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (28)
CreateDynamicObject(871,638.1200000,-2646.0600600,12.8300000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (29)
CreateDynamicObject(871,636.6200000,-2629.2700200,12.6700000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (30)
CreateDynamicObject(871,625.7600100,-2615.6398900,12.6000000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (31)
CreateDynamicObject(871,611.2000100,-2612.8999000,12.5700000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (32)
CreateDynamicObject(871,660.0800200,-2622.4099100,12.8800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (33)
CreateDynamicObject(871,654.8200100,-2624.1799300,12.8800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (34)
CreateDynamicObject(871,666.7999900,-2623.7099600,12.8800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (35)
CreateDynamicObject(871,680.4799800,-2624.9199200,12.8700000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (36)
CreateDynamicObject(871,684.1300000,-2625.0000000,12.8700000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (37)
CreateDynamicObject(871,692.7600100,-2626.7700200,12.8600000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (38)
CreateDynamicObject(871,698.8400300,-2624.2299800,12.8700000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (39)
CreateDynamicObject(871,705.8200100,-2628.4199200,12.8700000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (40)
CreateDynamicObject(871,731.8300200,-2626.9399400,12.8800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (41)
CreateDynamicObject(871,723.9199800,-2625.2099600,12.8800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (42)
CreateDynamicObject(871,717.2700200,-2630.2700200,12.8800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (43)
CreateDynamicObject(871,710.9799800,-2628.0700700,12.8800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (44)
CreateDynamicObject(871,745.0100100,-2622.7500000,12.5800000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (45)
CreateDynamicObject(871,756.2800300,-2630.1599100,12.6200000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (46)
CreateDynamicObject(871,732.1699800,-2664.4799800,12.9300000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (47)
CreateDynamicObject(871,729.6200000,-2658.2600100,12.9000000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (48)
CreateDynamicObject(871,721.4400000,-2651.3200700,13.0100000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (49)
CreateDynamicObject(871,715.7999900,-2666.1298800,12.9500000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (50)
CreateDynamicObject(871,701.2100200,-2668.7900400,12.9300000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (51)
CreateDynamicObject(871,697.9799800,-2661.6899400,12.9000000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (52)
CreateDynamicObject(871,664.1300000,-2658.2500000,12.9100000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (53)
CreateDynamicObject(871,653.3300200,-2661.1101100,12.9200000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (54)
CreateDynamicObject(871,689.0900300,-2649.8000500,13.0100000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (55)
CreateDynamicObject(871,665.7500000,-2664.5900900,12.9400000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (56)
CreateDynamicObject(871,658.0000000,-2648.7900400,12.9900000,0.0000000,0.0000000,0.0000000); //object(veg_procfpatchwee) (57)
CreateDynamicObject(17031,757.1900000,-2595.1599100,-7.9200000,0.0000000,0.0000000,350.2690000); //object(cunt_rockgp2_13) (47)
CreateDynamicObject(869,730.8200100,-2624.4899900,13.0400000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (1)
CreateDynamicObject(869,692.1200000,-2623.2399900,13.0300000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (2)
CreateDynamicObject(869,667.2899800,-2620.5200200,13.0400000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (3)
CreateDynamicObject(869,653.5900300,-2620.8601100,13.0400000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (4)
CreateDynamicObject(869,631.2500000,-2618.8798800,12.7800000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (5)
CreateDynamicObject(869,576.5600000,-2614.0000000,12.7600000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (6)
CreateDynamicObject(869,586.9199800,-2614.6899400,12.7900000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (7)
CreateDynamicObject(869,568.9600200,-2648.3300800,12.9900000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (8)
CreateDynamicObject(869,581.2700200,-2653.8300800,13.0400000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (9)
CreateDynamicObject(869,548.8800000,-2643.6298800,13.0100000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (10)
CreateDynamicObject(869,498.8100000,-2606.0800800,12.6600000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (11)
CreateDynamicObject(869,477.0499900,-2639.5000000,12.9200000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (12)
CreateDynamicObject(869,493.1400100,-2643.0600600,12.9300000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (13)
CreateDynamicObject(869,436.7600100,-2635.3300800,12.7400000,0.0000000,0.0000000,0.0000000); //object(veg_pflowerswee) (14)
CreateDynamicObject(6295,738.5693400,-2590.6796900,31.9500000,0.0000000,0.0000000,0.0000000); //object(sanpedlithus_law2) (2)
CreateDynamicObject(2600,724.5999800,-2620.7500000,13.3600000,0.0000000,0.0000000,0.0000000); //object(cj_view_tele) (1)
CreateDynamicObject(2600,604.1900000,-2610.7700200,13.0600000,0.0000000,0.0000000,170.7800000); //object(cj_view_tele) (2)
CreateDynamicObject(2600,686.3691400,-2618.1201200,13.3600000,0.0000000,0.0000000,170.7770000); //object(cj_view_tele) (3)
CreateDynamicObject(2600,565.6699800,-2608.5400400,13.0700000,0.0000000,0.0000000,170.7770000); //object(cj_view_tele) (4)
CreateDynamicObject(2600,532.7800300,-2605.3400900,13.0400000,0.0000000,0.0000000,170.7770000); //object(cj_view_tele) (5)
CreateDynamicObject(2600,517.2000100,-2605.2800300,12.9500000,0.0000000,0.0000000,170.7770000); //object(cj_view_tele) (6)
CreateDynamicObject(2600,464.5100100,-2602.2600100,12.9800000,0.0000000,0.0000000,170.7770000); //object(cj_view_tele) (7)
CreateDynamicObject(2600,431.3299900,-2599.4499500,13.0300000,0.0000000,0.0000000,170.7770000); //object(cj_view_tele) (8)
CreateDynamicObject(1570,463.7500000,-2651.5200200,13.8900000,0.0000000,0.0000000,126.2570000); //object(cj_noodle_3) (1)
CreateDynamicObject(1570,613.0195300,-2661.0595700,13.9700000,0.0000000,0.0000000,126.2550000); //object(cj_noodle_3) (2)
CreateDynamicObject(1570,530.9091800,-2646.0293000,13.9300000,0.0000000,0.0000000,126.2550000); //object(cj_noodle_3) (3)
CreateDynamicObject(1568,496.4200100,-2603.3200700,12.1900000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (1)
CreateDynamicObject(1568,467.8900100,-2601.1799300,12.1900000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (2)
CreateDynamicObject(1568,455.5100100,-2600.5300300,12.2500000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (3)
CreateDynamicObject(1568,432.5600000,-2599.3501000,12.2500000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (4)
CreateDynamicObject(1568,466.7200000,-2625.2700200,12.3500000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (5)
CreateDynamicObject(1568,496.1400100,-2626.0500500,12.3400000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (6)
CreateDynamicObject(1568,520.0100100,-2629.5600600,12.3300000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (7)
CreateDynamicObject(1568,505.7200000,-2627.9899900,12.3400000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (8)
CreateDynamicObject(1568,523.0800200,-2617.0600600,12.3600000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (9)
CreateDynamicObject(1568,510.5700100,-2616.0300300,12.2600000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (10)
CreateDynamicObject(1568,538.6900000,-2621.8300800,12.3700000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (11)
CreateDynamicObject(1568,540.7000100,-2617.5100100,12.3400000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (12)
CreateDynamicObject(1568,549.6799900,-2635.6799300,12.5000000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (13)
CreateDynamicObject(1568,535.5900300,-2635.6599100,12.5300000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (14)
CreateDynamicObject(1568,571.1500200,-2646.8798800,12.5300000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (15)
CreateDynamicObject(1568,591.4500100,-2647.6101100,12.5600000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (16)
CreateDynamicObject(1568,593.2399900,-2625.0500500,12.3900000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (17)
CreateDynamicObject(1568,573.7100200,-2622.9899900,12.3700000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (18)
CreateDynamicObject(1568,628.5000000,-2623.1201200,12.3600000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (19)
CreateDynamicObject(1568,605.6099900,-2622.0100100,12.3500000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (20)
CreateDynamicObject(1568,605.5300300,-2635.2800300,12.4400000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (21)
CreateDynamicObject(1568,626.4199800,-2637.4199200,12.4500000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (22)
CreateDynamicObject(1568,735.3900100,-2646.1101100,12.7100000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (23)
CreateDynamicObject(1568,728.7100200,-2646.4399400,12.7000000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (24)
CreateDynamicObject(1568,714.5000000,-2645.2700200,12.7300000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (25)
CreateDynamicObject(1568,691.2199700,-2643.6499000,12.7200000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (26)
CreateDynamicObject(1568,701.3300200,-2644.4199200,12.6900000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (27)
CreateDynamicObject(1568,676.9500100,-2642.6201200,12.7200000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (28)
CreateDynamicObject(1568,669.4199800,-2642.2299800,12.7000000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (29)
CreateDynamicObject(1568,656.0499900,-2642.4599600,12.7300000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (30)
CreateDynamicObject(1568,644.7100200,-2640.8601100,12.7300000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (31)
CreateDynamicObject(1568,659.7500000,-2626.1001000,12.5900000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (32)
CreateDynamicObject(1568,672.6799900,-2628.4899900,12.5900000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (33)
CreateDynamicObject(1568,685.1699800,-2628.8000500,12.5800000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (34)
CreateDynamicObject(1568,699.3499800,-2630.6799300,12.5900000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (35)
CreateDynamicObject(1568,716.7199700,-2632.1999500,12.5900000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (36)
CreateDynamicObject(1568,737.3800000,-2632.2800300,12.5900000,0.0000000,0.0000000,0.0000000); //object(chinalamp_sf) (37)
CreateDynamicObject(642,711.6300000,-2661.4399400,14.0700000,0.0000000,0.0000000,0.0000000); //object(kb_canopy_test) (1)
CreateDynamicObject(1280,721.9899900,-2635.6999500,13.1300000,0.0000000,0.0000000,263.7120000); //object(parkbench1) (1)
CreateDynamicObject(1280,730.5800200,-2621.9899900,12.9900000,0.0000000,0.0000000,265.6540000); //object(parkbench1) (2)
CreateDynamicObject(1280,684.7600100,-2619.2199700,12.9800000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (3)
CreateDynamicObject(1280,660.0999800,-2617.4199200,12.9900000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (4)
CreateDynamicObject(1280,608.5100100,-2622.0500500,12.7500000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (5)
CreateDynamicObject(1280,588.5900300,-2626.0200200,12.8000000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (6)
CreateDynamicObject(1280,546.5399800,-2618.0800800,12.7400000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (7)
CreateDynamicObject(1280,514.8700000,-2616.4099100,12.6600000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (8)
CreateDynamicObject(1280,488.7900100,-2611.9699700,12.6400000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (9)
CreateDynamicObject(1280,471.2200000,-2611.1899400,12.6600000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (10)
CreateDynamicObject(1280,452.1000100,-2600.7199700,12.6500000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (11)
CreateDynamicObject(1280,444.3200100,-2657.0300300,12.7100000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (12)
CreateDynamicObject(1280,435.4700000,-2655.6799300,12.6700000,0.0000000,0.0000000,265.6490000); //object(parkbench1) (13)
CreateDynamicObject(1280,471.9299900,-2624.9299300,12.7400000,0.0000000,0.0000000,89.5030000); //object(parkbench1) (14)
CreateDynamicObject(1280,486.3299900,-2625.3200700,12.7300000,0.0000000,0.0000000,89.5000000); //object(parkbench1) (15)
CreateDynamicObject(1280,511.7800000,-2628.9899900,12.7400000,0.0000000,0.0000000,89.5000000); //object(parkbench1) (16)
CreateDynamicObject(1280,545.9600200,-2636.0000000,12.9100000,0.0000000,0.0000000,85.6120000); //object(parkbench1) (17)
CreateDynamicObject(1280,578.6200000,-2647.2099600,12.9200000,0.0000000,0.0000000,85.6110000); //object(parkbench1) (18)
CreateDynamicObject(1280,620.7899800,-2636.7099600,12.8500000,0.0000000,0.0000000,85.6110000); //object(parkbench1) (19)
CreateDynamicObject(1280,658.2999900,-2639.5800800,13.1300000,0.0000000,0.0000000,85.6110000); //object(parkbench1) (20)
CreateDynamicObject(1280,689.7600100,-2641.7900400,13.1200000,0.0000000,0.0000000,85.6110000); //object(parkbench1) (21)
CreateDynamicObject(1280,721.6500200,-2643.7900400,13.1300000,0.0000000,0.0000000,85.6110000); //object(parkbench1) (22)
CreateDynamicObject(1432,483.7399900,-2635.1899400,12.4300000,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (1)
CreateDynamicObject(1432,573.7700200,-2655.4899900,12.5800000,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (2)
CreateDynamicObject(1432,657.9699700,-2661.2299800,12.6400000,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (3)
CreateDynamicObject(1432,723.7000100,-2669.4499500,12.6700000,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (4)
CreateDynamicObject(1646,712.9299900,-2662.2299800,12.9800000,0.0000000,0.0000000,0.0000000); //object(lounge_towel_up) (1)
CreateDynamicObject(1646,671.9199800,-2658.2399900,12.9600000,0.0000000,0.0000000,315.4780000); //object(lounge_towel_up) (2)
CreateDynamicObject(1646,670.9600200,-2657.3200700,12.9600000,0.0000000,0.0000000,315.4720000); //object(lounge_towel_up) (3)
CreateDynamicObject(1646,608.3100000,-2610.9499500,12.6200000,0.0000000,0.0000000,155.8230000); //object(lounge_towel_up) (4)
CreateDynamicObject(1646,576.8200100,-2658.1001000,12.9300000,0.0000000,0.0000000,155.8190000); //object(lounge_towel_up) (5)
CreateDynamicObject(1646,578.2399900,-2658.5000000,12.9300000,0.0000000,0.0000000,155.8190000); //object(lounge_towel_up) (6)
CreateDynamicObject(1646,452.0700100,-2625.5100100,12.5900000,0.0000000,0.0000000,222.6030000); //object(lounge_towel_up) (7)
CreateDynamicObject(1646,449.2000100,-2625.5900900,12.5900000,0.0000000,0.0000000,222.5990000); //object(lounge_towel_up) (8)
CreateDynamicObject(1255,447.0000000,-2626.0200200,12.8300000,0.0000000,0.0000000,133.5660000); //object(lounger) (3)
CreateDynamicObject(1255,476.8200100,-2651.5500500,13.1200000,0.0000000,0.0000000,133.5660000); //object(lounger) (4)
CreateDynamicObject(1255,478.0199900,-2650.9099100,13.1100000,0.0000000,0.0000000,133.5660000); //object(lounger) (5)
CreateDynamicObject(1255,522.6400100,-2647.8300800,13.2000000,0.0000000,0.0000000,133.5660000); //object(lounger) (6)
CreateDynamicObject(1255,548.1699800,-2656.5800800,13.2100000,0.0000000,0.0000000,133.5660000); //object(lounger) (7)
CreateDynamicObject(1255,557.4099700,-2608.9299300,12.8800000,0.0000000,0.0000000,133.5660000); //object(lounger) (8)
CreateDynamicObject(1255,555.9899900,-2610.6001000,12.8900000,0.0000000,0.0000000,133.5660000); //object(lounger) (9)
CreateDynamicObject(1255,580.5600000,-2658.3501000,13.1600000,0.0000000,0.0000000,133.5660000); //object(lounger) (10)
CreateDynamicObject(1255,610.9400000,-2610.5500500,12.8500000,0.0000000,0.0000000,133.5660000); //object(lounger) (11)
CreateDynamicObject(1255,639.4699700,-2660.4599600,13.2000000,0.0000000,0.0000000,133.5660000); //object(lounger) (12)
CreateDynamicObject(1255,637.5700100,-2661.4699700,13.2000000,0.0000000,0.0000000,133.5660000); //object(lounger) (13)
CreateDynamicObject(1255,671.5300300,-2660.9499500,13.2100000,0.0000000,0.0000000,133.5660000); //object(lounger) (14)
CreateDynamicObject(1255,704.2600100,-2664.8501000,13.2300000,0.0000000,0.0000000,133.5660000); //object(lounger) (15)
CreateDynamicObject(1255,702.7899800,-2666.7700200,13.2100000,0.0000000,0.0000000,133.5660000); //object(lounger) (16)
CreateDynamicObject(1255,710.1900000,-2662.1499000,13.2200000,0.0000000,0.0000000,256.0030000); //object(lounger) (17)
CreateDynamicObject(642,703.9500100,-2666.0600600,14.0900000,0.0000000,0.0000000,0.0000000); //object(kb_canopy_test) (2)
CreateDynamicObject(642,670.3400300,-2659.4199200,14.0500000,0.0000000,0.0000000,0.0000000); //object(kb_canopy_test) (3)
CreateDynamicObject(642,638.0499900,-2660.3100600,14.0500000,0.0000000,0.0000000,0.0000000); //object(kb_canopy_test) (4)
CreateDynamicObject(642,609.5700100,-2611.7500000,13.7000000,0.0000000,0.0000000,0.0000000); //object(kb_canopy_test) (5)
CreateDynamicObject(642,578.9500100,-2656.9099100,14.0000000,0.0000000,0.0000000,0.0000000); //object(kb_canopy_test) (6)
CreateDynamicObject(642,555.3900100,-2609.3601100,13.7400000,0.0000000,0.0000000,0.0000000); //object(kb_canopy_test) (7)
CreateDynamicObject(642,521.8200100,-2649.2299800,14.0500000,0.0000000,0.0000000,0.0000000); //object(kb_canopy_test) (8)
CreateDynamicObject(642,476.8800000,-2650.4199200,13.9600000,0.0000000,0.0000000,0.0000000); //object(kb_canopy_test) (9)
CreateDynamicObject(642,450.8400000,-2626.9099100,13.6800000,0.0000000,0.0000000,0.0000000); //object(kb_canopy_test) (10)
CreateDynamicObject(642,603.7299800,-2562.6101100,4.4400000,348.3440000,358.0150000,359.5990000); //object(kb_canopy_test) (11)
CreateDynamicObject(642,434.7900100,-2578.5600600,7.0400000,348.3440000,358.0110000,359.5940000); //object(kb_canopy_test) (12)
CreateDynamicObject(642,502.2890600,-2574.6201200,4.5800000,348.3440000,358.0110000,359.5940000); //object(kb_canopy_test) (13)
CreateDynamicObject(1461,494.1900000,-2602.7299800,12.9900000,0.0000000,0.0000000,172.2580000); //object(dyn_life_p) (1)
CreateDynamicObject(1461,595.8100000,-2609.4399400,13.0800000,0.0000000,0.0000000,172.2550000); //object(dyn_life_p) (2)
CreateDynamicObject(1461,672.3100000,-2614.1799300,13.7000000,0.0000000,0.0000000,172.2550000); //object(dyn_life_p) (3)
CreateDynamicObject(1461,722.2899800,-2617.1899400,13.8700000,0.0000000,0.0000000,172.2550000); //object(dyn_life_p) (4)
CreateDynamicObject(953,398.4700000,-2572.3100600,0.0000000,0.0000000,0.0000000,0.0000000); //object(cj_oyster) (1)
CreateDynamicObject(953,497.1000100,-2555.7099600,0.0000000,0.0000000,0.0000000,0.0000000); //object(cj_oyster) (2)
CreateDynamicObject(953,653.8700000,-2554.3601100,0.0000000,0.0000000,0.0000000,0.0000000); //object(cj_oyster) (3)
CreateDynamicObject(953,703.5900300,-2525.9899900,-1.5300000,0.0000000,0.0000000,0.0000000); //object(cj_oyster) (4)
CreateDynamicObject(903,522.1599700,-2459.2099600,-12.4000000,0.0000000,0.0000000,0.0000000); //object(seaweed) (1)
CreateDynamicObject(903,411.7399900,-2513.3999000,-10.8400000,0.0000000,0.0000000,0.0000000); //object(seaweed) (2)
CreateDynamicObject(903,325.4200100,-2539.6899400,-11.1400000,0.0000000,0.0000000,0.0000000); //object(seaweed) (3)
CreateDynamicObject(903,303.3400000,-2631.8601100,-12.0800000,0.0000000,0.0000000,0.0000000); //object(seaweed) (4)
CreateDynamicObject(903,812.2999900,-2545.1398900,-7.3700000,0.0000000,0.0000000,0.0000000); //object(seaweed) (5)
CreateDynamicObject(903,399.1499900,-2732.1101100,-10.5900000,0.0000000,0.0000000,0.0000000); //object(seaweed) (6)
CreateDynamicObject(903,360.2900100,-2719.0200200,-8.5800000,0.0000000,0.0000000,0.0000000); //object(seaweed) (7)
CreateDynamicObject(1598,435.9100000,-2577.7199700,5.8300000,0.0000000,0.0000000,0.0000000); //object(beachball) (1)
CreateDynamicObject(1598,511.5499900,-2646.8000500,12.7600000,0.0000000,0.0000000,0.0000000); //object(beachball) (2)
CreateDynamicObject(1598,594.8400300,-2623.0700700,12.6800000,0.0000000,0.0000000,0.0000000); //object(beachball) (3)
CreateDynamicObject(1598,697.8499800,-2648.2299800,12.9000000,0.0000000,0.0000000,0.0000000); //object(beachball) (5)
CreateDynamicObject(1598,574.5900300,-2555.0700700,0.0000000,0.0000000,0.0000000,0.0000000); //object(beachball) (6)
CreateDynamicObject(1637,545.9500100,-2569.2099600,2.6400000,0.0000000,0.0000000,100.1760000); //object(od_pat_hutb) (1)
CreateDynamicObject(1637,681.8100000,-2558.5000000,4.1600000,0.0000000,0.0000000,115.7240000); //object(od_pat_hutb) (2)
CreateDynamicObject(1637,410.9500100,-2596.2199700,8.0300000,0.0000000,0.0000000,149.1110000); //object(od_pat_hutb) (3)
CreateDynamicObject(1641,434.3599900,-2576.4799800,5.1800000,342.0970000,0.0000000,0.0000000); //object(beachtowel03) (1)
CreateDynamicObject(1641,434.3593800,-2576.4794900,5.1800000,342.0920000,0.0000000,0.0000000); //object(beachtowel03) (2)
CreateDynamicObject(1641,503.5000000,-2574.7700200,3.5100000,342.0920000,0.0000000,0.0000000); //object(beachtowel03) (3)
CreateDynamicObject(1641,605.0996100,-2562.6201200,3.3800000,351.8540000,354.1060000,359.1600000); //object(beachtowel03) (5)
CreateDynamicObject(1640,660.3134800,-2658.1591800,12.4701100,0.0000000,0.0000000,0.0000000); //object(beachtowel04) (1)
CreateDynamicObject(2404,607.1500200,-2560.0500500,4.2600000,0.0000000,0.0000000,222.6120000); //object(cj_surf_board) (1)
CreateDynamicObject(2404,444.7999900,-2627.1201200,13.5000000,0.0000000,0.0000000,144.6960000); //object(cj_surf_board) (2)
CreateDynamicObject(2404,432.4492200,-2577.9892600,6.7400000,0.0000000,0.0000000,144.6950000); //object(cj_surf_board) (3)
CreateDynamicObject(1643,474.3800000,-2650.5200200,12.5400000,0.0000000,0.0000000,0.0000000); //object(beachtowel01) (1)
CreateDynamicObject(2405,482.2000100,-2624.2099600,13.5700000,0.0000000,0.0000000,0.0000000); //object(cj_surf_board2) (1)
CreateDynamicObject(2405,649.0600000,-2571.2700200,3.9000000,0.0000000,0.0000000,155.8290000); //object(cj_surf_board2) (2)
CreateDynamicObject(2405,725.2199700,-2664.9499500,13.9000000,0.0000000,0.0000000,155.8250000); //object(cj_surf_board2) (3)
CreateDynamicObject(2405,646.9099700,-2661.1001000,13.9000000,0.0000000,0.0000000,155.8250000); //object(cj_surf_board2) (4)
CreateDynamicObject(902,620.9299900,-2561.0600600,2.8300000,348.3640000,3.9690000,0.8020000); //object(starfish) (1)
CreateDynamicObject(902,484.7900100,-2554.6101100,-2.2800000,348.3600000,3.9660000,0.7970000); //object(starfish) (2)
CreateDynamicObject(902,372.5400100,-2587.7900400,-1.1800000,348.3600000,3.9660000,0.7970000); //object(starfish) (3)
CreateDynamicObject(1610,439.1600000,-2563.4899900,0.9700000,334.7300000,0.0000000,0.0000000); //object(sandcastle1) (1)
CreateDynamicObject(1610,438.4100000,-2563.6101100,1.0200000,334.7260000,0.0000000,0.0000000); //object(sandcastle1) (2)
CreateDynamicObject(1610,438.6499900,-2563.1298800,0.8600000,334.7260000,0.0000000,0.0000000); //object(sandcastle1) (3)
CreateDynamicObject(1610,523.9500100,-2564.5400400,0.3700000,334.7260000,0.0000000,0.0000000); //object(sandcastle1) (4)
CreateDynamicObject(1610,523.2000100,-2564.6101100,0.4000000,334.7260000,0.0000000,0.0000000); //object(sandcastle1) (5)
CreateDynamicObject(1610,694.1799900,-2540.0400400,0.4200000,334.7260000,0.0000000,0.0000000); //object(sandcastle1) (6)
CreateDynamicObject(1610,693.1799900,-2540.1499000,0.4500000,334.7260000,0.0000000,0.0000000); //object(sandcastle1) (7)
CreateDynamicObject(1611,698.6799900,-2530.3898900,0.2800000,0.0000000,0.0000000,0.0000000); //object(sandcastle2) (1)
CreateDynamicObject(1611,680.2199700,-2545.5200200,1.3700000,0.0000000,0.0000000,0.0000000); //object(sandcastle2) (2)
CreateDynamicObject(1611,620.9000200,-2551.3601100,0.9500000,0.0000000,0.0000000,0.0000000); //object(sandcastle2) (3)
CreateDynamicObject(1611,545.8599900,-2561.8100600,0.3500000,0.0000000,0.0000000,0.0000000); //object(sandcastle2) (4)
CreateDynamicObject(1611,466.3100000,-2563.6899400,0.5300000,0.0000000,0.0000000,0.0000000); //object(sandcastle2) (5)
CreateDynamicObject(1611,437.0900000,-2563.4099100,0.9800000,0.0000000,0.0000000,0.0000000); //object(sandcastle2) (6)
CreateDynamicObject(1609,385.8700000,-2578.8501000,0.6400000,13.2180000,346.0150000,240.8230000); //object(turtle) (1)
CreateDynamicObject(9237,401.9700000,-2615.6499000,13.0600000,0.0000000,0.0000000,0.0000000); //object(lighhouse_sfn) (1)
CreateDynamicObject(9833,540.9000200,-2647.7500000,14.7300000,0.0000000,0.0000000,0.0000000); //object(fountain_sfw) (1)
CreateDynamicObject(9833,614.3800000,-2650.8000500,14.2800000,0.0000000,0.0000000,0.0000000); //object(fountain_sfw) (2)
CreateDynamicObject(8874,397.0400100,-2609.6101100,13.6300000,346.4650000,354.0010000,180.5010000); //object(vgsecnstrct13) (1)
CreateDynamicObject(8874,397.0390600,-2609.6093700,13.6300000,346.4590000,353.9960000,180.5000000); //object(vgsecnstrct13) (2)
CreateDynamicObject(8874,394.8200100,-2617.5100100,13.6300000,346.4590000,353.9960000,247.2840000); //object(vgsecnstrct13) (3)
CreateDynamicObject(8874,399.0400100,-2623.9699700,13.6300000,346.4540000,353.9960000,302.9330000); //object(vgsecnstrct13) (4)
CreateDynamicObject(8874,407.3800000,-2621.5600600,13.6300000,346.4540000,353.9960000,9.7150000); //object(vgsecnstrct13) (5)
CreateDynamicObject(8874,409.2000100,-2613.5700700,13.6300000,346.4540000,353.9960000,65.3650000); //object(vgsecnstrct13) (6)
CreateDynamicObject(8874,409.1992200,-2613.5693400,13.6300000,346.4540000,353.9960000,65.3630000); //object(vgsecnstrct13) (7)
CreateDynamicObject(8874,405.7399900,-2608.4199200,13.6300000,346.4540000,353.9960000,109.8860000); //object(vgsecnstrct13) (8)
CreateDynamicObject(8874,740.8400300,-2586.5800800,50.6200000,0.0000000,0.0000000,115.1260000); //object(vgsecnstrct13) (10)
CreateDynamicObject(8874,740.8398400,-2586.5800800,50.6200000,0.0000000,0.0000000,115.1260000); //object(vgsecnstrct13) (11)
CreateDynamicObject(8874,740.8398400,-2586.5800800,50.6200000,0.0000000,0.0000000,115.1260000); //object(vgsecnstrct13) (12)
CreateDynamicObject(8874,732.4400000,-2594.1101100,50.6200000,0.0000000,0.0000000,248.6930000); //object(vgsecnstrct13) (13)
CreateDynamicObject(8874,732.4394500,-2594.1093700,50.6200000,0.0000000,0.0000000,248.6920000); //object(vgsecnstrct13) (14)
CreateDynamicObject(8874,736.3499800,-2598.6298800,50.6200000,0.0000000,0.0000000,326.6060000); //object(vgsecnstrct13) (15)
CreateDynamicObject(8874,736.3496100,-2598.6298800,50.6200000,0.0000000,0.0000000,326.6020000); //object(vgsecnstrct13) (16)
CreateDynamicObject(8874,741.5600000,-2595.4599600,50.6200000,0.0000000,0.0000000,359.9930000); //object(vgsecnstrct13) (17)
CreateDynamicObject(8874,741.5595700,-2595.4599600,50.6200000,0.0000000,0.0000000,359.9890000); //object(vgsecnstrct13) (18)
CreateDynamicObject(8874,741.5595700,-2595.4599600,50.6200000,0.0000000,0.0000000,359.9890000); //object(vgsecnstrct13) (19)
CreateDynamicObject(8874,744.3800000,-2589.9499500,50.6200000,0.0000000,0.0000000,77.9030000); //object(vgsecnstrct13) (20)
CreateDynamicObject(17068,691.5499900,-2535.0500500,0.8600000,0.0000000,0.0000000,204.1710000); //object(xjetty01) (1)
CreateDynamicObject(17068,682.5300300,-2514.9599600,0.8500000,0.0000000,0.0000000,204.1700000); //object(xjetty01) (2)
CreateDynamicObject(1461,686.2199700,-2524.9099100,1.8500000,0.0000000,0.0000000,111.3060000); //object(dyn_life_p) (5)
CreateDynamicObject(1461,684.2399900,-2520.4099100,1.8500000,0.0000000,0.0000000,111.3020000); //object(dyn_life_p) (6)
CreateDynamicObject(8876,735.3400300,-2587.3898900,50.5900000,0.0000000,0.0000000,324.6640000); //object(vgsecnstrct15) (1)
CreateDynamicObject(8876,735.3398400,-2587.3896500,50.5900000,0.0000000,0.0000000,324.6620000); //object(vgsecnstrct15) (2)
CreateDynamicObject(8876,735.3398400,-2587.3896500,50.5900000,0.0000000,0.0000000,324.6620000); //object(vgsecnstrct15) (3)
CreateDynamicObject(8650,429.0799900,-2612.3501000,12.6000000,0.0000000,0.0000000,176.6300000); //object(shbbyhswall06_lvs) (28)
//========================Calles mejoradas LS
CreateDynamicObject(9907,1422.8499800,-991.6699800,121.6700000,0.0000000,0.0000000,88.9770000); //object(monolith_sfe) (1)
CreateDynamicObject(5731,1097.4799800,-1865.3900100,15.1600000,0.0000000,0.0000000,269.0430000); //object(melblok05_lawn) (1)
CreateDynamicObject(5731,1149.9100300,-1866.3599900,15.1600000,0.0000000,0.0000000,269.0390000); //object(melblok05_lawn) (2)
CreateDynamicObject(5729,1232.3798800,-1869.4697300,16.1500000,0.0000000,0.0000000,90.7970000); //object(melblok02_lawn) (2)
CreateDynamicObject(3632,1204.1700400,-1860.7199700,13.0200000,0.0000000,0.0000000,0.0000000); //object(imoildrum_las) (1)
CreateDynamicObject(3865,1198.6800500,-1857.2700200,16.0500000,0.0000000,0.0000000,272.8990000); //object(concpipe_sfxrf) (1)
CreateDynamicObject(3567,1196.9899900,-1857.4100300,13.2300000,0.0000000,0.0000000,270.8910000); //object(lasnfltrail) (1)
CreateDynamicObject(3632,1203.2299800,-1860.8199500,13.0200000,0.0000000,0.0000000,0.0000000); //object(imoildrum_las) (2)
CreateDynamicObject(3515,1209.8399700,-1860.5799600,10.1800000,350.2810000,0.0000000,0.0000000); //object(vgsfountain) (1)
CreateDynamicObject(1423,1216.8900100,-1858.9799800,13.2600000,0.0000000,0.0000000,335.7950000); //object(dyn_roadbarrier_4) (1)
CreateDynamicObject(1423,1214.4200400,-1857.8800000,13.2600000,0.0000000,0.0000000,335.7920000); //object(dyn_roadbarrier_4) (2)
CreateDynamicObject(1423,1211.9200400,-1856.5999800,13.0900000,0.0000000,0.0000000,335.7920000); //object(dyn_roadbarrier_4) (3)
CreateDynamicObject(1423,1209.3499800,-1854.7600100,13.0900000,0.0000000,0.0000000,313.5300000); //object(dyn_roadbarrier_4) (4)
CreateDynamicObject(1423,1206.6300000,-1853.2399900,13.0900000,0.0000000,0.0000000,346.3870000); //object(dyn_roadbarrier_4) (5)
CreateDynamicObject(1423,1203.3199500,-1852.8700000,13.1000000,0.0000000,0.0000000,357.5130000); //object(dyn_roadbarrier_4) (6)
CreateDynamicObject(1423,1199.8800000,-1852.8499800,13.1000000,0.0000000,0.0000000,357.5120000); //object(dyn_roadbarrier_4) (7)
CreateDynamicObject(1423,1196.2500000,-1852.7900400,13.1100000,0.0000000,0.0000000,1.3990000); //object(dyn_roadbarrier_4) (8)
CreateDynamicObject(1423,1192.9300500,-1852.8900100,13.1100000,0.0000000,0.0000000,1.3950000); //object(dyn_roadbarrier_4) (9)
CreateDynamicObject(1423,1189.9399400,-1853.1999500,13.1100000,0.0000000,0.0000000,15.0020000); //object(dyn_roadbarrier_4) (10)
CreateDynamicObject(1423,1187.3000500,-1854.3499800,13.1100000,0.0000000,0.0000000,32.4970000); //object(dyn_roadbarrier_4) (11)
CreateDynamicObject(1423,1184.8000500,-1856.2299800,13.1100000,0.0000000,0.0000000,43.6230000); //object(dyn_roadbarrier_4) (12)
CreateDynamicObject(1423,1182.4599600,-1858.5100100,13.2700000,0.0000000,0.0000000,43.6230000); //object(dyn_roadbarrier_4) (13)
CreateDynamicObject(1423,1180.3800000,-1860.4799800,13.2600000,0.0000000,0.0000000,32.4890000); //object(dyn_roadbarrier_4) (14)
CreateDynamicObject(1425,1219.5999800,-1858.8599900,13.0000000,0.0000000,0.0000000,100.6410000); //object(dyn_roadbarrier_3) (1)
CreateDynamicObject(1427,1217.3000500,-1856.5000000,12.9300000,0.0000000,0.0000000,282.0860000); //object(cj_roadbarrier) (1)
CreateDynamicObject(1427,1215.3599900,-1854.7399900,12.9300000,0.0000000,0.0000000,282.0850000); //object(cj_roadbarrier) (2)
CreateDynamicObject(1427,1212.8800000,-1853.4100300,12.9300000,0.0000000,0.0000000,282.0850000); //object(cj_roadbarrier) (3)
CreateDynamicObject(1427,1184.1099900,-1853.0600600,12.9500000,0.0000000,0.0000000,256.4690000); //object(cj_roadbarrier) (4)
CreateDynamicObject(1427,1181.9300500,-1854.4399400,12.9500000,0.0000000,0.0000000,256.4650000); //object(cj_roadbarrier) (5)
CreateDynamicObject(1427,1179.7700200,-1855.9000200,12.9500000,0.0000000,0.0000000,256.4650000); //object(cj_roadbarrier) (6)
CreateDynamicObject(1303,1206.1300000,-1860.7900400,13.0300000,0.0000000,0.0000000,0.0000000); //object(dyn_quarryrock03) (1)
CreateDynamicObject(1303,1206.9799800,-1859.3100600,12.2300000,358.2150000,23.3390000,0.7700000); //object(dyn_quarryrock03) (2)
CreateDynamicObject(1303,1208.0000000,-1857.8000500,12.5900000,358.2150000,23.3350000,112.0750000); //object(dyn_quarryrock03) (3)
CreateDynamicObject(1303,1208.9399400,-1857.3599900,11.9700000,358.2090000,23.3290000,112.0720000); //object(dyn_quarryrock03) (4)
CreateDynamicObject(1303,1210.1999500,-1857.2299800,12.5000000,358.2090000,23.3290000,112.0720000); //object(dyn_quarryrock03) (5)
CreateDynamicObject(1303,1210.8800000,-1858.4499500,12.5000000,358.2090000,23.3290000,67.5490000); //object(dyn_quarryrock03) (6)
CreateDynamicObject(1303,1212.1500200,-1858.8399700,12.8600000,358.2090000,23.3240000,349.6300000); //object(dyn_quarryrock03) (7)
CreateDynamicObject(1303,1213.8499800,-1859.3399700,12.4200000,358.2090000,23.3240000,249.4530000); //object(dyn_quarryrock03) (8)
CreateDynamicObject(1303,1215.1400100,-1860.0300300,11.9800000,358.2090000,23.3240000,316.2340000); //object(dyn_quarryrock03) (9)
CreateDynamicObject(1303,1216.0300300,-1860.4699700,12.3300000,358.2090000,23.3240000,316.2300000); //object(dyn_quarryrock03) (10)
CreateDynamicObject(1303,1210.1700400,-1860.1500200,12.0600000,358.2090000,23.3240000,349.6290000); //object(dyn_quarryrock03) (11)
CreateDynamicObject(1303,1208.5100100,-1859.2900400,12.0600000,358.2090000,23.3240000,349.6290000); //object(dyn_quarryrock03) (12)
CreateDynamicObject(1305,1208.2500000,-1860.9599600,11.9900000,0.0000000,0.0000000,0.0000000); //object(dyn_quarryrock01) (1)
CreateDynamicObject(10984,1209.1999500,-1857.3000500,11.4100000,0.0000000,0.0000000,0.0000000); //object(rubbled01_sfs) (1)
CreateDynamicObject(10984,1211.5200200,-1860.0200200,11.5900000,0.0000000,0.0000000,0.0000000); //object(rubbled01_sfs) (2)
CreateDynamicObject(807,1213.3100600,-1854.7399900,12.6200000,0.0000000,0.0000000,0.0000000); //object(p_rubble) (1)
CreateDynamicObject(807,1217.9699700,-1857.9799800,12.7900000,0.0000000,0.0000000,0.0000000); //object(p_rubble) (2)
CreateDynamicObject(807,1204.5500500,-1859.0999800,12.7900000,0.0000000,0.0000000,0.0000000); //object(p_rubble) (3)
CreateDynamicObject(1305,1207.4492200,-1855.4599600,11.2900000,0.0000000,0.0000000,0.0000000); //object(dyn_quarryrock01) (2)
CreateDynamicObject(1305,1210.2399900,-1860.9200400,11.5500000,0.0000000,0.0000000,0.0000000); //object(dyn_quarryrock01) (3)
CreateDynamicObject(1305,1211.8100600,-1860.6600300,11.2800000,0.0000000,0.0000000,0.0000000); //object(dyn_quarryrock01) (4)
CreateDynamicObject(8877,1185.6800500,-1858.8599900,18.6400000,0.0000000,0.0000000,170.7800000); //object(vgsecnstrct10) (1)
CreateDynamicObject(3675,1209.6700400,-1862.6600300,7.8900000,18.0610000,180.0000000,180.0000000); //object(laxrf_refinerypipe) (1)
CreateDynamicObject(3675,1209.1600300,-1861.5300300,8.9600000,16.5350000,155.5980000,187.3500000); //object(laxrf_refinerypipe) (2)
CreateDynamicObject(4888,1235.0000000,-1888.8800000,3.6900000,0.0000000,0.0000000,0.0000000); //object(dwntwnbit3_las) (1)
CreateDynamicObject(3829,1372.7099600,-1849.7600100,16.1200000,0.0000000,0.0000000,181.9100000); //object(box_hse_04_sfxrf) (1)
CreateDynamicObject(3830,1372.4300500,-1838.3399700,17.0300000,0.0000000,0.0000000,181.9100000); //object(box_hse_08_sfxrf) (1)
CreateDynamicObject(3842,1372.3700000,-1828.2199700,17.1400000,0.0000000,0.0000000,181.8140000); //object(box_hse_14_sfxrf) (1)
CreateDynamicObject(3660,1351.5400400,-1834.4300500,14.5100000,0.0000000,0.0000000,90.9890000); //object(lasairfbed_las) (1)
CreateDynamicObject(3522,1353.5600600,-1835.1300000,12.6000000,0.0000000,0.0000000,0.0000000); //object(vgsn_flwbdcrb) (1)
CreateDynamicObject(3522,1350.2600100,-1835.1099900,12.6000000,0.0000000,0.0000000,181.9100000); //object(vgsn_flwbdcrb) (2)
CreateDynamicObject(3522,1365.6600300,-1839.8199500,12.5900000,0.0000000,0.0000000,181.9060000); //object(vgsn_flwbdcrb) (3)
CreateDynamicObject(3522,1366.3299600,-1848.0899700,12.5600000,0.0000000,0.0000000,181.9060000); //object(vgsn_flwbdcrb) (4)
CreateDynamicObject(3522,1365.9499500,-1829.3900100,12.5900000,0.0000000,0.0000000,181.9060000); //object(vgsn_flwbdcrb) (5)
CreateDynamicObject(9833,1351.3199500,-1835.2199700,10.1000000,0.0000000,0.0000000,337.7390000); //object(fountain_sfw) (1)
CreateDynamicObject(681,1353.5100100,-1835.2399900,12.3900000,0.0000000,0.0000000,326.6080000); //object(sm_des_josh_sm2) (1)
CreateDynamicObject(681,1350.3499800,-1833.5100100,12.3900000,0.0000000,0.0000000,66.7830000); //object(sm_des_josh_sm2) (2)
CreateDynamicObject(681,1350.5699500,-1836.3599900,12.3900000,0.0000000,0.0000000,144.6950000); //object(sm_des_josh_sm2) (3)
CreateDynamicObject(681,1365.7600100,-1828.0799600,12.3900000,0.0000000,0.0000000,200.3430000); //object(sm_des_josh_sm2) (4)
CreateDynamicObject(681,1366.2900400,-1831.0000000,12.3900000,0.0000000,0.0000000,122.4270000); //object(sm_des_josh_sm2) (5)
CreateDynamicObject(681,1365.7900400,-1839.1300000,12.3900000,0.0000000,0.0000000,122.4260000); //object(sm_des_josh_sm2) (6)
CreateDynamicObject(681,1365.8299600,-1841.6099900,12.3900000,0.0000000,0.0000000,178.0790000); //object(sm_des_josh_sm2) (7)
CreateDynamicObject(681,1366.0100100,-1846.4000200,12.3900000,0.0000000,0.0000000,255.9920000); //object(sm_des_josh_sm2) (8)
CreateDynamicObject(681,1366.1200000,-1849.3100600,12.3900000,0.0000000,0.0000000,311.6400000); //object(sm_des_josh_sm2) (9)
CreateDynamicObject(738,1342.4200400,-1837.2600100,12.8200000,0.0000000,0.0000000,1.9760000); //object(aw_streettree2) (1)
CreateDynamicObject(738,1342.2099600,-1824.0899700,12.8200000,0.0000000,0.0000000,1.4920000); //object(aw_streettree2) (2)
CreateDynamicObject(1280,1364.6300000,-1839.7600100,12.9800000,0.0000000,0.0000000,0.0000000); //object(parkbench1) (1)
CreateDynamicObject(1280,1365.0100100,-1847.7700200,12.9800000,0.0000000,0.0000000,0.0000000); //object(parkbench1) (2)
CreateDynamicObject(1280,1364.8499800,-1829.7800300,12.9800000,0.0000000,0.0000000,0.0000000); //object(parkbench1) (3)
CreateDynamicObject(1280,1350.2500000,-1829.0799600,12.9800000,0.0000000,0.0000000,0.0000000); //object(parkbench1) (4)
CreateDynamicObject(1280,1350.4399400,-1841.5600600,12.9800000,0.0000000,0.0000000,0.0000000); //object(parkbench1) (5)
CreateDynamicObject(1280,1342.1800500,-1830.3599900,12.9700000,0.0000000,0.0000000,181.9100000); //object(parkbench1) (6)
CreateDynamicObject(1280,1342.5899700,-1842.1999500,12.9800000,0.0000000,0.0000000,181.9060000); //object(parkbench1) (7)
CreateDynamicObject(1280,1353.5200200,-1841.3000500,12.9800000,0.0000000,0.0000000,181.9060000); //object(parkbench1) (8)
CreateDynamicObject(1280,1353.5400400,-1829.4799800,12.9800000,0.0000000,0.0000000,181.9060000); //object(parkbench1) (9)
CreateDynamicObject(1280,1378.0000000,-1837.5600600,12.9800000,0.0000000,0.0000000,181.9060000); //object(parkbench1) (10)
CreateDynamicObject(1280,1378.3299600,-1850.0500500,12.9700000,0.0000000,0.0000000,181.9060000); //object(parkbench1) (11)
CreateDynamicObject(1280,1377.5699500,-1827.6200000,12.9800000,0.0000000,0.0000000,181.9060000); //object(parkbench1) (12)
CreateDynamicObject(1231,1353.6400100,-1831.5100100,15.3100000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (1)
CreateDynamicObject(1231,1353.5400400,-1838.9599600,15.3100000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (2)
CreateDynamicObject(1231,1350.3299600,-1839.0300300,15.3100000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (3)
CreateDynamicObject(1231,1350.0899700,-1831.6700400,15.3100000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (4)
CreateDynamicObject(1231,1342.3800000,-1827.9599600,15.3100000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (5)
CreateDynamicObject(1231,1342.8299600,-1839.5600600,15.3000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (6)
CreateDynamicObject(1231,1351.2900400,-1850.5600600,15.3000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (7)
CreateDynamicObject(1432,1470.6200000,-1687.3399700,13.0500000,0.0000000,0.0000000,0.0000000); //object(dyn_table_2) (5)
CreateDynamicObject(3529,1366.1899400,-1559.1500200,15.5200000,0.0000000,0.0000000,20.3170000); //object(vgsn_constrbeam) (1)
CreateDynamicObject(3529,1364.3199500,-1570.5799600,15.5200000,0.0000000,0.0000000,358.0560000); //object(vgsn_constrbeam) (2)
CreateDynamicObject(3529,1373.3700000,-1572.5600600,15.5200000,0.0000000,0.0000000,346.9250000); //object(vgsn_constrbeam) (3)
CreateDynamicObject(3529,1376.3599900,-1564.0699500,15.5200000,0.0000000,0.0000000,20.3170000); //object(vgsn_constrbeam) (4)
CreateDynamicObject(3865,1368.5300300,-1556.6600300,11.2300000,290.6170000,250.9310000,287.5420000); //object(concpipe_sfxrf) (2)
CreateDynamicObject(3567,1378.8800000,-1540.8000500,8.5500000,0.0000000,0.0000000,348.8690000); //object(lasnfltrail) (2)
CreateDynamicObject(3866,1365.1500200,-1571.6700400,4.7800000,0.0000000,0.0000000,253.9930000); //object(demolish1_sfxrf) (1)
CreateDynamicObject(3866,1371.4399400,-1573.7700200,4.5000000,0.0000000,0.0000000,253.9870000); //object(demolish1_sfxrf) (2)
CreateDynamicObject(3865,1368.8499800,-1553.1700400,10.7900000,283.6550000,265.1520000,302.8250000); //object(concpipe_sfxrf) (3)
CreateDynamicObject(9623,1365.5799600,-1562.4399400,9.6200000,359.9040000,0.0000000,343.5700000); //object(toll_sfw) (1)
CreateDynamicObject(9623,1363.5400400,-1568.0699500,9.6200000,359.9010000,0.0000000,343.5700000); //object(toll_sfw) (2)
CreateDynamicObject(8661,1538.4799800,-1651.0600600,10.8200000,0.0000000,180.0000000,270.9550000); //object(gnhtelgrnd_lvs) (6)
CreateDynamicObject(8661,1539.2500000,-1690.8900100,10.8200000,0.0000000,179.9950000,270.9500000); //object(gnhtelgrnd_lvs) (7)
CreateDynamicObject(8661,1539.7700200,-1730.0799600,10.8200000,0.0000000,179.9950000,270.9500000); //object(gnhtelgrnd_lvs) (8)
CreateDynamicObject(8661,1559.1600300,-1715.5200200,10.8100000,0.0000000,179.9950000,270.9500000); //object(gnhtelgrnd_lvs) (9)
CreateDynamicObject(8661,1558.6400100,-1675.5400400,10.8200000,0.0000000,179.9950000,270.9500000); //object(gnhtelgrnd_lvs) (10)
CreateDynamicObject(8661,1558.0799600,-1648.0600600,10.8100000,0.0000000,179.9950000,270.9500000); //object(gnhtelgrnd_lvs) (11)
CreateDynamicObject(8661,1578.3199500,-1705.1600300,10.8200000,0.0000000,179.9950000,270.9500000); //object(gnhtelgrnd_lvs) (12)
CreateDynamicObject(8661,1598.0200200,-1706.3000500,10.8100000,0.0000000,179.9950000,270.9500000); //object(gnhtelgrnd_lvs) (13)
CreateDynamicObject(8661,1615.5500500,-1704.9699700,10.8000000,0.0000000,179.9950000,270.9500000); //object(gnhtelgrnd_lvs) (14)
//========================BALLAS
CreateDynamicObject(1460,1876.8199500,-1080.6300000,23.5200000,0.0000000,0.0000000,270.9550000); //object(dyn_f_r_wood_3) (1)
CreateDynamicObject(1460,1876.8199500,-1076.0300300,23.5200000,0.0000000,0.0000000,270.9500000); //object(dyn_f_r_wood_3) (2)
CreateDynamicObject(1460,1876.8499800,-1071.4200400,23.5200000,0.0000000,0.0000000,269.0060000); //object(dyn_f_r_wood_3) (3)
CreateDynamicObject(1460,1877.3700000,-1066.9000200,23.5200000,0.0000000,0.0000000,258.4080000); //object(dyn_f_r_wood_3) (4)
CreateDynamicObject(1460,1879.6699200,-1061.0000000,23.5200000,0.0000000,0.0000000,236.1400000); //object(dyn_f_r_wood_3) (5)
CreateDynamicObject(1460,1881.4599600,-1058.3000500,23.5200000,0.0000000,0.0000000,236.1400000); //object(dyn_f_r_wood_3) (6)
CreateDynamicObject(1460,1884.6800500,-1055.1400100,23.5200000,0.0000000,0.0000000,213.8790000); //object(dyn_f_r_wood_3) (7)
CreateDynamicObject(1460,1887.0500500,-1053.5200200,23.5200000,0.0000000,0.0000000,213.8760000); //object(dyn_f_r_wood_3) (8)
CreateDynamicObject(1460,1891.2099600,-1051.8691400,23.5200000,0.0000000,0.0000000,191.6130000); //object(dyn_f_r_wood_3) (9)
CreateDynamicObject(1460,1895.7299800,-1051.0500500,23.5200000,0.0000000,0.0000000,189.6690000); //object(dyn_f_r_wood_3) (10)
CreateDynamicObject(1460,1900.2700200,-1050.7700200,23.5200000,0.0000000,0.0000000,178.5380000); //object(dyn_f_r_wood_3) (11)
CreateDynamicObject(1460,1903.3499800,-1050.8399700,23.5200000,0.0000000,0.0000000,178.5330000); //object(dyn_f_r_wood_3) (12)
CreateDynamicObject(1460,1905.5999800,-1053.1600300,23.5200000,0.0000000,0.0000000,91.4320000); //object(dyn_f_r_wood_3) (13)
CreateDynamicObject(1460,1905.5899700,-1057.7099600,23.5200000,0.0000000,0.0000000,89.4840000); //object(dyn_f_r_wood_3) (14)
CreateDynamicObject(1460,1905.5600600,-1062.3000500,23.5200000,0.0000000,0.0000000,89.4840000); //object(dyn_f_r_wood_3) (15)
CreateDynamicObject(1460,1905.5400400,-1066.8900100,23.5200000,0.0000000,0.0000000,89.4840000); //object(dyn_f_r_wood_3) (16)
CreateDynamicObject(1460,1905.5100100,-1071.5300300,23.5200000,0.0000000,0.0000000,89.4840000); //object(dyn_f_r_wood_3) (17)
CreateDynamicObject(1460,1905.4399400,-1076.1899400,23.5200000,0.0000000,0.0000000,89.4840000); //object(dyn_f_r_wood_3) (18)
CreateDynamicObject(1460,1905.4100300,-1080.8599900,23.5200000,0.0000000,0.0000000,89.4840000); //object(dyn_f_r_wood_3) (19)
CreateDynamicObject(1460,1902.9399400,-1083.1400100,23.5200000,0.0000000,0.0000000,359.8390000); //object(dyn_f_r_wood_3) (20)
CreateDynamicObject(1460,1898.3499800,-1083.0400400,23.5200000,0.0000000,0.0000000,357.8910000); //object(dyn_f_r_wood_3) (21)
CreateDynamicObject(1460,1893.7399900,-1082.8399700,23.5200000,0.0000000,0.0000000,357.8910000); //object(dyn_f_r_wood_3) (22)
CreateDynamicObject(1460,1879.0899700,-1082.9499500,23.5200000,0.0000000,0.0000000,357.8910000); //object(dyn_f_r_wood_3) (23)
CreateDynamicObject(1460,1883.7199700,-1082.8800000,23.5200000,0.0000000,0.0000000,3.6580000); //object(dyn_f_r_wood_3) (24)
CreateDynamicObject(1460,1877.7800300,-1065.1300000,23.5200000,0.0000000,0.0000000,257.9880000); //object(dyn_f_r_wood_3) (25)
CreateDynamicObject(1447,1890.7600100,-1090.9300500,24.3600000,0.0000000,0.0000000,0.0000000); //object(dyn_mesh_4) (1)
CreateDynamicObject(1450,1893.4200400,-1090.6700400,23.7200000,0.0000000,0.0000000,148.5180000); //object(dyn_crate_3) (1)
CreateDynamicObject(1442,1904.6400100,-1052.2800300,23.5400000,0.0000000,0.0000000,0.0000000); //object(dyn_firebin0) (1)
CreateDynamicObject(1264,1891.7600100,-1090.3199500,23.5500000,0.0000000,0.0000000,0.0000000); //object(blackbag1) (1)
CreateDynamicObject(1264,1890.7299800,-1090.2399900,23.5300000,0.0000000,0.0000000,33.3920000); //object(blackbag1) (2)
CreateDynamicObject(1264,1889.6300000,-1090.2199700,23.5100000,0.0000000,0.0000000,315.4780000); //object(blackbag1) (3)
CreateDynamicObject(1221,1895.8199500,-1090.3299600,23.6100000,0.0000000,0.0000000,0.0000000); //object(cardboardbox4) (1)
CreateDynamicObject(3594,1879.6200000,-1078.2800300,23.4900000,0.0000000,0.0000000,337.7390000); //object(la_fuckcar1) (1)
CreateDynamicObject(14402,1882.0898400,-1063.2597700,23.2900000,0.0000000,0.0000000,0.0000000); //object(flower-bush09) (1)
CreateDynamicObject(14402,1879.5699500,-1068.1600300,23.3600000,0.0000000,0.0000000,0.0000000); //object(flower-bush09) (2)
CreateDynamicObject(14402,1881.4200400,-1073.2700200,23.4000000,0.0000000,0.0000000,0.0000000); //object(flower-bush09) (3)
CreateDynamicObject(14402,1889.6700400,-1055.7399900,23.2900000,0.0000000,0.0000000,315.4780000); //object(flower-bush09) (5)
CreateDynamicObject(14402,1896.6400100,-1054.8900100,23.2900000,0.0000000,0.0000000,55.6480000); //object(flower-bush09) (6)
CreateDynamicObject(14402,1902.7399900,-1055.4899900,23.2900000,0.0000000,0.0000000,55.6460000); //object(flower-bush09) (7)
CreateDynamicObject(14402,1902.9699700,-1064.9799800,23.2900000,0.0000000,0.0000000,22.2540000); //object(flower-bush09) (8)
CreateDynamicObject(14402,1901.5899700,-1080.2900400,23.2900000,0.0000000,0.0000000,66.7750000); //object(flower-bush09) (9)
CreateDynamicObject(16637,1885.5600600,-1074.4699700,24.3800000,0.0000000,0.0000000,179.9590000); //object(ghostgardoor) (1)
CreateDynamicObject(16637,1885.5600600,-1070.7099600,24.3800000,0.0000000,0.0000000,179.9560000); //object(ghostgardoor) (2)
CreateDynamicObject(16637,1885.5600600,-1063.1200000,24.3800000,0.0000000,0.0000000,179.9560000); //object(ghostgardoor) (4)
CreateDynamicObject(16637,1885.5600600,-1060.7600100,24.3800000,0.0000000,0.0000000,179.9560000); //object(ghostgardoor) (5)
CreateDynamicObject(16637,1887.4300500,-1076.3299600,24.4000000,0.0000000,0.0000000,270.0550000); //object(ghostgardoor) (13)
CreateDynamicObject(16637,1891.2299800,-1076.3299600,24.4000000,0.0000000,0.0000000,270.0550000); //object(ghostgardoor) (14)
CreateDynamicObject(16637,1898.7900400,-1076.3299600,24.3700000,0.0000000,0.0000000,270.0550000); //object(ghostgardoor) (19)
CreateDynamicObject(16501,1885.5899700,-1072.8199500,25.1500000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (1)
CreateDynamicObject(16501,1885.5899700,-1062.4000200,25.1500000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (3)
CreateDynamicObject(1491,1885.5699500,-1068.8100600,22.9400000,0.0000000,0.0000000,89.7170000); //object(gen_doorint01) (1)
CreateDynamicObject(16637,1896.5699500,-1076.3299600,24.3700000,0.0000000,0.0000000,270.0550000); //object(ghostgardoor) (21)
CreateDynamicObject(16501,1900.7199700,-1072.7500000,25.1500000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (4)
CreateDynamicObject(16501,1900.7199700,-1065.7099600,25.1500000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (5)
CreateDynamicObject(16501,1900.7099600,-1062.5100100,25.1500000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (6)
CreateDynamicObject(16501,1897.2500000,-1059.0200200,25.1500000,0.0000000,0.0000000,89.6210000); //object(cn2_savgardr2_) (7)
CreateDynamicObject(16501,1890.2199700,-1058.9699700,25.1500000,0.0000000,0.0000000,89.6150000); //object(cn2_savgardr2_) (8)
CreateDynamicObject(16501,1889.0799600,-1058.9599600,25.1500000,0.0000000,0.0000000,89.6150000); //object(cn2_savgardr2_) (9)
CreateDynamicObject(16501,1889.0500500,-1076.2900400,25.1500000,0.0000000,0.0000000,90.0310000); //object(cn2_savgardr2_) (10)
CreateDynamicObject(16501,1897.1500200,-1076.2900400,25.1500000,0.0000000,0.0000000,90.0270000); //object(cn2_savgardr2_) (11)
CreateDynamicObject(16501,1894.1300000,-1076.2900400,25.1500000,0.0000000,0.0000000,90.0270000); //object(cn2_savgardr2_) (12)
CreateDynamicObject(16501,1885.5799600,-1072.3700000,25.1500000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (13)
CreateDynamicObject(16501,1885.5799600,-1063.7600100,25.1500000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (14)
CreateDynamicObject(16501,1885.5600600,-1067.1800500,27.6300000,0.0000000,0.0000000,359.9680000); //object(cn2_savgardr2_) (15)
CreateDynamicObject(16501,1885.5699500,-1063.7600100,27.6400000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (17)
CreateDynamicObject(16501,1885.5999800,-1062.4000200,27.6300000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (18)
CreateDynamicObject(16501,1889.0799600,-1058.9499500,27.6300000,0.0000000,0.0000000,89.6150000); //object(cn2_savgardr2_) (19)
CreateDynamicObject(16501,1890.2199700,-1058.9599600,27.6500000,0.0000000,0.0000000,89.6150000); //object(cn2_savgardr2_) (21)
CreateDynamicObject(16501,1897.2500000,-1059.0100100,27.6400000,0.0000000,0.0000000,89.6150000); //object(cn2_savgardr2_) (22)
CreateDynamicObject(16501,1900.6999500,-1062.4899900,27.6300000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (23)
CreateDynamicObject(16501,1900.6999500,-1069.5500500,27.6300000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (24)
CreateDynamicObject(16501,1885.5699500,-1072.3700000,27.6200000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (26)
CreateDynamicObject(16501,1885.5999800,-1072.8100600,27.6100000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (27)
CreateDynamicObject(16501,1889.0500500,-1076.3000500,27.6000000,0.0000000,0.0000000,90.0270000); //object(cn2_savgardr2_) (28)
CreateDynamicObject(16501,1894.1300000,-1076.3000500,27.6000000,0.0000000,0.0000000,90.0270000); //object(cn2_savgardr2_) (29)
CreateDynamicObject(16501,1897.1500200,-1076.3000500,27.5800000,0.0000000,0.0000000,90.0270000); //object(cn2_savgardr2_) (30)
CreateDynamicObject(16501,1900.6899400,-1072.7500000,27.6300000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_) (31)
CreateDynamicObject(3260,1886.5200200,-1059.8399700,26.3900000,270.0000000,90.0000000,0.0000000); //object(oldwoodpanel) (1)
CreateDynamicObject(3260,1889.4899900,-1059.8399700,26.4000000,269.9950000,90.0000000,359.7440000); //object(oldwoodpanel) (2)
CreateDynamicObject(3260,1892.4399400,-1059.8700000,26.4100000,269.9890000,90.0000000,359.5820000); //object(oldwoodpanel) (3)
CreateDynamicObject(3260,1895.3100600,-1059.8900100,26.4200000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (4)
CreateDynamicObject(3260,1898.2700200,-1059.9100300,26.4300000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (5)
CreateDynamicObject(3260,1898.7099600,-1059.9200400,26.4400000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (6)
CreateDynamicObject(3260,1898.6800500,-1061.9200400,26.4400000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (7)
CreateDynamicObject(3260,1895.6899400,-1061.9000200,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (8)
CreateDynamicObject(3260,1892.7500000,-1061.8700000,26.4400000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (9)
CreateDynamicObject(3260,1889.7500000,-1061.8499800,26.4400000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (10)
CreateDynamicObject(3260,1886.6800500,-1061.8399700,26.4400000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (11)
CreateDynamicObject(3260,1887.3000500,-1061.8299600,26.4300000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (12)
CreateDynamicObject(3260,1886.6899400,-1063.8499800,26.4300000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (13)
CreateDynamicObject(3260,1889.6899400,-1063.8700000,26.4400000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (14)
CreateDynamicObject(3260,1892.6800500,-1063.8900100,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (15)
CreateDynamicObject(3260,1895.6899400,-1063.9100300,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (16)
CreateDynamicObject(3260,1898.6899400,-1063.9300500,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (17)
CreateDynamicObject(3260,1898.6500200,-1065.9300500,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (18)
CreateDynamicObject(3260,1895.6500200,-1065.9100300,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (19)
CreateDynamicObject(3260,1892.6500200,-1065.8900100,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (20)
CreateDynamicObject(3260,1889.6500200,-1065.8700000,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (21)
CreateDynamicObject(3260,1886.6500200,-1065.8499800,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (22)
CreateDynamicObject(3260,1886.6500200,-1067.8499800,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (23)
CreateDynamicObject(3260,1889.6500200,-1067.8700000,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (24)
CreateDynamicObject(3260,1892.6500200,-1067.8900100,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (25)
CreateDynamicObject(3260,1895.6500200,-1067.9100300,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (26)
CreateDynamicObject(3260,1898.6500200,-1067.9300500,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (27)
CreateDynamicObject(3260,1898.6099900,-1069.9399400,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (28)
CreateDynamicObject(3260,1895.6099900,-1069.9200400,26.4500000,269.9890000,90.0000000,359.5820000); //object(oldwoodpanel) (29)
CreateDynamicObject(3260,1892.6099900,-1069.9000200,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (30)
CreateDynamicObject(3260,1889.6099900,-1069.8800000,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (31)
CreateDynamicObject(3260,1886.6099900,-1069.8599900,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (32)
CreateDynamicObject(3260,1886.5999800,-1071.8599900,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (33)
CreateDynamicObject(3260,1889.5999800,-1071.8800000,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (34)
CreateDynamicObject(3260,1892.5999800,-1071.9000200,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (35)
CreateDynamicObject(3260,1895.5999800,-1071.9200400,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (36)
CreateDynamicObject(3260,1898.5999800,-1071.9399400,26.4500000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (37)
CreateDynamicObject(3095,1896.1300000,-1071.6999500,22.3900000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (4)
CreateDynamicObject(3095,1890.1099900,-1063.5300300,22.4100000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (6)
CreateDynamicObject(3095,1890.0699500,-1071.8700000,22.4000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (7)
CreateDynamicObject(3095,1890.0699500,-1071.8700000,29.2500000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (8)
CreateDynamicObject(3095,1896.1300000,-1071.6999500,29.2600000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (9)
CreateDynamicObject(3095,1896.1200000,-1063.4699700,29.2700000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (10)
CreateDynamicObject(3095,1896.1200000,-1063.4699700,22.4000000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (11)
CreateDynamicObject(3095,1890.1099900,-1063.5300300,29.2800000,0.0000000,0.0000000,0.0000000); //object(a51_jetdoor) (12)
CreateDynamicObject(8572,1897.7199700,-1075.2700200,25.1700000,0.0000000,0.0000000,0.0000000); //object(vgssstairs02_lvs) (2)
CreateDynamicObject(3260,1898.8000500,-1073.3900100,26.4600000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (38)
CreateDynamicObject(3260,1895.8000500,-1073.3700000,26.4600000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (39)
CreateDynamicObject(3260,1892.8000500,-1073.3399700,26.4600000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (40)
CreateDynamicObject(3260,1889.8000500,-1073.3199500,26.4600000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (41)
CreateDynamicObject(3260,1886.8000500,-1073.3000500,26.4600000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (42)
CreateDynamicObject(3260,1886.5300300,-1073.2900400,26.4700000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (43)
CreateDynamicObject(3260,1886.5999800,-1075.2600100,26.4800000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (44)
CreateDynamicObject(3260,1889.5999800,-1075.2800300,26.4800000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (45)
CreateDynamicObject(3260,1892.5999800,-1075.3000500,26.4800000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (46)
CreateDynamicObject(3260,1893.6500200,-1075.3100600,26.4900000,269.9890000,90.0000000,359.5770000); //object(oldwoodpanel) (47)
CreateDynamicObject(1712,1888.0500500,-1059.4599600,22.9700000,0.0000000,0.0000000,0.0000000); //object(kb_couch05) (1)
CreateDynamicObject(1712,1891.1500200,-1059.6400100,22.9700000,0.0000000,0.0000000,0.0000000); //object(kb_couch05) (2)
CreateDynamicObject(1709,1887.2399900,-1065.5400400,22.9700000,0.0000000,0.0000000,91.3090000); //object(kb_couch08) (1)
CreateDynamicObject(1709,1898.8800000,-1059.6400100,22.9700000,0.0000000,0.0000000,273.2180000); //object(kb_couch08) (2)
CreateDynamicObject(1710,1894.4300500,-1059.6099900,22.9700000,0.0000000,0.0000000,0.0000000); //object(kb_couch07) (1)
CreateDynamicObject(15037,1888.2199700,-1074.5300300,23.3600000,0.0000000,0.0000000,133.5670000); //object(med_dinning_2_sv) (1)
CreateDynamicObject(1647,1898.6400100,-1075.1999500,23.1900000,0.0000000,0.0000000,77.9140000); //object(lounge_wood_dn) (1)
CreateDynamicObject(1815,1889.1500200,-1063.5000000,22.9700000,0.0000000,0.0000000,0.0000000); //object(coffee_low_2) (1)
CreateDynamicObject(1815,1895.8100600,-1063.3399700,22.9700000,0.0000000,0.0000000,0.0000000); //object(coffee_low_2) (2)
CreateDynamicObject(2063,1900.1400100,-1072.1700400,23.8600000,0.0000000,0.0000000,270.8910000); //object(cj_greenshelves) (1)
CreateDynamicObject(2063,1900.1400100,-1069.1700400,23.8600000,0.0000000,0.0000000,270.8900000); //object(cj_greenshelves) (2)
CreateDynamicObject(14556,1887.2700200,-1074.6400100,28.0300000,0.0000000,0.0000000,326.6080000); //object(zerowardrobe) (1)
CreateDynamicObject(15036,1887.1999500,-1061.2399900,27.6400000,0.0000000,0.0000000,269.0110000); //object(kit_cab_washin_sv) (1)
CreateDynamicObject(2845,1891.3100600,-1075.9300500,26.5200000,0.0000000,0.0000000,0.0000000); //object(gb_bedclothes04) (1)
CreateDynamicObject(2845,1898.4499500,-1074.9599600,22.9600000,0.0000000,0.0000000,55.6530000); //object(gb_bedclothes04) (2)
CreateDynamicObject(1717,1899.3800000,-1059.7700200,26.4800000,0.0000000,0.0000000,268.6650000); //object(telly_low_test) (1)
CreateDynamicObject(1725,1897.3000500,-1061.7500000,26.4400000,0.0000000,0.0000000,269.0110000); //object(mrk_bed1) (1)
CreateDynamicObject(1771,1887.4100300,-1071.0699500,27.0800000,0.0000000,0.0000000,99.6430000); //object(cj_bunk_bed1) (1)
CreateDynamicObject(1771,1887.3499800,-1068.4799800,27.0800000,0.0000000,0.0000000,79.3230000); //object(cj_bunk_bed1) (2)
CreateDynamicObject(1801,1902.6099900,-1054.6300000,23.0200000,0.0000000,0.0000000,0.0000000); //object(swank_bed_4) (1)
CreateDynamicObject(2835,1886.9499500,-1067.3499800,26.4900000,0.0000000,0.0000000,337.7390000); //object(gb_livingrug04) (1)
CreateDynamicObject(2835,1886.7900400,-1073.2099600,26.5200000,0.0000000,0.0000000,22.2590000); //object(gb_livingrug04) (2)
CreateDynamicObject(2835,1899.3199500,-1064.6300000,26.5000000,0.0000000,0.0000000,22.2580000); //object(gb_livingrug04) (3)
CreateDynamicObject(2855,1892.7399900,-1075.4899900,26.5300000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (1)
CreateDynamicObject(2855,1893.1700400,-1075.5500500,26.5300000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (2)
CreateDynamicObject(2855,1892.9000200,-1075.5300300,26.6700000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (3)
CreateDynamicObject(2855,1893.6400100,-1075.4899900,26.5300000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (4)
CreateDynamicObject(2855,1893.4399400,-1075.5000000,26.6700000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (5)
CreateDynamicObject(2855,1893.3599900,-1075.4799800,26.8100000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (6)
CreateDynamicObject(2855,1892.9899900,-1075.4699700,26.8100000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (7)
CreateDynamicObject(2855,1893.2199700,-1075.3499800,26.9500000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (8)
CreateDynamicObject(2855,1894.2099600,-1075.5799600,26.5300000,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (9)
CreateDynamicObject(643,1896.4799800,-1081.0300300,23.4000000,0.0000000,0.0000000,33.3920000); //object(kb_chr_tbl_test) (1)
CreateDynamicObject(1735,1894.4300500,-1059.5799600,26.4600000,0.0000000,0.0000000,0.0000000); //object(cj_easychair1) (1)
CreateDynamicObject(2001,1893.2800300,-1059.5799600,26.4500000,0.0000000,0.0000000,0.0000000); //object(nu_plant_ofc) (1)
CreateDynamicObject(1594,1890.1600300,-1063.9499500,26.9600000,0.0000000,0.0000000,315.4780000); //object(chairsntable) (1)
CreateDynamicObject(1670,1890.1200000,-1064.1600300,27.4400000,0.0000000,0.0000000,0.0000000); //object(propcollecttable) (1)
CreateDynamicObject(2207,1893.7199700,-1062.0799600,26.4900000,0.0000000,0.0000000,0.0000000); //object(med_office7_desk_1) (1)
CreateDynamicObject(1362,1893.3499800,-1068.0200200,23.5400000,0.0000000,0.0000000,0.0000000); //object(cj_firebin) (1)
CreateDynamicObject(923,1887.4100300,-1089.7600100,23.8700000,0.0000000,0.0000000,44.5220000); //object(packing_carates2) (1)
CreateDynamicObject(3525,1904.5999800,-1052.2800300,23.1100000,0.0000000,0.0000000,0.0000000); //object(exbrtorch01) (1)
CreateDynamicObject(3525,1904.5996100,-1052.2793000,23.1100000,0.0000000,0.0000000,0.0000000); //object(exbrtorch01) (2)
CreateDynamicObject(3525,1893.3499800,-1068.0500500,23.1100000,0.0000000,0.0000000,0.0000000); //object(exbrtorch01) (3)
CreateDynamicObject(3525,1893.3496100,-1068.0498000,23.1100000,0.0000000,0.0000000,0.0000000); //object(exbrtorch01) (4)
CreateDynamicObject(3044,1879.1099900,-1080.1899400,22.8800000,0.0000000,0.0000000,337.7390000); //object(cigar) (1)
CreateDynamicObject(3044,1879.1999500,-1080.3499800,22.8800000,0.0000000,0.0000000,252.0470000); //object(cigar) (2)
CreateDynamicObject(3044,1879.2399900,-1080.2600100,22.8800000,0.0000000,0.0000000,252.0430000); //object(cigar) (3)
CreateDynamicObject(3044,1879.0400400,-1080.1700400,22.8800000,0.0000000,0.0000000,333.8450000); //object(cigar) (4)
CreateDynamicObject(3044,1879.1500200,-1080.1099900,22.8800000,0.0000000,0.0000000,333.8420000); //object(cigar) (5)
CreateDynamicObject(3044,1878.9799800,-1080.1500200,22.8800000,0.0000000,0.0000000,29.4950000); //object(cigar) (6)
CreateDynamicObject(3044,1878.9794900,-1080.1494100,22.8800000,0.0000000,0.0000000,333.8400000); //object(cigar) (7)
CreateDynamicObject(3044,1879.0200200,-1080.0600600,22.8800000,0.0000000,0.0000000,333.8360000); //object(cigar) (8)
CreateDynamicObject(3044,1878.9499500,-1080.0400400,22.8800000,0.0000000,0.0000000,333.8360000); //object(cigar) (9)
CreateDynamicObject(3044,1878.9000200,-1080.1300000,22.8800000,0.0000000,0.0000000,333.8360000); //object(cigar) (10)
CreateDynamicObject(3044,1879.0799600,-1080.2800300,22.8800000,0.0000000,0.0000000,255.9220000); //object(cigar) (11)
CreateDynamicObject(3044,1879.0999800,-1080.2099600,22.8800000,0.0000000,0.0000000,255.9210000); //object(cigar) (12)
CreateDynamicObject(3044,1879.0200200,-1080.0699500,22.8800000,0.0000000,0.0000000,255.9210000); //object(cigar) (13)
CreateDynamicObject(3044,1878.8700000,-1080.0300300,22.8800000,0.0000000,0.0000000,255.9210000); //object(cigar) (14)
CreateDynamicObject(3044,1878.9200400,-1080.0200200,22.8800000,0.0000000,0.0000000,328.0040000); //object(cigar) (15)
CreateDynamicObject(3044,1878.8700000,-1080.1099900,22.8800000,0.0000000,0.0000000,328.0020000); //object(cigar) (16)
CreateDynamicObject(3044,1878.8100600,-1080.0000000,22.8800000,0.0000000,0.0000000,328.0020000); //object(cigar) (17)
CreateDynamicObject(3044,1878.7500000,-1080.0799600,22.8800000,0.0000000,0.0000000,328.0020000); //object(cigar) (18)
CreateDynamicObject(3044,1878.7500000,-1079.9699700,22.8800000,0.0000000,0.0000000,328.0020000); //object(cigar) (19)
CreateDynamicObject(3044,1878.6999500,-1080.0500500,22.8800000,0.0000000,0.0000000,328.0020000); //object(cigar) (20)
//========================Canal de LS Objetos 0.3c(Unity)
	CreateDynamicObject(19073,1963.364,-1846.784,3.4843,0.0,0.0,-104.0);
	CreateDynamicObject(19073,1858.272,-1821.491,3.570,0.0,0.0,-102.0);
	CreateDynamicObject(19073,1916.272,-1834.930,3.570,0.0,0.0,-105.0);
	CreateDynamicObject(19073,1963.036,-1846.784,3.484,0.0,0.0,-104.0);
	CreateDynamicObject(19073,2020.616,-1854.183,3.410,0.0,0.0,-90.0);
	CreateDynamicObject(19073,2080.335,-1854.112,3.348,0.0,0.0,-90.0);
	CreateDynamicObject(19073,2140.309,-1854.051,3.365,0.0,0.0,-90.0);
	CreateDynamicObject(19073,2164.1359,-1854.035,3.372,0.0,0.0,-90.0);
	CreateDynamicObject(19073,2194.354,-1854.099,-18.865,90.0,270.0,0.0);
	CreateDynamicObject(19073,1799.7984,-1809.608,3.584,0.0,0.0,-101.0);
	CreateDynamicObject(19073,1741.7060,-1796.030,3.554,0.0,0.0,-105.0);
	CreateDynamicObject(19073,1686.261,-1782.008,3.485,0.0,0.0,-103.0);
	CreateDynamicObject(19073,1628.575,-1770.301,3.452,0.0,0.0,80.0);
	CreateDynamicObject(19073,1635.644,-1751.806,-18.546,90.0,-10.0,0.0);
	CreateDynamicObject(19073,1574.210,-1760.589,-18.297,90.0,90.0,-8.0);
	CreateDynamicObject(19073,1604.070,-1765.834,3.459,0.0,0.0,80.0);
//=======================Peaje LS/SF SF/LS==========================//
CreateDynamicObject(9623, 51.5068359375, -1531.0087890625, 6.4135332107544, 0, 0, 83.3642578125, -1, -1, -1, 250.0);
CreateDynamicObject(1215, 59.939453125, -1533.0869140625, 5.0403566360474, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(1215, 58.90234375, -1541.90234375, 5.0403566360474, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(970, 52.516300201416, -1520.9829101563, 4.6471252441406, 0, 0, 264.71557617188, -1, -1, -1, 250.0);
CreateDynamicObject(970, 50.2587890625, -1542.2724609375, 4.7063941955566, 0, 0, 264.71557617188, -1, -1, -1, 250.0);
CreateDynamicObject(1215, 42.8251953125, -1529.8798828125, 5.0403566360474, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(1215, 40.955078125, -1539.6416015625, 5.0403566360474, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(979, 42.1240234375, -1541.41015625, 5.0536217689514, 0, 0, 19.8193359375, -1, -1, -1, 250.0);
CreateDynamicObject(979, 56.93359375, -1542.9130859375, 4.9221844673157, 0, 0, 318.32885742188, -1, -1, -1, 250.0);
CreateDynamicObject(979, 59.6083984375, -1521.7138671875, 4.75932264328, 0, 0, 195.22155761719, -1, -1, -1, 250.0);
CreateDynamicObject(979, 45.3837890625, -1519.9404296875, 5.0327048301697, 0, 0, 151.39712524414, -1, -1, -1, 250.0);
CreateDynamicObject(994, 61.417091369629, -1531.5886230469, 4.1845903396606, 0, 0, 350.07385253906, -1, -1, -1, 250.0);
CreateDynamicObject(994, 61.147079467773, -1533.9071044922, 4.201210975647, 0, 0, 352.07385253906, -1, -1, -1, 250.0);
CreateDynamicObject(994, 40.518329620361, -1529.1175537109, 4.4017238616943, 0, 0, 354.1591796875, -1, -1, -1, 250.0);
CreateDynamicObject(994, 34.444438934326, -1528.0380859375, 4.4078407287598, 0, 0, 350.068359375, -1, -1, -1, 250.0);
CreateDynamicObject(994, 34.273979187012, -1530.2557373047, 4.4084062576294, 0, 0, 348.09130859375, -1, -1, -1, 250.0);
CreateDynamicObject(994, 40.376953125, -1531.5107421875, 4.3951306343079, 0, 0, 354.02893066406, -1, -1, -1, 250.0);
CreateDynamicObject(1215, 37.951248168945, -1529.9604492188, 4.9819650650024, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(1893, 52.9609375, -1535.8642578125, 8.8910512924194, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(1893, 50.1787109375, -1525.916015625, 8.6410512924194, 0, 0, 346.10229492188, -1, -1, -1, 250.0);
CreateDynamicObject(1215, 43.433494567871, -1520.4907226563, 5.0403566360474, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(1215, 61.280380249023, -1522.5816650391, 5.0403566360474, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(1215, 60.066070556641, -1531.9526367188, 5.0403566360474, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(1215, 64.367721557617, -1533.0864257813, 4.7245464324951, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(966, 56.59765625, -1533.1015625, 4.2298083305359, 0, 0, 83.3642578125, -1, -1, -1, 250.0);
CreateDynamicObject(966, 45.92410278, -1528.88403320, 4.34277439, 0.00000000, 0.00000000, 260.74523926, -1, -1, -1, 250.0);
CreateDynamicObject(1237, 34.657150268555, -1529.1403808594, 4.4334697723389, 0, 357.99499511719, 0, -1, -1, -1, 250.0);
CreateDynamicObject(1237, 67.103126525879, -1533.6245117188, 4.1326465606689, 0, 357.98950195313, 0, -1, -1, -1, 250.0);
CreateDynamicObject(1215, 42.614303588867, -1531.2629394531, 5.0403566360474, 0, 0, 0, -1, -1, -1, 250.0);
CreateDynamicObject(979, -75.286117553711, -890.79541015625, 15.586173057556, 0, 0, 333, -1, -1, -1, 250.0);
CreateDynamicObject(1237, -69.984680175781, -893.26788330078, 14.735286712646, 0, 0, 334.9951171875, -1, -1, -1, 250.0);
CreateDynamicObject(1237, -80.588485717773, -888.03759765625, 14.94229888916, 0, 0, 334.9951171875, -1, -1, -1, 250.0);
//Peaje 3
CreateDynamicObject(4638,-178.46434021,327.51763916,12.77470493,0.00000000,0.00000000,72.25000000); //object(paypark_lan01) (1)
CreateDynamicObject(966,-186.32562256,327.84649658,11.12812424,0.00000000,0.00000000,164.50000000); //object(bar_gatebar01) (1)
CreateDynamicObject(966,-171.64302063,323.80487061,11.07812500,0.00000000,0.00000000,345.74841309); //object(bar_gatebar01) (2)

//Peaje Principal
CreateDynamicObject(7522,1734.53063965,510.67129517,32.14699554,355.99548340,0.00000000,339.99938965); //object(vgnhsegate1) (4)
CreateDynamicObject(3851,1717.88562012,516.65197754,32.15283203,356.75000000,0.00000000,339.50000000); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,1717.80957031,516.46520996,28.47251129,356.74804688,0.00000000,339.49951172); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,1751.12756348,504.76992798,32.15789413,356.74804688,0.00000000,339.49951172); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,1751.01477051,504.58544922,28.40093231,356.74804688,0.00000000,339.49951172); //object(carshowwin_sfsx) (5)
CreateDynamicObject(3920,1741.84741211,514.58184814,31.99756432,0.00000000,0.00000000,342.00000000); //object(lib_veg3) (1)
CreateDynamicObject(3920,1730.35070801,518.97283936,31.80419159,0.00000000,0.00000000,341.99890137); //object(lib_veg3) (2)
CreateDynamicObject(3920,1739.13635254,502.53961182,32.80576324,0.00000000,0.00000000,159.99890137); //object(lib_veg3) (3)
CreateDynamicObject(3920,1726.79956055,506.74310303,32.71912384,0.00000000,0.00000000,159.99389648); //object(lib_veg3) (4)
CreateDynamicObject(638,1720.85021973,511.23519897,28.31233597,357.49755859,359.74975586,251.73400879); //object(kb_planter_bush) (3)
CreateDynamicObject(638,1719.88940430,520.37664795,27.82375336,356.24755859,0.00000000,338.24487305); //object(kb_planter_bush) (5)
CreateDynamicObject(638,1748.67065430,500.63357544,28.28552246,2.73840332,0.00000000,160.49377441); //object(kb_planter_bush) (10)
CreateDynamicObject(1237,1744.39074707,499.05343628,28.04047394,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (2)
CreateDynamicObject(1237,1748.68969727,510.93167114,27.41461182,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (3)
CreateDynamicObject(1237,1724.42675781,521.88134766,27.23392868,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (4)
CreateDynamicObject(3749,1719.64501953,515.95593262,32.53154755,359.75024414,357.24993896,249.98797607); //object(clubgate01_lax) (1)
CreateDynamicObject(3749,1749.28527832,505.35165405,32.72765732,359.74731445,357.24792480,249.98291016); //object(clubgate01_lax) (2)
CreateDynamicObject(8168,1720.70947266,515.77081299,29.44019127,359.50097656,3.50012207,86.78051758); //object(vgs_guardhouse01) (1)
CreateDynamicObject(8168,1748.43798828,505.49218750,29.53178024,359.25018311,356.99877930,266.70556641); //object(vgs_guardhouse01) (3)
CreateDynamicObject(638,1718.40039062,512.05651855,28.41301727,357.49511719,359.74731445,251.72973633); //object(kb_planter_bush) (12)
CreateDynamicObject(1237,1719.72851562,508.91601562,27.99460793,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
CreateDynamicObject(638,1747.98962402,509.82730103,27.80553436,357.49511719,359.74731445,249.72973633); //object(kb_planter_bush) (13)
CreateDynamicObject(638,1750.18115234,509.03182983,27.77998924,359.74511719,359.74755859,249.73455811); //object(kb_planter_bush) (14)
CreateDynamicObject(1231,1742.59069824,497.36105347,30.82483101,0.00000000,0.00000000,342.00000000); //object(streetlamp2) (1)
CreateDynamicObject(1231,1719.64270020,505.87384033,30.85145569,0.00000000,0.00000000,341.99890137); //object(streetlamp2) (2)
CreateDynamicObject(1231,1726.26489258,523.94793701,29.82937241,0.00000000,0.00000000,341.99890137); //object(streetlamp2) (3)
CreateDynamicObject(1231,1749.24548340,515.52655029,29.86758041,0.00000000,0.00000000,341.99890137); //object(streetlamp2) (4)
CreateDynamicObject(1319,1734.52221680,515.25524902,27.93953896,0.00000000,0.00000000,74.00000000); //object(ws_ref_bollard) (5)
CreateDynamicObject(1319,1734.26013184,514.58416748,27.98063087,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (7)
CreateDynamicObject(1319,1734.74743652,515.87677002,27.90203285,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (8)
CreateDynamicObject(1319,1737.62023926,514.83935547,27.90540504,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (9)
CreateDynamicObject(1319,1737.38293457,514.20434570,27.94361496,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (10)
CreateDynamicObject(1319,1737.16137695,513.49359131,27.98629761,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (11)
CreateDynamicObject(1269,1725.61096191,519.44012451,28.17633820,0.00000000,0.00000000,278.00000000); //object(parkingmeter) (1)
CreateDynamicObject(1269,1743.27661133,501.52035522,28.77410126,0.00000000,0.00000000,277.99804688); //object(parkingmeter) (2)
CreateDynamicObject(7662,1757.11669922,520.45324707,27.29666138,356.50000000,0.00000000,340.75000000); //object(miragehedge14) (1)
CreateDynamicObject(7662,1722.98400879,532.91369629,27.51205444,356.24536133,0.00000000,341.24645996); //object(miragehedge14) (2)
CreateDynamicObject(1319,1731.58703613,507.48901367,28.41566086,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (12)
CreateDynamicObject(1319,1731.34985352,506.75735474,28.44856453,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (13)
CreateDynamicObject(1319,1731.11682129,505.89208984,28.48619080,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (14)
CreateDynamicObject(1319,1734.74328613,506.26354980,28.41332245,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (15)
CreateDynamicObject(1319,1734.48413086,505.59411621,28.44406509,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (16)
CreateDynamicObject(1319,1734.12329102,504.84600830,28.47859383,0.00000000,0.00000000,73.99841309); //object(ws_ref_bollard) (17)
CreateDynamicObject(7662,1734.56909180,456.59658813,30.26617432,357.99536133,0.00000000,340.74652100); //object(miragehedge14) (3)
CreateDynamicObject(7662,1699.64965820,468.77502441,30.30495453,357.99658203,357.74865723,339.91772461); //object(miragehedge14) (5)
CreateDynamicObject(966,1746.27075195,513.30554199,27.28900146,0.00000000,0.00000000,339.50000000); //object(bar_gatebar01) (1)
CreateDynamicObject(966,1722.63073730,507.59747314,28.02780533,0.00000000,0.00000000,161.49951172); //object(bar_gatebar01) (2)
CreateDynamicObject(1237,1721.83825684,507.92312622,28.00804901,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (6)
CreateDynamicObject(1237,1747.07910156,512.95410156,27.27249527,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (7)
CreateDynamicObject(1237,1729.95117188,505.17480469,27.99683952,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (8)
CreateDynamicObject(1237,1739.17480469,515.84863281,27.30348587,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (9)
CreateDynamicObject(1346,1742.52221680,434.89068604,19.12241745,0.00000000,0.00000000,0.00000000); //object(cj_phone_kiosk2) (2)
CreateDynamicObject(1237,1713.72546387,507.94091797,28.15727997,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
CreateDynamicObject(1237,1720.20654297,525.78100586,27.11544418,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
CreateDynamicObject(1237,1755.01977539,513.09460449,27.15516853,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
CreateDynamicObject(1237,1748.57165527,495.36611938,28.12929916,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
CreateDynamicObject(1554,1740.34033203,527.16510010,26.63312531,0.00000000,0.00000000,0.00000000); //object(cj_water_barrier) (1)
CreateDynamicObject(1554,1738.29052734,520.85583496,27.01563454,0.00000000,0.00000000,0.00000000); //object(cj_water_barrier) (2)
CreateDynamicObject(1554,1736.77880859,516.35937500,27.28455353,0.00000000,0.00000000,0.00000000); //object(cj_water_barrier) (3)
CreateDynamicObject(792,1738.75891113,522.33557129,27.09619713,0.00000000,0.00000000,339.25000000); //object(aw_streettree1) (1)
CreateDynamicObject(792,1741.56005859,530.53411865,26.63008308,0.00000000,0.00000000,340.00000000); //object(aw_streettree1) (2)

// 2doPeaje
CreateDynamicObject(4641,611.15521240,341.90322876,19.62626648,0.00000000,0.00000000,124.50006104); //object(paypark_lan04) (1)
CreateDynamicObject(1251,615.46246338,347.41967773,18.03437233,0.00000000,0.00000000,214.74998474); //object(smashbar) (1)
CreateDynamicObject(1251,605.83349609,340.35693359,18.03437233,0.00000000,0.00000000,214.74975586); //object(smashbar) (2)
CreateDynamicObject(4641,612.39166260,342.70474243,19.62626648,0.00000000,0.00000000,304.24707031); //object(paypark_lan04) (2)
CreateDynamicObject(869,621.77282715,344.38226318,18.52552223,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (1)
CreateDynamicObject(869,622.69409180,341.95797729,18.73995972,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (2)
CreateDynamicObject(869,623.68316650,339.75006104,18.94154739,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (3)
CreateDynamicObject(869,624.98651123,337.66387939,19.14747238,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (4)
CreateDynamicObject(869,609.62091064,328.49456787,19.29899979,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (5)
CreateDynamicObject(869,607.14270020,332.95535278,18.99769402,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (6)
CreateDynamicObject(869,608.97827148,329.55920410,19.48236275,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (7)
CreateDynamicObject(869,610.46881104,326.13723755,19.36505699,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (8)
CreateDynamicObject(869,611.31933594,324.10876465,19.42392540,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (9)
CreateDynamicObject(869,625.55676270,334.73553467,19.30349159,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (10)
CreateDynamicObject(869,626.01800537,332.05664062,19.35348892,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (11)
CreateDynamicObject(869,626.51904297,329.87506104,19.38253403,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (12)
CreateDynamicObject(869,626.74707031,327.89004517,19.40633965,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (13)
CreateDynamicObject(869,608.11407471,331.05606079,19.15394020,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (14)
CreateDynamicObject(869,605.94433594,334.46926880,18.86527443,0.00000000,0.00000000,0.00000000); //object(veg_pflowerswee) (15)
CreateDynamicObject(3851,609.42370605,350.38610840,27.89567375,0.00000000,316.00000000,304.99713135); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,604.74536133,347.08255005,27.93655396,0.00000000,315.99975586,304.99694824); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,610.77764893,348.46978760,25.12393188,0.00000000,325.75000000,304.99713135); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,606.11767578,345.16638184,25.07393265,0.00000000,325.75000000,304.99713135); //object(carshowwin_sfsx) (5)
CreateDynamicObject(1215,606.36077881,337.21411133,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,618.55389404,345.33618164,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(1215,593.98565674,355.31488037,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1215,605.35803223,363.75540161,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
CreateDynamicObject(1215,596.11920166,377.24047852,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
CreateDynamicObject(1215,584.86181641,368.17123413,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
CreateDynamicObject(1215,570.00311279,389.20019531,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
CreateDynamicObject(1215,581.75836182,397.75845337,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
CreateDynamicObject(1215,570.50592041,414.07681274,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
CreateDynamicObject(1215,558.50927734,405.55288696,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
CreateDynamicObject(1215,540.20947266,431.86740112,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
CreateDynamicObject(1215,552.10131836,440.24792480,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
CreateDynamicObject(1215,526.33770752,451.23950195,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
CreateDynamicObject(1215,538.30633545,459.85519409,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
CreateDynamicObject(1215,505.78588867,480.82556152,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
CreateDynamicObject(1215,517.46527100,489.11245728,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(1215,486.89691162,507.62744141,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (17)
CreateDynamicObject(1215,499.00323486,516.03869629,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (18)
CreateDynamicObject(1215,469.32437134,533.15283203,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (19)
CreateDynamicObject(1215,481.38186646,541.86529541,19.29869843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (20)
CreateDynamicObject(1215,448.59533691,563.21594238,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (21)
CreateDynamicObject(1215,460.27703857,571.29559326,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (22)
CreateDynamicObject(1215,432.42288208,585.91540527,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (23)
CreateDynamicObject(1215,444.05410767,594.53662109,18.69713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (24)
CreateDynamicObject(966,619.60754395,344.84515381,17.98676491,0.00000000,0.00000000,38.00000000); //object(bar_gatebar01) (1)
CreateDynamicObject(966,607.09924316,335.70361328,17.97176361,0.00000000,0.00000000,213.99621582); //object(bar_gatebar01) (2)
CreateDynamicObject(1554,613.51287842,340.18591309,17.97713280,0.00000000,0.00000000,28.00000000); //object(cj_water_barrier) (1)
CreateDynamicObject(1554,606.44799805,335.91693115,18.34716034,0.00000000,0.00000000,27.99865723); //object(cj_water_barrier) (2)
CreateDynamicObject(1554,619.71734619,345.64797974,17.90903854,0.00000000,0.00000000,27.99865723); //object(cj_water_barrier) (3)
//=========================Juzgados interior=======================================
CreateDynamicObject(14602,1445.12304688,-1466.22460938,1619.72888184,0.00000000,0.00000000,0.00000000); //object(paperchase01)(1)
CreateDynamicObject(13007,1424.11535645,-1469.67016602,1613.13500977,0.00000000,0.00000000,0.00000000); //object(sw_bankbits)(17)
CreateDynamicObject(14602,1436.94140625,-1446.60449219,1619.70385742,0.00000000,0.00000000,90.00000000); //object(paperchase01)(5)
CreateDynamicObject(13007,1442.67285156,-1467.30566406,1613.13500977,0.00000000,0.00000000,179.99450684); //object(sw_bankbits)(20)
CreateDynamicObject(13007,1425.78710938,-1454.39550781,1613.16003418,0.00000000,0.00000000,359.98901367); //object(sw_bankbits)(21)
CreateDynamicObject(13007,1415.73071289,-1469.82592773,1613.38476562,0.00000000,0.00000000,0.00000000); //object(sw_bankbits)(22)
CreateDynamicObject(13007,1415.70117188,-1471.94921875,1613.60998535,0.00000000,0.00000000,0.00000000); //object(sw_bankbits)(26)
CreateDynamicObject(13007,1415.67578125,-1471.95117188,1613.78515625,0.00000000,0.00000000,0.00000000); //object(sw_bankbits)(27)
CreateDynamicObject(13007,1426.91503906,-1451.69824219,1613.18505859,0.00000000,0.00000000,269.98901367); //object(sw_bankbits)(21)
CreateDynamicObject(7191,1426.17089844,-1460.91601562,1614.98120117,90.00000000,180.00549316,269.98901367); //object(vegasnnewfence2b)(1)
CreateDynamicObject(7191,1420.71826172,-1460.90307617,1617.33203125,90.00000000,180.00549316,269.98352051); //object(vegasnnewfence2b)(2)
CreateDynamicObject(1491,1422.68261719,-1460.94042969,1615.31896973,0.00000000,0.00000000,0.00000000); //object(gen_doorint01)(1)
CreateDynamicObject(7191,1426.19433594,-1460.89550781,1617.33203125,90.00000000,179.99450684,89.99450684); //object(vegasnnewfence2b)(3)
CreateDynamicObject(7191,1423.91796875,-1460.91308594,1639.95593262,270.00000000,180.00149536,269.99050903); //object(vegasnnewfence2b)(5)
CreateDynamicObject(7191,1422.24218750,-1460.89453125,1639.95593262,270.00000000,180.00041199,89.98941040); //object(vegasnnewfence2b)(7)
CreateDynamicObject(7191,1420.77148438,-1460.88769531,1617.33203125,90.00000000,179.99450684,89.98904419); //object(vegasnnewfence2b)(9)
CreateDynamicObject(7191,1425.17211914,-1459.41979980,1614.40539551,90.00000000,180.00549316,269.97802734); //object(vegasnnewfence2b)(15)
CreateDynamicObject(7191,1425.22167969,-1459.39355469,1614.40539551,90.00000000,180.00549316,89.97805786); //object(vegasnnewfence2b)(17)
CreateDynamicObject(7191,1426.21777344,-1457.37695312,1614.40539551,90.00000000,179.99450684,359.98901367); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1426.19274902,-1457.37670898,1614.40539551,90.00000000,180.00549316,179.97802734); //object(vegasnnewfence2b)(19)
CreateDynamicObject(7191,1428.00708008,-1460.93286133,1594.13134766,90.00000000,180.00549316,269.98904419); //object(vegasnnewfence2b)(1)
CreateDynamicObject(7191,1428.04125977,-1460.88476562,1594.13183594,90.00000000,179.99450684,89.99450684); //object(vegasnnewfence2b)(3)
CreateDynamicObject(7191,1431.62500000,-1460.93652344,1614.98120117,90.00000000,179.99450684,270.00000000); //object(vegasnnewfence2b)(1)
CreateDynamicObject(7191,1431.65051270,-1460.90173340,1614.98120117,90.00000000,179.99450684,90.00000000); //object(vegasnnewfence2b)(1)
CreateDynamicObject(7191,1427.76770020,-1460.93249512,1639.95593262,270.00000000,179.99957275,269.98852539); //object(vegasnnewfence2b)(5)
CreateDynamicObject(7191,1425.09179688,-1460.92285156,1639.95593262,270.00000000,180.00549316,269.98901367); //object(vegasnnewfence2b)(5)
CreateDynamicObject(7191,1427.70935059,-1460.90393066,1639.98095703,270.00000000,180.00146484,89.99047852); //object(vegasnnewfence2b)(5)
CreateDynamicObject(7191,1421.37231445,-1459.40966797,1640.08105469,270.00000000,180.00000000,89.98904419); //object(vegasnnewfence2b)(7)
CreateDynamicObject(7191,1421.24523926,-1459.42187500,1640.08105469,270.00000000,180.00000000,269.98901367); //object(vegasnnewfence2b)(7)
CreateDynamicObject(2395,1427.57727051,-1461.01623535,1615.43835449,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(1)
CreateDynamicObject(1649,1428.77197266,-1460.98217773,1616.99804688,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,1428.77294922,-1460.95678711,1616.99804688,0.00000000,0.00000000,180.00000000); //object(wglasssmash)(2)
CreateDynamicObject(1491,1433.55371094,-1460.87792969,1615.31896973,0.00000000,0.00000000,90.00000000); //object(gen_doorint01)(1)
CreateDynamicObject(7191,1433.54882812,-1457.42187500,1614.40539551,90.00000000,180.00549316,359.96704102); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1433.52600098,-1457.41162109,1614.40539551,90.00000000,179.99450684,179.97802734); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1433.55468750,-1459.03320312,1639.95593262,270.00000000,179.99853516,359.98748779); //object(vegasnnewfence2b)(7)
CreateDynamicObject(7191,1433.50488281,-1459.02868652,1639.95593262,270.00000000,179.99853516,179.98748779); //object(vegasnnewfence2b)(7)
CreateDynamicObject(13007,1430.89624023,-1451.16162109,1613.13500977,0.00000000,0.00000000,359.99450684); //object(sw_bankbits)(20)
CreateDynamicObject(13007,1442.71130371,-1451.15563965,1613.10998535,0.00000000,0.00000000,359.98901367); //object(sw_bankbits)(20)
CreateDynamicObject(1536,1434.91210938,-1457.15625000,1615.26208496,0.00000000,0.00000000,0.00000000); //object(gen_doorext15)(1)
CreateDynamicObject(1567,1439.94287109,-1460.51574707,1615.05700684,0.00000000,0.00000000,241.25000000); //object(gen_wardrobe)(1)
CreateDynamicObject(1567,1437.46667480,-1460.50451660,1615.05700684,0.00000000,0.00000000,359.99633789); //object(gen_wardrobe)(2)
CreateDynamicObject(7191,1437.59399414,-1458.56079102,1595.63037109,90.00000000,180.00549316,359.96704102); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1437.56896973,-1458.55725098,1595.63037109,90.00000000,180.00549316,179.96704102); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1428.00708008,-1460.93286133,1594.13134766,90.00000000,180.00549316,269.98904419); //object(vegasnnewfence2b)(1)
CreateDynamicObject(7191,1440.09667969,-1462.12890625,1614.40539551,90.00000000,179.99450684,359.97802734); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1440.05444336,-1462.11694336,1614.40539551,90.00000000,179.99450684,179.97802734); //object(vegasnnewfence2b)(18)
CreateDynamicObject(1502,1440.07226562,-1464.02307129,1615.30725098,0.00000000,0.00000000,270.00000000); //object(gen_doorint04)(1)
CreateDynamicObject(1502,1440.12402344,-1467.02539062,1615.30725098,0.00000000,0.00000000,90.00000000); //object(gen_doorint04)(2)
CreateDynamicObject(7191,1440.08056641,-1465.22888184,1639.95593262,270.00000000,179.99853516,359.98748779); //object(vegasnnewfence2b)(7)
CreateDynamicObject(7191,1440.05419922,-1465.25268555,1639.95593262,270.00000000,179.99963379,179.98852539); //object(vegasnnewfence2b)(7)
CreateDynamicObject(7191,1440.07971191,-1468.97167969,1614.40539551,90.00000000,180.00549316,359.96704102); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1440.04785156,-1468.96777344,1614.40539551,90.00000000,180.00549316,179.96154785); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1446.07324219,-1462.01367188,1617.20971680,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b)(21)
CreateDynamicObject(7191,1446.07324219,-1462.01367188,1621.16015625,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b)(22)
CreateDynamicObject(1569,1446.01916504,-1467.06445312,1615.30725098,0.00000000,0.00000000,90.00000000); //object(adam_v_door)(1)
CreateDynamicObject(1569,1446.01245117,-1464.06347656,1615.30725098,0.00000000,0.00000000,270.00000000); //object(adam_v_door)(2)
CreateDynamicObject(2773,1442.25390625,-1465.49609375,1615.79943848,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(1)
CreateDynamicObject(2773,1441.32177734,-1467.81225586,1615.79943848,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar)(3)
CreateDynamicObject(2773,1441.33776855,-1463.36621094,1615.79943848,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar)(4)
CreateDynamicObject(7191,1462.24707031,-1460.47363281,1619.60864258,0.00000000,0.00000000,90.00000000); //object(vegasnnewfence2b)(23)
CreateDynamicObject(2368,1445.37597656,-1460.23242188,1615.25280762,0.00000000,0.00000000,179.99450684); //object(shop_counter_1)(1)
CreateDynamicObject(2368,1442.54870605,-1460.23706055,1615.25280762,0.00000000,0.00000000,179.99450684); //object(shop_counter_1)(2)
CreateDynamicObject(18070,1448.59960938,-1458.05468750,1615.83203125,0.00000000,0.00000000,180.74707031); //object(gap_counter)(1)
CreateDynamicObject(1722,1444.69824219,-1469.56713867,1615.30725098,0.00000000,0.00000000,0.00000000); //object(off_chairnu)(1)
CreateDynamicObject(1722,1443.91174316,-1469.55603027,1615.30725098,0.00000000,0.00000000,0.00000000); //object(off_chairnu)(2)
CreateDynamicObject(1722,1443.17663574,-1469.53918457,1615.30725098,0.00000000,0.00000000,0.00000000); //object(off_chairnu)(3)
CreateDynamicObject(1722,1442.41821289,-1469.55004883,1615.30725098,0.00000000,0.00000000,0.00000000); //object(off_chairnu)(4)
CreateDynamicObject(949,1440.54565430,-1469.22399902,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(1)
CreateDynamicObject(2596,1425.73315430,-1469.52270508,1617.94921875,0.00000000,0.00000000,140.00000000); //object(cj_sex_tv)(1)
CreateDynamicObject(2818,1445.74609375,-1466.06970215,1615.30725098,0.00000000,0.00000000,90.00000000); //object(gb_bedrug02)(1)
CreateDynamicObject(2257,1443.23132324,-1469.57824707,1618.01953125,0.00000000,0.00000000,180.00000000); //object(frame_clip_4)(1)
CreateDynamicObject(1722,1441.66760254,-1469.52758789,1615.30725098,0.00000000,0.00000000,0.00000000); //object(off_chairnu)(5)
CreateDynamicObject(949,1445.51464844,-1469.05834961,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(2)
CreateDynamicObject(1744,1446.15173340,-1461.89343262,1616.04699707,0.00000000,0.00000000,270.00000000); //object(med_shelf)(1)
CreateDynamicObject(2199,1443.10876465,-1457.24108887,1615.30725098,0.00000000,0.00000000,359.00000000); //object(med_office6_mc_1)(1)
CreateDynamicObject(2606,1437.97351074,-1458.84362793,1617.18493652,0.00000000,0.00000000,89.75000000); //object(cj_police_counter2)(1)
CreateDynamicObject(1808,1445.79260254,-1467.55639648,1615.28222656,0.00000000,0.00000000,270.00000000); //object(cj_watercooler2)(1)
CreateDynamicObject(949,1440.43603516,-1462.16455078,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(3)
CreateDynamicObject(2186,1440.80798340,-1457.64501953,1615.36926270,0.00000000,0.00000000,0.00000000); //object(photocopier_1)(1)
CreateDynamicObject(2165,1445.55895996,-1458.12756348,1615.53247070,0.00000000,0.00000000,268.75000000); //object(med_office_desk_1)(1)
CreateDynamicObject(1806,1443.88110352,-1458.51367188,1615.28222656,0.00000000,0.00000000,240.00000000); //object(med_office_chair)(1)
CreateDynamicObject(2185,1439.78686523,-1457.65905762,1615.30725098,0.00000000,0.00000000,181.75000000); //object(med_office6_desk_1)(1)
CreateDynamicObject(1806,1439.02209473,-1459.00073242,1615.28222656,0.00000000,0.00000000,359.99633789); //object(med_office_chair)(2)
CreateDynamicObject(2614,1440.22583008,-1465.52929688,1618.80810547,0.00000000,0.00000000,90.00000000); //object(cj_us_flag)(1)
CreateDynamicObject(2368,1448.16870117,-1460.22106934,1615.25280762,0.00000000,0.00000000,179.99450684); //object(shop_counter_1)(1)
CreateDynamicObject(2196,1445.63635254,-1458.89331055,1616.34472656,0.00000000,0.00000000,232.75000000); //object(work_lamp1)(1)
CreateDynamicObject(16780,1443.32202148,-1465.18615723,1619.91552734,0.00000000,0.00000000,0.00000000); //object(ufo_light03)(1)
CreateDynamicObject(1723,1426.70812988,-1458.94580078,1615.35729980,0.00000000,0.00000000,90.00000000); //object(mrk_seating1)(1)
CreateDynamicObject(1723,1429.31323242,-1457.65771484,1615.35729980,0.00000000,0.00000000,0.25000000); //object(mrk_seating1)(2)
CreateDynamicObject(949,1432.56274414,-1457.59741211,1615.91845703,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(4)
CreateDynamicObject(1808,1430.92700195,-1460.60571289,1615.28222656,0.00000000,0.00000000,180.00000000); //object(cj_watercooler2)(2)
CreateDynamicObject(2231,1428.65393066,-1461.05163574,1617.85754395,0.00000000,0.00000000,180.00000000); //object(swank_speaker_3)(1)
CreateDynamicObject(2738,1424.19128418,-1457.57397461,1615.96020508,0.00000000,0.00000000,0.00000000); //object(cj_toilet_bs)(1)
CreateDynamicObject(2828,1445.64245605,-1459.48425293,1616.37194824,0.00000000,0.00000000,92.00000000); //object(gb_ornament02)(1)
CreateDynamicObject(2855,1441.02124023,-1469.25646973,1615.30725098,0.00000000,0.00000000,160.00000000); //object(gb_bedmags05)(1)
CreateDynamicObject(2853,1439.36035156,-1457.65075684,1616.11437988,0.00000000,0.00000000,180.00000000); //object(gb_bedmags03)(1)
CreateDynamicObject(1800,1425.36523438,-1460.54333496,1615.35729980,0.00000000,0.00000000,359.00000000); //object(low_bed_1)(1)
CreateDynamicObject(2518,1422.46594238,-1457.68591309,1615.35729980,0.00000000,0.00000000,0.00000000); //object(cj_b_sink2)(1)
CreateDynamicObject(2911,1422.09924316,-1460.65502930,1615.33227539,0.00000000,0.00000000,90.00000000); //object(kmb_petroldoor)(1)
CreateDynamicObject(2204,1424.98950195,-1465.07861328,1615.11572266,0.00000000,0.00000000,270.00000000); //object(med_office8_cabinet)(1)
CreateDynamicObject(2204,1424.97595215,-1462.96093750,1614.51513672,0.00000000,0.00000000,270.00000000); //object(med_office8_cabinet)(2)
CreateDynamicObject(2204,1424.97741699,-1467.25244141,1614.54016113,0.00000000,0.00000000,270.00000000); //object(med_office8_cabinet)(3)
CreateDynamicObject(2204,1426.99804688,-1462.94104004,1614.36499023,0.00000000,0.00000000,180.00000000); //object(med_office8_cabinet)(4)
CreateDynamicObject(2204,1429.94787598,-1462.92980957,1614.36499023,0.00000000,0.00000000,179.99450684); //object(med_office8_cabinet)(5)
CreateDynamicObject(2204,1424.55944824,-1464.92712402,1614.49011230,0.00000000,0.00000000,90.00000000); //object(med_office8_cabinet)(8)
CreateDynamicObject(2204,1424.55578613,-1467.05664062,1615.09069824,0.00000000,0.00000000,90.00000000); //object(med_office8_cabinet)(9)
CreateDynamicObject(2204,1424.56604004,-1469.22216797,1614.51513672,0.00000000,0.00000000,90.00000000); //object(med_office8_cabinet)(10)
CreateDynamicObject(2204,1430.87292480,-1462.70874023,1614.36499023,0.00000000,0.00000000,269.99450684); //object(med_office8_cabinet)(12)
CreateDynamicObject(2204,1430.83227539,-1467.37219238,1614.36499023,0.00000000,0.00000000,269.98901367); //object(med_office8_cabinet)(13)
CreateDynamicObject(2204,1430.41040039,-1469.33618164,1614.33996582,0.00000000,0.00000000,89.98901367); //object(med_office8_cabinet)(14)
CreateDynamicObject(2204,1430.45690918,-1464.67260742,1614.33996582,0.00000000,0.00000000,89.98901367); //object(med_office8_cabinet)(15)
CreateDynamicObject(1491,1430.67724609,-1462.52905273,1613.64282227,0.00000000,0.00000000,90.00000000); //object(gen_doorint01)(1)
CreateDynamicObject(2205,1428.21911621,-1464.94714355,1615.30725098,0.00000000,0.00000000,90.00000000); //object(med_office8_desk_1)(15)
CreateDynamicObject(2205,1428.13415527,-1468.92211914,1615.30725098,0.00000000,0.00000000,90.00000000); //object(med_office8_desk_1)(16)
CreateDynamicObject(1714,1423.29028320,-1466.25146484,1615.95739746,0.00000000,0.00000000,91.75000000); //object(kb_swivelchair1)(1)
CreateDynamicObject(1663,1423.46850586,-1463.66125488,1616.01721191,0.00000000,0.00000000,90.00000000); //object(swivelchair_b)(1)
CreateDynamicObject(1715,1429.84375000,-1463.82238770,1615.30725098,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair2)(1)
CreateDynamicObject(1715,1429.89294434,-1465.00793457,1615.30725098,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair2)(2)
CreateDynamicObject(1715,1429.72021484,-1467.62609863,1615.30725098,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair2)(3)
CreateDynamicObject(1715,1429.74157715,-1468.67639160,1615.30725098,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair2)(4)
CreateDynamicObject(1715,1427.78308105,-1461.31298828,1615.30725098,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair2)(5)
CreateDynamicObject(1715,1426.88012695,-1461.28308105,1615.30725098,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair2)(6)
CreateDynamicObject(1715,1425.97436523,-1461.28002930,1615.30725098,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair2)(7)
CreateDynamicObject(1715,1424.97277832,-1461.20837402,1615.30725098,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair2)(8)
CreateDynamicObject(7191,1437.28918457,-1457.08789062,1617.05957031,0.00000000,0.00000000,90.00000000); //object(vegasnnewfence2b)(22)
CreateDynamicObject(7191,1437.28906250,-1457.08789062,1621.01196289,0.00000000,0.00000000,90.00000000); //object(vegasnnewfence2b)(22)
CreateDynamicObject(2748,1432.50219727,-1467.55810547,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(1)
CreateDynamicObject(2748,1432.51489258,-1469.10644531,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(2)
CreateDynamicObject(2748,1432.49230957,-1464.30419922,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(3)
CreateDynamicObject(2748,1432.48681641,-1463.75097656,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(4)
CreateDynamicObject(2748,1434.92333984,-1463.74829102,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(5)
CreateDynamicObject(2748,1434.91699219,-1464.39526367,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(6)
CreateDynamicObject(2748,1434.89916992,-1467.54174805,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(7)
CreateDynamicObject(2748,1434.90393066,-1469.09204102,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(8)
CreateDynamicObject(2748,1437.19592285,-1463.73388672,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(9)
CreateDynamicObject(2748,1437.19299316,-1464.35852051,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(10)
CreateDynamicObject(2748,1437.29418945,-1467.49597168,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(11)
CreateDynamicObject(2748,1437.30017090,-1469.02490234,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(12)
CreateDynamicObject(949,1439.60009766,-1469.12036133,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(5)
CreateDynamicObject(949,1439.63208008,-1462.39184570,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(6)
CreateDynamicObject(1808,1439.78796387,-1467.36413574,1615.28222656,0.00000000,0.00000000,270.00000000); //object(cj_watercooler2)(3)
CreateDynamicObject(955,1437.03576660,-1457.86987305,1615.68261719,0.00000000,0.00000000,267.00000000); //object(cj_ext_sprunk)(1)
CreateDynamicObject(956,1437.04626465,-1459.65295410,1615.73266602,0.00000000,0.00000000,270.00000000); //object(cj_ext_candy)(1)
CreateDynamicObject(949,1434.11865234,-1457.76928711,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(7)
CreateDynamicObject(2204,1433.39770508,-1462.92846680,1614.36499023,0.00000000,0.00000000,179.99450684); //object(med_office8_cabinet)(16)
CreateDynamicObject(2204,1436.32739258,-1462.92248535,1614.36499023,0.00000000,0.00000000,179.99450684); //object(med_office8_cabinet)(17)
CreateDynamicObject(2204,1437.38452148,-1462.91064453,1614.33996582,0.00000000,0.00000000,179.99450684); //object(med_office8_cabinet)(18)
CreateDynamicObject(2204,1435.41455078,-1462.48754883,1614.31494141,0.00000000,0.00000000,359.99450684); //object(med_office8_cabinet)(19)
CreateDynamicObject(2204,1432.50634766,-1462.50256348,1614.31494141,0.00000000,0.00000000,359.98901367); //object(med_office8_cabinet)(20)
CreateDynamicObject(2204,1431.35961914,-1462.52722168,1614.31494141,0.00000000,0.00000000,359.98901367); //object(med_office8_cabinet)(21)
CreateDynamicObject(2614,1425.14001465,-1466.21911621,1616.09545898,0.00000000,0.00000000,90.00000000); //object(cj_us_flag)(2)
CreateDynamicObject(3027,1446.88952637,-1462.62329102,1612.58471680,0.00000000,0.00000000,0.00000000); //object(ciggy)(1)
CreateDynamicObject(2352,1424.75463867,-1465.66577148,1616.91503906,358.00100708,89.93695068,269.99884033); //object(cj_dyn_plunge_2)(1)
CreateDynamicObject(2894,1424.79467773,-1466.47814941,1616.90563965,0.00000000,0.00000000,270.00000000); //object(kmb_rhymesbook)(1)
CreateDynamicObject(2254,1429.80285645,-1457.20202637,1617.94128418,0.00000000,0.00000000,0.00000000); //object(frame_clip_1)(1)
CreateDynamicObject(976,1414.48632812,-1459.48754883,1612.17199707,0.00000000,0.00000000,0.00000000); //object(phils_compnd_gate)(1)
//=============================Juzgados ext======================================
CreateDynamicObject(10368, 1502.96, -1540.89, 33.05,   0.00, 0.00, 90.00);
//CreateDynamicObject(1232, 1516.53, -1450.87, 18.13,   0.00, 0.00, 0.00);//aquio
//CreateDynamicObject(1232, 1516.53, -1450.87, 18.13,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1540.04, -1495.11, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1506.50, -1495.06, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1548.92, -1522.43, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1549.26, -1546.99, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1549.22, -1566.92, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1549.36, -1580.89, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1503.17, -1557.44, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1522.07, -1544.99, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1523.04, -1523.10, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1481.85, -1557.52, 15.32,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1482.21, -1577.78, 15.32,   0.00, 0.00, 0.00);
//=========================Banco interior =======================================
CreateObject(2894,361.6900000,-1611.9499500,39.2000000,0.0000000,0.0000000,292.2610000); //object(kmb_rhymesbook)(1)
CreateObject(2332,372.1799900,-1613.7500000,38.6300000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(1)
CreateObject(2172,370.9899900,-1614.4899900,38.3600000,0.0000000,0.0000000,262.2240000); //object(med_office2_desk_1)(1)
CreateObject(1723,355.3999900,-1622.8800000,38.2400000,0.0000000,0.0000000,82.2680000); //object(mrk_seating1)(3)
CreateObject(2754,358.9100000,-1628.7500000,39.0800000,0.0000000,0.0000000,262.2250000); //object(otb_machine)(2)
CreateObject(2191,356.5400100,-1613.8599900,38.2500000,0.0000000,0.0000000,83.2130000); //object(med_office2_cab)(4)
CreateObject(14671,360.8700000,-1615.8399700,40.2300000,0.0000000,0.0000000,351.3930000); //object(int_7_11a5)(1)
CreateObject(3944,378.6600000,-1610.7800300,37.4500000,0.0000000,0.0000000,351.4000000); //object(bistro_blok)(1)
CreateObject(3944,378.6700100,-1610.7700200,40.9200000,0.0000000,0.0000000,351.4000000); //object(bistro_blok)(2)
CreateObject(3944,356.7600100,-1614.6999500,37.4500000,0.0000000,0.0000000,81.2690000); //object(bistro_blok)(3)
CreateObject(3944,360.9400000,-1608.0999800,40.9500000,0.0000000,0.0000000,351.3980000); //object(bistro_blok)(4)
CreateObject(3944,360.9394500,-1608.0996100,37.4500000,0.0000000,0.0000000,351.3980000); //object(bistro_blok)(5)
CreateObject(3944,356.7600100,-1614.6999500,40.9500000,0.0000000,0.0000000,81.2660000); //object(bistro_blok)(6)
CreateObject(3944,355.9599900,-1619.6500200,37.4500000,0.0000000,0.0000000,81.2660000); //object(bistro_blok)(8)
CreateObject(3944,355.9700000,-1619.7299800,40.9500000,0.0000000,0.0000000,81.2660000); //object(bistro_blok)(9)
CreateObject(3944,362.7999900,-1628.8900100,37.7400000,0.0000000,0.0000000,171.4600000); //object(bistro_blok)(10)
CreateObject(3944,362.7999900,-1628.8900100,41.2400000,0.0000000,0.0000000,171.4580000); //object(bistro_blok)(11)
CreateObject(3944,377.0300000,-1631.0300300,37.7400000,0.0000000,0.0000000,171.4580000); //object(bistro_blok)(12)
CreateObject(3944,377.0300000,-1631.0300300,41.2400000,0.0000000,0.0000000,171.4580000); //object(bistro_blok)(13)
CreateObject(3944,384.1099900,-1623.8499800,37.7000000,0.0000000,0.0000000,261.3700000); //object(bistro_blok)(14)
CreateObject(3944,384.1099900,-1623.8499800,41.1800000,0.0000000,0.0000000,261.3700000); //object(bistro_blok)(15)
CreateObject(3944,384.8500100,-1619.0699500,37.7000000,0.0000000,0.0000000,261.3700000); //object(bistro_blok)(16)
CreateObject(3944,384.8500100,-1619.0699500,41.1900000,0.0000000,0.0000000,261.3700000); //object(bistro_blok)(17)
CreateObject(2395,357.5799900,-1606.7900400,36.6500000,0.0000000,0.0000000,351.4570000); //object(cj_sports_wall)(1)
CreateObject(2395,361.2699900,-1607.3399700,36.6400000,0.0000000,0.0000000,351.4530000); //object(cj_sports_wall)(2)
CreateObject(2395,364.9599900,-1607.9000200,36.6400000,0.0000000,0.0000000,351.4530000); //object(cj_sports_wall)(3)
CreateObject(2395,368.6499900,-1608.4599600,36.6400000,0.0000000,0.0000000,351.3890000); //object(cj_sports_wall)(4)
CreateObject(2395,372.3299900,-1609.0100100,36.6400000,0.0000000,0.0000000,351.3870000); //object(cj_sports_wall)(5)
CreateObject(2395,375.9299900,-1609.5600600,36.6400000,0.0000000,0.0000000,351.3870000); //object(cj_sports_wall)(6)
CreateObject(2395,379.2000100,-1610.0500500,36.6400000,0.0000000,0.0000000,351.3870000); //object(cj_sports_wall)(7)
CreateObject(2395,382.7900100,-1610.5999800,36.6400000,0.0000000,0.0000000,351.3870000); //object(cj_sports_wall)(8)
CreateObject(2395,384.1900000,-1610.8199500,36.6400000,0.0000000,0.0000000,351.3870000); //object(cj_sports_wall)(9)
CreateObject(2395,386.8500100,-1611.2299800,36.6400000,0.0000000,0.0000000,261.3180000); //object(cj_sports_wall)(11)
CreateObject(2395,386.2800000,-1614.9200400,36.6400000,0.0000000,0.0000000,261.3150000); //object(cj_sports_wall)(12)
CreateObject(2395,385.7200000,-1618.5999800,36.6400000,0.0000000,0.0000000,261.3150000); //object(cj_sports_wall)(13)
CreateObject(2395,385.1600000,-1622.2800300,36.6400000,0.0000000,0.0000000,261.3150000); //object(cj_sports_wall)(14)
CreateObject(2395,384.6000100,-1625.9699700,36.6400000,0.0000000,0.0000000,261.3150000); //object(cj_sports_wall)(15)
CreateObject(2395,384.0400100,-1629.6600300,36.6400000,0.0000000,0.0000000,261.3150000); //object(cj_sports_wall)(16)
CreateObject(2395,383.1099900,-1632.7500000,36.6400000,0.0000000,0.0000000,171.5990000); //object(cj_sports_wall)(17)
CreateObject(2395,379.4400000,-1632.1999500,36.6400000,0.0000000,0.0000000,171.5950000); //object(cj_sports_wall)(18)
CreateObject(2395,375.7500000,-1631.6500200,36.6400000,0.0000000,0.0000000,171.4360000); //object(cj_sports_wall)(19)
CreateObject(2395,372.0600000,-1631.0899700,36.6400000,0.0000000,0.0000000,171.3990000); //object(cj_sports_wall)(20)
CreateObject(2395,368.3700000,-1630.5400400,36.6400000,0.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(21)
CreateObject(2395,364.6799900,-1629.9799800,36.6400000,0.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(22)
CreateObject(2395,361.0000000,-1629.4300500,36.6400000,0.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(23)
CreateObject(2395,357.3100000,-1628.8700000,36.6400000,0.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(24)
CreateObject(2395,355.8800000,-1628.6600300,36.6400000,0.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(25)
CreateObject(2395,353.9100000,-1627.9200400,36.6400000,0.0000000,0.0000000,81.2410000); //object(cj_sports_wall)(26)
CreateObject(2395,354.4800100,-1624.2700200,36.6400000,0.0000000,0.0000000,81.2380000); //object(cj_sports_wall)(27)
CreateObject(2395,355.0400100,-1620.5899700,36.6400000,0.0000000,0.0000000,81.2380000); //object(cj_sports_wall)(28)
CreateObject(2395,355.6200000,-1616.9100300,36.6400000,0.0000000,0.0000000,81.2380000); //object(cj_sports_wall)(29)
CreateObject(2395,356.1700100,-1613.2900400,36.6400000,0.0000000,0.0000000,81.2380000); //object(cj_sports_wall)(30)
CreateObject(2395,356.7300100,-1609.5999800,36.6400000,0.0000000,0.0000000,81.2380000); //object(cj_sports_wall)(31)
CreateObject(2395,356.6700100,-1628.9599600,41.5500000,90.0000000,0.0000000,171.3990000); //object(cj_sports_wall)(32)
CreateObject(2395,360.3299900,-1629.5200200,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(33)
CreateObject(2395,363.9299900,-1630.0699500,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(34)
CreateObject(2395,367.6200000,-1630.6300000,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(35)
CreateObject(2395,371.3100000,-1631.1899400,41.5500000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(36)
CreateObject(2395,374.7500000,-1631.7099600,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(37)
CreateObject(2395,378.1600000,-1632.2299800,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(38)
CreateObject(2395,381.7800000,-1632.7800300,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(39)
CreateObject(2395,385.4500100,-1633.3299600,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(40)
CreateObject(2395,382.1300000,-1630.4799800,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(41)
CreateObject(2395,385.7600100,-1631.0300300,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(42)
CreateObject(2395,378.4400000,-1629.9200400,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(43)
CreateObject(2395,374.7500000,-1629.3599900,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(44)
CreateObject(2395,371.0600000,-1628.8000500,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(45)
CreateObject(2395,367.3700000,-1628.2399900,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(46)
CreateObject(2395,363.6799900,-1627.6800500,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(47)
CreateObject(2395,359.9899900,-1627.1200000,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(48)
CreateObject(2395,356.3100000,-1626.5600600,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(49)
CreateObject(2395,356.7000100,-1623.8499800,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(50)
CreateObject(2395,360.3800000,-1624.4100300,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(51)
CreateObject(2395,364.0400100,-1624.9699700,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(52)
CreateObject(2395,367.7300100,-1625.5300300,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(54)
CreateObject(2395,371.4100000,-1626.0899700,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(55)
CreateObject(2395,375.0900000,-1626.6500200,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(56)
CreateObject(2395,378.7800000,-1627.2099600,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(57)
CreateObject(2395,382.4899900,-1627.7700200,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(58)
CreateObject(2395,386.1600000,-1628.3299600,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(59)
CreateObject(2395,384.2999900,-1625.2800300,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(60)
CreateObject(2395,380.6099900,-1624.7199700,41.5700000,90.0000000,0.0000000,171.3990000); //object(cj_sports_wall)(61)
CreateObject(2395,376.9200100,-1624.1600300,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(62)
CreateObject(2395,373.2500000,-1623.5999800,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(63)
CreateObject(2395,369.5600000,-1623.0400400,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(64)
CreateObject(2395,365.8800000,-1622.4899900,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(65)
CreateObject(2395,362.1700100,-1621.9300500,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(66)
CreateObject(2395,358.4800100,-1621.3700000,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(67)
CreateObject(2395,357.7800000,-1621.2600100,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(68)
CreateObject(2395,358.5499900,-1618.6200000,41.5900000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(69)
CreateObject(2395,358.9500100,-1615.9200400,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(70)
CreateObject(2395,359.3500100,-1613.2099600,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(71)
CreateObject(2395,359.7500000,-1610.5200200,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(72)
CreateObject(2395,360.0199900,-1608.6999500,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(73)
CreateObject(2395,362.2000100,-1619.1700400,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(74)
CreateObject(2395,365.8900100,-1619.7299800,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(75)
CreateObject(2395,369.5900000,-1620.2900400,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(76)
CreateObject(2395,373.2699900,-1620.8399700,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(77)
CreateObject(2395,376.7999900,-1621.3700000,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(78)
CreateObject(2395,380.5000000,-1621.9300500,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(79)
CreateObject(2395,384.1799900,-1622.4899900,41.5700000,90.0000000,0.0000000,171.3990000); //object(cj_sports_wall)(80)
CreateObject(2395,387.8500100,-1623.0500500,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(81)
CreateObject(2395,362.6400100,-1616.4799800,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(82)
CreateObject(2395,366.3400000,-1617.0400400,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(83)
CreateObject(2395,370.0100100,-1617.5999800,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(84)
CreateObject(2395,373.6600000,-1618.1500200,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(85)
CreateObject(2395,377.3400000,-1618.7099600,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(86)
CreateObject(2395,381.0300000,-1619.2700200,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(87)
CreateObject(2395,363.0400100,-1613.7700200,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(88)
CreateObject(2395,363.4400000,-1611.0699500,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(89)
CreateObject(2395,363.6900000,-1609.2600100,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(90)
CreateObject(2395,366.7300100,-1614.3299600,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(91)
CreateObject(2395,367.1300000,-1611.6300000,41.5700000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(92)
CreateObject(2395,367.3900100,-1609.8199500,41.5800000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(93)
CreateObject(2395,370.3999900,-1614.8800000,41.5700000,90.0000000,180.0000000,351.3980000); //object(cj_sports_wall)(94)
CreateObject(2395,370.8200100,-1612.1899400,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(95)
CreateObject(2395,371.0700100,-1610.3800000,41.5800000,90.0000000,180.0000000,351.3980000); //object(cj_sports_wall)(96)
CreateObject(2395,384.6600000,-1619.8199500,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(97)
CreateObject(2395,374.0799900,-1615.4399400,41.5700000,90.0000000,179.9950000,351.3980000); //object(cj_sports_wall)(98)
CreateObject(2395,374.5100100,-1612.7500000,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(99)
CreateObject(2395,374.7500000,-1610.9399400,41.5800000,90.0000000,179.9950000,351.3980000); //object(cj_sports_wall)(100)
CreateObject(2395,377.7699900,-1616.0000000,41.5700000,90.0000000,179.9950000,351.3980000); //object(cj_sports_wall)(101)
CreateObject(2395,378.1700100,-1613.3000500,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(103)
CreateObject(2395,378.4299900,-1611.5000000,41.5800000,90.0000000,179.9950000,351.3980000); //object(cj_sports_wall)(104)
CreateObject(2395,380.9500100,-1610.9100300,39.5000000,90.0000000,179.9950000,351.3980000); //object(cj_sports_wall)(105)
CreateObject(2395,381.8500100,-1613.8599900,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(106)
CreateObject(2395,382.1900000,-1611.6099900,41.5800000,90.0000000,179.9950000,351.3980000); //object(cj_sports_wall)(107)
CreateObject(2395,385.1400100,-1617.1200000,41.5700000,90.0000000,179.9950000,351.3980000); //object(cj_sports_wall)(108)
CreateObject(2395,385.5400100,-1614.4200400,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(109)
CreateObject(2395,385.8599900,-1612.1700400,41.5800000,90.0000000,179.9950000,351.3980000); //object(cj_sports_wall)(110)
CreateObject(2395,388.3599900,-1620.3800000,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(111)
CreateObject(2395,388.8299900,-1617.6800500,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(112)
CreateObject(2395,389.2399900,-1614.9799800,41.5600000,90.0000000,0.0000000,171.3980000); //object(cj_sports_wall)(113)
CreateObject(2395,389.6400100,-1612.2800300,41.5800000,90.0000000,179.9950000,351.3980000); //object(cj_sports_wall)(114)
CreateObject(1557,361.4800100,-1629.5799600,38.1800000,0.0000000,0.0000000,350.6970000); //object(gen_doorext19)(1)
CreateObject(1557,364.4700000,-1630.0300300,38.1800000,0.0000000,0.0000000,172.6050000); //object(gen_doorext19)(2)
CreateObject(977,364.5499900,-1629.9300500,39.3600000,0.0000000,0.0000000,269.1280000); //object(newtowerdoor1)(1)
CreateObject(977,361.4200100,-1629.4699700,39.3200000,0.0000000,0.0000000,269.1270000); //object(newtowerdoor1)(2)
CreateObject(977,362.8900100,-1629.7099600,40.8100000,280.5590000,86.8790000,348.1040000); //object(newtowerdoor1)(3)
CreateObject(2754,357.6099900,-1628.5100100,39.0800000,0.0000000,0.0000000,262.2220000); //object(otb_machine)(3)
CreateObject(3944,380.1000100,-1618.2700200,37.4500000,0.0000000,0.0000000,351.3980000); //object(bistro_blok)(18)
CreateObject(3944,380.7000100,-1614.6600300,37.4500000,0.0000000,0.0000000,171.0230000); //object(bistro_blok)(20)
CreateObject(2332,373.0799900,-1613.8700000,38.6300000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(7)
CreateObject(2332,373.9599900,-1613.9899900,38.6300000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(9)
CreateObject(2332,374.8700000,-1614.1300000,38.6300000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(10)
CreateObject(2332,375.8599900,-1614.3199500,38.6300000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(11)
CreateObject(2332,372.1799900,-1613.7500000,39.4600000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(12)
CreateObject(2332,372.1799900,-1613.7500000,40.3300000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(13)
CreateObject(2332,373.0799900,-1613.8700000,39.5200000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(14)
CreateObject(2332,373.0799900,-1613.8700000,40.3600000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(15)
CreateObject(2332,373.9599900,-1613.9899900,39.5400000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(16)
CreateObject(2332,373.9599900,-1613.9899900,40.3600000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(17)
CreateObject(2332,374.8700000,-1614.1300000,39.4800000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(18)
CreateObject(2332,374.8700000,-1614.1300000,40.3300000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(19)
CreateObject(2332,375.8599900,-1614.3199500,39.5200000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(20)
CreateObject(2332,375.8599900,-1614.3199500,40.3500000,0.0000000,0.0000000,171.0350000); //object(kev_safe)(21)
CreateObject(1550,385.7500000,-1615.9399400,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(1)
CreateObject(1550,385.8200100,-1615.3700000,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(2)
CreateObject(1550,385.8900100,-1614.8199500,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(3)
CreateObject(1550,385.9100000,-1614.2600100,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(4)
CreateObject(1550,385.9100000,-1613.6300000,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(5)
CreateObject(1550,386.0700100,-1613.0899700,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(6)
CreateObject(1550,386.2600100,-1612.5300300,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(7)
CreateObject(1550,386.3200100,-1611.8800000,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(8)
CreateObject(1550,385.0799900,-1615.6099900,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(9)
CreateObject(1550,385.1799900,-1615.1500200,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(10)
CreateObject(1550,385.2500000,-1614.5000000,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(11)
CreateObject(1550,385.3400000,-1613.9799800,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(12)
CreateObject(1550,385.4299900,-1613.3900100,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(13)
CreateObject(1550,385.4800100,-1612.6800500,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(14)
CreateObject(1550,385.7200000,-1612.1300000,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(15)
CreateObject(1550,385.7699900,-1611.5200200,38.6400000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(16)
CreateObject(1550,385.8200100,-1615.9499500,39.4300000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(17)
CreateObject(1550,385.7500000,-1615.3900100,39.4300000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(18)
CreateObject(1550,385.6600000,-1614.6800500,39.4200000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(19)
CreateObject(1550,385.7900100,-1614.1600300,39.4300000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(20)
CreateObject(1550,385.8999900,-1613.5000000,39.4300000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(21)
CreateObject(1550,385.9100000,-1612.9799800,39.4300000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(22)
CreateObject(1550,386.2000100,-1612.4100300,39.4300000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(23)
CreateObject(1550,386.4700000,-1611.7199700,39.4300000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(24)
CreateObject(3383,380.9800100,-1614.8000500,38.2500000,0.0000000,0.0000000,351.9050000); //object(a51_labtable1_)(1)
CreateObject(1212,381.9658200,-1615.2441400,39.1494800,0.0000000,0.0000000,0.0000000); //object(money)(1)
CreateObject(1274,363.0199900,-1629.7199700,40.8000000,0.0000000,0.0000000,165.6720000); //object(bigdollar)(1)
CreateObject(1210,382.3200100,-1615.0500500,39.4500000,0.0000000,0.0000000,44.5220000); //object(briefcase)(1)
CreateObject(1210,382.0199900,-1614.7299800,39.4500000,0.0000000,0.0000000,44.5220000); //object(briefcase)(2)
CreateObject(1550,381.2300100,-1614.5400400,39.7000000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(29)
CreateObject(1550,380.2500000,-1614.2800300,39.7000000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag)(30)
CreateObject(2191,379.8299900,-1610.6500200,38.2500000,0.0000000,0.0000000,351.2930000); //object(med_office2_cab)(5)
CreateObject(2191,381.4599900,-1610.9599600,38.2500000,0.0000000,0.0000000,351.2880000); //object(med_office2_cab)(6)
CreateObject(2191,376.4299900,-1610.1700400,38.2500000,0.0000000,0.0000000,351.2880000); //object(med_office2_cab)(7)
CreateObject(2191,378.0799900,-1610.4399400,38.2500000,0.0000000,0.0000000,351.2880000); //object(med_office2_cab)(8)
CreateObject(14855,358.9899900,-1612.8299600,42.7000000,0.0000000,0.0000000,354.3600000); //object(counterb)(1)
CreateObject(14855,376.5400100,-1620.1300000,42.6500000,0.0000000,0.0000000,259.4820000); //object(counterb)(2)
CreateObject(2894,361.8200100,-1609.8199500,39.2000000,0.0000000,0.0000000,292.2580000); //object(kmb_rhymesbook)(3)
CreateObject(2894,361.3500100,-1614.8000500,39.2000000,0.0000000,0.0000000,292.2580000); //object(kmb_rhymesbook)(4)
CreateObject(2894,360.0499900,-1616.9399400,39.2000000,0.0000000,0.0000000,292.2580000); //object(kmb_rhymesbook)(5)
CreateObject(2894,371.6300000,-1619.7099600,39.2000000,0.0000000,0.0000000,88.0870000); //object(kmb_rhymesbook)(6)
CreateObject(2894,373.7900100,-1621.9499500,39.2000000,0.0000000,0.0000000,143.7360000); //object(kmb_rhymesbook)(7)
CreateObject(2894,376.7900100,-1622.8499800,39.2000000,0.0000000,0.0000000,143.7340000); //object(kmb_rhymesbook)(8)
CreateObject(2894,379.9400000,-1623.4200400,39.2000000,0.0000000,0.0000000,143.7340000); //object(kmb_rhymesbook)(9)
CreateObject(1723,354.8400000,-1626.9000200,38.2400000,0.0000000,0.0000000,82.2650000); //object(mrk_seating1)(4)
CreateObject(2754,356.3100000,-1628.3800000,39.0800000,0.0000000,0.0000000,262.2220000); //object(otb_machine)(4)
CreateObject(2754,360.1799900,-1628.9599600,39.0800000,0.0000000,0.0000000,262.2220000); //object(otb_machine)(5)
CreateObject(2754,366.3700000,-1629.6099900,39.0800000,0.0000000,0.0000000,262.2220000); //object(otb_machine)(6)
CreateObject(2754,367.5300000,-1629.8900100,39.0800000,0.0000000,0.0000000,262.2220000); //object(otb_machine)(7)
CreateObject(2754,368.8500100,-1630.0699500,39.0800000,0.0000000,0.0000000,262.2220000); //object(otb_machine)(8)
CreateObject(2754,370.2500000,-1630.3499800,39.0800000,0.0000000,0.0000000,262.2220000); //object(otb_machine)(9)
CreateObject(1723,383.2600100,-1629.3000500,38.2300000,0.0000000,0.0000000,262.2700000); //object(mrk_seating1)(5)
CreateObject(1723,384.0300000,-1625.9200400,38.2300000,0.0000000,0.0000000,260.3220000); //object(mrk_seating1)(6)
CreateObject(14855,385.8200100,-1619.1300000,42.6500000,0.0000000,0.0000000,348.5260000); //object(counterb)(4)
CreateObject(1722,380.6300000,-1632.0600600,38.2500000,0.0000000,0.0000000,350.2790000); //object(off_chairnu)(7)
CreateObject(2172,367.6300000,-1614.1400100,38.2500000,0.0000000,0.0000000,262.2220000); //object(med_office2_desk_1)(3)
CreateObject(2172,367.1799900,-1617.5899700,38.2500000,0.0000000,0.0000000,262.2220000); //object(med_office2_desk_1)(4)
CreateObject(2172,368.3800000,-1608.9100300,38.2500000,0.0000000,0.0000000,262.2220000); //object(med_office2_desk_1)(5)
CreateObject(2172,369.1900000,-1610.0600600,38.2500000,0.0000000,0.0000000,81.2000000); //object(med_office2_desk_1)(6)
CreateObject(2172,368.4200100,-1615.2900400,38.2500000,0.0000000,0.0000000,81.2000000); //object(med_office2_desk_1)(7)
CreateObject(2172,368.0000000,-1618.6999500,38.2500000,0.0000000,0.0000000,81.2000000); //object(med_office2_desk_1)(8)
CreateObject(1714,365.9700000,-1618.2800300,38.2500000,0.0000000,0.0000000,77.9140000); //object(kb_swivelchair1)(9)
CreateObject(1714,366.5400100,-1614.7500000,38.2500000,0.0000000,0.0000000,77.9100000); //object(kb_swivelchair1)(10)
CreateObject(1714,367.2600100,-1609.6600300,38.2500000,0.0000000,0.0000000,77.9100000); //object(kb_swivelchair1)(11)
CreateObject(1714,370.2000100,-1609.6099900,38.2500000,0.0000000,0.0000000,259.8200000); //object(kb_swivelchair1)(12)
CreateObject(1714,369.3999900,-1614.5999800,38.2500000,0.0000000,0.0000000,259.8160000); //object(kb_swivelchair1)(13)
CreateObject(1714,368.8200100,-1618.3000500,38.2500000,0.0000000,0.0000000,259.8160000); //object(kb_swivelchair1)(14)
CreateObject(1714,370.0499900,-1615.1700400,38.2500000,0.0000000,0.0000000,77.9100000); //object(kb_swivelchair1)(15)
CreateObject(2921,360.8599900,-1629.5400400,40.6400000,0.0000000,0.0000000,253.6470000); //object(kmb_cam)(1)
CreateObject(2921,373.6494100,-1609.0693400,41.0100000,0.0000000,0.0000000,60.6060000); //object(kmb_cam)(2)
CreateObject(2191,384.4400000,-1618.6099900,38.2500000,0.0000000,0.0000000,352.2220000); //object(med_office2_cab)(10)
CreateObject(2191,356.8400000,-1611.8700000,38.2500000,0.0000000,0.0000000,83.2100000); //object(med_office2_cab)(11)
CreateObject(2191,357.3900100,-1608.1600300,38.2500000,0.0000000,0.0000000,83.2100000); //object(med_office2_cab)(12)
CreateObject(2191,357.0900000,-1610.0799600,38.2500000,0.0000000,0.0000000,83.2100000); //object(med_office2_cab)(13)
CreateObject(2191,356.2197300,-1615.7197300,38.2500000,0.0000000,0.0000000,83.2100000); //object(med_office2_cab)(14)
CreateObject(2191,382.6099900,-1618.2700200,38.2500000,0.0000000,0.0000000,352.2160000); //object(med_office2_cab)(15)
CreateObject(2191,380.7200000,-1618.0699500,38.2500000,0.0000000,0.0000000,352.2160000); //object(med_office2_cab)(16)
CreateObject(2191,378.8800000,-1617.7800300,38.2500000,0.0000000,0.0000000,352.2160000); //object(med_office2_cab)(17)
CreateObject(2191,376.8800000,-1617.5600600,38.2500000,0.0000000,0.0000000,352.2160000); //object(med_office2_cab)(18)
CreateObject(2191,374.7300100,-1617.2600100,38.2500000,0.0000000,0.0000000,352.2160000); //object(med_office2_cab)(19)
CreateObject(2245,359.3299900,-1617.8299600,39.5100000,0.0000000,0.0000000,0.0000000); //object(plant_pot_11)(1)
CreateObject(2245,361.9599900,-1612.9200400,39.5100000,0.0000000,0.0000000,0.0000000); //object(plant_pot_11)(2)
CreateObject(2245,362.1499900,-1608.5799600,39.5100000,0.0000000,0.0000000,0.0000000); //object(plant_pot_11)(3)
CreateObject(2245,372.1799900,-1621.0000000,39.4600000,0.0000000,0.0000000,0.0000000); //object(plant_pot_11)(4)
CreateObject(2245,378.1900000,-1623.2900400,39.4600000,0.0000000,0.0000000,0.0000000); //object(plant_pot_11)(5)
CreateObject(2001,365.0300000,-1629.3499800,38.2500000,0.0000000,0.0000000,0.0000000); //object(nu_plant_ofc)(1)
CreateObject(2001,361.6300000,-1628.4499500,38.2500000,0.0000000,0.0000000,0.0000000); //object(nu_plant_ofc)(2)
CreateObject(2001,384.8400000,-1621.0200200,38.2500000,0.0000000,0.0000000,0.0000000); //object(nu_plant_ofc)(3)
CreateObject(2001,359.3500100,-1607.5000000,38.2500000,0.0000000,0.0000000,0.0000000); //object(nu_plant_ofc)(4)
CreateObject(2001,365.2800000,-1608.3599900,38.2500000,0.0000000,0.0000000,0.0000000); //object(nu_plant_ofc)(5)
CreateObject(2001,355.6900000,-1619.6099900,38.2500000,0.0000000,0.0000000,0.0000000); //object(nu_plant_ofc)(6)
CreateObject(2001,355.2099900,-1627.8900100,38.2500000,0.0000000,0.0000000,0.0000000); //object(nu_plant_ofc)(7)
CreateObject(2001,372.2500000,-1630.5000000,38.2500000,0.0000000,0.0000000,0.0000000); //object(nu_plant_ofc)(8)
CreateObject(2001,382.9200100,-1632.2900400,38.2500000,0.0000000,0.0000000,0.0000000); //object(nu_plant_ofc)(9)
CreateObject(1722,379.2999900,-1631.9000200,38.2500000,0.0000000,0.0000000,350.2770000); //object(off_chairnu)(8)
CreateObject(1722,377.8299900,-1631.6500200,38.2500000,0.0000000,0.0000000,350.2770000); //object(off_chairnu)(9)
CreateObject(1722,376.1799900,-1631.4499500,38.2500000,0.0000000,0.0000000,350.2770000); //object(off_chairnu)(10)
CreateObject(1722,373.6600000,-1631.1500200,38.2500000,0.0000000,0.0000000,350.2770000); //object(off_chairnu)(11)
CreateObject(1722,374.8700000,-1631.1899400,38.2500000,0.0000000,0.0000000,350.2770000); //object(off_chairnu)(12)
CreateObject(1671,359.3700000,-1615.3100600,38.7100000,0.0000000,0.0000000,56.5320000); //object(swivelchair_a)(1)
CreateObject(1671,360.1191400,-1610.5195300,38.7100000,0.0000000,0.0000000,77.9100000); //object(swivelchair_a)(2)
CreateObject(1671,379.7600100,-1621.5999800,38.7100000,0.0000000,0.0000000,349.7460000); //object(swivelchair_a)(3)
CreateObject(1671,374.4599900,-1620.2399900,38.7100000,0.0000000,0.0000000,327.4830000); //object(swivelchair_a)(4)
CreateObject(1671,376.9400000,-1620.9599600,38.7100000,0.0000000,0.0000000,0.8720000); //object(swivelchair_a)(5)
CreateObject(14532,355.4500100,-1623.8399700,39.2300000,0.0000000,0.0000000,259.8240000); //object(tv_stand_driv)(1)
CreateObject(2773,362.0400100,-1627.4599600,38.7700000,0.0000000,0.0000000,3.3550000); //object(cj_airprt_bar)(1)
CreateObject(2773,364.8100000,-1627.9799800,38.7700000,0.0000000,0.0000000,347.3620000); //object(cj_airprt_bar)(2)
CreateObject(2773,379.8400000,-1625.3199500,38.7700000,0.0000000,0.0000000,347.3600000); //object(cj_airprt_bar)(3)
CreateObject(2773,376.0300000,-1624.6300000,38.7700000,0.0000000,0.0000000,347.3600000); //object(cj_airprt_bar)(4)
CreateObject(2773,374.5000000,-1624.4599600,38.7700000,0.0000000,0.0000000,347.3600000); //object(cj_airprt_bar)(5)
CreateObject(2773,362.9899900,-1614.3800000,38.7700000,0.0000000,0.0000000,263.0820000); //object(cj_airprt_bar)(6)
CreateObject(2773,370.0195300,-1621.0195300,38.7700000,0.0000000,0.0000000,320.6740000); //object(cj_airprt_bar)(7)
CreateObject(2773,363.9200100,-1608.8800000,38.7700000,0.0000000,0.0000000,263.0790000); //object(cj_airprt_bar)(8)
CreateObject(2773,358.8400000,-1619.6200000,38.7700000,0.0000000,0.0000000,207.4260000); //object(cj_airprt_bar)(9)
CreateObject(2773,362.7900100,-1615.6400100,38.7700000,0.0000000,0.0000000,232.1600000); //object(cj_airprt_bar)(10)
CreateObject(2773,371.3100000,-1612.8499800,38.7700000,0.0000000,0.0000000,172.6170000); //object(cj_airprt_bar)(11)
CreateObject(2773,371.6900000,-1610.2500000,38.7700000,0.0000000,0.0000000,172.6120000); //object(cj_airprt_bar)(12)
CreateObject(2775,372.6700100,-1621.4599600,41.3500000,0.0000000,0.0000000,323.2530000); //object(cj_airprt_mon)(1)
CreateObject(2775,378.5199900,-1623.1200000,41.3500000,0.0000000,0.0000000,355.2310000); //object(cj_airprt_mon)(2)
CreateObject(2775,378.5195300,-1623.1191400,41.3500000,0.0000000,0.0000000,355.2260000); //object(cj_airprt_mon)(3)
CreateObject(2775,360.5199900,-1616.8000500,41.4200000,0.0000000,0.0000000,46.9990000); //object(cj_airprt_mon)(4)
CreateObject(2775,362.2800000,-1610.8299600,41.3600000,0.0000000,0.0000000,81.7970000); //object(cj_airprt_mon)(5)
CreateObject(2257,377.6600000,-1631.9699700,40.2600000,0.0000000,0.0000000,171.7960000); //object(frame_clip_4)(1)
CreateObject(2395,381.4400000,-1616.5500500,41.5700000,90.0000000,179.9950000,351.3980000); //object(cj_sports_wall)(115)
CreateObject(964,268.0100100,-1619.7800300,45.8500000,89.4180000,0.0040000,77.9110000); //object(cj_metal_crate)(1)
CreateObject(964,268.0100100,-1619.7800300,44.5600000,89.4180000,0.0000000,77.9100000); //object(cj_metal_crate)(2)
CreateObject(964,268.0100100,-1619.7800300,43.2800000,89.4180000,0.0000000,77.9100000); //object(cj_metal_crate)(3)
CreateObject(964,270.3299900,-1620.2099600,45.5200000,89.4180000,0.0000000,78.0690000); //object(cj_metal_crate)(4)
CreateObject(964,269.3500100,-1620.0500500,43.9800000,0.0000000,0.0000000,257.8770000); //object(cj_metal_crate)(6)
CreateObject(964,270.5799900,-1620.3199500,43.9800000,0.0000000,0.0000000,257.8770000); //object(cj_metal_crate)(7)
CreateObject(964,269.3500100,-1620.0500500,45.5800000,0.0000000,0.0000000,257.8770000); //object(cj_metal_crate)(9)
CreateObject(964,270.5799900,-1620.3199500,45.5800000,0.0000000,0.0000000,257.8770000); //object(cj_metal_crate)(10)
CreateObject(964,269.3500100,-1620.0500500,42.6200000,0.0000000,0.0000000,257.8770000); //object(cj_metal_crate)(11)
CreateObject(964,270.3299900,-1620.2099600,43.5600000,89.4120000,0.0000000,78.0690000); //object(cj_metal_crate)(13)
CreateObject(964,270.5799900,-1620.3199500,42.6200000,0.0000000,0.0000000,257.8770000); //object(cj_metal_crate)(15)
CreateObject(964,279.6400100,-1621.9399400,45.5800000,0.0000000,0.0000000,257.8770000); //object(cj_metal_crate)(16)
CreateObject(964,280.8900100,-1622.1700400,45.5800000,0.0000000,0.0000000,257.8770000); //object(cj_metal_crate)(17)
CreateObject(964,278.1700100,-1621.6600300,45.8400000,89.4120000,0.0000000,79.2200000); //object(cj_metal_crate)(18)
CreateObject(964,278.1700100,-1621.6600300,44.5900000,89.4070000,0.0000000,79.2170000); //object(cj_metal_crate)(19)
CreateObject(964,279.6400100,-1621.9399400,44.0200000,0.0000000,0.0000000,257.8770000); //object(cj_metal_crate)(20)
CreateObject(964,280.8900100,-1622.1700400,44.0200000,0.0000000,0.0000000,257.8770000); //object(cj_metal_crate)(21)
CreateObject(964,278.1700100,-1621.6600300,43.3500000,89.4070000,0.0000000,79.2170000); //object(cj_metal_crate)(22)
CreateObject(964,280.6400100,-1622.1200000,43.3900000,89.4070000,0.0000000,79.2170000); //object(cj_metal_crate)(23)
CreateObject(964,280.6300000,-1622.1200000,44.6300000,89.4070000,0.0000000,79.2170000); //object(cj_metal_crate)(24)
CreateObject(964,280.6200000,-1622.1200000,45.9000000,89.4070000,0.0000000,78.1610000); //object(cj_metal_crate)(25)
CreateObject(964,288.6099900,-1623.5000000,43.2700000,89.4070000,0.0000000,77.2730000); //object(cj_metal_crate)(26)
CreateObject(964,288.6099900,-1623.5100100,44.2800000,89.4070000,0.0000000,77.2720000); //object(cj_metal_crate)(27)
CreateObject(964,288.6099900,-1623.5000000,45.5100000,89.4070000,0.0000000,77.2720000); //object(cj_metal_crate)(28)
CreateObject(964,289.3100000,-1623.6500200,45.0500000,44.6980000,0.0000000,77.2720000); //object(cj_metal_crate)(29)
CreateObject(964,290.1400100,-1623.8299600,44.2200000,44.6920000,0.0000000,77.2670000); //object(cj_metal_crate)(30)
CreateObject(964,290.9899900,-1623.9499500,43.3700000,44.6920000,0.0000000,77.2670000); //object(cj_metal_crate)(31)
CreateObject(964,291.4299900,-1624.0200200,42.9300000,44.6920000,0.0000000,77.2670000); //object(cj_metal_crate)(32)
CreateObject(964,291.7900100,-1624.1600300,43.1800000,89.4070000,0.0000000,77.2720000); //object(cj_metal_crate)(33)
CreateObject(964,291.7900100,-1624.1600300,44.4300000,89.4070000,0.0000000,77.2720000); //object(cj_metal_crate)(34)
CreateObject(964,291.7900100,-1624.1500200,45.4500000,89.4070000,0.0000000,77.2720000); //object(cj_metal_crate)(35)
CreateObject(964,297.7699900,-1625.1099900,44.1700000,89.4070000,0.0000000,77.2720000); //object(cj_metal_crate)(37)
CreateObject(964,298.4800100,-1625.2500000,43.6800000,40.8050000,0.0000000,77.2670000); //object(cj_metal_crate)(39)
CreateObject(964,299.3599900,-1625.4000200,42.9100000,40.8030000,0.0000000,77.2610000); //object(cj_metal_crate)(40)
CreateObject(964,299.6499900,-1625.4499500,42.6600000,40.8030000,0.0000000,77.2610000); //object(cj_metal_crate)(41)
CreateObject(964,300.1099900,-1625.6400100,44.9500000,317.2160000,0.0000000,77.2560000); //object(cj_metal_crate)(43)
CreateObject(964,299.2000100,-1625.3800000,44.0700000,317.2140000,0.0000000,77.2500000); //object(cj_metal_crate)(44)
CreateObject(964,297.7800000,-1625.1099900,42.8800000,89.4070000,0.0000000,77.2720000); //object(cj_metal_crate)(45)
CreateObject(964,297.7600100,-1625.1099900,45.4300000,89.4070000,0.0000000,77.2720000); //object(cj_metal_crate)(46)
CreateObject(3044,398.6000100,-1617.4499500,37.8500000,0.0000000,0.0000000,0.0000000); //object(cigar)(1)
CreateObject(3044,398.6099900,-1617.5699500,37.8500000,0.0000000,0.0000000,0.0000000); //object(cigar)(2)
CreateObject(3044,398.7200000,-1617.4699700,37.8500000,0.0000000,0.0000000,270.9550000); //object(cigar)(3)
CreateObject(3044,398.4800100,-1617.4499500,37.8500000,0.0000000,0.0000000,0.0000000); //object(cigar)(5)
CreateObject(3044,398.4800100,-1617.5500500,37.8500000,0.0000000,0.0000000,0.0000000); //object(cigar)(6)
CreateObject(3044,398.7300100,-1617.6700400,37.8500000,0.0000000,0.0000000,272.8990000); //object(cigar)(7)
CreateObject(3044,398.5300000,-1617.4599600,37.8500000,0.0000000,0.0000000,328.5480000); //object(cigar)(8)
CreateObject(3044,398.4800100,-1617.5300300,37.8500000,0.0000000,0.0000000,328.5460000); //object(cigar)(9)
CreateObject(3044,398.6099900,-1617.4699700,37.8500000,0.0000000,0.0000000,272.8930000); //object(cigar)(10)
CreateObject(3044,398.7500000,-1617.7600100,37.8500000,0.0000000,0.0000000,272.8890000); //object(cigar)(11)
CreateObject(3044,398.6499900,-1617.7600100,37.8500000,0.0000000,0.0000000,272.8890000); //object(cigar)(12)
CreateObject(3044,398.6700100,-1617.9300500,37.8500000,0.0000000,0.0000000,272.8890000); //object(cigar)(13)
CreateObject(3044,398.7800000,-1617.9300500,37.8500000,0.0000000,0.0000000,272.8890000); //object(cigar)(14)
CreateObject(3044,398.6200000,-1617.8199500,37.8500000,0.0000000,0.0000000,1.9340000); //object(cigar)(15)
CreateObject(3044,398.6200000,-1617.7500000,37.8500000,0.0000000,0.0000000,1.9340000); //object(cigar)(16)
CreateObject(3044,398.5000000,-1617.7600100,37.8500000,0.0000000,0.0000000,1.9340000); //object(cigar)(17)
CreateObject(3044,398.5000000,-1617.8199500,37.8500000,0.0000000,0.0000000,1.9340000); //object(cigar)(18)
CreateObject(3044,398.6700100,-1618.0300300,37.8500000,0.0000000,0.0000000,272.8890000); //object(cigar)(19)
CreateObject(3044,398.7800000,-1618.0300300,37.8500000,0.0000000,0.0000000,272.8840000); //object(cigar)(20)
CreateObject(3044,398.7800000,-1618.1700400,37.8500000,0.0000000,0.0000000,272.8840000); //object(cigar)(21)
CreateObject(3044,398.6799900,-1618.1700400,37.8500000,0.0000000,0.0000000,272.8840000); //object(cigar)(22)
CreateObject(3044,398.5799900,-1618.3000500,37.8500000,0.0000000,0.0000000,183.8390000); //object(cigar)(23)
CreateObject(3044,398.7900100,-1618.2600100,37.8500000,0.0000000,0.0000000,272.8790000); //object(cigar)(24)
CreateObject(3044,398.6900000,-1618.2600100,37.8500000,0.0000000,0.0000000,272.8780000); //object(cigar)(25)
CreateObject(3044,398.4400000,-1618.2800300,37.8500000,0.0000000,0.0000000,1.9230000); //object(cigar)(26)
	// -====================== LSPD Interior (by CodeMan) =============================-
	CreateDynamicObject(2886, 244.84130859375, 77.09822845459, 1003.8363037109, 0, 0, 90, 0, 6);
	CreateDynamicObject(2886, 247.96560668945, 74.597625732422, 1003.8363037109, 0, 0, 270, 0, 6);
	CreateDynamicObject(2886, 226.36407470703, 73.719345092773, 1005.2398681641, 0, 0, 90, 0, 6);
	CreateDynamicObject(2615, 216.92349243164, 67.561538696289, 1005.8748779297, 0, 0, 90.030029296875, 0, 6);
	CreateDynamicObject(2612, 220.72543334961, 72.770309448242, 1006.1749267578, 0, 0, 0, 0, 6);
	CreateDynamicObject(2616, 216.97341918945, 70.674957275391, 1005.9150390625, 0, 0, 90.060028076172, 0, 6);
	CreateDynamicObject(2614, 221.81564331055, 67.515487670898, 1005.6319580078, 0, 0, 269.96008300781, 0, 6);
	CreateDynamicObject(1810, 220.21421813965, 67.719902038574, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.2138671875, 69.069717407227, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.2138671875, 70.769348144531, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.2138671875, 72.093589782715, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 72.0927734375, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 70.667762756348, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 69.016967773438, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 67.666595458984, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 218.9638671875, 66.266036987305, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(1810, 220.18887329102, 66.265625, 1004.0390625, 0, 0, 270, 0, 6);
	CreateDynamicObject(2180, 255.23165893555, 82.261199951172, 1001.4453125, 0, 0, 90, 0, 6);
	CreateDynamicObject(2180, 255.2314453125, 84.18579864502, 1001.4453125, 0, 0, 90, 0, 6);
	CreateDynamicObject(2180, 255.2314453125, 86.085540771484, 1001.4453125, 0, 0, 90, 0, 6);
	CreateDynamicObject(2073, 255.19268798828, 83.772262573242, 1004.3923950195, 0, 0, 0, 0, 6);
	CreateDynamicObject(2073, 255.1923828125, 87.521484375, 1004.3923950195, 0, 0, 0, 0, 6);
	CreateDynamicObject(2121, 256.74890136719, 82.969360351563, 1001.9585571289, 0, 0, 270, 0, 6);
	CreateDynamicObject(2121, 256.748046875, 84.793815612793, 1001.9585571289, 0, 0, 270, 0, 6);
	CreateDynamicObject(2121, 256.748046875, 86.717994689941, 1001.9585571289, 0, 0, 270, 0, 6);
	CreateDynamicObject(2121, 253.64807128906, 82.96875, 1001.9585571289, 0, 0, 90, 0, 6);
	CreateDynamicObject(2121, 253.6474609375, 84.69376373291, 1001.9585571289, 0, 0, 90, 0, 6);
	CreateDynamicObject(2121, 253.6474609375, 86.593383789063, 1001.9585571289, 0, 0, 90, 0, 6);
	CreateDynamicObject(1649, 255.92436218262, 83.734672546387, 1003.0633544922, 0, 0, 0, 0, 6);
	CreateDynamicObject(1649, 255.923828125, 83.909400939941, 1003.0633544922, 0, 0, 180, 0, 6);
	CreateDynamicObject(1649, 255.923828125, 85.683441162109, 1003.0633544922, 0, 0, 179.99450683594, 0, 6);
	CreateDynamicObject(1649, 255.923828125, 85.859474182129, 1003.0633544922, 0, 0, 0, 0, 6);
	CreateDynamicObject(2922, 250.87344360352, 88.255447387695, 1003.1617431641, 0, 0, 272.65997314453, 0, 6);
	CreateDynamicObject(2966, 255.19311523438, 86.556129455566, 1002.2766723633, 0, 0, 0, 0, 6);
	CreateDynamicObject(2967, 255.20861816406, 84.935287475586, 1002.2469482422, 0, 0, 0, 0, 6);
	CreateDynamicObject(2967, 255.14236450195, 82.912994384766, 1002.2469482422, 0, 0, 0, 0, 6);
	CreateDynamicObject(1649, 255.31187438965, 84.655776977539, 1003.1110839844, 0, 0, 89.325012207031, 0, 6);
	CreateDynamicObject(1649, 255.3115234375, 84.6552734375, 1003.1110839844, 0, 0, 272.01943969727, 0, 6);
	CreateDynamicObject(1892, 246.2585144043, 63.024715423584, 1002.640625, 0, 0, 0, 0, 6);
	CreateDynamicObject(1737, 217.97715759277, 76.868797302246, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1649, 218.17239379883, 73.885864257813, 1007.0811767578, 0, 0, 179.98498535156, 0, 6);
	CreateDynamicObject(1737, 217.9765625, 78.418212890625, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.9765625, 79.918060302734, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.02679443359, 79.91796875, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.0263671875, 76.86784362793, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1737, 217.0263671875, 78.392280578613, 1004.0390625, 0, 0, 90, 0, 6);
	CreateDynamicObject(1810, 217.42031860352, 75.677513122559, 1004.0390625, 0, 0, 180, 0, 6);
	CreateDynamicObject(1616, 221.47817993164, 74.085952758789, 1007.4117431641, 0, 0, 0, 0, 6);
	CreateDynamicObject(2595, 217.28680419922, 79.932136535645, 1005.1920166016, 0, 0, 316.32998657227, 0, 6);
	CreateDynamicObject(1665, 217.67994689941, 76.964950561523, 1004.8448486328, 0, 0, 0, 0, 6);
	// -================================= Umbrella 7 HQ (by CodeMan) Interior ==================================-
	CreateDynamicObject(4100, 246.36463928223, 119.71284484863, 1005.1206054688, 0, 0, 320.05004882813, 0, 10);
	CreateDynamicObject(1649, 239.71058654785, 112.79557800293, 1004.1369018555, 0, 0, 87.529998779297, 0, 10);
	CreateDynamicObject(1649, 253.23483276367, 117.16996002197, 1004.1369018555, 0, 0, 270, 0, 10);
	CreateDynamicObject(2412, 247.86611938477, 107.81639862061, 1002.21875, 0, 0, 0, 0, 10);
	CreateDynamicObject(2422, 251.03385925293, 119.36734771729, 1003.4171142578, 0, 0, 135.25006103516, 0, 10);
	CreateDynamicObject(1616, 252.55616760254, 107.15997314453, 1006.358215332, 0, 0, 0, 0, 10);
	CreateDynamicObject(11319, 247.77908325195, 107.32563018799, 1001.8242797852, 0, 0, 0, 0, 10);
	CreateDynamicObject(11319, 244.82836914063, 107.3251953125, 1001.8493041992, 0, 0, 0, 0, 10);
	CreateDynamicObject(2412, 245.49084472656, 107.81639862061, 1002.21875, 0, 0, 0, 0, 10);
	CreateDynamicObject(1649, 246.3212890625, 108.83835601807, 1004.6840820313, 270, 90, 0, 0, 10);
	CreateDynamicObject(1569, 247.81130981445, 110.8671875, 1002.21875, 0, 0, 179.73498535156, 0, 10);
	//---------------------------------------------Guarida ilegal-------------------------------------------//
CreateDynamicObject(987,2337.19995117,-648.40002441,128.19999695,0.00000000,0.00000000,270.00000000); //object(elecfence_bar) (1)
CreateDynamicObject(987,2337.19995117,-660.50000000,128.69999695,0.00000000,0.00000000,270.00000000); //object(elecfence_bar) (2)
CreateDynamicObject(987,2337.39990234,-636.70001221,129.00000000,0.00000000,0.00000000,270.00000000); //object(elecfence_bar) (3)
CreateDynamicObject(987,2337.50000000,-673.20001221,130.80000305,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (4)
CreateDynamicObject(987,2349.50000000,-673.20001221,130.00000000,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (5)
CreateDynamicObject(987,2360.69995117,-673.00000000,129.00000000,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (6)
CreateDynamicObject(987,2372.50000000,-673.00000000,127.00000000,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (7)
CreateDynamicObject(987,2385.19995117,-636.59997559,125.59999847,0.00000000,0.00000000,180.00000000); //object(elecfence_bar) (8)
CreateDynamicObject(987,2349.19995117,-636.79998779,130.39999390,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (9)
CreateDynamicObject(987,2361.19995117,-636.79998779,128.80000305,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (10)
CreateDynamicObject(987,2373.30004883,-636.59997559,126.59999847,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (11)
CreateDynamicObject(987,2385.19995117,-648.79998779,126.30000305,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (12)
CreateDynamicObject(987,2384.69995117,-672.90002441,126.69999695,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (13)
CreateDynamicObject(4574,2350.19995117,-653.59997559,159.10000610,0.00000000,0.00000000,0.00000000); //object(stolenbuilds13) (1)
CreateDynamicObject(11489,2374.89990234,-664.09997559,127.59999847,0.00000000,0.00000000,180.00000000); //object(dam_statues) (1)
CreateDynamicObject(1278,2337.39990234,-672.59997559,145.10000610,0.00000000,0.00000000,0.00000000); //object(sub_floodlite) (1)
CreateDynamicObject(1278,2337.60009766,-636.90002441,144.60000610,0.00000000,0.00000000,0.00000000); //object(sub_floodlite) (2)
CreateDynamicObject(1278,2384.69995117,-637.29998779,139.89999390,0.00000000,0.00000000,0.00000000); //object(sub_floodlite) (3)
CreateDynamicObject(1278,2384.19995117,-672.79998779,141.00000000,0.00000000,0.00000000,0.00000000); //object(sub_floodlite) (4)
CreateDynamicObject(1292,2385.69995117,-661.70001221,127.40000153,0.00000000,0.00000000,0.00000000); //object(postbox1_d) (1)
CreateDynamicObject(1251,2361.30004883,-650.79998779,127.09999847,0.00000000,0.00000000,90.00000000); //object(smashbar) (1)
CreateDynamicObject(1251,2361.39990234,-646.20001221,127.30000305,0.00000000,0.00000000,90.00000000); //object(smashbar) (2)
CreateDynamicObject(1251,2357.50000000,-655.20001221,127.19999695,0.00000000,0.00000000,90.00000000); //object(smashbar) (3)
CreateDynamicObject(1251,2357.39990234,-659.29998779,127.19999695,0.00000000,0.00000000,90.00000000); //object(smashbar) (4)
CreateDynamicObject(1282,2348.60009766,-656.09997559,130.69999695,0.00000000,0.00000000,0.00000000); //object(barrierm) (1)
CreateDynamicObject(1282,2348.30004883,-650.00000000,130.60000610,0.00000000,0.00000000,0.00000000); //object(barrierm) (2)
CreateDynamicObject(1282,2352.69995117,-655.20001221,131.60000610,0.00000000,0.00000000,0.00000000); //object(barrierm) (3)
CreateDynamicObject(1282,2352.30004883,-649.70001221,131.50000000,0.00000000,0.00000000,0.00000000); //object(barrierm) (4)
CreateDynamicObject(2110,2349.89990234,-646.79998779,127.09999847,0.00000000,0.00000000,0.00000000); //object(low_dinning_4) (1)
CreateDynamicObject(2110,2351.89990234,-646.79998779,127.09999847,0.00000000,0.00000000,0.00000000); //object(low_dinning_4) (2)
CreateDynamicObject(3031,2350.39990234,-651.09997559,132.10000610,0.00000000,0.00000000,0.00000000); //object(wong_dish) (1)
CreateDynamicObject(3017,2350.39990234,-647.09997559,128.00000000,0.00000000,0.00000000,0.00000000); //object(arch_plans) (2)
CreateDynamicObject(2902,2349.80004883,-646.70001221,128.00000000,0.00000000,0.00000000,0.00000000); //object(kmb_smokecan) (1)
CreateDynamicObject(2894,2350.89990234,-646.59997559,127.90000153,0.00000000,0.00000000,0.00000000); //object(kmb_rhymesbook) (1)
CreateDynamicObject(2196,2350.10009766,-646.50000000,127.90000153,0.00000000,0.00000000,0.00000000); //object(work_lamp1) (1)
CreateDynamicObject(3350,2351.19995117,-654.40002441,130.60000610,0.00000000,0.00000000,0.00000000); //object(torino_mic) (1)
CreateDynamicObject(3077,2356.00000000,-645.29998779,127.09999847,0.00000000,0.00000000,0.00000000); //object(nf_blackboard) (1)
CreateDynamicObject(2984,2353.60009766,-644.90002441,128.50000000,0.00000000,0.00000000,90.00000000); //object(portaloo) (1)
CreateDynamicObject(2984,2351.89990234,-644.90002441,128.50000000,0.00000000,0.00000000,90.00000000); //object(portaloo) (2)
CreateDynamicObject(2984,2350.10009766,-644.90002441,128.50000000,0.00000000,0.00000000,90.00000000); //object(portaloo) (3)
CreateDynamicObject(2967,2350.50000000,-646.90002441,127.90000153,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (1)
CreateDynamicObject(2967,2350.50000000,-646.50000000,127.90000153,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (2)
CreateDynamicObject(2967,2351.60009766,-646.50000000,127.90000153,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (3)
CreateDynamicObject(2967,2351.80004883,-646.50000000,127.90000153,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (4)
CreateDynamicObject(2967,2352.00000000,-646.50000000,127.90000153,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (5)
CreateDynamicObject(2967,2351.89990234,-646.90002441,127.90000153,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (6)
CreateDynamicObject(2967,2351.69995117,-646.90002441,127.90000153,0.00000000,0.00000000,0.00000000); //object(mobile1993a) (7)
CreateDynamicObject(2966,2352.19995117,-646.90002441,127.90000153,0.00000000,0.00000000,0.00000000); //object(mobile1993b) (1)
CreateDynamicObject(2966,2352.30004883,-646.59997559,127.90000153,0.00000000,0.00000000,0.00000000); //object(mobile1993b) (2)
CreateDynamicObject(2612,2352.80004883,-646.29998779,129.10000610,0.00000000,0.00000000,0.00000000); //object(police_nb2) (1)
CreateDynamicObject(2050,2351.60009766,-646.29998779,128.60000610,0.00000000,0.00000000,0.00000000); //object(cj_target2) (1)
CreateDynamicObject(1622,2337.30004883,-637.00000000,138.89999390,0.00000000,0.00000000,0.00000000); //object(nt_securecam2_01) (1)
CreateDynamicObject(1616,2383.89990234,-672.90002441,135.30000305,0.00000000,0.00000000,0.00000000); //object(nt_securecam1_01) (1)
CreateDynamicObject(2387,2349.80004883,-658.00000000,127.09999847,0.00000000,0.00000000,0.00000000); //object(shop_set_2_unit5) (1)
CreateDynamicObject(2590,2356.30004883,-647.70001221,130.00000000,0.00000000,0.00000000,0.00000000); //object(ab_hook) (1)
CreateDynamicObject(2803,2354.60009766,-647.09997559,127.69999695,0.00000000,0.00000000,0.00000000); //object(cj_meat_bag_1) (1)
CreateDynamicObject(2804,2355.39990234,-646.90002441,127.19999695,0.00000000,0.00000000,0.00000000); //object(cj_meat_1) (1)
CreateDynamicObject(2805,2357.30004883,-646.70001221,127.80000305,0.00000000,0.00000000,0.00000000); //object(cj_meat_bag_2) (1)
CreateDynamicObject(2806,2355.89990234,-647.00000000,127.30000305,0.00000000,0.00000000,0.00000000); //object(cj_meat_2) (1)
CreateDynamicObject(14651,2351.89990234,-655.40002441,129.30000305,0.00000000,0.00000000,0.00000000); //object(trukstp05) (1)
CreateDynamicObject(1518,2352.80004883,-646.79998779,128.19999695,0.00000000,0.00000000,0.00000000); //object(dyn_tv_2) (1)
CreateDynamicObject(2332,2349.69995117,-648.29998779,127.50000000,0.00000000,0.00000000,90.00000000); //object(kev_safe) (1)
CreateDynamicObject(3414,2377.19995117,-643.20001221,128.50000000,0.00000000,0.00000000,0.00000000); //object(ce_oldhut1) (1)
CreateDynamicObject(944,2382.39990234,-641.50000000,127.30000305,0.00000000,0.00000000,0.00000000); //object(packing_carates04) (1)
CreateDynamicObject(935,2383.39990234,-642.70001221,126.90000153,0.00000000,0.00000000,0.00000000); //object(cj_drum) (1)
CreateDynamicObject(935,2382.50000000,-642.70001221,126.90000153,0.00000000,0.00000000,0.00000000); //object(cj_drum) (2)
CreateDynamicObject(3016,2381.30004883,-641.90002441,128.00000000,0.00000000,0.00000000,0.00000000); //object(cr_ammobox_nonbrk) (1)
CreateDynamicObject(3016,2381.30004883,-641.29998779,128.00000000,0.00000000,0.00000000,0.00000000); //object(cr_ammobox_nonbrk) (2)
CreateDynamicObject(3016,2381.19995117,-642.00000000,128.30000305,0.00000000,0.00000000,0.00000000); //object(cr_ammobox_nonbrk) (3)
CreateDynamicObject(3016,2381.19995117,-641.40002441,128.30000305,0.00000000,0.00000000,0.00000000); //object(cr_ammobox_nonbrk) (4)
CreateDynamicObject(3015,2383.39990234,-641.79998779,127.90000153,0.00000000,0.00000000,0.00000000); //object(cr_cratestack) (1)
CreateDynamicObject(2062,2382.89990234,-643.50000000,126.90000153,0.00000000,0.00000000,0.00000000); //object(cj_oildrum2) (1)
CreateDynamicObject(925,2379.10009766,-641.70001221,127.40000153,0.00000000,0.00000000,0.00000000); //object(rack2) (1)
CreateDynamicObject(964,2382.80004883,-646.00000000,126.40000153,0.00000000,0.00000000,0.00000000); //object(cj_metal_crate) (1)
CreateDynamicObject(964,2382.80004883,-647.40002441,126.40000153,0.00000000,0.00000000,0.00000000); //object(cj_metal_crate) (2)
CreateDynamicObject(1348,2383.19995117,-644.50000000,127.09999847,0.00000000,0.00000000,0.00000000); //object(cj_o2tanks) (1)
CreateDynamicObject(2669,2343.19995117,-651.40002441,128.89999390,0.00000000,0.00000000,0.00000000); //object(cj_chris_crate) (1)
CreateDynamicObject(2678,2342.39990234,-654.09997559,128.80000305,0.00000000,0.00000000,0.00000000); //object(cj_chris_crate_ld) (1)
CreateDynamicObject(16601,2377.39990234,-642.29998779,134.50000000,0.00000000,0.00000000,0.00000000); //object(by_fuel07) (1)
CreateDynamicObject(1238,2350.80004883,-656.50000000,130.89999390,0.00000000,0.00000000,0.00000000); //object(trafficcone) (1)
CreateDynamicObject(1238,2347.89990234,-652.29998779,130.19999695,0.00000000,0.00000000,0.00000000); //object(trafficcone) (2)
CreateDynamicObject(1238,2353.19995117,-651.59997559,131.30000305,0.00000000,0.00000000,0.00000000); //object(trafficcone) (3)
CreateDynamicObject(3092,2344.19995117,-650.40002441,128.00000000,90.00000000,0.00000000,0.00000000); //object(dead_tied_cop) (1)
CreateDynamicObject(3092,2344.19995117,-649.20001221,129.10000610,0.00000000,0.00000000,180.00000000); //object(dead_tied_cop) (2)
CreateDynamicObject(2905,2343.30004883,-649.50000000,128.60000610,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg) (1)
CreateDynamicObject(2906,2343.60009766,-649.29998779,128.60000610,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm) (1)
CreateDynamicObject(2907,2342.50000000,-649.40002441,128.69999695,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso) (1)
CreateDynamicObject(2908,2343.39990234,-649.20001221,128.60000610,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead) (1)
CreateDynamicObject(2906,2342.89990234,-649.29998779,128.80000305,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm) (2)
CreateDynamicObject(2905,2342.89990234,-649.29998779,128.60000610,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg) (2)
CreateDynamicObject(1439,2342.89990234,-649.20001221,127.69999695,0.00000000,0.00000000,0.00000000); //object(dyn_dumpster_1) (1)
CreateDynamicObject(1372,2342.30004883,-651.79998779,127.69999695,0.00000000,0.00000000,90.00000000); //object(cj_dump2_low) (1)
CreateDynamicObject(1251,2370.89990234,-648.50000000,126.69999695,0.00000000,0.00000000,0.00000000); //object(smashbar) (5)
CreateDynamicObject(1251,2375.00000000,-648.59997559,126.50000000,0.00000000,0.00000000,0.00000000); //object(smashbar) (6)
// -===============================Interior de LSPD Por RaulRey==================================-
CreateDynamicObject(18783, 777.02002, -387.25000, 999.84998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18783, 802.00000, -376.67001, 1005.17999,   180.00000, 30.00000, 270.00000);
CreateDynamicObject(18783, 757.01001, -387.26999, 999.83002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18783, 765.47998, -362.34000, 990.69000,   0.00000, 0.00000, 359.70001);
CreateDynamicObject(19358, 752.08002, -396.19000, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 747.17999, -379.03000, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 747.20001, -388.10999, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 747.21002, -391.29999, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 748.87000, -396.19000, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 787.21997, -383.44000, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 755.28003, -396.17999, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 758.46997, -396.17999, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 761.67999, -396.17999, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 764.89001, -396.17999, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 768.09003, -396.17999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 771.28003, -396.17001, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 774.47998, -396.17999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 777.67999, -396.17999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 780.89001, -396.17999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 787.22998, -385.00000, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 779.01001, -388.06000, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 785.62000, -391.31000, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 785.63000, -388.10999, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 759.53003, -389.37000, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14410, 793.73999, -377.59000, 995.89001,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19388, 766.59998, -370.98001, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.96002, -375.35999, 1000.48999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 787.21997, -383.42001, 1000.72998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14410, 789.14001, -381.63000, 999.15997,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 790.28003, -383.45001, 1004.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 793.50000, -383.47000, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 790.28003, -383.42999, 1000.72998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 793.50000, -383.45001, 1000.72998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 790.42999, -380.09000, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 787.21997, -380.07999, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 787.21997, -380.10001, 1000.60999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 790.40997, -380.10999, 1000.60999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 785.62000, -378.48001, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.96002, -378.54999, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.15002, -375.54999, 1000.71997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.97998, -378.57001, 1000.48999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18783, 777.02002, -367.26001, 999.84998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18783, 803.22998, -363.81000, 1004.87000,   0.00000, -180.00000, 0.00000);
CreateDynamicObject(18783, 788.04999, -389.25000, 1009.34003,   180.00000, 30.00000, 180.00000);
CreateDynamicObject(19358, 791.97998, -378.57001, 996.98999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.96002, -369.04999, 996.98999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.97998, -375.35999, 993.65002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.14001, -381.89001, 1000.72998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.13000, -378.70001, 1000.72998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.10999, -378.70001, 997.40997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.15002, -372.35001, 1000.72998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.13000, -375.54999, 997.40997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.10999, -375.54999, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.13000, -369.13000, 997.40997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.13000, -372.35001, 997.41998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18783, 798.77002, -379.70001, 1012.46997,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(18783, 765.06000, -369.23999, 1008.15997,   0.00000, -180.00000, 359.59000);
CreateDynamicObject(18783, 782.33002, -354.29999, 998.14001,   0.00000, -180.00000, 0.09000);
CreateDynamicObject(18783, 802.00000, -386.98999, 1004.91998,   0.00000, -180.00000, 0.00000);
CreateDynamicObject(18783, 794.47998, -387.67001, 1012.46997,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(18783, 757.02002, -367.28000, 999.84998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.96002, -375.35999, 996.98999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.96002, -375.35999, 996.98999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.96997, -372.16000, 1000.48999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.98999, -372.16000, 993.67999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.96997, -372.16000, 996.98999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 791.97998, -369.04999, 993.67999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.10999, -372.35001, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.12000, -365.95001, 997.41998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 795.10999, -369.10999, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 793.71997, -364.29999, 997.41998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 774.89001, -356.45999, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 787.39001, -364.26999, 997.42999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 792.19000, -362.76999, 997.42999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 793.71997, -364.29999, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 792.19000, -359.57999, 997.42999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 792.19000, -362.76999, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 792.16998, -356.44000, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19302, 789.51001, -364.28000, 994.44000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 790.42999, -367.51999, 993.91998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 790.52002, -364.26999, 997.42999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 790.42999, -367.51999, 997.42999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 795.12000, -365.95001, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 788.75000, -365.95001, 997.42999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 792.19000, -359.57999, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 778.58002, -362.79999, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 774.58002, -364.34000, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18783, 787.53003, -359.35999, 1000.51001,   0.00000, -180.00000, 359.88000);
CreateDynamicObject(19358, 788.75000, -365.95001, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19302, 791.57281, -363.72211, 994.44000,   0.00000, 0.00000, 126.75156);
CreateDynamicObject(19302, 784.76605, -361.17078, 994.44000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 788.75000, -362.73999, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 787.22998, -361.22000, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 785.71002, -362.79999, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1771, 777.82001, -362.72000, 993.83002,   0.00000, 0.00000, -1.00000);
CreateDynamicObject(19358, 784.06000, -364.34000, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 780.90997, -364.35001, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 782.09003, -362.82999, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18783, 785.39001, -362.22000, 990.71002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 777.71997, -364.32999, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 774.90997, -362.84000, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1771, 784.91998, -362.73001, 993.83002,   0.00000, 0.00000, -1.00000);
CreateDynamicObject(1771, 781.21002, -362.72000, 993.83002,   0.00000, 0.00000, -1.00000);
CreateDynamicObject(19358, 773.96002, -356.45999, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 792.16998, -356.44000, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 789.01001, -356.45001, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 785.91998, -356.47000, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 783.10999, -356.47000, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 783.10999, -356.47000, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 779.90002, -356.45999, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 774.89001, -359.64999, 993.92999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 776.71002, -356.47000, 993.92999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2008, 791.15002, -358.50000, 993.21002,   0.00000, 0.00000, 155.00000);
CreateDynamicObject(1806, 791.37000, -356.79001, 993.21002,   0.00000, 0.00000, 135.00000);
CreateDynamicObject(2001, 791.60999, -359.70999, 993.21002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18783, 795.12000, -388.92999, 1008.17999,   0.00000, -180.00000, 0.00000);
CreateDynamicObject(18783, 775.15997, -388.85001, 1008.20001,   0.00000, -180.00000, 359.59000);
CreateDynamicObject(19358, 754.71002, -390.98999, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 784.03003, -378.95999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 780.85999, -378.95999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 777.69000, -378.94000, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 774.50000, -378.92999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 771.32001, -378.92999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 761.69000, -378.94000, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 755.26001, -378.94000, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 752.06000, -378.92999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 747.20001, -384.92999, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 763.88000, -382.67999, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 785.63000, -381.69000, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 766.58002, -377.39999, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 756.91998, -377.23999, 1004.03003,   0.00000, 0.00000, 359.79999);
CreateDynamicObject(19404, 766.59003, -374.19000, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 754.31000, -392.69000, 1004.01001,   0.00000, 0.00000, 0.20000);
CreateDynamicObject(19404, 751.53003, -391.01001, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19388, 763.21002, -370.98999, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 758.47998, -378.94000, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 761.59998, -369.47000, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 758.38000, -369.47000, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 772.92999, -376.01001, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 756.91998, -371.01999, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 756.92999, -374.23001, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18783, 755.28003, -388.67999, 1008.17999,   0.00000, -180.00000, 359.59000);
CreateDynamicObject(19358, 763.21002, -377.39999, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 764.90997, -369.32001, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 768.12000, -369.32001, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 771.23999, -369.32001, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 772.91998, -370.70001, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 772.94000, -373.75000, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 772.92999, -377.26001, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 763.26001, -374.95001, 1003.46997,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 766.60999, -374.25000, 1003.46997,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, 763.19000, -370.20999, 1002.27002,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1502, 766.57001, -370.19000, 1002.27002,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1502, 785.57001, -380.91000, 1002.26001,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19358, 748.84998, -378.91000, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 754.85999, -384.73999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 748.53998, -391.00000, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 748.48999, -384.73001, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 751.65997, -384.73001, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19388, 764.90002, -378.92999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19388, 758.00000, -384.73001, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19404, 763.21997, -374.19000, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 751.66998, -390.98999, 1004.46997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 759.54999, -395.78000, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 757.90997, -390.98999, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 754.32001, -395.91000, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 780.53003, -386.51999, 1004.01001,   0.00000, 0.00000, 90.20000);
CreateDynamicObject(19358, 747.21002, -394.50000, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, 759.57001, -393.32999, 1002.23999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, 754.33002, -393.44000, 1002.23999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, 757.21002, -384.76999, 1002.25000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 785.63000, -384.89999, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 759.53003, -386.23999, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 747.19000, -381.73001, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 759.51001, -383.04999, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2946, 747.22998, -386.34000, 1002.32001,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2946, 747.22998, -389.53000, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2001, 747.87000, -385.42999, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2001, 747.88000, -390.39001, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2001, 759.03998, -390.51001, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2001, 759.06000, -385.12000, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2267, 754.78003, -390.88000, 1004.40002,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1723, 748.06000, -382.78000, 1002.32001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, 752.46997, -379.72000, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 754.38000, -384.04999, 1002.32001,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1724, 758.22998, -379.48999, 1002.32001,   0.00000, 0.00000, -48.00000);
CreateDynamicObject(2001, 747.77002, -379.48001, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2001, 747.67999, -384.35001, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2001, 759.02002, -384.14999, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2002, 750.19000, -379.56000, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19173, 747.28003, -381.82999, 1004.53003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2008, 751.03003, -391.85999, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 751.76001, -393.20001, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1744, 751.98999, -391.22000, 1003.15997,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1744, 751.04999, -390.92001, 1003.15997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2608, 747.50000, -393.70999, 1002.90002,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2614, 759.40002, -387.88000, 1004.47998,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2010, 756.84998, -395.64001, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, 779.73999, -386.54999, 1002.21997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 768.10999, -378.94000, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 762.39001, -386.78000, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 759.53003, -380.47000, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 759.53998, -392.57001, 1004.01001,   0.00000, 0.00000, 0.20000);
CreateDynamicObject(19358, 766.65002, -385.10999, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, 764.12000, -378.95999, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 771.47998, -386.62000, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2200, 759.78998, -385.26001, 1002.32001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2200, 761.15002, -379.29999, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2200, 763.62000, -381.10999, 1002.32001,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2200, 759.79999, -382.01001, 1002.32001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 785.60999, -394.53000, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 779.03003, -394.48999, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 779.02002, -391.26999, 1004.03003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 768.28998, -386.62000, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 784.09998, -396.17999, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 786.92999, -386.51999, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 783.72998, -386.51001, 1004.01001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, 767.50000, -386.64001, 1002.21997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2527, 784.84003, -394.63000, 1002.34003,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2527, 779.97998, -394.62000, 1002.34003,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2527, 781.58002, -394.60999, 1002.34003,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2527, 783.15002, -394.62000, 1002.34003,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2528, 783.03998, -387.09000, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2528, 784.79999, -387.07001, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3657, 779.63000, -391.47000, 1002.84998,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2372, 779.85999, -388.85999, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2394, 779.66998, -388.23001, 1003.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18001, 785.53003, -390.95999, 1004.28003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2515, 785.26001, -393.98999, 1003.48999,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2515, 785.28003, -388.09000, 1003.48999,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2515, 785.28998, -390.04999, 1003.48999,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2515, 785.28998, -391.89001, 1003.48999,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19358, 763.89001, -380.62000, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 766.63000, -380.48001, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 773.01001, -378.62000, 1004.01001,   0.00000, 0.00000, 359.89999);
CreateDynamicObject(19388, 763.89001, -385.10999, 1004.01001,   0.00000, 0.00000, 0.20000);
CreateDynamicObject(19358, 766.63000, -383.66000, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 761.20001, -386.79001, 1004.03003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 773.01001, -385.01999, 1004.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 773.01001, -381.81000, 1004.01001,   0.00000, 0.00000, 359.89999);
CreateDynamicObject(1721, 769.29999, -384.73001, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1721, 769.40997, -381.51001, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1721, 770.45001, -384.82001, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1721, 771.72998, -384.81000, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1721, 771.60999, -383.04999, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1721, 770.34003, -383.04999, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1721, 769.28003, -383.07001, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1721, 771.56000, -381.67999, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1721, 770.39001, -381.62000, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, 763.91998, -385.87000, 1002.21997,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2611, 771.53998, -379.06000, 1004.10999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19168, 768.07001, -379.03000, 1004.76001,   90.00000, 90.00000, -90.00000);
CreateDynamicObject(19169, 769.57001, -379.01999, 1004.76001,   90.00000, 90.00000, -90.00000);
CreateDynamicObject(19170, 768.07001, -379.01999, 1003.26001,   90.00000, 90.00000, -90.00000);
CreateDynamicObject(19171, 769.57001, -379.03000, 1003.26001,   90.00000, 90.00000, -90.00000);
CreateDynamicObject(2198, 778.27002, -390.63000, 1002.34003,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2198, 773.73999, -393.29001, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 770.63000, -393.37000, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 767.78998, -393.39001, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 764.38000, -393.47000, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 773.76001, -382.48001, 1002.34003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2198, 777.31000, -379.97000, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 780.22998, -380.10001, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 774.32001, -379.82001, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 773.83002, -385.76999, 1002.34003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2198, 777.26001, -393.35999, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 778.39001, -387.35001, 1002.34003,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2198, 761.46002, -387.59000, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2202, 760.21002, -395.20999, 1002.32001,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2202, 753.46002, -395.45001, 1002.32001,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(1806, 775.08002, -385.29999, 1002.34003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1806, 780.90002, -381.60999, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 777.96997, -381.50000, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 775.03003, -381.14999, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 775.13000, -382.07001, 1002.34003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1806, 776.81000, -391.31000, 1002.34003,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1806, 777.12000, -388.07999, 1002.34003,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1806, 777.89001, -394.73999, 1002.34998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 774.35999, -394.57001, 1002.34998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 771.23999, -394.95001, 1002.34998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 768.50000, -394.79001, 1002.34998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1806, 765.04999, -394.72000, 1002.33002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19172, 759.62000, -389.23001, 1004.29999,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19174, 771.28003, -386.70999, 1004.52002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2614, 780.79999, -379.09000, 1004.65997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2608, 772.88000, -395.88000, 1002.96002,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2608, 764.29999, -395.95999, 1003.03003,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19175, 770.09003, -369.41000, 1004.53003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19174, 760.03003, -369.56000, 1004.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19172, 764.92999, -369.41000, 1004.40997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2184, 770.71997, -374.48999, 1002.34003,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2184, 760.77002, -374.17001, 1002.34003,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1714, 769.47998, -376.48999, 1002.34003,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1714, 759.57001, -376.37000, 1002.34003,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1721, 761.06000, -372.67999, 1002.34998,   0.00000, 0.00000, 149.00000);
CreateDynamicObject(1721, 770.79999, -372.35001, 1002.34998,   0.00000, 0.00000, 168.00000);
CreateDynamicObject(1721, 768.23999, -372.67999, 1002.34998,   0.00000, 0.00000, 200.00000);
CreateDynamicObject(1721, 758.41998, -372.79999, 1002.34998,   0.00000, 0.00000, 200.00000);
CreateDynamicObject(2611, 757.06000, -374.44000, 1004.25000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2611, 772.81000, -373.88000, 1004.41998,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(14455, 757.87000, -378.82001, 1003.76001,   0.00000, 0.00000, 359.79999);
CreateDynamicObject(14455, 767.58002, -378.81000, 1003.96002,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 770.50000, -374.79999, 1003.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2190, 769.14001, -374.50000, 1003.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2190, 760.88000, -374.50000, 1003.12000,   0.00000, 0.00000, -47.00000);
CreateDynamicObject(1670, 759.12000, -374.42999, 1003.12000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18637, 759.76001, -382.88000, 1002.92999,   90.00000, 0.00000, 42.00000);
CreateDynamicObject(18636, 762.39001, -379.41000, 1004.28003,   0.00000, 0.00000, -76.00000);
CreateDynamicObject(18636, 763.37000, -382.48999, 1004.28003,   0.00000, 0.00000, 185.00000);
CreateDynamicObject(18636, 763.35999, -382.03000, 1004.28003,   0.00000, 0.00000, 185.00000);
CreateDynamicObject(948, 747.89001, -395.48001, 1002.32001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, 770.22998, -387.01001, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, 784.78003, -379.81000, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, 785.09998, -385.92999, 1002.34003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1775, 782.98999, -385.92999, 1003.47998,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1893, 777.70001, -358.82999, 996.03998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 786.50000, -358.85001, 996.03998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 790.85999, -365.81000, 998.31000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 793.06000, -375.04999, 1001.75000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 792.95001, -381.25000, 1002.82001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 787.71997, -381.70999, 1005.88000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 779.63000, -381.54999, 1006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 779.71997, -384.20999, 1006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 781.48999, -393.59000, 1006.01001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 781.64001, -390.07999, 1006.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 775.51001, -381.54001, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 764.28003, -392.78000, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 775.27002, -388.39001, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 775.28003, -385.04001, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 775.27002, -393.00000, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 768.84003, -393.09000, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 769.20001, -380.57001, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 759.32001, -372.26001, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 764.45001, -388.48001, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 749.03998, -381.85999, 1006.09998,   0.00000, 0.00000, 0.10000);
CreateDynamicObject(1893, 764.46997, -374.03000, 1006.20001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 769.26001, -371.06000, 1006.20001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 769.21997, -375.64999, 1006.20001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 759.54999, -376.67999, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 764.46002, -382.89001, 1006.20001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 761.15997, -382.39001, 1006.20001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 761.50000, -390.37000, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 756.70001, -393.64999, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 750.58002, -393.53000, 1006.09998,   0.00000, 0.00000, 0.10000);
CreateDynamicObject(1893, 750.19000, -387.95001, 1006.09998,   0.00000, 0.00000, 0.10000);
CreateDynamicObject(1893, 754.91998, -387.98001, 1006.09998,   0.00000, 0.00000, 0.10000);
CreateDynamicObject(1893, 755.28998, -381.85001, 1006.09998,   0.00000, 0.00000, 0.10000);
CreateDynamicObject(1893, 769.07001, -388.67999, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 769.37000, -383.39001, 1006.09998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 772.28998, -369.85001, 1002.54999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2245, 757.54999, -370.06000, 1002.57001,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14819, 791.28180, -367.33771, 994.09302,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2602, 775.52051, -363.85599, 993.72150,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2602, 782.69672, -363.86130, 993.72150,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2602, 779.19891, -363.86261, 993.72150,   0.00000, 0.00000, 180.00000);

	// -===============================Casio-Disco light==================================-
	// -=============================== LSPD Exterior by (FelipekxD) ==================================-
	CreateDynamicObject(3749, 1545.4675292969, -1627.7969970703, 18.241226196289, 0, 0, 89.324493408203);
	CreateDynamicObject(980, 1547.49609375, -1627.8046875, 8.9062042236328, 0, 0, 89.324340820313);
	CreateDynamicObject(984, 1554.0194091797, -1622.7939453125, 13.183554649353, 0, 0, 269.95874023438);
	CreateDynamicObject(984, 1566.8266601563, -1622.8149414063, 13.183554649353, 0, 0, 269.9560546875);
	CreateDynamicObject(983, 1573.212890625, -1622.8154296875, 13.230429649353, 0, 0, 269.9560546875);
	CreateDynamicObject(984, 1552.7980957031, -1617.5861816406, 13.183554649353, 0, 0, 269.9560546875);
	CreateDynamicObject(984, 1570.0720214844, -1617.5451660156, 13.183554649353, 0, 0, 269.9560546875);
	CreateDynamicObject(1215, 1563.0113525391, -1617.6840820313, 13.111198425293, 0, 0, 0);
	CreateDynamicObject(1215, 1559.6843261719, -1617.6614990234, 13.111198425293, 0, 0, 0);
	CreateDynamicObject(1215, 1547.9318847656, -1620.0979003906, 13.111198425293, 0, 0, 0);
	CreateDynamicObject(1215, 1570.7135009766, -1622.5738525391, 13.111198425293, 0, 0, 0);
	CreateDynamicObject(1223, 1566.8579101563, -1622.6281738281, 12.546875, 0, 0, 266.70568847656);
	CreateDynamicObject(1223, 1574.8896484375, -1622.5810546875, 12.546875, 0, 0, 266.7041015625);
	CreateDynamicObject(1223, 1557.2479248047, -1622.6123046875, 12.546875, 0, 0, 266.7041015625);
	CreateDynamicObject(1223, 1549.2396240234, -1622.5874023438, 12.546875, 0, 0, 266.7041015625);
	CreateDynamicObject(1223, 1570.763671875, -1617.7337646484, 12.546875, 0, 0, 87.339508056641);
	CreateDynamicObject(1223, 1557.5703125, -1617.7520751953, 12.546875, 0, 0, 87.335815429688);
	CreateDynamicObject(1223, 1549.3306884766, -1617.6409912109, 11.174467086792, 0, 0, 87.335815429688);
	CreateDynamicObject(1223, 1543.0812988281, -1621.8913574219, 12.55456161499, 0, 0, 270.67565917969);
	CreateDynamicObject(1223, 1542.8569335938, -1633.2211914063, 12.546875, 0, 0, 177.38134765625);
	CreateDynamicObject(983, 1542.7723388672, -1617.7902832031, 16.608020782471, 0, 0, 269.95874023438);
	CreateDynamicObject(984, 1539.5773925781, -1611.4047851563, 16.560049057007, 0, 0, 0);
	CreateDynamicObject(983, 1539.5867919922, -1606.6069335938, 16.606924057007, 0, 0, 0);
	CreateDynamicObject(982, 1577.9075927734, -1602.5649414063, 16.594837188721, 0, 0, 269.95971679688);
	CreateDynamicObject(982, 1552.314453125, -1602.5361328125, 16.594837188721, 0, 0, 269.9560546875);
	CreateDynamicObject(982, 1593.9136962891, -1602.5609130859, 16.594837188721, 0, 0, 269.9560546875);
	CreateDynamicObject(984, 1608.1165771484, -1608.7542724609, 16.558559417725, 0, 0, 0);
	CreateDynamicObject(984, 1608.1141357422, -1621.5372314453, 16.558559417725, 0, 0, 0);
	CreateDynamicObject(983, 1608.1123046875, -1631.1213378906, 16.605434417725, 0, 0, 0);
	CreateDynamicObject(983, 1608.1228027344, -1634.3140869141, 16.605434417725, 0, 0, 0);
	CreateDynamicObject(983, 1603.8304443359, -1637.8677978516, 16.598518371582, 0, 0, 269.95874023438);
	CreateDynamicObject(1223, 1607.6345214844, -1637.9425048828, 12.164962768555, 0, 0, 266.70568847656);
	CreateDynamicObject(1223, 1607.3634033203, -1602.6646728516, 12.661283493042, 0, 0, 57.564697265625);
	CreateDynamicObject(1223, 1539.7242431641, -1602.9641113281, 11.923369407654, 0, 0, 175.39636230469);
	CreateDynamicObject(618, 1554.125, -1620.6950683594, 12.546875, 0, 0, 0);
	CreateDynamicObject(618, 1575.734375, -1620.7106933594, 12.546875, 0, 0, 0);
	CreateDynamicObject(870, 1572.7105712891, -1620.2821044922, 12.788996696472, 0, 0, 0);
	CreateDynamicObject(870, 1570.7486572266, -1620.3000488281, 12.788996696472, 0, 0, 316.33032226563);
	CreateDynamicObject(870, 1555.9909667969, -1620.1723632813, 12.788996696472, 0, 0, 0);
	CreateDynamicObject(870, 1552.3575439453, -1619.9919433594, 12.788996696472, 0, 0, 0);
// Unity Inicio cendero
CreateDynamicObject(19127, 1726.16, -1850.11, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1728.70, -1849.25, 11.85,   0.00, 0.00, 0.00);
CreateDynamicObject(19378, 1807.02, -1854.93, 12.40,   0.00, 90.00, 90.00);
CreateDynamicObject(19378, 1721.81, -1854.50, 12.40,   0.00, 90.00, 90.00);
CreateDynamicObject(19378, 1731.26, -1854.89, 12.40,   0.00, 90.00, 90.00);
CreateDynamicObject(19378, 1740.73, -1854.98, 12.40,   0.00, 90.00, 90.00);
CreateDynamicObject(19378, 1750.33, -1854.79, 12.40,   0.00, 90.00, 90.00);
CreateDynamicObject(19378, 1759.75, -1855.06, 12.40,   0.00, 90.00, 90.00);
CreateDynamicObject(19378, 1769.14, -1854.76, 12.40,   0.00, 90.00, 90.00);
CreateDynamicObject(19378, 1778.76, -1854.88, 12.40,   0.00, 90.00, 90.00);
CreateDynamicObject(19378, 1788.34, -1854.75, 12.40,   0.00, 90.00, 90.00);
CreateDynamicObject(19378, 1797.81, -1854.86, 12.40,   0.00, 90.00, 90.00);
CreateDynamicObject(1408, 1808.15, -1860.14, 13.12,   0.00, 0.00, 179.72);
CreateDynamicObject(1408, 1808.69, -1849.87, 13.12,   0.00, 0.00, 0.11);
CreateDynamicObject(1408, 1734.19, -1860.08, 13.12,   0.00, 0.00, 180.22);
CreateDynamicObject(1408, 1739.39, -1860.08, 13.12,   0.00, 0.00, 180.22);
CreateDynamicObject(1408, 1744.64, -1860.06, 13.12,   0.00, 0.00, 180.22);
CreateDynamicObject(1408, 1749.87, -1860.08, 13.12,   0.00, 0.00, 180.22);
CreateDynamicObject(1408, 1755.09, -1860.06, 13.12,   0.00, 0.00, 180.22);
CreateDynamicObject(1408, 1760.30, -1860.08, 13.12,   0.00, 0.00, 179.71);
CreateDynamicObject(1408, 1765.62, -1860.10, 13.12,   0.00, 0.00, 180.43);
CreateDynamicObject(1408, 1770.85, -1860.07, 13.12,   0.00, 0.00, 180.43);
CreateDynamicObject(1408, 1776.24, -1860.09, 13.12,   0.00, 0.00, 180.43);
CreateDynamicObject(1408, 1781.79, -1860.10, 13.12,   0.00, 0.00, 180.43);
CreateDynamicObject(1408, 1787.09, -1860.09, 13.12,   0.00, 0.00, 180.03);
CreateDynamicObject(1408, 1792.30, -1860.12, 13.12,   0.00, 0.00, 180.03);
CreateDynamicObject(1408, 1797.63, -1860.09, 13.12,   0.00, 0.00, 180.03);
CreateDynamicObject(1408, 1802.85, -1860.12, 13.12,   0.00, 0.00, 179.72);
CreateDynamicObject(1408, 1728.96, -1860.11, 13.12,   0.00, 0.00, 180.22);
CreateDynamicObject(1408, 1729.15, -1849.86, 13.12,   0.00, 0.00, 359.70);
CreateDynamicObject(1408, 1734.39, -1849.91, 13.12,   0.00, 0.00, 359.70);
CreateDynamicObject(1408, 1750.15, -1849.88, 13.12,   0.00, 0.00, 359.70);
CreateDynamicObject(1408, 1755.57, -1849.87, 13.12,   0.00, 0.00, 0.09);
CreateDynamicObject(1408, 1760.80, -1849.89, 13.12,   0.00, 0.00, 0.09);
CreateDynamicObject(1408, 1766.04, -1849.90, 13.12,   0.00, 0.00, 0.09);
CreateDynamicObject(1408, 1771.38, -1849.89, 13.12,   0.00, 0.00, 0.09);
CreateDynamicObject(1408, 1776.94, -1849.89, 13.12,   0.00, 0.00, 0.09);
CreateDynamicObject(1408, 1782.32, -1849.87, 13.12,   0.00, 0.00, 0.09);
CreateDynamicObject(1408, 1787.51, -1849.85, 13.12,   0.00, 0.00, 359.69);
CreateDynamicObject(1408, 1792.73, -1849.83, 13.12,   0.00, 0.00, 0.09);
CreateDynamicObject(1408, 1798.02, -1849.88, 13.12,   0.00, 0.00, 0.11);
CreateDynamicObject(1408, 1803.33, -1849.85, 13.12,   0.00, 0.00, 0.11);
CreateDynamicObject(19127, 1725.83, -1859.71, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1737.09, -1849.66, 11.85,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1728.70, -1861.00, 11.65,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1809.48, -1861.05, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1736.85, -1860.98, 11.85,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1748.88, -1861.10, 11.85,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1748.03, -1849.11, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1757.07, -1849.28, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1757.63, -1861.07, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1771.95, -1860.77, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1772.85, -1849.43, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1786.08, -1849.42, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1784.94, -1861.05, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1796.88, -1861.14, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1796.24, -1849.54, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(617, 1809.57, -1849.62, 11.75,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1778.52, -1859.84, 15.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1738.81, -1859.85, 15.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1738.41, -1850.02, 15.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1747.20, -1850.17, 15.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1747.59, -1859.73, 15.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1760.64, -1859.84, 15.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1760.10, -1850.07, 15.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1232, 1779.35, -1850.11, 15.03,   0.00, 0.00, 0.00);
CreateDynamicObject(673, 1763.64, -1846.14, 4.77,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1732.26, -1850.64, 13.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1802.05, -1850.68, 13.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1732.09, -1858.82, 13.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1751.60, -1858.81, 13.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1751.82, -1850.64, 13.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1771.42, -1850.65, 13.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1771.21, -1858.80, 13.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1802.04, -1858.85, 13.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1790.71, -1858.79, 13.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 1790.99, -1850.64, 13.96,   0.00, 0.00, 0.00);
	// -================================== Unity Station ==========================================-
CreateDynamicObject(983,1833.60644531,-1856.82604980,13.26167965,0.00000000,0.00000000,359.00000000); //object(fenceshit3) (4)
CreateDynamicObject(983,1835.00683594,-1834.52294922,12.76894474,0.00000000,0.00000000,268.74475098); //object(fenceshit3) (6)
CreateDynamicObject(2632,1832.77807617,-1848.61645508,12.62445354,0.00000000,0.00000000,269.75000000); //object(gym_mat02) (1)
CreateDynamicObject(2632,1832.79650879,-1846.34948730,12.62445354,0.00000000,0.00000000,269.74731445); //object(gym_mat02) (2)
CreateDynamicObject(2632,1832.81909180,-1838.74206543,12.62445354,0.00000000,0.00000000,269.75000000); //object(gym_mat02) (3)
CreateDynamicObject(2632,1832.83239746,-1836.44616699,12.62445354,0.00000000,0.00000000,269.74731445); //object(gym_mat02) (4)
CreateDynamicObject(870,1832.93334961,-1845.96313477,12.92024708,0.00000000,0.00000000,0.00000000); //object(veg_pflowers2wee) (1)
CreateDynamicObject(870,1833.03088379,-1847.22180176,12.92024708,0.00000000,0.00000000,0.00000000); //object(veg_pflowers2wee) (2)
CreateDynamicObject(870,1832.95556641,-1848.66906738,12.92024708,0.00000000,0.00000000,0.00000000); //object(veg_pflowers2wee) (3)
CreateDynamicObject(870,1833.17333984,-1845.54907227,12.82024670,0.00000000,0.00000000,60.00000000); //object(veg_pflowers2wee) (4)
CreateDynamicObject(870,1833.14208984,-1849.28271484,12.82024670,0.00000000,0.00000000,273.99633789); //object(veg_pflowers2wee) (5)
CreateDynamicObject(870,1832.97021484,-1839.54199219,12.92024708,0.00000000,0.00000000,273.99353027); //object(veg_pflowers2wee) (6)
CreateDynamicObject(870,1832.95202637,-1838.01281738,12.92024708,0.00000000,0.00000000,273.99353027); //object(veg_pflowers2wee) (7)
CreateDynamicObject(870,1832.98767090,-1836.50842285,12.92024708,0.00000000,0.00000000,273.99353027); //object(veg_pflowers2wee) (8)
CreateDynamicObject(870,1833.06091309,-1835.46081543,12.92024708,0.00000000,0.00000000,273.99353027); //object(veg_pflowers2wee) (9)
CreateDynamicObject(870,1833.33203125,-1838.29138184,12.92024708,0.00000000,0.00000000,273.99353027); //object(veg_pflowers2wee) (10)
CreateDynamicObject(870,1832.62707520,-1839.62963867,12.92024708,0.00000000,0.00000000,219.99353027); //object(veg_pflowers2wee) (11)
CreateDynamicObject(870,1832.83874512,-1845.95593262,12.92024708,0.00000000,0.00000000,219.99023438); //object(veg_pflowers2wee) (12)
CreateDynamicObject(870,1832.77148438,-1848.07690430,12.92024708,0.00000000,0.00000000,219.99023438); //object(veg_pflowers2wee) (13)
CreateDynamicObject(983,1831.79882812,-1847.55175781,12.73668766,0.00000000,0.00000000,358.99475098); //object(fenceshit3) (7)
CreateDynamicObject(983,1831.69934082,-1837.55432129,12.81168652,0.00000000,0.00000000,358.99475098); //object(fenceshit3) (8)
CreateDynamicObject(983,1834.98291016,-1850.52404785,12.69830799,0.00000000,0.00000000,272.24267578); //object(fenceshit3) (9)
CreateDynamicObject(1368,1833.15246582,-1854.95935059,13.26786137,0.00000000,0.00000000,270.50000000); //object(cj_blocker_bench) (1)
CreateDynamicObject(1368,1833.19580078,-1858.55346680,13.26786137,0.00000000,0.00000000,269.99987793); //object(cj_blocker_bench) (2)
CreateDynamicObject(1215,1833.29394531,-1856.77575684,13.14244843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(966,1811.4411621094,-1886.8538818359,12.408756256104,0.00000000,0.00000000,91.309509277344); //object(bar_gatebar01) (1)
CreateDynamicObject(4641,1809.8974609375,-1885.5640869141,14.107798576355,0.00000000,0.00000000,0.00000000); //object(paypark_lan04) (1)
CreateDynamicObject(8841,1789.89184570,-1921.76257324,15.44358921,0.00000000,0.00000000,270.00000000); //object(rsdncarprk01_lvs) (1)
CreateDynamicObject(1374,1811.2662353516,-1886.8839111328,13.408756256104,0.00000000,0.00000000,180.63439941406);
CreateDynamicObject(970,1810.2706298828,-1883.0983886719,13.134890556335,0.00000000,0.00000000,314.34533691406);
CreateDynamicObject(970,1811.6359863281,-1897.0843505859,13.121125221252,0.00000000,0.00000000,90.041625976563);
CreateDynamicObject(971,1843.25610352,-1855.42846680,11.87773132,0.00000000,0.00000000,270.00000000); //object(subwaygate) (1)
//===========================================biblioteca=======================================================
CreateDynamicObject(18045,1458.19921875,-1675.29980469,6.80000019,0.00000000,0.00000000,0.00000000); //object(mp_ammu01) (1)
CreateDynamicObject(2738,1452.09997559,-1670.50000000,5.40000010,0.00000000,0.00000000,0.00000000); //object(cj_toilet_bs) (1)
CreateDynamicObject(2738,1457.50000000,-1670.50000000,5.40000010,0.00000000,0.00000000,0.00000000); //object(cj_toilet_bs) (2)
CreateDynamicObject(2738,1454.59997559,-1670.50000000,5.40000010,0.00000000,0.00000000,359.75000000); //object(cj_toilet_bs) (3)
CreateDynamicObject(2518,1455.09997559,-1679.59997559,5.09999990,0.00000000,0.00000000,180.00000000); //object(cj_b_sink2) (1)
CreateDynamicObject(2518,1456.00000000,-1679.59997559,5.09999990,0.00000000,0.00000000,179.99450684); //object(cj_b_sink2) (3)
CreateDynamicObject(2518,1457.00000000,-1679.59997559,5.09999990,0.00000000,0.00000000,179.99450684); //object(cj_b_sink2) (4)
CreateDynamicObject(3029,1464.90002441,-1679.80004883,4.80000019,0.00000000,0.00000000,90.50000000); //object(cr1_door) (1)
CreateDynamicObject(992,1456.80004883,-1674.90002441,6.40000010,0.00000000,0.00000000,0.00000000); //object(bar_barrier10b) (1)
CreateDynamicObject(2395,1453.19995117,-1673.00000000,4.80000019,0.00000000,0.00000000,87.50000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,1453.19995117,-1670.30004883,4.80000019,0.00000000,0.00000000,266.74511719); //object(cj_sports_wall) (2)
CreateDynamicObject(2395,1455.90002441,-1670.50000000,4.80000019,0.00000000,359.74731445,266.74255371); //object(cj_sports_wall) (3)
CreateDynamicObject(2395,1455.90002441,-1673.30004883,4.80000019,359.74731445,0.24719238,86.48986816); //object(cj_sports_wall) (4)
CreateDynamicObject(2395,1458.30004883,-1673.19995117,4.80000019,0.00000000,0.00000000,87.49511719); //object(cj_sports_wall) (5)
CreateDynamicObject(2395,1458.30004883,-1670.40002441,4.80000019,0.00000000,0.00000000,266.74255371); //object(cj_sports_wall) (6)
CreateDynamicObject(1491,1456.69995117,-1673.69995117,4.80000019,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (1)
CreateDynamicObject(1491,1450.79980469,-1673.50000000,4.80000019,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (2)
CreateDynamicObject(9131,1456.30004883,-1673.40002441,5.90000010,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,1452.69995117,-1673.09997559,7.90000010,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,1452.69921875,-1673.09960938,5.80000019,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,1456.19995117,-1673.40002441,5.90000010,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,1456.19995117,-1673.40002441,8.00000000,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,1456.30004883,-1673.40002441,8.00000000,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(1491,1453.09997559,-1673.50000000,4.80000019,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (2)
CreateDynamicObject(9131,1455.00000000,-1673.19995117,5.80000019,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,1455.40002441,-1673.19995117,5.80000019,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,1455.40002441,-1673.19995117,7.80000019,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(9131,1455.00000000,-1673.19995117,7.80000019,0.00000000,0.00000000,0.00000000); //object(shbbyhswall13_lvs) (1)
CreateDynamicObject(18030,-2710.00000000,676.59997559,67.50000000,0.00000000,0.00000000,0.00000000); //object(gap) (1)
CreateDynamicObject(16732,-2663.39990234,682.20001221,66.40000153,0.00000000,0.00000000,0.00000000); //object(a51_ventcover) (1)
CreateDynamicObject(14455,-2699.00000000,690.29998779,66.80000305,0.00000000,0.00000000,179.50000000); //object(gs_bookcase) (1)
CreateDynamicObject(14455,-2690.51074219,674.44824219,66.56931305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (2)
CreateDynamicObject(14455,-2703.19995117,663.79998779,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (3)
CreateDynamicObject(14455,-2709.00000000,663.79998779,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (4)
CreateDynamicObject(14455,-2711.89990234,663.79998779,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (5)
CreateDynamicObject(14455,-2731.19995117,663.79998779,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (6)
CreateDynamicObject(14455,-2725.39990234,663.79998779,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (7)
CreateDynamicObject(14455,-2722.50000000,663.79998779,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (8)
CreateDynamicObject(14455,-2730.10009766,672.20001221,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (9)
CreateDynamicObject(14455,-2731.50000000,672.20001221,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (10)
CreateDynamicObject(14455,-2723.80004883,672.20001221,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (11)
CreateDynamicObject(14455,-2722.39990234,672.20001221,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (12)
CreateDynamicObject(14455,-2712.00000000,672.40002441,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (13)
CreateDynamicObject(14455,-2710.60009766,672.40002441,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (14)
CreateDynamicObject(14455,-2710.69995117,681.59997559,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (15)
CreateDynamicObject(14455,-2712.10009766,681.59997559,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (16)
CreateDynamicObject(14455,-2704.30004883,681.59997559,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (17)
CreateDynamicObject(14455,-2702.89990234,681.59997559,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (18)
CreateDynamicObject(14455,-2722.39990234,681.70001221,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (19)
CreateDynamicObject(14455,-2683.79882812,678.44726562,66.56931305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (20)
CreateDynamicObject(14455,-2730.10009766,681.59997559,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (21)
CreateDynamicObject(14455,-2731.50000000,681.59997559,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (22)
CreateDynamicObject(14455,-2723.80004883,681.70001221,66.80000305,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (23)
CreateDynamicObject(14455,-2706.30004883,690.40002441,66.80000305,0.00000000,0.00000000,180.00000000); //object(gs_bookcase) (24)
CreateDynamicObject(14455,-2707.69995117,690.40002441,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (25)
CreateDynamicObject(14455,-2718.00000000,690.29998779,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (26)
CreateDynamicObject(14455,-2719.39990234,690.29998779,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (27)
CreateDynamicObject(14455,-2725.80004883,690.40002441,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (28)
CreateDynamicObject(14455,-2727.19995117,690.40002441,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (29)
CreateDynamicObject(14455,-2727.19995117,681.59997559,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (30)
CreateDynamicObject(14455,-2725.69995117,681.59997559,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (31)
CreateDynamicObject(14455,-2719.50000000,681.70001221,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (32)
CreateDynamicObject(14455,-2718.00000000,681.70001221,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (33)
CreateDynamicObject(14455,-2707.80004883,681.59997559,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (34)
CreateDynamicObject(14455,-2706.39990234,681.59997559,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (35)
CreateDynamicObject(14455,-2700.00000000,681.70001221,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (36)
CreateDynamicObject(14455,-2698.60009766,681.59997559,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (37)
CreateDynamicObject(14455,-2706.19995117,672.40002441,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (38)
CreateDynamicObject(14455,-2707.69995117,672.40002441,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (39)
CreateDynamicObject(14455,-2718.00000000,672.20001221,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (40)
CreateDynamicObject(14455,-2719.50000000,672.20001221,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (41)
CreateDynamicObject(14455,-2725.80004883,672.20001221,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (42)
CreateDynamicObject(14455,-2727.19995117,672.20001221,66.80000305,0.00000000,0.00000000,179.99450684); //object(gs_bookcase) (43)
CreateDynamicObject(2959,-2714.30004883,662.50000000,65.09999847,0.00000000,0.00000000,90.75000000); //object(rider1_door) (1)
CreateDynamicObject(2959,-2694.30004883,670.20001221,65.40000153,0.00000000,0.00000000,89.00000000); //object(rider1_door) (2)
CreateDynamicObject(2959,-2694.30004883,674.20001221,65.40000153,0.00000000,0.00000000,89.74475098); //object(rider1_door) (3)
CreateDynamicObject(1661,-2712.60009766,668.09997559,69.59999847,0.00000000,0.00000000,0.00000000); //object(htl_fan_rotate_dy) (1)
CreateDynamicObject(1661,-2731.89990234,668.29998779,69.50000000,0.00000000,0.00000000,0.00000000); //object(htl_fan_rotate_dy) (2)
CreateDynamicObject(1661,-2718.60009766,677.00000000,69.09999847,0.00000000,0.00000000,0.00000000); //object(htl_fan_rotate_dy) (3)
CreateDynamicObject(1661,-2702.89990234,676.50000000,69.09999847,0.00000000,0.00000000,0.00000000); //object(htl_fan_rotate_dy) (4)
CreateDynamicObject(1661,-2702.10009766,684.09997559,69.30000305,0.00000000,0.00000000,0.00000000); //object(htl_fan_rotate_dy) (5)
CreateDynamicObject(1661,-2717.00000000,685.09997559,69.59999847,0.00000000,0.00000000,0.00000000); //object(htl_fan_rotate_dy) (6)
CreateDynamicObject(1659,-2714.89990234,668.50000000,69.69999695,0.00000000,0.00000000,0.00000000); //object(htl_fan_static_dy) (1)
CreateDynamicObject(1659,-2714.10009766,677.09997559,69.40000153,0.00000000,0.00000000,0.00000000); //object(htl_fan_static_dy) (2)
CreateDynamicObject(1659,-2718.69995117,684.59997559,69.69999695,0.00000000,0.00000000,0.00000000); //object(htl_fan_static_dy) (3)
CreateDynamicObject(1659,-2694.80004883,672.90002441,69.30000305,0.00000000,0.00000000,0.00000000); //object(htl_fan_static_dy) (4)
CreateDynamicObject(16732,-2693.60009766,672.70001221,66.80000305,0.00000000,359.75000000,270.50000000); //object(a51_ventcover) (2)
CreateDynamicObject(16732,-2693.60009766,671.50000000,66.80000305,0.00000000,359.74731445,270.49987793); //object(a51_ventcover) (3)
CreateDynamicObject(971,-2727.69995117,672.20001221,64.40000153,0.00000000,0.00000000,0.00000000); //object(subwaygate) (5)
CreateDynamicObject(971,-2721.69995117,672.20001221,64.40000153,0.00000000,0.00000000,0.00000000); //object(subwaygate) (6)
CreateDynamicObject(971,-2702.69995117,663.79998779,64.40000153,0.00000000,0.00000000,0.00000000); //object(subwaygate) (7)
CreateDynamicObject(971,-2708.10009766,663.79998779,64.40000153,0.00000000,0.00000000,0.00000000); //object(subwaygate) (8)
CreateDynamicObject(971,-2722.00000000,663.79998779,64.40000153,0.00000000,0.00000000,0.00000000); //object(subwaygate) (9)
CreateDynamicObject(971,-2727.39990234,663.79998779,64.40000153,0.00000000,0.00000000,0.00000000); //object(subwaygate) (10)
CreateDynamicObject(975,-2702.39990234,681.59997559,66.80000305,0.00000000,0.00000000,0.00000000); //object(columbiangate) (1)
CreateDynamicObject(975,-2708.50000000,681.59997559,66.80000305,0.00000000,0.00000000,0.00000000); //object(columbiangate) (2)
CreateDynamicObject(975,-2721.10009766,681.70001221,66.80000305,0.00000000,0.00000000,0.00000000); //object(columbiangate) (3)
CreateDynamicObject(975,-2729.39990234,681.59997559,66.80000305,0.00000000,0.00000000,0.00000000); //object(columbiangate) (4)
CreateDynamicObject(988,-2710.00000000,672.40002441,64.40000153,0.00000000,0.00000000,0.00000000); //object(ws_apgate) (1)
CreateDynamicObject(988,-2708.00000000,672.40002441,64.40000153,0.00000000,0.00000000,0.00000000); //object(ws_apgate) (2)
CreateDynamicObject(971,-2708.10009766,690.50000000,64.80000305,0.00000000,0.00000000,0.00000000); //object(subwaygate) (12)
CreateDynamicObject(971,-2701.00000000,690.29998779,64.80000305,0.00000000,0.00000000,0.00000000); //object(subwaygate) (13)
CreateDynamicObject(971,-2721.89990234,690.40002441,64.80000305,0.00000000,0.00000000,0.00000000); //object(subwaygate) (14)
CreateDynamicObject(971,-2728.89990234,690.40002441,64.80000305,0.00000000,0.00000000,0.00000000); //object(subwaygate) (15)
//========================ammu================================================
CreateDynamicObject(2047,1367.59350586,-1279.90527344,15.86694527,0.00000000,0.00000000,270.00000000); //object(cj_flag1) (1)
CreateDynamicObject(1251,1366.05517578,-1266.16882324,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (1)
CreateDynamicObject(1251,1366.05517578,-1262.91943359,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (2)
CreateDynamicObject(1251,1366.05517578,-1259.67529297,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (3)
CreateDynamicObject(1251,1366.05517578,-1256.17651367,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (4)
CreateDynamicObject(1251,1366.05517578,-1286.14843750,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (5)
CreateDynamicObject(1251,1366.05517578,-1289.39526367,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (6)
CreateDynamicObject(1251,1366.05517578,-1292.64135742,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (7)
CreateDynamicObject(1251,1366.05517578,-1295.62744141,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (8)
CreateDynamicObject(1251,1366.05517578,-1298.55078125,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (9)
CreateDynamicObject(1251,1366.05517578,-1301.59936523,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (10)
CreateDynamicObject(1280,1367.09094238,-1284.11254883,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (1)
CreateDynamicObject(1280,1367.09094238,-1275.11230469,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (2)
CreateDynamicObject(1280,1367.09094238,-1267.90014648,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (3)
CreateDynamicObject(1280,1367.09094238,-1304.78930664,12.94823074,0.00000000,0.00000000,0.00000000); //object(parkbench1) (4)
CreateDynamicObject(10236,1363.70874023,-1294.72070312,30.58548737,0.00000000,0.00000000,0.00000000); //object(hotelbits_sfe06) (1)
CreateDynamicObject(10236,1363.70874023,-1262.82409668,30.58548737,0.00000000,0.00000000,0.00000000); //object(hotelbits_sfe06) (3)
CreateDynamicObject(970,1365.57482910,-1285.63012695,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
CreateDynamicObject(970,1365.57482910,-1273.58715820,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (2)
CreateDynamicObject(970,1365.57482910,-1266.47985840,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (3)
CreateDynamicObject(970,1365.57482910,-1302.76013184,13.09835625,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
CreateDynamicObject(2035,1369.34790039,-1280.56286621,14.44631386,63.67941284,85.95184326,2.51452637); //object(cj_m16) (1)
CreateDynamicObject(2035,1369.23596191,-1279.04162598,14.44631386,63.67675781,85.95153809,192.51039124); //object(cj_m16) (2)
	// -====================================== Floristeria ===================================- //
	CreateDynamicObject(1571,1413.62756348,-1717.96020508,13.87769127,0.00000000,0.00000000,84.00000000); //object(cj_noodle_1) (1)
	CreateDynamicObject(638,1413.49511719,-1719.98754883,13.24390888,0.00000000,0.00000000,264.00000000); //object(kb_planter_bush) (2)
	CreateDynamicObject(638,1410.89611816,-1714.25329590,12.99390888,0.00000000,0.00000000,173.99597168); //object(kb_planter_bush) (3)
	CreateDynamicObject(638,1411.52563477,-1714.32128906,12.99390888,0.00000000,0.00000000,354.49597168); //object(kb_planter_bush) (4)
	CreateDynamicObject(638,1411.78723145,-1711.80737305,12.99390888,0.00000000,0.00000000,352.74597168); //object(kb_planter_bush) (5)
	CreateDynamicObject(638,1411.18347168,-1711.72937012,12.99390888,0.00000000,0.00000000,352.74353027); //object(kb_planter_bush) (6)
	CreateDynamicObject(638,1411.99230957,-1710.23767090,12.99390888,0.00000000,0.00000000,352.74597168); //object(kb_planter_bush) (7)
	CreateDynamicObject(638,1411.44262695,-1710.16870117,12.99390888,0.00000000,0.00000000,352.74597168); //object(kb_planter_bush) (8)
	CreateDynamicObject(949,1412.29260254,-1719.13647461,13.55325699,0.00000000,0.00000000,326.00000000); //object(plant_pot_4) (1)
	CreateDynamicObject(1361,1412.51306152,-1715.24926758,13.29021835,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (2)
	CreateDynamicObject(1807,1412.71105957,-1710.17358398,13.09504414,0.00000000,0.00000000,172.00000000); //object(cj_mediumpots1) (1)
	CreateDynamicObject(1570,1412.93066406,-1712.57226562,13.87800121,0.00000000,0.00000000,87.99499512); //object(cj_noodle_3) (1)
	CreateDynamicObject(2010,1412.70520020,-1716.28869629,12.78391838,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (1)
	CreateDynamicObject(2194,1413.42187500,-1712.11816406,13.48869896,0.00000000,0.00000000,0.00000000); //object(plant_pot_2) (1)
	CreateDynamicObject(2195,1412.96240234,-1712.27197266,13.90500259,0.00000000,0.00000000,0.00000000); //object(plant_pot_3) (1)
	CreateDynamicObject(2245,1413.04101562,-1712.84667969,13.79286861,0.00000000,0.00000000,0.00000000); //object(plant_pot_11) (1)
	CreateDynamicObject(2251,1413.37597656,-1712.58593750,14.14997768,0.00000000,0.00000000,0.00000000); //object(plant_pot_20) (1)
	CreateDynamicObject(2253,1412.91113281,-1713.90234375,13.81469631,0.00000000,0.00000000,0.00000000); //object(plant_pot_22) (1)
	CreateDynamicObject(2345,1413.88659668,-1713.32983398,14.64687729,0.00000000,0.00000000,88.00000000); //object(plant_pot_23) (1)
	CreateDynamicObject(2811,1413.08593750,-1713.40942383,13.44913387,0.00000000,0.00000000,0.00000000); //object(gb_romanpot01) (1)
	CreateDynamicObject(3802,1415.30041504,-1715.97839355,15.01242733,0.00000000,0.00000000,18.75000000); //object(sfx_plant03) (1)
	CreateDynamicObject(2895,1414.75939941,-1716.50488281,13.92855644,0.00000000,0.00000000,0.00000000); //object(fun_flower_law) (1)
	CreateDynamicObject(941,1412.61584473,-1717.52844238,13.18401051,0.00000000,0.00000000,267.75000000); //object(cj_df_worktop_3) (1)
	CreateDynamicObject(1359,1414.95214844,-1715.70996094,13.24543190,0.00000000,0.00000000,0.00000000); //object(cj_bin1) (1)
	CreateDynamicObject(2369,1414.58142090,-1718.62841797,13.66830826,0.00000000,0.00000000,86.50000000); //object(cj_till) (1)
	CreateDynamicObject(2194,1412.78466797,-1717.14062500,13.89698315,0.00000000,0.00000000,0.00000000); //object(plant_pot_2) (1)
	CreateDynamicObject(2245,1412.72778320,-1717.68127441,13.95284081,0.00000000,0.00000000,0.00000000); //object(plant_pot_11) (1)
	CreateDynamicObject(2253,1412.54492188,-1718.52319336,13.95878601,0.00000000,0.00000000,0.00000000); //object(plant_pot_22) (1)
	CreateDynamicObject(2194,1415.13403320,-1716.55358887,13.99495029,0.00000000,0.00000000,0.00000000); //object(plant_pot_2) (1)
	CreateDynamicObject(1215,1414.95971680,-1719.68066406,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1413.61108398,-1711.04553223,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(3109,1412.73559570,-1715.90612793,13.86344910,0.00000000,0.00000000,264.00000000); //object(imy_la_door) (1)
	// -====================================== Hospital Interior (by FelipekxD !! (L) ===================================================-
	CreateDynamicObject(14675,-2654.97656250,522.09765625,58.05570984,0.00000000,0.00000000,0.00000000); //convertffs(0)
	CreateDynamicObject(2957,-2674.56298828,510.04229736,48.69913101,0.00000000,0.00000000,270.67565918); //convertffs(1)
	CreateDynamicObject(1649,-2650.33911133,539.15838623,52.47907257,0.00000000,0.00000000,0.00000000); //convertffs(2)
	CreateDynamicObject(1649,-2645.83886719,539.27465820,52.47907257,0.00000000,0.00000000,0.00000000); //convertffs(3)
	CreateDynamicObject(2957,-2647.94775391,540.36645508,48.70296097,0.00000000,0.00000000,0.00000000); //convertffs(8)
	CreateDynamicObject(3515,-2652.91601562,522.24151611,46.04935455,0.00000000,0.00000000,0.00000000); //convertffs(9)
	CreateDynamicObject(3526,-2652.89355469,522.31835938,47.64756393,1.90921021,15.88903809,90.76403809); //convertffs(10)
	CreateDynamicObject(1649,-2663.34863281,507.52050781,48.75071716,0.00000000,0.00000000,89.32434082); //convertffs(11)
	CreateDynamicObject(1649,-2663.27539062,516.05664062,48.75433350,0.00000000,0.00000000,89.31884766); //convertffs(12)
	CreateDynamicObject(1649,-2663.30371094,511.93750000,48.75287628,0.00000000,0.00000000,89.31884766); //convertffs(13)
	CreateDynamicObject(1649,-2663.17480469,522.29003906,48.74802017,0.00000000,0.00000000,89.31884766); //convertffs(14)
	CreateDynamicObject(1533,-2664.73144531,520.20532227,47.08190155,0.00000000,0.00000000,357.29809570); //convertffs(15)
	CreateDynamicObject(1533,-2663.26757812,518.21289062,47.08225632,0.00000000,0.00000000,178.64868164); //convertffs(16)
	CreateDynamicObject(1892,-2662.74414062,518.66015625,47.08238220,0.00000000,0.00000000,89.32434082); //convertffs(17)
	CreateDynamicObject(1253,-2663.19116211,520.93078613,48.82644653,0.00000000,0.00000000,87.33950806); //convertffs(18)
	CreateDynamicObject(1622,-2662.95141602,517.10534668,51.06243134,5.26608276,332.08190918,186.12048340); //convertffs(19)
	CreateDynamicObject(1649,-2663.15527344,524.10546875,48.74802399,0.00000000,0.00000000,269.95312500); //convertffs(20)
	CreateDynamicObject(1649,-2663.10791016,527.79876709,48.75445938,0.00000000,0.00000000,89.32434082); //convertffs(21)
	CreateDynamicObject(1649,-2664.64794922,532.22045898,48.74082184,0.00000000,0.00000000,129.02416992); //convertffs(22)
	CreateDynamicObject(1423,-2662.61206055,535.13336182,47.29184723,0.00000000,0.00000000,43.66516113); //convertffs(23)
	CreateDynamicObject(1318,-2662.87475586,535.42657471,49.23094177,0.00000000,176.66503906,131.00952148); //convertffs(24)
	CreateDynamicObject(1318,-2662.87890625,535.43206787,47.93886566,0.00000000,0.00000000,316.33032227); //convertffs(25)
	CreateDynamicObject(1215,-2652.09277344,510.05908203,47.65053940,0.00000000,0.00000000,0.00000000); //convertffs(26)
	CreateDynamicObject(1215,-2646.58300781,515.38574219,47.67664337,0.00000000,0.00000000,0.00000000); //convertffs(27)
	CreateDynamicObject(628,-2644.52539062,517.35089111,48.59458542,0.00000000,0.00000000,0.00000000); //convertffs(28)
	CreateDynamicObject(728,-2644.22753906,535.88385010,46.98243332,0.00000000,0.00000000,0.00000000); //convertffs(29)
	CreateDynamicObject(948,-2646.73681641,510.06033325,49.46977234,0.00000000,0.00000000,0.00000000); //convertffs(30)
	CreateDynamicObject(1364,-2660.95190430,514.51739502,47.87251663,0.00000000,0.00000000,89.32449341); //convertffs(31)
	CreateDynamicObject(1364,-2660.93554688,522.27404785,47.86694717,0.00000000,0.00000000,89.32235718); //convertffs(32)
	CreateDynamicObject(1581,-2659.85156250,506.24810791,47.67807770,0.00000000,0.00000000,178.64941406); //convertffs(33)
	CreateDynamicObject(1240,-2658.06445312,506.02648926,48.26782608,0.00000000,0.00000000,0.00000000); //convertffs(34)
	CreateDynamicObject(1240,-2674.38891602,519.76812744,49.13623810,0.00000000,0.00000000,81.38452148); //convertffs(35)
	CreateDynamicObject(1240,-2647.84252930,540.30712891,48.87698746,0.00000000,0.00000000,0.00000000); //convertffs(36)
	CreateDynamicObject(1701,-2670.94140625,504.77279663,47.08332062,0.00000000,0.00000000,89.32449341); //convertffs(37)
	CreateDynamicObject(1717,-2671.03662109,504.88488770,47.08306122,0.00000000,0.00000000,189.29125977); //convertffs(38)
	CreateDynamicObject(1808,-2674.24047852,507.48641968,47.08450317,0.00000000,0.00000000,87.33950806); //convertffs(39)
	CreateDynamicObject(2146,-2673.85034180,509.88708496,47.56469727,0.00000000,0.00000000,0.00000000); //convertffs(40)
	CreateDynamicObject(1649,-2674.35449219,515.84472656,48.74528885,0.00000000,0.00000000,0.00000000); //convertffs(41)
	CreateDynamicObject(1649,-2670.43066406,504.29003906,48.74883270,0.00000000,0.00000000,89.32434082); //convertffs(42)
	CreateDynamicObject(1649,-2672.71972656,508.46191406,48.74488831,0.00000000,0.00000000,0.00000000); //convertffs(43)
	CreateDynamicObject(1725,-2670.94873047,513.09674072,47.08038330,0.00000000,0.00000000,89.32449341); //convertffs(44)
	CreateDynamicObject(1808,-2674.14404297,512.08776855,47.07960129,0.00000000,0.00000000,92.02661133); //convertffs(45)
	CreateDynamicObject(1717,-2671.28881836,512.96624756,47.08702469,0.00000000,0.00000000,201.20117188); //convertffs(46)
	CreateDynamicObject(1649,-2670.60546875,513.64550781,48.74620438,0.00000000,0.00000000,91.30737305); //convertffs(47)
	CreateDynamicObject(1649,-2672.78125000,511.42871094,48.75262833,0.00000000,0.00000000,0.00000000); //convertffs(48)
	CreateDynamicObject(3389,-2674.24560547,517.34197998,47.07957458,0.00000000,0.00000000,0.00000000); //convertffs(49)
	CreateDynamicObject(3395,-2673.97070312,520.03759766,47.07964325,0.00000000,0.00000000,178.64941406); //convertffs(50)
	CreateDynamicObject(3389,-2674.02734375,522.21038818,47.07962799,0.00000000,0.00000000,178.64941406); //convertffs(51)
	CreateDynamicObject(3394,-2671.52416992,521.03741455,47.08023834,0.00000000,0.00000000,87.33950806); //convertffs(52)
	CreateDynamicObject(1663,-2672.72363281,519.52685547,47.54016113,0.00000000,0.00000000,266.70568848); //convertffs(53)
	CreateDynamicObject(1663,-2670.99169922,519.82965088,47.54058075,0.00000000,0.00000000,356.03002930); //convertffs(54)
	CreateDynamicObject(1238,-2664.94042969,530.58355713,47.39773178,0.00000000,0.00000000,0.00000000); //convertffs(55)
	CreateDynamicObject(1701,-2670.91210938,528.19970703,47.08039093,0.00000000,0.00000000,89.32449341); //convertffs(56)
	CreateDynamicObject(1717,-2672.00317383,527.95477295,47.08031082,0.00000000,0.00000000,193.26123047); //convertffs(57)
	CreateDynamicObject(1808,-2674.36083984,530.06506348,47.07954788,0.00000000,0.00000000,95.27947998); //convertffs(58)
	CreateDynamicObject(1649,-2672.85644531,526.60839844,48.74565506,0.00000000,0.00000000,0.00000000); //convertffs(60)
	CreateDynamicObject(1649,-2670.68164062,530.23046875,48.74976349,0.00000000,0.00000000,270.67565918); //convertffs(61)
	CreateDynamicObject(669,-2655.37011719,525.46533203,44.72656250,0.00000000,0.00000000,0.00000000); //convertffs(62)
	CreateDynamicObject(669,-2650.39477539,519.51977539,44.72656250,0.00000000,0.00000000,0.00000000); //convertffs(63)
	CreateDynamicObject(1550,-2662.41552734,505.65939331,48.46510315,0.00000000,0.00000000,0.00000000); //convertffs(64)
	CreateDynamicObject(1649,-2660.97753906,506.23046875,49.73750305,0.00000000,0.00000000,358.01501465); //convertffs(65)
	CreateDynamicObject(1663,-2660.20434570,504.48632812,47.53936005,0.00000000,0.00000000,180.63439941); //convertffs(66)
	CreateDynamicObject(1663,-2655.83911133,504.49832153,47.54371262,0.00000000,0.00000000,182.61474609); //convertffs(67)
	CreateDynamicObject(1726,-2657.22851562,534.32519531,47.08612442,0.00000000,0.00000000,0.00000000); //convertffs(68)
	CreateDynamicObject(1726,-2654.39770508,534.31298828,47.08612823,0.00000000,0.00000000,0.00000000); //convertffs(69)
	CreateDynamicObject(1726,-2645.11279297,534.43127441,47.09028625,0.00000000,0.00000000,0.00000000); //convertffs(70)
	CreateDynamicObject(1215,-2650.90893555,535.47979736,48.54675674,0.00000000,0.00000000,0.00000000); //convertffs(71)
	CreateDynamicObject(2941,-2655.95166016,505.74121094,48.41854477,0.00000000,0.00000000,0.00000000); //convertffs(72)
	CreateDynamicObject(2941,-2660.23730469,505.52230835,48.45280457,0.00000000,0.00000000,179.36633301); //convertffs(73)
	CreateDynamicObject(2614,-2643.83862305,530.29168701,51.86668777,0.00000000,0.00000000,276.63061523); //convertffs(74)
	CreateDynamicObject(1215,-2644.43310547,522.51806641,48.54675674,0.00000000,0.00000000,0.00000000); //convertffs(75)
	CreateDynamicObject(1318,-2639.28442383,520.64672852,52.83922577,87.90341187,288.77215576,71.21609497); //convertffs(76)
	CreateDynamicObject(1318,-2639.38378906,526.64501953,52.83922577,87.90164185,288.77017212,71.21334839); //convertffs(77)
	CreateDynamicObject(1318,-2639.47924805,532.39312744,52.83922577,87.90164185,288.77020264,71.21334839); //convertffs(78)
	CreateDynamicObject(974,-2656.67285156,499.64843750,51.25430298,0.00000000,0.00000000,270.67565918); //convertffs(79)
	CreateDynamicObject(1318,-2662.89160156,535.41455078,52.23767090,0.00000000,0.00000000,318.31530762); //convertffs(80)
	CreateDynamicObject(1318,-2660.27539062,503.59075928,52.65371704,89.32507324,0.00000000,266.70568848); //convertffs(81)
	CreateDynamicObject(1649,-2664.64746094,532.21972656,48.74082184,0.00000000,0.00000000,309.65710449); //convertffs(83)
	CreateDynamicObject(1649,-2663.10742188,527.79785156,48.75445938,0.00000000,0.00000000,269.23632812); //convertffs(84)
	CreateDynamicObject(1649,-2663.15527344,524.10546875,48.74802399,0.00000000,0.00000000,269.95312500); //convertffs(85)
	CreateDynamicObject(1649,-2663.17480469,522.29003906,48.74802017,0.00000000,0.00000000,267.96777344); //convertffs(86)
	CreateDynamicObject(1649,-2663.27539062,516.05664062,48.75433350,0.00000000,0.00000000,269.95312500); //convertffs(87)
	CreateDynamicObject(1649,-2663.30371094,511.93750000,48.75287628,0.00000000,0.00000000,269.95312500); //convertffs(88)
	CreateDynamicObject(1649,-2663.34863281,507.52050781,48.75071716,0.00000000,0.00000000,269.24157715); //convertffs(89)
	CreateDynamicObject(1649,-2660.97753906,506.23046875,49.73750305,0.00000000,0.00000000,180.63439941); //convertffs(90)
	CreateDynamicObject(1649,-2670.43066406,504.29003906,48.74883270,0.00000000,0.00000000,269.95867920); //convertffs(91)
	CreateDynamicObject(1649,-2672.71972656,508.46191406,48.74488831,0.00000000,0.00000000,180.63439941); //convertffs(92)
	CreateDynamicObject(1649,-2672.78125000,511.42871094,48.75262833,0.00000000,0.00000000,180.63439941); //convertffs(93)
	CreateDynamicObject(1649,-2670.60546875,513.64550781,48.74620438,0.00000000,0.00000000,271.94165039); //convertffs(94)
	CreateDynamicObject(1649,-2674.35449219,515.84472656,48.74528885,0.00000000,0.00000000,182.61938477); //convertffs(95)
	CreateDynamicObject(1649,-2672.85644531,526.60839844,48.74565506,0.00000000,0.00000000,180.63439941); //convertffs(96)
	CreateDynamicObject(1649,-2670.68164062,530.23046875,48.74976349,0.00000000,0.00000000,91.30950928); //convertffs(97)
    // -=========================== [Bowling Interior] by Greate FelipekxD! =======================================-
	CreateDynamicObject(6066,-2338.11230469,907.33886719,95.13129425,0.00000000,0.00000000,0.00000000); //convertffs(1)
	CreateDynamicObject(6066,-2337.96484375,918.02246094,95.13129425,0.00000000,0.00000000,0.00000000); //convertffs(2)
	CreateDynamicObject(3819,-2363.83105469,904.21765137,92.63438416,0.00000000,0.00000000,179.91210938); //convertffs(4)
	CreateDynamicObject(7617,-2336.66894531,906.78698730,94.02362061,0.00000000,0.00000000,89.32434082); //convertffs(5)
	CreateDynamicObject(1251,-2345.10791016,923.32342529,92.73552704,0.00000000,0.00000000,269.95434570); //convertffs(6)
	CreateDynamicObject(1251,-2351.31958008,923.32366943,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(7)
	CreateDynamicObject(1251,-2344.53515625,918.07617188,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(8)
	CreateDynamicObject(1251,-2351.43286133,918.07012939,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(9)
	CreateDynamicObject(1251,-2354.90722656,920.69732666,92.73552704,0.00000000,0.00000000,180.63439941); //convertffs(10)
	CreateDynamicObject(1251,-2345.32104492,912.64587402,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(11)
	CreateDynamicObject(1251,-2351.53417969,912.63867188,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(12)
	CreateDynamicObject(1251,-2344.61425781,907.32592773,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(13)
	CreateDynamicObject(1251,-2351.40795898,907.32751465,92.73552704,0.00000000,0.00000000,269.95056152); //convertffs(14)
	CreateDynamicObject(1251,-2354.78662109,910.73162842,92.73552704,0.00000000,0.00000000,180.63172913); //convertffs(15)
	CreateDynamicObject(1251,-2354.85449219,916.02441406,92.73552704,0.00000000,0.00000000,180.63172913); //convertffs(16)
	CreateDynamicObject(1251,-2345.33227539,901.95989990,92.73749542,0.00000000,0.00000000,269.95056152); //convertffs(17)
	CreateDynamicObject(1251,-2351.36083984,901.95697021,92.73749542,0.00000000,0.00000000,269.95056152); //convertffs(18)
	CreateDynamicObject(1251,-2354.72534180,905.39117432,92.73552704,0.00000000,0.00000000,180.63171387); //convertffs(19)
	CreateDynamicObject(1251,-2359.10205078,920.70440674,92.90537262,0.00000000,0.00000000,179.91467285); //convertffs(21)
	CreateDynamicObject(1251,-2359.10107422,913.88238525,92.90537262,0.00000000,0.00000000,179.91210938); //convertffs(22)
	CreateDynamicObject(1251,-2359.11181641,905.00335693,92.90537262,0.00000000,0.00000000,179.91210938); //convertffs(23)
	CreateDynamicObject(1251,-2359.10937500,909.07714844,92.90537262,0.00000000,0.00000000,179.91210938); //convertffs(24)
	CreateDynamicObject(1215,-2354.56811523,923.55108643,93.22747803,0.00000000,0.00000000,0.00000000); //convertffs(25)
	CreateDynamicObject(1215,-2354.46582031,912.80676270,93.20095062,0.00000000,0.00000000,0.00000000); //convertffs(26)
	CreateDynamicObject(1215,-2354.51269531,917.86425781,93.20659637,0.00000000,0.00000000,0.00000000); //convertffs(27)
	CreateDynamicObject(1215,-2354.41992188,907.54614258,93.20095062,0.00000000,0.00000000,0.00000000); //convertffs(28)
	CreateDynamicObject(1215,-2354.37255859,902.13873291,93.20095062,0.00000000,0.00000000,0.00000000); //convertffs(29)
	CreateDynamicObject(1231,-2337.74609375,915.55566406,92.82028961,0.00000000,0.00000000,89.32434082); //convertffs(30)
	CreateDynamicObject(1231,-2341.42871094,907.36718750,94.07028961,0.00000000,0.00000000,89.31884766); //convertffs(31)
	CreateDynamicObject(1215,-2336.19287109,912.65063477,97.48706055,0.00000000,0.00000000,0.00000000); //convertffs(32)
	CreateDynamicObject(3526,-2337.56933594,920.52166748,96.05293274,0.00000000,0.00000000,0.00000000); //convertffs(33)
	CreateDynamicObject(3526,-2337.57763672,915.46704102,96.05138397,0.00000000,0.00000000,0.00000000); //convertffs(34)
	CreateDynamicObject(3526,-2337.72167969,909.78729248,96.05220032,0.00000000,0.00000000,0.00000000); //convertffs(35)
	CreateDynamicObject(3526,-2337.72998047,904.65997314,96.05060577,0.00000000,0.00000000,0.00000000); //convertffs(36)
	CreateDynamicObject(16475,-2360.24316406,892.80078125,92.63662720,0.00000000,0.00000000,0.00000000); //convertffs(37)
	CreateDynamicObject(16475,-2348.56396484,926.14044189,92.63662720,0.00000000,0.00000000,180.62622070); //convertffs(38)
	CreateDynamicObject(1775,-2358.21386719,901.44531250,93.62271118,0.00000000,0.00000000,180.63171387); //convertffs(39)
	CreateDynamicObject(1598,-2339.79052734,916.47283936,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1946,-2362.83178711,923.20263672,92.94399261,0.00000000,0.00000000,0.00000000); //convertffs(48)
	CreateDynamicObject(3819,-2363.83105469,915.14257812,92.63438416,0.00000000,0.00000000,179.91210938); //convertffs(4)
	CreateDynamicObject(8378,-2344.10766602,915.36987305,92.00922394,90.00000000,180.00000000,270.00000000); //object(vgsbighngrdoor) (1)
	CreateDynamicObject(8378,-2349.45507812,915.36914062,91.95915985,90.00000000,179.99450684,270.00000000); //object(vgsbighngrdoor) (2)
	CreateDynamicObject(8378,-2367.60351562,915.36914062,91.95915985,0.00000000,0.00000000,90.00000000); //object(vgsbighngrdoor) (3)
	CreateDynamicObject(8378,-2335.92138672,915.36914062,91.95915985,0.00000000,0.00000000,90.00000000); //object(vgsbighngrdoor) (4)
	CreateDynamicObject(8378,-2344.77929688,947.33978271,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (5)
	CreateDynamicObject(8378,-2358.49951172,947.33886719,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (6)
	CreateDynamicObject(8378,-2358.49902344,900.23864746,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (7)
	CreateDynamicObject(8378,-2345.24902344,900.23828125,67.95915985,0.00000000,90.00000000,0.00000000); //object(vgsbighngrdoor) (8)
	CreateDynamicObject(8378,-2358.46020508,914.66418457,101.08418274,90.00000000,180.00549316,269.98901367); //object(vgsbighngrdoor) (9)
	CreateDynamicObject(8378,-2345.34765625,915.06835938,101.08418274,90.00000000,180.00549316,269.98901367); //object(vgsbighngrdoor) (10)
	CreateDynamicObject(9507,-2350.76806641,879.70959473,88.41332245,0.00000000,0.00000000,0.00000000); //object(bigboxtmp03) (1)
	CreateDynamicObject(9507,-2350.49316406,879.70898438,69.64332581,0.00000000,0.00000000,0.00000000); //object(bigboxtmp03) (2)
	CreateDynamicObject(1697,-2337.80249023,910.09875488,92.73693085,301.98464966,0.00000000,90.00000000); //object(roofstuff16) (1)
	CreateDynamicObject(1697,-2337.80175781,905.34863281,92.73693085,301.98120117,0.00000000,90.00000000); //object(roofstuff16) (2)
	CreateDynamicObject(1697,-2337.67724609,914.84863281,92.73693085,301.98120117,0.00000000,90.00000000); //object(roofstuff16) (3)
	CreateDynamicObject(1598,-2339.79003906,915.74743652,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,914.87121582,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79394531,914.87109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79394531,915.72192383,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79394531,916.44738770,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,909.12109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,910.12109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,910.87109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79003906,910.87109375,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79003906,910.07080078,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.79003906,909.21948242,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,904.02099609,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,904.79479980,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2339.79003906,905.66882324,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.76416016,905.66796875,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.76367188,904.79333496,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1598,-2338.76367188,903.99316406,92.54317474,0.00000000,0.00000000,0.00000000); //convertffs(47)
	CreateDynamicObject(1231,-2337.87060547,909.80541992,92.82028961,0.00000000,0.00000000,89.32434082); //convertffs(30)
	CreateDynamicObject(1231,-2337.87011719,904.77941895,92.82028961,0.00000000,0.00000000,89.32434082); //convertffs(30)
	CreateDynamicObject(1231,-2364.45068359,909.86718750,94.07028961,0.00000000,0.00000000,89.31884766); //convertffs(31)
	// -============================ Hitman  Interior(FelipekxD)  =============================================- //
	CreateDynamicObject(18065, -2193.8771972656, 892.71276855469, 98.174057006836, 0, 0, 0);
	CreateDynamicObject(1522, -2176.5981445313, 886.3740234375, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(1999, -2174.1484375, 898.10949707031, 95.946952819824, 0, 0, 0);
	CreateDynamicObject(2174, -2173.3610839844, 895.73248291016, 95.939682006836, 0, 0, 268.69067382813);
	CreateDynamicObject(2184, -2184.2431640625, 891.57647705078, 95.939682006836, 0, 0, 91.309509277344);
	CreateDynamicObject(2293, -2178.8688964844, 887.33514404297, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(2293, -2177.6787109375, 887.3232421875, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(2293, -2180.0266113281, 887.32574462891, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(2293, -2181.1298828125, 887.34436035156, 95.946952819824, 0, 0, 0);
	CreateDynamicObject(2293, -2182.2946777344, 887.33673095703, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(1215, -2185.8562011719, 886.79803466797, 96.511276245117, 0, 0, 0);
	CreateDynamicObject(1649, -2180.0737304688, 886.61254882813, 97.894485473633, 0, 0, 179.91760253906);
	CreateDynamicObject(1663, -2173.9267578125, 895.05578613281, 96.399894714355, 0, 0, 0);
	CreateDynamicObject(1663, -2173.4548339844, 897.18884277344, 96.399894714355, 0, 0, 230.97595214844);
	CreateDynamicObject(2754, -2184.4289550781, 887.07269287109, 96.841827392578, 0, 0, 268.69067382813);
	CreateDynamicObject(2206, -2175.02734375, 891.24420166016, 95.946952819824, 0, 0, 0);
	CreateDynamicObject(2198, -2173.7641601563, 887.45593261719, 95.939682006836, 0, 0, 91.309387207031);
	CreateDynamicObject(2638, -2180.6213378906, 892.71490478516, 96.59992980957, 0, 0, 0);
	CreateDynamicObject(2638, -2179.0993652344, 892.70678710938, 96.607200622559, 0, 0, 0);
	CreateDynamicObject(2198, -2174.58203125, 889.3056640625, 95.939682006836, 0, 0, 91.307373046875);
	CreateDynamicObject(2941, -2174.1728515625, 891.42767333984, 97.230201721191, 0, 0, 0);
	CreateDynamicObject(1671, -2173.5131835938, 889.94970703125, 96.381889343262, 0, 0, 316.33032226563);
	CreateDynamicObject(2994, -2185.2575683594, 894.85638427734, 96.441940307617, 0, 0, 0);
	CreateDynamicObject(2994, -2182.2893066406, 897.91247558594, 96.441940307617, 0, 0, 89.324493408203);
	CreateDynamicObject(2961, -2177.3269042969, 886.68933105469, 97.453025817871, 0, 0, 0);
	CreateDynamicObject(2961, -2172.765625, 897.09210205078, 97.259765625, 0, 0, 276.63061523438);
	CreateDynamicObject(8378, -2205.0441894531, 892.69964599609, 96.903060913086, 0, 0, 270.67565917969);
	CreateDynamicObject(1649, -2193.4782714844, 895.63592529297, 97.605422973633, 0, 0, 268.69067382813);
	CreateDynamicObject(1649, -2193.6352539063, 891.1318359375, 97.605422973633, 0, 0, 268.68713378906);
	CreateDynamicObject(1215, -2194.0158691406, 898.28594970703, 96.504005432129, 0, 0, 0);
	CreateDynamicObject(1215, -2193.9243164063, 886.64398193359, 96.504005432129, 0, 0, 0);
	CreateDynamicObject(1215, -2204.2143554688, 892.65100097656, 96.504005432129, 0, 0, 0);
	CreateDynamicObject(2193, -2203.9675292969, 897.07208251953, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(2185, -2199.5012207031, 898.20733642578, 95.939682006836, 0, 0, 180.63439941406);
	CreateDynamicObject(2205, -2198.5461425781, 886.70471191406, 95.939682006836, 0, 0, 179.36633300781);
	CreateDynamicObject(2171, -2200.7026367188, 887.58215332031, 95.939682006836, 0, 0, 89.324493408203);
	CreateDynamicObject(2370, -2203.1550292969, 888.9189453125, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(1781, -2203.0754394531, 889.59063720703, 96.786582946777, 0, 0, 142.91955566406);
	CreateDynamicObject(1783, -2202.3388671875, 888.9287109375, 96.857246398926, 0, 0, 0);
	CreateDynamicObject(1714, -2199.1745605469, 888.44299316406, 95.939682006836, 0, 0, 358.01501464844);
	CreateDynamicObject(1811, -2203.1760253906, 897.30023193359, 96.565986633301, 0, 0, 0);
	CreateDynamicObject(16151, -2194.6708984375, 892.61865234375, 95.939682006836, 0, 0, 1.9849853515625);
	CreateDynamicObject(2964, -2199.5324707031, 892.44152832031, 95.939682006836, 0, 0, 0);
	CreateDynamicObject(2997, -2200.2822265625, 892.46173095703, 96.869636535645, 0, 0, 0);
	CreateDynamicObject(2998, -2198.7873535156, 892.74084472656, 96.869636535645, 0, 0, 0);
	CreateDynamicObject(3002, -2198.9201660156, 892.12805175781, 96.869636535645, 0, 0, 0);
	CreateDynamicObject(3004, -2199.7509765625, 891.9716796875, 96.861106872559, 0, 0, 0);
	CreateDynamicObject(2997, -2199.4382324219, 892.16156005859, 96.869636535645, 0, 0, 0);
	CreateDynamicObject(3000, -2199.2399902344, 892.587890625, 96.869636535645, 0, 0, 0);
	CreateDynamicObject(2941, -2199.4523925781, 886.91577148438, 97.222930908203, 0, 0, 0);
	CreateDynamicObject(2714, -2186.0070800781, 897.51013183594, 99.281356811523, 0, 0, 89.324493408203);
	// -======================================== Oficina Taxi ===========================================- //
    CreateDynamicObject(15048,-1847.26660156,130.09179688,17.91591644,0.00000000,0.00000000,1.98303223); //object(labigsavehouse) (2)
	CreateDynamicObject(8378,-1838.76965332,137.72085571,15.08056259,0.00000000,0.00000000,271.94372559); //object(vgsbighngrdoor) (1)
	CreateDynamicObject(8378,-1830.25524902,132.49530029,21.44179153,270.67492676,0.00082397,1.98583984); //object(vgsbighngrdoor) (2)
	CreateDynamicObject(1505,-1837.91516113,133.00282288,14.11904144,0.00000000,0.00000000,91.30950928); //object(gen_doorext07) (1)
	CreateDynamicObject(1505,-1837.97460938,134.50097656,14.11904144,0.00000000,0.00000000,91.30187988); //object(gen_doorext07) (2)
	CreateDynamicObject(1251,-1837.90771484,132.94523621,13.22372627,89.32507324,0.00000000,358.01501465); //object(smashbar) (2)
	CreateDynamicObject(1251,-1837.99609375,136.05401611,13.23061371,89.32434082,0.00000000,358.01147461); //object(smashbar) (4)
	CreateDynamicObject(1502,-1830.90417480,130.59469604,17.93154144,0.00000000,0.00000000,1.98498535); //object(gen_doorint04) (1)
	CreateDynamicObject(1502,-1828.23742676,137.67831421,17.93154144,0.00000000,0.00000000,272.66064453); //object(gen_doorint04) (2)
	CreateDynamicObject(1966,-1837.54431152,125.16722870,16.87911987,0.00000000,0.00000000,1.98498535); //object(imcompmovedr1_las) (1)
	CreateDynamicObject(1726,-1832.87695312,137.29244995,14.11904144,0.00000000,0.00000000,272.66064453); //object(mrk_seating2) (1)
	CreateDynamicObject(1726,-1832.76196289,134.54702759,14.11904144,0.00000000,0.00000000,272.65869141); //object(mrk_seating2) (2)
	CreateDynamicObject(1727,-1834.83276367,138.21939087,14.11904144,0.00000000,0.00000000,3.96997070); //object(mrk_seating2b) (1)
	CreateDynamicObject(2010,-1833.95129395,134.78808594,14.02182579,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (1)
	CreateDynamicObject(2010,-1828.13281250,126.00619507,14.23276329,0.00000000,0.00000000,0.00000000); //object(nu_plant3_ofc) (2)
	CreateDynamicObject(1318,-1835.76171875,140.69116211,17.53564644,295.13000488,180.00000000,269.32458496); //object(arrow) (1)
	CreateDynamicObject(1502,-1830.73498535,130.81321716,14.32997894,0.00000000,0.00000000,1.98303223); //object(gen_doorint04) (3)
	CreateDynamicObject(2714,-1837.92504883,134.47752380,16.77673340,0.00000000,0.00000000,91.30950928); //object(cj_open_sign_2) (1)
	CreateDynamicObject(16151,-1825.98730469,137.88882446,14.58419514,0.00000000,0.00000000,1.98498535); //object(ufo_bar) (1)
	CreateDynamicObject(1835,-1831.95251465,140.74246216,14.32997894,0.00000000,0.00000000,0.00000000); //object(kb_bandit5) (1)
	CreateDynamicObject(1832,-1831.30505371,140.77842712,14.32997894,0.00000000,0.00000000,0.00000000); //object(kb_bandit3) (1)
	CreateDynamicObject(1838,-1830.73852539,140.78631592,14.32997894,0.00000000,0.00000000,0.00000000); //object(kb_bandit11) (2)
	CreateDynamicObject(1978,-1831.16174316,135.09967041,15.13754177,0.00000000,0.00000000,0.00000000); //object(roulette_tbl) (1)
	CreateDynamicObject(1708,-1825.24865723,132.54393005,14.32997894,0.00000000,0.00000000,270.67565918); //object(kb_chair02) (2)
	CreateDynamicObject(1708,-1826.72033691,131.47663879,14.32997894,0.00000000,0.00000000,181.35131836); //object(kb_chair02) (3)
	CreateDynamicObject(2700,-1825.06616211,134.61700439,16.99137306,356.05145264,5.96920776,179.77880859); //object(cj_sex_tv2) (1)
	CreateDynamicObject(2738,-1826.86767578,129.96408081,18.53439140,0.00000000,0.00000000,0.00000000); //object(cj_toilet_bs) (1)
	CreateDynamicObject(2523,-1828.19274902,128.16580200,17.93154144,0.00000000,0.00000000,181.35131836); //object(cj_b_sink3) (1)
	CreateDynamicObject(2738,-1827.86669922,129.99584961,18.53439140,0.00000000,0.00000000,3.96997070); //object(cj_toilet_bs) (2)
	CreateDynamicObject(2317,-1826.78833008,128.14688110,20.18757057,19.85000610,0.00000000,238.91589355); //object(cj_tele_3) (1)
	CreateDynamicObject(2742,-1829.52844238,127.73543549,19.10096169,0.00000000,0.00000000,183.33630371); //object(cj_handdrier) (1)
	CreateDynamicObject(2523,-1830.00488281,128.10546875,17.93154144,0.00000000,0.00000000,181.35131836); //object(cj_b_sink3) (3)
	CreateDynamicObject(2841,-1828.61486816,136.36718750,17.93154144,0.00000000,0.00000000,89.32449341); //object(gb_bedrug03) (1)
	CreateDynamicObject(2308,-1823.85876465,139.46894836,17.93154144,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_4) (1)
	CreateDynamicObject(2309,-1822.82617188,139.22218323,17.93154144,0.00000000,0.00000000,41.68478394); //object(med_office_chair2) (1)
	CreateDynamicObject(2205,-1822.54675293,133.47082520,17.93154144,0.00000000,0.00000000,181.35131836); //object(med_office8_desk_1) (1)
	CreateDynamicObject(2182,-1826.62036133,133.32373047,17.92373085,0.00000000,0.00000000,91.30950928); //object(med_office5_desk_1) (1)
	CreateDynamicObject(2309,-1826.65026855,134.08982849,17.93154144,0.00000000,0.00000000,0.00000000); //object(med_office_chair2) (2)
	CreateDynamicObject(2190,-1826.71069336,132.91610718,18.68379974,0.00000000,0.00000000,184.60437012); //object(pc_1) (1)
	CreateDynamicObject(3017,-1822.80358887,134.11898804,18.71482658,336.17999268,0.00000000,0.00000000); //object(arch_plans) (1)
	CreateDynamicObject(3031,-1822.98803711,132.83242798,19.72175980,0.00000000,0.00000000,89.32449341); //object(wong_dish) (1)
	CreateDynamicObject(1792,-1823.68310547,133.27235413,18.86800385,0.00000000,0.00000000,182.61938477); //object(swank_tv_1) (1)
	CreateDynamicObject(1216,-1827.55700684,140.47621155,18.62354469,0.00000000,0.00000000,1.98498535); //object(phonebooth1) (1)
	CreateDynamicObject(1216,-1830.10949707,125.84490967,15.02198124,0.00000000,0.00000000,181.35131836); //object(phonebooth1) (2)
	CreateDynamicObject(1216,-1831.43530273,125.78923798,15.02198124,0.00000000,0.00000000,181.35131836); //object(phonebooth1) (3)
	CreateDynamicObject(1808,-1824.79077148,140.72697449,17.93154144,0.00000000,0.00000000,0.00000000); //object(cj_watercooler2) (1)
	CreateDynamicObject(2186,-1822.51586914,136.33161926,17.93154144,0.00000000,0.00000000,272.66064453); //object(photocopier_1) (1)
	//==================================== Farmacia gg ===================================
CreateDynamicObject(4022,900.88867188,-1664.02832031,15.67765999,0.00000000,0.00000000,270.00000000); //object(foodmart1_lan) (2)
CreateDynamicObject(2955,896.07067871,-1664.25903320,13.66353989,0.00000000,0.00000000,0.00000000); //object(imy_compin) (1)
CreateDynamicObject(984,901.05371094,-1684.49804688,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
CreateDynamicObject(984,888.28302002,-1684.49890137,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (2)
CreateDynamicObject(984,875.50561523,-1684.49890137,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (3)
CreateDynamicObject(984,862.71960449,-1684.49890137,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (4)
CreateDynamicObject(984,849.91394043,-1684.49890137,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (6)
CreateDynamicObject(984,907.44335938,-1646.70410156,13.19133663,0.00000000,0.00000000,179.99450684); //object(fenceshit2) (8)
CreateDynamicObject(983,904.24407959,-1653.13500977,13.23042965,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (1)
CreateDynamicObject(983,904.24407959,-1674.93457031,13.23042965,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (2)
CreateDynamicObject(3578,907.12597656,-1679.36230469,12.02492809,0.00000000,0.00000000,270.00000000); //object(dockbarr1_la) (4)
CreateDynamicObject(3578,902.87805176,-1679.36230469,12.02492809,0.00000000,0.00000000,270.00000000); //object(dockbarr1_la) (4)
CreateDynamicObject(3927,907.32568359,-1684.84631348,15.14818287,0.00000000,0.00000000,270.00000000); //object(d_sign01) (2)
CreateDynamicObject(1318,907.33093262,-1684.65917969,15.95313835,0.00000000,180.00000000,0.00000000); //object(arrow) (7)
CreateDynamicObject(1241,907.38525391,-1685.31799316,15.83653450,0.00000000,20.00000000,0.00000000); //object(adrenaline) (1)
CreateDynamicObject(1241,907.38952637,-1684.02233887,15.83653450,0.00000000,19.99511719,0.00000000); //object(adrenaline) (2)
CreateDynamicObject(8843,892.93005371,-1677.30957031,12.80617809,0.00000000,0.00000000,90.00000000); //object(arrows01_lvs) (1)
CreateDynamicObject(8843,893.10784912,-1682.55700684,12.80617809,0.00000000,0.00000000,270.00000000); //object(arrows01_lvs) (2)
CreateDynamicObject(984,901.05981445,-1679.49804688,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
CreateDynamicObject(984,888.26135254,-1679.49804688,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
CreateDynamicObject(984,875.43615723,-1679.49804688,13.19133663,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
CreateDynamicObject(983,865.95684814,-1678.57482910,13.23042965,0.00000000,0.00000000,72.74996948); //object(fenceshit3) (3)
CreateDynamicObject(983,861.19683838,-1674.91308594,13.23042965,0.00000000,0.00000000,212.24601746); //object(fenceshit3) (4)
CreateDynamicObject(983,859.38562012,-1669.01196289,13.23042965,0.00000000,0.00000000,182.24487305); //object(fenceshit3) (5)
CreateDynamicObject(910,854.51904297,-1631.05761719,13.82384300,0.00000000,0.00000000,0.00000000); //object(bust_cabinet_4) (1)
CreateDynamicObject(1216,856.19714355,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (1)
CreateDynamicObject(1216,856.94573975,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (2)
CreateDynamicObject(1216,857.69476318,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (3)
CreateDynamicObject(1216,858.44378662,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (4)
CreateDynamicObject(1216,859.19281006,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (5)
CreateDynamicObject(1216,859.94183350,-1640.67700195,13.25072384,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (6)
CreateDynamicObject(1256,870.43487549,-1644.67871094,13.13354778,0.00000000,0.00000000,90.00000000); //object(stonebench1) (1)
CreateDynamicObject(1256,873.06335449,-1644.67871094,13.13354778,0.00000000,0.00000000,90.00000000); //object(stonebench1) (2)
CreateDynamicObject(1256,876.56353760,-1644.67871094,13.13354778,0.00000000,0.00000000,90.00000000); //object(stonebench1) (3)
CreateDynamicObject(1256,879.11193848,-1644.67871094,13.13354778,0.00000000,0.00000000,90.00000000); //object(stonebench1) (4)
CreateDynamicObject(3433,896.03051758,-1664.95727539,15.31035233,0.00000000,0.00000000,0.00000000); //object(htlcnpy01_lvs) (2)
CreateDynamicObject(3851,895.41796875,-1658.71777344,20.70676041,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3851,895.41503906,-1669.32714844,20.70676041,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,901.04492188,-1674.95117188,20.70676041,0.00000000,0.00000000,90.00000000); //object(carshowwin_sfsx) (4)
CreateDynamicObject(3851,901.04357910,-1653.07336426,20.70676041,0.00000000,0.00000000,90.00000000); //object(carshowwin_sfsx) (5)
CreateDynamicObject(10245,897.80621338,-1651.38000488,14.04867172,0.00000000,0.00000000,43.99475098); //object(ottos_ramp) (2)
CreateDynamicObject(3851,908.21423340,-1655.30749512,18.80676270,0.00000000,90.00000000,0.00000000); //object(carshowwin_sfsx) (6)
CreateDynamicObject(3851,908.21423340,-1666.46838379,18.80676270,0.00000000,90.00000000,0.00000000); //object(carshowwin_sfsx) (9)
CreateDynamicObject(3851,904.58575439,-1675.02221680,20.70676041,0.00000000,0.00000000,90.00000000); //object(carshowwin_sfsx) (4)
CreateDynamicObject(12842,900.39508057,-1668.89733887,18.61670685,0.00000000,0.00000000,0.00000000); //object(cos_pizseats) (1)
CreateDynamicObject(12842,900.39508057,-1661.62121582,18.61670685,0.00000000,0.00000000,0.00000000); //object(cos_pizseats) (2)
CreateDynamicObject(3851,908.21423340,-1669.34509277,18.80676270,0.00000000,90.00000000,0.00000000); //object(carshowwin_sfsx) (9)
CreateDynamicObject(3851,908.21386719,-1669.34472656,18.80676270,0.00000000,90.00000000,0.00000000); //object(carshowwin_sfsx) (9)
CreateDynamicObject(3851,910.18432617,-1669.36425781,20.70676041,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,910.18432617,-1658.18652344,20.70676041,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(3851,910.18432617,-1655.31115723,20.70676041,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx) (3)
CreateDynamicObject(1649,907.97418213,-1649.60034180,20.37354469,0.00000000,0.00000000,180.00000000); //object(wglasssmash) (3)
CreateDynamicObject(1649,907.97363281,-1649.59960938,21.04853439,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (4)
CreateDynamicObject(1649,907.97363281,-1649.59960938,20.37354469,0.00000000,0.00000000,359.99450684); //object(wglasssmash) (5)
CreateDynamicObject(1649,907.97363281,-1649.59960938,21.04853439,0.00000000,0.00000000,359.99450684); //object(wglasssmash) (6)
CreateDynamicObject(640,896.49218750,-1656.81628418,18.85906792,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush2) (1)
CreateDynamicObject(640,896.49218750,-1656.81542969,18.85906792,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush2) (2)
CreateDynamicObject(640,896.49218750,-1662.19238281,18.85906792,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush2) (3)
CreateDynamicObject(640,896.49218750,-1667.53234863,18.85906792,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush2) (4)
CreateDynamicObject(640,896.49218750,-1672.03222656,18.85906792,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush2) (5)
CreateDynamicObject(640,899.23449707,-1674.18676758,18.85906792,0.00000000,0.00000000,270.00000000); //object(kb_planter_bush2) (6)
CreateDynamicObject(640,903.03442383,-1674.17065430,18.85906792,0.00000000,0.00000000,270.00000000); //object(kb_planter_bush2) (7)
CreateDynamicObject(640,899.54980469,-1654.41967773,18.85906792,0.00000000,0.00000000,90.00000000); //object(kb_planter_bush2) (8)
CreateDynamicObject(640,903.11279297,-1654.41967773,18.85906792,0.00000000,0.00000000,90.00000000); //object(kb_planter_bush2) (9)
CreateDynamicObject(640,905.60015869,-1660.06884766,18.85906792,0.00000000,0.00000000,180.00000000); //object(kb_planter_bush2) (10)
CreateDynamicObject(640,905.60015869,-1665.42114258,18.85906792,0.00000000,0.00000000,179.99450684); //object(kb_planter_bush2) (11)
CreateDynamicObject(640,905.60015869,-1670.74743652,18.85906792,0.00000000,0.00000000,179.99450684); //object(kb_planter_bush2) (12)
CreateDynamicObject(640,905.60015869,-1671.62097168,18.85906792,0.00000000,0.00000000,179.99450684); //object(kb_planter_bush2) (13)
CreateDynamicObject(13593,903.78009033,-1656.26953125,18.12990570,320.00729370,358.69467163,88.16101074); //object(kickramp03) (1)
// -============================  Calle alambra (by Antony Forelli) =============================- //
CreateDynamicObject(2960,1817.00000000,-1743.89941406,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (1)
CreateDynamicObject(2960,1818.59960938,-1744.00000000,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (2)
CreateDynamicObject(2960,1819.89941406,-1744.00000000,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (3)
CreateDynamicObject(2960,1821.19921875,-1744.09960938,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (4)
CreateDynamicObject(2960,1822.29980469,-1744.09960938,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (5)
CreateDynamicObject(2960,1823.50000000,-1744.09960938,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (6)
CreateDynamicObject(2960,1824.59960938,-1744.19921875,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (7)
CreateDynamicObject(2960,1825.79980469,-1744.19921875,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (8)
CreateDynamicObject(2960,1826.09960938,-1761.79980469,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (9)
CreateDynamicObject(2960,1824.79980469,-1761.79980469,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (10)
CreateDynamicObject(2960,1823.39941406,-1761.79980469,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (11)
CreateDynamicObject(2960,1822.29980469,-1761.79980469,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (12)
CreateDynamicObject(2960,1821.09960938,-1761.79980469,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (13)
CreateDynamicObject(2960,1820.00000000,-1761.69921875,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (14)
CreateDynamicObject(2960,1818.89941406,-1761.69921875,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (15)
CreateDynamicObject(2960,1817.50000000,-1761.59960938,12.32999992,0.00000000,0.00000000,90.00000000); //object(kmb_beam) (16)
CreateDynamicObject(2960,1829.39941406,-1747.59960938,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (17)
CreateDynamicObject(2960,1829.29980469,-1749.09960938,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (18)
CreateDynamicObject(2960,1829.29980469,-1750.39941406,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (19)
CreateDynamicObject(2960,1829.39941406,-1751.89941406,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (20)
CreateDynamicObject(2960,1829.39941406,-1753.39941406,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (21)
CreateDynamicObject(2960,1829.39941406,-1755.00000000,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (22)
CreateDynamicObject(2960,1829.29980469,-1756.79980469,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (23)
CreateDynamicObject(994,1826.80004883,-1742.00000000,12.50000000,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (1)
CreateDynamicObject(994,1842.09997559,-1746.80004883,12.50000000,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (2)
CreateDynamicObject(994,1835.00000000,-1746.80004883,12.50000000,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (3)
CreateDynamicObject(997,1826.80004883,-1742.50000000,12.50000000,0.00000000,0.00000000,300.00000000); //object(lhouse_barrier3) (1)
CreateDynamicObject(997,1813.00000000,-1738.19995117,12.50000000,0.00000000,0.00000000,320.00000000); //object(lhouse_barrier3) (2)
CreateDynamicObject(994,1806.40002441,-1738.09997559,12.50000000,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (4)
CreateDynamicObject(994,1816.40002441,-1759.30004883,12.50000000,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (5)
CreateDynamicObject(997,1829.00000000,-1745.69921875,12.50000000,0.00000000,0.00000000,339.99938965); //object(lhouse_barrier3) (3)
CreateDynamicObject(997,1813.40002441,-1726.30004883,12.50000000,0.00000000,0.00000000,40.00000000); //object(lhouse_barrier3) (4)
CreateDynamicObject(994,1806.80004883,-1726.50000000,12.50000000,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (7)
CreateDynamicObject(994,1816.00000000,-1723.50000000,12.50000000,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (8)
CreateDynamicObject(2960,1804.39941406,-1727.59960938,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (24)
CreateDynamicObject(2960,1804.39941406,-1729.00000000,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (25)
CreateDynamicObject(2960,1804.39941406,-1730.89941406,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (26)
CreateDynamicObject(2960,1804.39941406,-1732.79980469,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (28)
CreateDynamicObject(2960,1804.29980469,-1734.59960938,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (29)
CreateDynamicObject(2960,1804.29980469,-1736.59960938,12.32999992,0.00000000,0.00000000,0.00000000); //object(kmb_beam) (30)
CreateDynamicObject(994,1827.00000000,-1770.80004883,12.50000000,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (9)
CreateDynamicObject(994,1835.19995117,-1757.80004883,12.50000000,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (10)
CreateDynamicObject(997,1827.19995117,-1760.30004883,12.50000000,0.00000000,0.00000000,45.00000000); //object(lhouse_barrier3) (5)
CreateDynamicObject(994,1842.40002441,-1757.80004883,12.50000000,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2) (11)
CreateDynamicObject(1211,1816.19995117,-1745.90002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(fire_hydrant) (1)
CreateDynamicObject(1211,1841.90002441,-1757.80004883,13.19999981,0.00000000,0.00000000,0.00000000); //object(fire_hydrant) (2)
CreateDynamicObject(1211,1826.80004883,-1735.19995117,13.19999981,0.00000000,0.00000000,0.00000000); //object(fire_hydrant) (3)
CreateDynamicObject(1257,1827.80004883,-1728.90002441,13.80000019,0.00000000,0.00000000,0.00000000); //object(bustopm) (1)
CreateDynamicObject(1375,1827.09997559,-1725.59997559,14.19999981,0.00000000,0.00000000,0.00000000); //object(tramstop_sf) (1)
CreateDynamicObject(2921,1837.30004883,-1735.30004883,30.10000038,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (1)
CreateDynamicObject(994,1816.40002441,-1752.19995117,12.50000000,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2) (5)
CreateDynamicObject(3578,1821.50000000,-1752.69995117,11.60000038,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (10)
CreateDynamicObject(3578,1821.50000000,-1750.09997559,11.60000038,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (22)
CreateDynamicObject(3578,1821.09997559,-1746.30004883,11.60000038,0.00000000,0.00000000,60.00000000); //object(dockbarr1_la) (23)
CreateDynamicObject(3578,1821.50000000,-1755.50000000,11.60000038,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (24)
CreateDynamicObject(3578,1821.50000000,-1758.80004883,11.60000038,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (25)
CreateDynamicObject(3578,1819.40002441,-1754.80004883,11.60000038,0.00000000,0.00000000,60.00000000); //object(dockbarr1_la) (26)
CreateDynamicObject(3578,1818.90002441,-1750.09997559,11.60000038,0.00000000,0.00000000,59.99633789); //object(dockbarr1_la) (27)
CreateDynamicObject(3578,1826.40002441,-1750.59997559,11.60000038,0.00000000,0.00000000,59.99633789); //object(dockbarr1_la) (28)
CreateDynamicObject(3578,1823.90002441,-1747.09997559,11.60000038,0.00000000,0.00000000,60.00000000); //object(dockbarr1_la) (30)
CreateDynamicObject(3578,1824.00000000,-1754.79980469,11.60000038,0.00000000,0.00000000,59.99633789); //object(dockbarr1_la) (31)
CreateDynamicObject(3578,1821.50000000,-1746.89941406,11.60000038,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (32)
CreateDynamicObject(3578,1826.40002441,-1754.00000000,11.60000038,0.00000000,0.00000000,90.00000000); //object(dockbarr1_la) (37)
CreateDynamicObject(3578,1826.40002441,-1748.19995117,11.60000038,0.00000000,0.00000000,90.00000000); //object(dockbarr1_la) (38)
CreateDynamicObject(3578,1817.19995117,-1747.19995117,11.60000038,0.00000000,0.00000000,90.00000000); //object(dockbarr1_la) (39)
CreateDynamicObject(3578,1817.19995117,-1754.09997559,11.60000038,0.00000000,0.00000000,90.00000000); //object(dockbarr1_la) (40)
CreateDynamicObject(3578,1821.90002441,-1742.09997559,11.60000038,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (41)
// -============================  Puerto LS (by Ricardo Dominguez) =============================- //
CreateDynamicObject(6450, 582.90, -1918.30, -5.10,   0.00, 0.00, 175.99);
CreateDynamicObject(18259, 574.70, -1978.50, 4.25,   1.00, 0.00, 264.00);
CreateDynamicObject(3582, 587.40, -1993.80, 5.50,   0.00, 0.00, 356.00);
CreateDynamicObject(3406, 588.70, -1985.90, 0.70,   0.00, 0.00, 355.99);
CreateDynamicObject(3406, 588.55, -1987.90, 0.70,   0.00, 0.00, 355.99);
CreateDynamicObject(3406, 588.40, -1989.90, 0.70,   0.00, 0.00, 355.99);
CreateDynamicObject(3406, 588.26, -1991.90, 0.70,   0.00, 0.00, 355.99);
CreateDynamicObject(3406, 588.12, -1993.90, 0.70,   0.00, 0.00, 355.99);
CreateDynamicObject(3406, 587.98, -1995.90, 0.70,   0.00, 0.00, 355.99);
CreateDynamicObject(3406, 588.00, -1997.90, 0.70,   0.00, 0.00, 355.99);
CreateDynamicObject(3406, 587.80, -2000.10, 0.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 592.70, -1996.51, 0.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 593.20, -1989.20, 0.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 583.20, -1988.30, 0.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 581.20, -1988.20, 0.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 581.70, -1995.80, 0.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 580.70, -1995.70, 0.69,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 585.80, -1999.90, 0.69,   0.00, 0.00, 355.98);
CreateDynamicObject(3361, 576.30, -1985.20, 0.70,   0.00, 0.00, 176.00);
CreateDynamicObject(3406, 572.20, -1984.90, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3361, 574.60, -1999.30, 0.70,   0.00, 0.00, 175.99);
CreateDynamicObject(3361, 580.10, -2005.40, 0.70,   0.00, 0.00, 264.00);
CreateDynamicObject(3361, 591.90, -2006.10, 0.70,   0.00, 0.00, 263.99);
CreateDynamicObject(3406, 571.10, -1999.00, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 565.00, -2001.40, -1.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 563.44, -1984.28, -1.70,   0.00, 0.00, 356.00);
CreateDynamicObject(3406, 579.70, -2009.70, -1.70,   0.00, 0.00, 265.50);
CreateDynamicObject(3406, 591.45, -2011.00, -1.70,   0.00, 0.00, 265.50);
CreateDynamicObject(3406, 564.40, -2009.90, -1.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 560.40, -1998.20, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 551.70, -1997.70, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 572.07, -1986.80, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 563.30, -1986.20, -1.70,   0.00, 0.00, 355.99);
CreateDynamicObject(1656, 564.30, -1983.15, 2.40,   90.00, 180.00, 176.00);
CreateDynamicObject(1656, 559.30, -1982.80, 2.76,   90.00, 180.01, 175.98);
CreateDynamicObject(1656, 560.52, -1982.89, 2.76,   90.00, 179.99, 175.99);
CreateDynamicObject(1656, 561.70, -1982.97, 2.76,   90.00, 180.01, 175.98);
CreateDynamicObject(1656, 559.30, -1982.80, 2.40,   90.00, 180.01, 175.98);
CreateDynamicObject(1656, 563.02, -1983.06, 2.76,   90.00, 180.01, 175.98);
CreateDynamicObject(1656, 560.52, -1982.89, 2.40,   90.00, 180.01, 175.98);
CreateDynamicObject(1656, 561.70, -1982.97, 2.40,   90.00, 179.99, 176.00);
CreateDynamicObject(1656, 564.30, -1983.15, 2.76,   90.00, 180.01, 175.98);
CreateDynamicObject(1656, 563.02, -1983.06, 2.40,   90.00, 180.01, 175.98);
CreateDynamicObject(10757, 1587.60, -2285.60, 39.55,   0.00, 0.00, 266.00);
CreateDynamicObject(3406, 597.10, -2011.60, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 586.10, -2001.90, 0.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 588.10, -2002.10, 0.76,   0.00, 0.00, 355.99);
CreateDynamicObject(3406, 579.00, -2018.45, -1.70,   0.00, 0.00, 265.50);
CreateDynamicObject(3406, 590.76, -2019.70, -1.70,   0.00, 0.00, 265.50);
CreateDynamicObject(3406, 563.80, -2018.62, -1.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 563.19, -2027.38, -1.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 593.50, -2007.40, -1.70,   0.00, 0.00, 265.50);
CreateDynamicObject(3406, 594.20, -1998.70, -1.70,   0.00, 0.00, 265.49);
CreateDynamicObject(1616, 1292.80, -1960.50, 41.10,   0.00, 0.00, 348.00);
CreateDynamicObject(8670, 319.90, -1186.10, 81.00,   0.00, 0.00, 308.00);
CreateDynamicObject(8669, 319.90, -1186.20, 83.00,   0.00, 0.00, 308.00);
CreateDynamicObject(3749, 317.90, -1181.90, 83.00,   0.00, 0.00, 38.00);
CreateDynamicObject(16635, 301.10, -1203.40, 81.90,   0.00, 0.00, 36.00);
CreateDynamicObject(11568, 564.70, -1957.80, 3.10,   0.00, 0.00, 176.00);
CreateDynamicObject(3406, 562.60, -2036.10, -1.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 594.90, -1989.90, -1.70,   0.00, 0.00, 265.49);
CreateDynamicObject(3406, 592.40, -1984.30, -1.80,   0.00, 357.99, 355.98);
CreateDynamicObject(3406, 583.80, -1983.70, -2.00,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 575.10, -1983.10, -1.90,   0.00, 1.89, 355.98);
CreateDynamicObject(3406, 568.10, -1982.60, -1.71,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 578.30, -2027.20, -1.70,   0.00, 0.00, 265.50);
CreateDynamicObject(3406, 602.80, -1944.40, 0.20,   0.00, 0.00, 265.49);
CreateDynamicObject(3406, 602.11, -1953.10, 0.20,   0.00, 0.00, 265.50);
CreateDynamicObject(3406, 601.42, -1961.80, 0.20,   0.00, 0.00, 265.50);
CreateDynamicObject(3406, 600.00, -1961.70, 0.20,   0.00, 0.00, 265.50);
CreateDynamicObject(3406, 603.20, -1962.05, 0.00,   0.00, 357.00, 265.50);
CreateDynamicObject(3406, 603.90, -1953.30, -0.47,   0.00, 357.00, 265.49);
CreateDynamicObject(3406, 615.60, -1948.70, -1.40,   0.00, 0.00, 173.49);
CreateDynamicObject(8645, 1381.20, -2377.30, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 579.30, -2008.30, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 565.40, -2006.40, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 564.60, -2017.80, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 578.30, -2019.10, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 563.00, -2037.30, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 563.60, -2027.90, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 577.40, -2029.10, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3406, 607.10, -1947.70, -0.99,   0.00, 354.50, 173.49);
CreateDynamicObject(3406, 605.87, -2012.22, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 613.75, -2012.78, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 633.14, -2014.08, -1.70,   0.00, 0.00, 354.51);
CreateDynamicObject(3406, 670.00, -2011.10, -1.71,   0.00, 0.00, 85.98);
CreateDynamicObject(3406, 670.60, -2002.50, -1.70,   0.00, 0.00, 85.97);
CreateDynamicObject(3406, 671.20, -1993.72, -1.70,   0.00, 0.00, 85.97);
CreateDynamicObject(3406, 671.80, -1984.96, -1.70,   0.00, 0.00, 85.97);
CreateDynamicObject(3406, 672.42, -1976.20, -1.70,   0.00, 0.00, 85.97);
CreateDynamicObject(3406, 673.06, -1967.44, -1.70,   0.00, 0.00, 85.97);
CreateDynamicObject(3406, 673.67, -1958.68, -1.70,   0.00, 0.00, 85.97);
CreateDynamicObject(2098, 300.40, -1154.10, 81.90,   0.00, 0.00, 318.00);
CreateDynamicObject(3406, 624.30, -1949.70, -1.40,   0.00, 0.00, 173.49);
CreateDynamicObject(3406, 640.70, -2014.70, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 649.40, -2015.32, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 658.10, -2015.93, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 666.87, -2016.54, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 633.00, -1950.60, -1.40,   0.00, 0.00, 173.49);
CreateDynamicObject(3406, 641.70, -1951.60, -1.40,   0.00, 0.00, 173.49);
CreateDynamicObject(3406, 650.50, -1952.60, -1.40,   0.00, 0.00, 173.49);
CreateDynamicObject(3406, 659.22, -1953.58, -1.40,   0.00, 0.00, 173.49);
CreateDynamicObject(3406, 667.90, -1954.58, -1.50,   0.00, 358.70, 173.49);
CreateDynamicObject(3406, 669.90, -1954.80, -1.54,   0.00, 358.50, 173.49);
CreateDynamicObject(3406, 597.20, -2009.60, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 605.90, -2010.20, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 613.90, -2010.86, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 641.46, -2007.88, -1.70,   0.00, 0.00, 265.28);
CreateDynamicObject(3406, 633.31, -2012.22, -1.70,   0.00, 0.00, 355.88);
CreateDynamicObject(3406, 640.80, -2012.70, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 649.60, -2013.30, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 658.20, -2013.90, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 667.00, -2014.50, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 668.00, -2010.90, -1.70,   0.00, 0.00, 85.98);
CreateDynamicObject(3406, 668.60, -2002.30, -1.70,   0.00, 0.00, 85.97);
CreateDynamicObject(3406, 669.20, -1993.70, -1.70,   0.00, 0.00, 85.97);
CreateDynamicObject(3406, 669.80, -1984.90, -1.70,   0.00, 0.00, 85.97);
CreateDynamicObject(3406, 670.40, -1976.20, -1.70,   0.00, 0.00, 85.97);
CreateDynamicObject(3406, 671.00, -1967.40, -1.70,   0.00, 0.00, 85.96);
CreateDynamicObject(3406, 671.70, -1958.60, -1.70,   0.00, 0.00, 85.96);
CreateDynamicObject(16326, 659.60, -2021.10, 0.40,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 603.80, -2005.18, -1.70,   0.00, 0.00, 265.50);
CreateDynamicObject(3406, 559.90, -2010.90, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 551.40, -2010.40, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 558.90, -2025.70, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 550.30, -2025.10, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 557.80, -2039.60, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 549.20, -2038.90, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 664.30, -1996.40, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 665.40, -1984.20, -1.70,   0.00, 0.00, 353.98);
CreateDynamicObject(3406, 641.50, -1957.20, -1.40,   0.00, 0.00, 263.49);
CreateDynamicObject(3406, 627.50, -1956.00, -1.40,   0.00, 0.00, 263.49);
CreateDynamicObject(3406, 615.90, -1954.40, -1.40,   0.00, 0.00, 263.49);
CreateDynamicObject(3406, 617.05, -2006.13, -1.70,   0.00, 0.00, 265.80);
CreateDynamicObject(3406, 629.80, -2007.20, -1.70,   0.00, 0.00, 265.49);
CreateDynamicObject(3406, 652.68, -2008.71, -1.70,   0.00, 0.00, 265.49);
CreateDynamicObject(3406, 562.00, -2044.80, -1.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 556.80, -2053.50, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 548.20, -2052.80, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 561.30, -2053.50, -1.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 557.40, -2067.20, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 560.70, -2062.20, -1.70,   0.00, 0.00, 86.00);
CreateDynamicObject(3406, 548.70, -2066.60, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3666, 562.00, -2051.80, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3666, 561.30, -2065.00, 0.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3406, 655.60, -2017.30, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 655.40, -2019.20, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 655.30, -2020.80, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 664.40, -2018.20, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 664.20, -2020.00, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 664.10, -2021.30, -1.70,   0.00, 0.00, 355.98);
CreateDynamicObject(3406, 640.50, -2019.90, -1.70,   0.00, 0.00, 265.49);
CreateDynamicObject(3406, 628.82, -2019.60, -1.70,   0.00, 0.00, 263.87);
CreateDynamicObject(3406, 616.00, -2018.80, -1.70,   0.00, 0.00, 265.49);
CreateDynamicObject(3406, 602.70, -2017.90, -1.70,   0.00, 0.00, 265.49);
CreateDynamicObject(3406, 653.40, -1948.00, -1.40,   0.00, 0.00, 263.49);
CreateDynamicObject(3406, 641.00, -1947.30, -1.40,   0.00, 0.00, 263.49);
CreateDynamicObject(3406, 628.10, -1945.30, -1.40,   0.00, 0.00, 263.49);
CreateDynamicObject(3406, 615.90, -1943.90, -1.40,   0.00, 0.00, 263.49);
CreateDynamicObject(3406, 667.70, -2021.80, -1.63,   0.00, 355.50, 355.98);
CreateDynamicObject(3406, 667.60, -2019.80, -1.60,   0.00, 355.50, 355.98);
CreateDynamicObject(3406, 667.80, -2018.10, -1.60,   0.00, 355.50, 355.98);
CreateDynamicObject(1698, 667.50, -2024.00, 0.25,   0.00, 0.00, 356.00);
CreateDynamicObject(1698, 666.50, -2025.80, 0.30,   0.00, 0.00, 88.00);
CreateDynamicObject(1698, 663.20, -2025.70, 0.30,   0.00, 0.00, 87.99);
CreateDynamicObject(1698, 659.90, -2025.59, 0.30,   0.00, 0.00, 87.99);
CreateDynamicObject(1698, 656.90, -2025.48, 0.30,   0.00, 0.00, 87.99);
CreateDynamicObject(1698, 655.79, -2027.60, 0.30,   0.00, 0.00, 177.99);
CreateDynamicObject(1698, 653.60, -2028.54, 0.30,   0.00, 0.00, 267.99);
CreateDynamicObject(1698, 653.50, -2027.30, 0.30,   0.00, 0.00, 267.98);
CreateDynamicObject(1698, 653.60, -2026.30, 0.30,   0.00, 0.00, 267.98);
CreateDynamicObject(1698, 653.70, -2025.10, 0.30,   0.00, 0.00, 267.98);
CreateDynamicObject(1698, 651.58, -2022.10, 0.30,   0.00, 0.00, 357.98);
CreateDynamicObject(1698, 651.48, -2025.20, 0.30,   0.00, 0.00, 357.98);
CreateDynamicObject(1698, 651.40, -2027.54, 0.30,   0.00, 0.00, 357.98);
CreateDynamicObject(3406, 664.60, -1949.30, -1.40,   0.00, 0.00, 263.49);
CreateDynamicObject(3406, 653.70, -1957.60, -1.50,   0.00, 0.00, 263.49);
CreateDynamicObject(3406, 665.60, -1972.90, -1.30,   0.00, 0.00, 353.98);
// -=============== Puerto Interior (by Swash) ======================- //
CreateDynamicObject(12844, 888.90, -2486.50, 3099.30,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 895.70, -2486.00, 3099.20,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 891.20, -2490.80, 3099.20,   0.00, 0.00, 270.00);
CreateDynamicObject(7191, 883.80, -2482.40, 3099.20,   0.00, 0.00, 182.00);
CreateDynamicObject(7191, 892.80, -2482.30, 3099.20,   0.00, 0.00, 87.99);
CreateDynamicObject(18070, 884.50, -2486.50, 3097.70,   0.00, 0.00, 90.00);
CreateDynamicObject(2443, 891.00, -2482.68, 3097.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2941, 886.50, -2486.30, 3098.60,   0.00, 0.00, 92.00);
CreateDynamicObject(2404, 892.00, -2482.40, 3099.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2405, 892.80, -2482.40, 3098.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2406, 894.30, -2482.50, 3099.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1604, 886.30, -2484.30, 3098.24,   0.00, 89.00, 0.00);
CreateDynamicObject(1461, 884.10, -2489.40, 3098.80,   0.00, 0.00, 94.00);
CreateDynamicObject(953, 884.60, -2483.70, 3098.50,   0.00, 0.00, 0.00);
CreateDynamicObject(902, 883.70, -2485.70, 3100.00,   0.00, 89.00, 0.00);
CreateDynamicObject(2782, 885.20, -2489.30, 3098.50,   0.00, 0.00, 228.00);
CreateDynamicObject(2185, 885.40, -2488.90, 3097.40,   0.00, 0.00, 56.00);
CreateDynamicObject(14699, 883.90, -2486.62, 3095.16,   0.00, 0.00, 0.00);
CreateDynamicObject(14687, 886.79, -2486.36, 3095.31,   0.00, 0.00, 0.00);
CreateDynamicObject(1990, 895.60, -2486.70, 3097.20,   0.00, 0.00, 270.00);
CreateDynamicObject(2413, 888.60, -2482.60, 3097.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2484, 888.90, -2482.60, 3098.99,   0.00, 0.00, 0.00);
CreateDynamicObject(2578, 895.50, -2488.90, 3098.20,   0.00, 0.00, 268.00);
CreateDynamicObject(2771, 885.90, -2488.80, 3098.40,   0.00, 0.00, 32.00);
CreateDynamicObject(3102, 895.10, -2486.43, 3098.72,   0.00, 0.00, 0.00);
CreateDynamicObject(2504, 884.21, -2487.50, 3098.90,   0.00, 0.00, 92.00);
CreateDynamicObject(1496, 895.59, -2483.10, 3097.20,   0.00, 0.00, 270.00);
CreateDynamicObject(2541, 892.90, -2490.30, 3097.20,   0.00, 0.00, 180.00);
CreateDynamicObject(2385, 891.40, -2490.70, 3097.20,   0.00, 0.00, 180.00);
CreateDynamicObject(1885, 891.30, -2490.50, 3097.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1885, 890.10, -2490.70, 3097.30,   0.00, 0.00, 0.00);
CreateDynamicObject(14600, 885.50, -2491.00, 3098.90,   0.00, 0.00, 272.00);
CreateDynamicObject(1643, 884.20, -2488.80, 3100.00,   0.00, 91.00, 0.00);
CreateDynamicObject(1610, 888.40, -2482.70, 3097.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1610, 889.20, -2482.60, 3097.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1602, 895.70, -2487.60, 3099.80,   0.00, 0.00, 358.00);
CreateDynamicObject(1810, 884.90, -2485.00, 3097.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1337, 887.24, -2483.34, 3097.83,   0.00, 0.00, 0.00);
CreateDynamicObject(16779, 891.40, -2485.70, 3101.40,   0.00, 0.00, 0.00);
// -===================== Parqueadero by Ximena ======================- //
CreateDynamicObject(978, 1767.80, -1716.51, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(646, 1778.80, -1705.20, 13.90,   0.00, 0.00, 0.00);
CreateDynamicObject(1597, 1794.31, -1692.00, 15.10,   0.00, 0.00, 0.00);
CreateDynamicObject(3439, 1762.40, -1696.00, 16.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1597, 1777.46, -1692.15, 15.10,   0.00, 0.00, 0.00);
CreateDynamicObject(4641, 1762.00, -1693.30, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(4641, 1762.00, -1690.00, 14.10,   0.00, 0.00, 90.00);
CreateDynamicObject(630, 1763.50, -1691.80, 13.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1597, 1802.93, -1692.15, 15.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1423, 1762.10, -1704.50, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(1434, 1809.05, -1707.99, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1434, 1809.09, -1712.82, 12.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1434, 1809.13, -1717.01, 12.60,   0.00, 0.00, 0.12);
CreateDynamicObject(3504, 1763.90, -1688.00, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3802, 1795.80, -1705.50, 23.00,   0.00, 0.00, 90.00);
CreateDynamicObject(3802, 1786.70, -1705.50, 22.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3802, 1778.50, -1705.50, 22.50,   0.00, 0.00, 90.00);
CreateDynamicObject(3802, 1767.90, -1705.50, 22.50,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1770.44, -1689.22, 13.00,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1770.40, -1693.29, 13.00,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1775.98, -1689.24, 13.00,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1775.97, -1693.36, 13.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1597, 1786.55, -1692.06, 15.10,   0.00, 0.00, 0.00);
CreateDynamicObject(4641, 1800.16, -1720.66, 14.27,   0.00, 0.00, 90.25);
estac = CreateDynamicObject(969, 1761.42, -1703.32, 12.60,   0.00, 0.00, 90.40);
estac2 = CreateDynamicObject(975, 1805.53, -1722.11, 14.18,   0.00, 0.00, 179.91);

// -======================= Electronicos (LGC) ==========================- //
CreateDynamicObject(16378, -1953.50, 1219.60, 79.30,   0.00, 0.00, 0.00);
CreateDynamicObject(2737, -1953.00, 1215.50, 79.50,   0.00, 0.00, 180.00);
CreateDynamicObject(2606, -1955.10, 1215.30, 80.30,   0.00, 0.00, 178.50);
CreateDynamicObject(2604, -1979.00, 1203.70, 74.90,   0.00, 0.00, 90.00);
CreateDynamicObject(2475, -1970.80, 1196.20, 74.90,   0.00, 0.00, 180.25);
CreateDynamicObject(2475, -1969.30, 1196.20, 74.90,   0.00, 0.00, 180.25);
CreateDynamicObject(1491, -1957.30, 1216.60, 78.60,   0.00, 0.00, 91.25);
CreateDynamicObject(1491, -1957.40, 1219.60, 78.60,   0.00, 0.00, 270.75);
CreateDynamicObject(2475, -1967.80, 1196.20, 74.90,   0.00, 0.00, 180.25);
CreateDynamicObject(2475, -1966.30, 1196.20, 74.90,   0.00, 0.00, 180.25);
CreateDynamicObject(2475, -1964.80, 1196.20, 74.90,   0.00, 0.00, 180.25);
CreateDynamicObject(1663, -1978.20, 1203.10, 74.60,   0.00, 0.00, 272.00);
CreateDynamicObject(1663, -1974.40, 1205.30, 74.60,   0.00, 0.00, 88.00);
CreateDynamicObject(1663, -1974.70, 1207.50, 74.60,   0.00, 0.00, 117.99);
CreateDynamicObject(1716, -1973.20, 1204.40, 75.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1491, -1957.30, 1200.60, 74.20,   0.00, 0.00, 103.25);
CreateDynamicObject(1491, -1957.40, 1203.70, 74.20,   359.75, 0.25, 260.99);
CreateDynamicObject(1954, -1967.60, 1203.10, 74.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1957, -1967.60, 1205.40, 74.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2169, -1963.70, 1222.20, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2171, -1971.60, 1222.10, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2173, -1968.30, 1222.10, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2184, -1971.10, 1213.90, 74.20,   0.00, 0.00, 52.00);
CreateDynamicObject(2184, -1972.70, 1217.40, 74.20,   0.00, 0.00, 242.00);
CreateDynamicObject(2207, -1966.80, 1218.60, 74.20,   0.00, 0.00, 270.50);
CreateDynamicObject(2311, -1975.00, 1222.20, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1518, -1970.60, 1216.70, 75.10,   0.00, 0.00, 132.00);
CreateDynamicObject(1717, -1959.70, 1196.90, 74.10,   0.00, 0.00, 133.50);
CreateDynamicObject(1718, -1987.00, 1219.90, 75.00,   0.00, 0.00, 74.00);
CreateDynamicObject(1719, -1988.00, 1216.80, 74.90,   0.00, 0.00, 132.00);
CreateDynamicObject(1747, -1972.60, 1216.70, 75.00,   0.00, 0.00, 220.00);
CreateDynamicObject(1748, -1973.00, 1216.20, 75.00,   0.00, 0.00, 244.00);
CreateDynamicObject(1749, -1973.30, 1215.40, 75.00,   0.00, 0.00, 262.00);
CreateDynamicObject(1750, -1971.60, 1216.90, 74.90,   0.00, 0.00, 166.00);
CreateDynamicObject(1751, -1970.70, 1215.10, 75.00,   0.00, 0.00, 58.00);
CreateDynamicObject(1752, -1971.30, 1214.40, 75.00,   0.00, 0.00, 38.00);
CreateDynamicObject(1781, -1970.30, 1215.80, 75.00,   0.00, 0.00, 72.00);
CreateDynamicObject(1782, -1967.70, 1205.20, 75.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1783, -1987.70, 1218.50, 75.00,   0.00, 0.00, 44.00);
CreateDynamicObject(1785, -1970.90, 1196.40, 75.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1786, -1972.40, 1214.50, 74.90,   0.00, 0.00, 332.00);
CreateDynamicObject(1787, -1967.70, 1203.00, 75.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1788, -1968.30, 1196.40, 75.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1790, -1967.80, 1200.70, 74.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1808, -1979.30, 1205.90, 74.10,   0.00, 0.00, 89.75);
CreateDynamicObject(1809, -1978.00, 1222.00, 74.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1839, -1975.00, 1222.20, 74.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1840, -1957.70, 1220.60, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1841, -1957.70, 1220.10, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2028, -1984.90, 1221.60, 74.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2099, -1957.60, 1206.50, 74.20,   0.00, 0.00, 271.25);
CreateDynamicObject(2100, -1957.60, 1205.10, 74.20,   0.00, 0.00, 271.25);
CreateDynamicObject(2101, -1981.20, 1222.00, 74.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2102, -1964.00, 1202.90, 75.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2103, -1963.80, 1205.40, 75.00,   0.00, 0.00, 162.00);
CreateDynamicObject(2104, -1957.50, 1207.20, 74.20,   0.00, 0.00, 268.00);
CreateDynamicObject(2149, -1967.80, 1200.60, 75.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2186, -1958.00, 1200.10, 74.20,   0.00, 0.00, 272.00);
CreateDynamicObject(2190, -1963.90, 1200.80, 75.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2224, -1983.10, 1221.30, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2225, -1957.50, 1214.40, 74.20,   0.00, 0.00, 271.50);
CreateDynamicObject(2226, -1964.80, 1196.40, 75.00,   0.00, 0.00, 176.50);
CreateDynamicObject(2227, -1957.40, 1221.40, 74.20,   0.00, 0.00, 270.00);
CreateDynamicObject(2229, -1957.50, 1213.20, 74.20,   0.00, 0.00, 273.75);
CreateDynamicObject(2230, -1957.50, 1216.80, 74.20,   0.00, 0.00, 270.00);
CreateDynamicObject(2231, -1957.50, 1218.40, 74.20,   0.00, 0.00, 270.75);
CreateDynamicObject(2232, -1957.70, 1215.40, 74.70,   0.00, 0.00, 272.00);
CreateDynamicObject(2233, -1959.30, 1222.60, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2595, -1979.10, 1200.30, 74.90,   0.00, 0.00, 342.00);
CreateDynamicObject(2816, -1973.00, 1203.30, 75.30,   0.00, 0.00, 0.00);
CreateDynamicObject(14806, -1957.70, 1210.10, 75.30,   0.00, 0.00, 270.50);
CreateDynamicObject(2771, -1973.40, 1204.60, 75.40,   0.00, 0.00, 56.00);
CreateDynamicObject(2771, -1973.50, 1207.20, 75.50,   0.00, 0.00, 56.00);
CreateDynamicObject(2698, -1983.30, 1218.10, 75.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2583, -1974.70, 1196.40, 75.00,   0.00, 0.00, 181.00);
CreateDynamicObject(2582, -1973.10, 1196.40, 75.00,   0.00, 0.00, 181.50);
CreateDynamicObject(2581, -1980.50, 1212.40, 75.30,   0.00, 0.00, 180.00);
CreateDynamicObject(2190, -1973.20, 1205.90, 75.20,   0.00, 0.00, 308.00);
CreateDynamicObject(2190, -1974.10, 1208.80, 75.20,   0.00, 0.00, 332.00);
CreateDynamicObject(2226, -1965.80, 1196.40, 75.00,   0.00, 0.00, 188.50);
CreateDynamicObject(2226, -1966.90, 1196.50, 75.00,   0.00, 0.00, 176.50);
CreateDynamicObject(2412, -1981.70, 1212.60, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2412, -1984.70, 1212.60, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2412, -1983.20, 1212.60, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2403, -1983.30, 1217.20, 74.20,   0.00, 0.00, 96.00);
CreateDynamicObject(14434, -1978.80, 1211.10, 79.50,   0.00, 0.00, 180.50);
CreateDynamicObject(2698, -1962.40, 1212.00, 75.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1616, -1958.00, 1196.90, 80.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1616, -1980.60, 1212.20, 79.90,   0.00, 0.00, 318.00);
CreateDynamicObject(2698, -1974.90, 1212.30, 75.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1719, -1969.10, 1196.20, 75.00,   0.00, 0.00, 179.99);
CreateDynamicObject(1719, -1969.90, 1196.40, 75.10,   0.00, 0.00, 149.99);
CreateDynamicObject(18102, -1963.30, 1205.70, 81.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2698, -1965.50, 1208.00, 75.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2171, -1970.10, 1222.10, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2173, -1966.20, 1222.10, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2169, -1961.50, 1222.20, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(1719, -1986.00, 1221.00, 74.90,   0.00, 0.00, 179.99);
CreateDynamicObject(12950, -1962.80, 1218.80, 75.20,   0.00, 0.00, 272.00);
CreateDynamicObject(12950, -1962.80, 1217.10, 75.20,   0.00, 0.00, 270.75);
CreateDynamicObject(1663, -1965.50, 1217.70, 74.60,   0.00, 0.00, 289.99);
CreateDynamicObject(2190, -1966.60, 1218.30, 75.00,   0.00, 0.00, 55.99);
CreateDynamicObject(2184, -1970.00, 1216.50, 74.10,   0.00, 0.00, 152.00);
CreateDynamicObject(2184, -1973.50, 1215.10, 74.10,   0.00, 0.00, 324.00);
CreateDynamicObject(2311, -1978.00, 1222.10, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1981.20, 1222.10, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2924, -1982.10, 1212.10, 75.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2924, -1984.90, 1212.10, 75.40,   1.00, 0.00, 180.25);
CreateDynamicObject(2581, -1979.20, 1211.00, 75.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2224, -1982.30, 1221.40, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2186, -1958.00, 1197.20, 74.20,   0.00, 0.00, 222.00);
CreateDynamicObject(2101, -1980.50, 1222.00, 74.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2101, -1979.80, 1222.00, 74.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1809, -1977.30, 1222.00, 74.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1809, -1976.60, 1222.00, 74.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1839, -1974.30, 1222.20, 74.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1839, -1973.60, 1222.20, 74.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1719, -1988.00, 1217.50, 74.90,   0.00, 0.00, 86.00);
CreateDynamicObject(1783, -1987.40, 1219.20, 75.00,   0.00, 0.00, 75.99);
CreateDynamicObject(1718, -1986.60, 1220.40, 74.90,   0.00, 0.00, 28.00);
CreateDynamicObject(1719, -1985.50, 1221.30, 74.90,   0.00, 0.00, 121.99);
CreateDynamicObject(2028, -1984.20, 1221.80, 74.90,   0.00, 0.00, 92.00);
CreateDynamicObject(1717, -1960.60, 1196.90, 74.10,   0.00, 0.00, 133.49);
CreateDynamicObject(1717, -1961.50, 1196.90, 74.10,   0.00, 0.00, 133.49);
CreateDynamicObject(1717, -1962.40, 1196.90, 74.10,   0.00, 0.00, 133.49);
CreateDynamicObject(2311, -1967.80, 1200.70, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1967.80, 1203.10, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1967.80, 1205.40, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1967.80, 1203.10, 74.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1967.80, 1200.70, 74.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1967.80, 1205.40, 74.50,   0.00, 0.00, 0.00);
CreateDynamicObject(1787, -1967.00, 1203.00, 75.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1787, -1966.30, 1203.00, 75.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1782, -1967.00, 1205.20, 75.10,   0.00, 0.00, 0.00);
CreateDynamicObject(1782, -1966.30, 1205.20, 75.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2149, -1967.00, 1200.60, 75.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2149, -1966.30, 1200.60, 75.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2229, -1957.50, 1213.60, 74.20,   0.00, 0.00, 273.75);
CreateDynamicObject(1790, -1967.10, 1200.70, 74.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1790, -1966.40, 1200.70, 74.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1954, -1966.60, 1203.10, 74.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1957, -1966.40, 1205.40, 74.70,   0.00, 0.00, 0.00);
CreateDynamicObject(14444, -1982.80, 1208.90, 74.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, -1957.70, 1216.10, 74.70,   0.00, 0.00, 272.00);
CreateDynamicObject(2311, -1964.10, 1200.70, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1964.10, 1203.10, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1964.00, 1205.40, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1964.10, 1200.70, 74.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1964.10, 1203.10, 74.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1964.00, 1205.40, 74.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2103, -1962.70, 1205.30, 75.00,   0.00, 0.00, 16.00);
CreateDynamicObject(2102, -1962.70, 1202.90, 75.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2102, -1964.10, 1203.40, 75.00,   0.00, 0.00, 179.50);
CreateDynamicObject(2102, -1962.90, 1203.40, 75.00,   0.00, 0.00, 179.49);
CreateDynamicObject(2190, -1962.30, 1200.80, 75.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2190, -1963.50, 1200.50, 75.00,   0.00, 0.00, 182.00);
CreateDynamicObject(2230, -1957.50, 1217.30, 74.20,   0.00, 0.00, 270.00);
CreateDynamicObject(2231, -1957.50, 1219.00, 74.20,   0.00, 0.00, 270.75);
CreateDynamicObject(2233, -1958.90, 1222.60, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2233, -1958.50, 1222.60, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2233, -1958.10, 1222.60, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2233, -1957.70, 1222.60, 74.20,   0.00, 0.00, 0.00);
CreateDynamicObject(2227, -1957.40, 1220.90, 74.20,   0.00, 0.00, 270.00);
CreateDynamicObject(2395, -1975.60, 1200.80, 74.10,   0.00, 0.00, 0.25);
CreateDynamicObject(2395, -1979.30, 1200.80, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, -1976.50, 1200.95, 74.10,   0.00, 0.00, 180.75);
CreateDynamicObject(2395, -1972.85, 1201.00, 74.10,   0.00, 0.00, 180.75);
CreateDynamicObject(2583, -1976.30, 1196.40, 75.00,   0.00, 0.00, 181.00);
CreateDynamicObject(2582, -1977.90, 1196.40, 75.00,   0.00, 0.00, 181.50);
CreateDynamicObject(2311, -1979.50, 1200.30, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1977.00, 1200.30, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, -1974.50, 1200.30, 74.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2595, -1978.20, 1200.30, 75.00,   0.00, 0.00, 342.00);
CreateDynamicObject(330, -1977.20, 1200.00, 74.60,   89.50, 180.00, 5.25);
CreateDynamicObject(330, -1977.00, 1200.00, 74.60,   89.49, 179.99, 5.25);
CreateDynamicObject(330, -1976.60, 1200.00, 74.60,   89.49, 179.99, 5.25);
CreateDynamicObject(330, -1976.80, 1200.00, 74.60,   89.49, 179.99, 3.25);
CreateDynamicObject(330, -1976.40, 1200.00, 74.60,   89.49, 179.99, 5.25);
CreateDynamicObject(330, -1976.20, 1200.00, 74.60,   89.49, 179.99, 5.25);
CreateDynamicObject(330, -1976.00, 1200.00, 74.60,   89.49, 179.99, 5.25);
CreateDynamicObject(330, -1975.80, 1200.00, 74.60,   89.49, 179.99, 5.25);
CreateDynamicObject(330, -1975.60, 1200.00, 74.60,   89.49, 179.99, 5.25);
CreateDynamicObject(330, -1975.40, 1200.00, 74.60,   89.49, 179.99, 5.25);
CreateDynamicObject(330, -1975.20, 1200.00, 74.60,   89.49, 179.99, 5.25);
CreateDynamicObject(2771, -1974.50, 1200.30, 74.80,   0.00, 0.00, 192.00);
CreateDynamicObject(2771, -1973.80, 1200.30, 74.80,   0.00, 0.00, 192.00);
CreateDynamicObject(2771, -1973.00, 1200.30, 74.80,   0.00, 0.00, 192.00);
CreateDynamicObject(2698, -1967.50, 1211.80, 75.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1616, -1957.50, 1215.90, 81.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1616, -1958.00, 1222.20, 77.90,   0.00, 0.00, 74.00);
CreateDynamicObject(1616, -1970.80, 1214.90, 77.70,   0.00, 0.00, 118.25);
CreateDynamicObject(1616, -1979.20, 1211.40, 79.40,   2.00, 0.00, 174.25);
CreateDynamicObject(1616, -1979.20, 1200.80, 78.80,   2.00, 0.00, 174.24);
CreateDynamicObject(922, -1953.40, 1209.80, 75.00,   0.00, 0.00, 91.75);
CreateDynamicObject(2991, -1956.10, 1210.30, 74.70,   0.00, 0.00, 90.00);
CreateDynamicObject(2991, -1956.10, 1210.30, 75.90,   0.00, 0.00, 90.00);
CreateDynamicObject(2567, -1954.10, 1202.60, 76.10,   0.00, 0.00, 90.00);
CreateDynamicObject(3850, 1764.10, -1660.90, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1667.70, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1671.10, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1674.50, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1677.90, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1681.30, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 1764.10, -1664.30, 13.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1764.20, -1682.80, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1361, 1764.10, -1658.80, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1363, 1756.40, -1684.80, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1766.50, -1682.10, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1766.50, -1656.70, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1757.30, -1656.60, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(1215, 1757.20, -1647.10, 13.30,   0.00, 0.00, 0.00);
CreateDynamicObject(644, 1769.00, -1653.20, 13.60,   0.00, 0.00, 0.00);
CreateDynamicObject(644, 1773.50, -1659.60, 13.70,   0.00, 0.00, 0.00);
CreateDynamicObject(2714, 1773.60, -1654.70, 17.10,   0.00, 0.00, 305.75);
// -============================ Casa Fissore ==========================-//
CreateDynamicObject(987, 334.55, -1777.34, 3.90,   0.00, 0.00, 90.84);
CreateDynamicObject(987, 308.85, -1761.75, 3.04,   0.00, 0.00, 276.27);
CreateDynamicObject(3749, 319.82, -1774.72, 9.30,   0.00, 0.00, 358.58);
CreateDynamicObject(987, 308.90, -1749.90, 3.10,   0.00, 0.00, 269.98);
CreateDynamicObject(987, 320.60, -1750.00, 4.50,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 331.90, -1749.90, 4.50,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 334.70, -1750.00, 4.50,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 334.60, -1765.30, 4.50,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 334.60, -1761.70, 4.50,   0.00, 0.00, 90.00);
CreateDynamicObject(985, 330.47, -1777.06, 3.42,   0.00, 0.00, 175.57);
fissore = CreateDynamicObject(980, 319.78, -1776.09, 6.60,   0.00, 0.00, 178.29);
// -================== Licencieros Interior (By Swash) ===================-//
CreateDynamicObject(14665, 2066.90, -2214.30, 2665.60,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 2072.30, -2211.50, 2665.60,   0.00, 0.00, 0.00);
CreateDynamicObject(7191, 2064.80, -2225.20, 2665.60,   0.00, 0.00, 270.00);
CreateDynamicObject(7191, 2061.70, -2213.00, 2665.60,   0.00, 0.00, 180.00);
CreateDynamicObject(7191, 2061.70, -2213.00, 2669.40,   0.00, 0.00, 179.99);
CreateDynamicObject(7191, 2069.10, -2203.60, 2665.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 2061.80, -2215.80, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 2061.80, -2212.80, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(7191, 2085.50, -2207.90, 2665.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1502, 2063.40, -2207.90, 2663.60,   0.00, 0.00, 180.00);
CreateDynamicObject(7191, 2041.60, -2207.10, 2668.10,   180.00, 0.00, 88.00);
CreateDynamicObject(2165, 2068.40, -2223.40, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2165, 2063.90, -2223.20, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1806, 2069.00, -2224.70, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1806, 2064.40, -2224.50, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1715, 2069.50, -2221.70, 2663.60,   0.00, 0.00, 342.00);
CreateDynamicObject(1715, 2068.00, -2221.70, 2663.60,   0.00, 0.00, 20.00);
CreateDynamicObject(1715, 2065.10, -2221.60, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1715, 2063.80, -2221.60, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 2069.70, -2208.50, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1723, 2068.10, -2212.20, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1704, 2070.90, -2212.90, 2663.60,   0.00, 0.00, 178.00);
CreateDynamicObject(2311, 2069.70, -2211.00, 2663.60,   0.00, 0.00, 358.00);
CreateDynamicObject(1714, 2062.10, -2217.70, 2663.60,   0.00, 0.00, 78.00);
CreateDynamicObject(1663, 2065.04, -2217.24, 2664.10,   0.00, 0.00, 282.00);
CreateDynamicObject(1663, 2064.85, -2218.93, 2664.10,   0.00, 0.00, 242.00);
CreateDynamicObject(7191, 2066.70, -2184.20, 2665.60,   0.00, 0.00, 180.00);
CreateDynamicObject(1502, 2066.70, -2206.30, 2663.60,   0.00, 0.00, 269.99);
CreateDynamicObject(7191, 2066.90, -2185.80, 2668.10,   0.00, 0.00, 179.40);
CreateDynamicObject(2163, 2067.10, -2225.10, 2663.60,   0.00, 0.00, 180.00);
CreateDynamicObject(2161, 2062.30, -2224.70, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2162, 2072.20, -2223.80, 2663.70,   0.00, 0.00, 270.00);
CreateDynamicObject(2165, 2070.00, -2218.20, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1806, 2071.10, -2217.90, 2663.60,   0.00, 0.00, 68.00);
CreateDynamicObject(1663, 2068.90, -2217.70, 2664.10,   0.00, 0.00, 88.00);
CreateDynamicObject(14604, 2062.40, -2204.20, 2664.60,   0.00, 0.00, 224.00);
CreateDynamicObject(2700, 2070.90, -2208.30, 2667.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2202, 2071.90, -2220.60, 2663.60,   0.00, 0.00, 268.00);
CreateDynamicObject(2205, 2070.30, -2206.30, 2663.60,   0.00, 0.00, 90.00);
CreateDynamicObject(1714, 2071.80, -2205.70, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1671, 2068.90, -2205.00, 2664.10,   0.00, 0.00, 86.00);
CreateDynamicObject(1671, 2069.00, -2206.20, 2664.10,   0.00, 0.00, 90.00);
CreateDynamicObject(644, 2062.20, -2221.90, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2737, 2066.50, -2205.30, 2665.50,   0.00, 0.00, 272.00);
CreateDynamicObject(2610, 2072.00, -2203.80, 2664.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2184, 2063.78, -2219.09, 2663.60,   0.00, 0.00, 78.00);
CreateDynamicObject(2606, 2063.79, -2218.00, 2664.40,   324.00, 0.00, 260.00);
CreateDynamicObject(2283, 2072.19, -2206.00, 2666.10,   0.00, 0.00, 270.00);
CreateDynamicObject(2270, 2067.40, -2208.50, 2665.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2108, 2067.60, -2208.30, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2108, 2072.10, -2223.10, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2108, 2065.40, -2225.00, 2663.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1616, 2061.90, -2208.20, 2667.20,   0.00, 0.00, 180.00);
CreateDynamicObject(1722, 2064.60, -2204.10, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1722, 2064.50, -2204.80, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1722, 2063.50, -2204.80, 2663.60,   0.00, 0.00, 270.00);
CreateDynamicObject(1722, 2063.50, -2204.00, 2663.60,   0.00, 0.00, 270.00);
	// -================================== Umbrella 7 Exterior============================- //
	CreateDynamicObject(966,2005.42419434,-1439.16503906,12.57566929,0.00000000,0.00000000,0.00000000); //object(bar_gatebar01) (1)
	CreateDynamicObject(966,2008.71911621,-1442.55725098,12.57566929,0.00000000,0.00000000,90.00000000); //object(bar_gatebar01) (2)
	CreateDynamicObject(968,1998.13256836,-1439.18676758,12.56996632,90.00000000,162.45159912,287.54846191); //object(barrierturn) (2)
	CreateDynamicObject(968,2008.66784668,-1449.87536621,12.58436680,90.00000000,180.00000000,0.00000000); //object(barrierturn) (3)
	CreateDynamicObject(968,1996.90661621,-1350.93920898,22.99389076,90.00000000,194.47875977,255.51576233); //object(barrierturn) (4)
	CreateDynamicObject(968,2102.69018555,-1451.09802246,23.00639153,90.00000000,179.99450684,359.82000732); //object(barrierturn) (5)
	CreateDynamicObject(4726,2068.63793945,-1423.04028320,46.32153320,0.00000000,0.00000000,0.00000000); //object(libtwrhelipd_lan2) (1)
	CreateDynamicObject(2795,2022.79174805,-1401.24548340,19.37174034,0.00000000,0.00000000,0.00000000); //object(cj_air_d_4) (1)
	CreateDynamicObject(2793,2031.66711426,-1401.22338867,19.42084885,0.00000000,0.00000000,0.00000000); //object(cj_air_d_2) (1)
	CreateDynamicObject(3526,2044.11401367,-1408.62561035,20.56345749,0.00000000,276.75994873,0.00000000); //object(vegasairportlight) (1)
	CreateDynamicObject(3666,2008.58007812,-1439.26171875,12.05037212,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
	CreateDynamicObject(3666,2013.31445312,-1434.67382812,12.07917309,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (2)
	CreateDynamicObject(3666,2019.19824219,-1429.17382812,12.02918816,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)
	// -================================ Mafia Russa ================================- //
	CreateDynamicObject(2922,691.09985352,-1278.80432129,13.91715717,0.00000000,0.00000000,24.32000732); //object(kmb_keypad) (1)
	CreateDynamicObject(1498,717.47729492,-1277.13317871,16.64843750,0.00000000,0.00000000,90.00000000); //object(gen_doorext03) (1)
	CreateDynamicObject(2922,726.40637207,-1279.64062500,13.83479691,0.00000000,0.00000000,0.00000000); //object(kmb_keypad) (2)
	CreateDynamicObject(1215,691.15765381,-1272.97705078,13.24332333,14.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,691.15722656,-1278.89697266,13.24332333,349.99658203,0.00000000,8.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1641,731.07824707,-1276.21704102,16.64843750,0.00000000,0.00000000,76.00000000); //object(beachtowel03) (1)
	CreateDynamicObject(1643,725.01770020,-1270.85168457,16.64843750,0.00000000,0.00000000,112.00000000); //object(beachtowel01) (1)
	CreateDynamicObject(2405,717.77966309,-1263.99194336,17.89867020,0.00000000,0.00000000,90.00000000); //object(cj_surf_board2) (1)
	CreateDynamicObject(2404,717.84307861,-1263.15954590,17.89598083,0.00000000,334.00000000,90.00000000); //object(cj_surf_board) (1)
	CreateDynamicObject(1640,727.83715820,-1276.76123047,16.64843750,0.00000000,0.00000000,30.00000000); //object(beachtowel04) (1)
	CreateDynamicObject(1432,724.94519043,-1289.78710938,16.64843750,0.00000000,0.00000000,0.00000000); //object(dyn_table_2) (1)
	CreateDynamicObject(1594,721.34100342,-1296.81494141,17.12542915,0.00000000,0.00000000,0.00000000); //object(chairsntable) (1)
	CreateDynamicObject(2802,721.07275391,-1257.71325684,16.97869682,0.00000000,0.00000000,0.00000000); //object(castable1) (1)
	CreateDynamicObject(2964,724.85620117,-1283.22668457,16.64843750,0.00000000,0.00000000,0.00000000); //object(k_pooltablesm) (1)
	CreateDynamicObject(3004,725.04772949,-1279.48059082,18.07147598,294.07824707,265.51800537,265.09283447); //object(k_poolq2) (1)
	CreateDynamicObject(3106,724.81201172,-1283.33447266,17.57838821,0.00000000,0.00000000,0.00000000); //object(k_poolball8) (1)
	CreateDynamicObject(3104,725.27197266,-1283.48815918,17.57838821,0.00000000,0.00000000,0.00000000); //object(k_poolballspt06) (1)
	CreateDynamicObject(3103,725.14416504,-1282.74340820,17.57838821,0.00000000,0.00000000,0.00000000); //object(k_poolballspt05) (1)
	CreateDynamicObject(2996,724.16949463,-1283.59277344,17.57838631,0.00000000,0.00000000,0.00000000); //object(k_poolballstp02) (1)
	CreateDynamicObject(3003,725.69842529,-1283.63867188,17.57878494,0.00000000,0.00000000,0.00000000); //object(k_poolballcue) (1)
	CreateDynamicObject(1689,715.16619873,-1291.31481934,24.28232765,332.00000000,0.00000000,268.84570312); //object(gen_roofbit3) (1)
	CreateDynamicObject(1215,724.95434570,-1274.91198730,14.36644459,0.00000000,14.00000000,0.00000000); //object(bollardlight) (3)
	// -============================= Interiores sólidos, debugged ================================- //
	CreateDynamicObject(2395,680.76300049,-450.74395752,-26.61718750,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,680.76269531,-450.74316406,-23.87632751,298.00000000,359.95739746,359.96234131); //object(cj_sports_wall) (2)
	CreateDynamicObject(1493,680.87274170,-450.71969604,-26.61718750,0.00000000,0.00000000,0.00000000); //object(gen_doorshop01) (1)
	CreateDynamicObject(2765,677.88525391,-450.36499023,-23.68194962,0.00000000,0.00000000,0.00000000); //object(cj_cb_list1) (1)
	CreateDynamicObject(2766,686.85430908,-451.71658325,-23.59758568,0.00000000,0.00000000,0.00000000); //object(cj_cb_list2) (1)
	CreateDynamicObject(1966,661.82586670,-568.60437012,15.66175652,0.00000000,0.00000000,90.00000000); //object(imcompmovedr1_las) (1)
	CreateDynamicObject(2395,669.83331299,-565.27886963,15.32873726,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (3)
	CreateDynamicObject(2395,666.63330078,-565.37335205,15.33593750,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (4)
	CreateDynamicObject(2395,662.89569092,-565.37304688,15.33593750,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (5)
	CreateDynamicObject(2395,670.37353516,-568.61584473,15.32873726,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (7)
	CreateDynamicObject(2395,665.79125977,-570.59216309,14.15433979,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (8)
	CreateDynamicObject(2395,665.79101562,-574.91839600,14.15433979,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (9)
	CreateDynamicObject(2837,682.87695312,-457.86511230,-25.55373001,0.00000000,0.00000000,0.00000000); //object(gb_takeaway02) (1)
	CreateDynamicObject(2838,679.94616699,-456.98199463,-25.55373001,0.00000000,0.00000000,0.00000000); //object(gb_takeaway03) (1)
	CreateDynamicObject(2839,680.39288330,-454.61041260,-25.55373001,0.00000000,0.00000000,0.00000000); //object(gb_takeaway04) (1)
	CreateDynamicObject(2395,461.40478516,-15.44111538,1000.13281250,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (10)
	CreateDynamicObject(2395,461.40429688,-19.17049217,1000.13281250,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (13)
	CreateDynamicObject(2395,461.10028076,-20.19733238,1000.14001465,0.00000000,0.00000000,236.00000000); //object(cj_sports_wall) (14)
	CreateDynamicObject(2395,459.67370605,-22.85202980,1000.14001465,0.00000000,0.00000000,180.00000000); //object(cj_sports_wall) (15)
	CreateDynamicObject(2395,456.48413086,-22.65886497,1000.14001465,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (16)
	CreateDynamicObject(2395,456.32592773,-19.92231560,1000.14001465,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (17)
	CreateDynamicObject(2395,456.87603760,-23.08882332,998.38281250,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (18)
	CreateDynamicObject(2395,455.93872070,-23.30822563,1000.88281250,46.00000000,0.00000000,179.99456787); //object(cj_sports_wall) (20)
	CreateDynamicObject(1532,456.00756836,-23.12667274,998.52563477,0.00000000,0.00000000,180.00000000); //object(gen_doorext11) (1)
	CreateDynamicObject(2945,1.11733890,34.35177612,1199.92248535,0.00000000,0.00000000,0.00000000); //object(kmb_netting) (1)
	CreateDynamicObject(17951,608.95489502,-128.31036377,998.63360596,0.00000000,0.00000000,0.00000000); //object(cjgaragedoor) (1)
	CreateDynamicObject(17951,608.95410156,-122.15434265,998.63360596,0.00000000,0.00000000,0.00000000); //object(cjgaragedoor) (2)
	// -===================================  Mecado Negro LS =========================================- //
	CreateDynamicObject(8674,1401.76562500,-1450.83703613,14.31416416,0.00000000,0.00000000,0.00000000); //object(csrsfence02_lvs)(1)
	CreateDynamicObject(17969,1382.18884277,-1467.57958984,14.57242393,0.00000000,0.00000000,164.00000000); //object(hub_grafitti)(1)
	CreateDynamicObject(1490,1382.77233887,-1465.54687500,15.03289032,0.00000000,0.00000000,158.00000000); //object(tag_01)(1)
	CreateDynamicObject(8674,1379.87365723,-1484.23828125,14.01379108,0.00000000,0.00000000,344.00000000); //object(csrsfence02_lvs)(2)
	CreateDynamicObject(5069,1378.32324219,-1468.30468750,14.83640575,0.00000000,0.00000000,161.99890137); //object(ctscene1_las)(1)
	CreateDynamicObject(3265,1391.80175781,-1452.72595215,12.55260468,0.00000000,0.00000000,170.00000000); //object(privatesign4)(1)
	CreateDynamicObject(17037,1381.49707031,-1482.27246094,15.03834915,0.00000000,0.00000000,73.99841309); //object(cuntw_carport2_)(1)
	CreateDynamicObject(1431,1378.53198242,-1483.23266602,13.09448814,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile)(1)
	CreateDynamicObject(1431,1378.85083008,-1482.43750000,13.09448814,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile)(2)
	CreateDynamicObject(1362,1379.76416016,-1483.53051758,13.14535809,0.00000000,0.00000000,0.00000000); //object(cj_firebin)(1)
	CreateDynamicObject(1439,1383.57739258,-1484.73852539,12.54687500,0.00000000,0.00000000,164.00000000); //object(dyn_dumpster_1)(1)
	CreateDynamicObject(1329,1382.33093262,-1484.17504883,12.99951172,0.00000000,0.00000000,168.00000000); //object(binnt13_la)(1)
	CreateDynamicObject(2670,1383.16943359,-1482.47253418,12.63892746,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_1)(1)
	CreateDynamicObject(2670,1379.69787598,-1481.43542480,12.63892746,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_1)(2)
	CreateDynamicObject(3594,1385.71069336,-1476.12670898,13.17805195,0.00000000,0.00000000,346.00000000); //object(la_fuckcar1)(1)
	CreateDynamicObject(3035,1385.00488281,-1480.17675781,13.06701088,0.00000000,0.00000000,343.99841309); //object(tmp_bin)(1)
	CreateDynamicObject(3119,1383.33007812,-1478.57128906,12.70637417,0.00000000,0.00000000,0.00000000); //object(cs_ry_props)(1)
	CreateDynamicObject(2953,1383.95971680,-1480.04687500,13.84279823,0.00000000,0.00000000,0.00000000); //object(kmb_paper_code)(1)
	CreateDynamicObject(1442,1380.23083496,-1482.75073242,13.14535809,0.00000000,0.00000000,0.00000000); //object(dyn_firebin0)(1)
	CreateDynamicObject(1369,1380.88085938,-1483.51220703,13.16874886,0.00000000,0.00000000,118.00000000); //object(cj_wheelchair1)(1)
	// -================================  Gasolinera Alhambra =============================================- //
	CreateDynamicObject(638,1951.32080078,-1775.40502930,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(2)
	CreateDynamicObject(638,1951.30432129,-1772.74841309,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(3)
	CreateDynamicObject(638,1951.29138184,-1770.06665039,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(4)
	CreateDynamicObject(638,1951.27941895,-1767.38989258,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(6)
	CreateDynamicObject(638,1952.02014160,-1767.41088867,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(7)
	CreateDynamicObject(638,1952.04418945,-1770.08251953,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(8)
	CreateDynamicObject(638,1952.02844238,-1772.74719238,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(9)
	CreateDynamicObject(638,1952.04797363,-1775.41003418,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(10)
	CreateDynamicObject(638,1951.25585938,-1764.71081543,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(11)
	CreateDynamicObject(638,1952.02209473,-1764.72583008,13.24390888,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(12)
	CreateDynamicObject(984,1952.63757324,-1770.74938965,13.18355465,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(1)
	CreateDynamicObject(984,1950.59020996,-1770.60546875,13.18355465,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(2)
	CreateDynamicObject(983,1950.61010742,-1764.22058105,13.23042965,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(2)
	CreateDynamicObject(983,1952.64660645,-1764.33203125,13.23042965,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(3)
	CreateDynamicObject(1215,1950.96203613,-1777.19238281,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1952.31225586,-1777.19860840,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
	CreateDynamicObject(1215,1951.60314941,-1777.96948242,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(1215,1952.38696289,-1761.12927246,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1950.56372070,-1761.09838867,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
	CreateDynamicObject(1215,1951.59301758,-1760.65686035,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1951.54003906,-1762.75256348,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(7)
	CreateDynamicObject(984,1931.43420410,-1779.62329102,13.18355465,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(3)
	CreateDynamicObject(983,1928.25524902,-1786.13696289,13.23042965,0.00000000,0.00000000,270.00000000); //object(fenceshit3)(4)
	CreateDynamicObject(1216,1928.60339355,-1770.35729980,13.23887730,0.00000000,0.00000000,92.00000000); //object(phonebooth1)(2)
	CreateDynamicObject(1231,1930.81140137,-1763.06945801,15.26946449,0.00000000,0.00000000,0.00000000); //object(streetlamp2)(1)
	CreateDynamicObject(983,1931.64233398,-1765.58142090,13.23042965,0.00000000,0.00000000,180.00000000); //object(fenceshit3)(5)
	CreateDynamicObject(983,1928.41772461,-1762.35717773,13.22262669,0.00000000,0.00000000,270.00000000); //object(fenceshit3)(6)
	CreateDynamicObject(983,1922.01318359,-1762.36254883,13.22262669,0.00000000,0.00000000,270.00000000); //object(fenceshit3)(7)
	CreateDynamicObject(983,1918.79614258,-1765.53662109,13.23042965,0.00000000,0.00000000,179.99450684); //object(fenceshit3)(9)
	CreateDynamicObject(1215,1931.22290039,-1773.35241699,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(8)
	CreateDynamicObject(1215,1931.35827637,-1768.63757324,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(1215,1919.00341797,-1762.68029785,13.10339546,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1286,1919.11901855,-1765.60803223,13.12594604,0.00000000,0.00000000,272.00000000); //object(newstandnew4)(1)
	CreateDynamicObject(1286,1919.10998535,-1765.08264160,13.12594604,0.00000000,0.00000000,271.99951172); //object(newstandnew4)(2)
	CreateDynamicObject(1286,1919.09777832,-1764.54174805,13.12594604,0.00000000,0.00000000,271.99951172); //object(newstandnew4)(3)
	CreateDynamicObject(1288,1919.17626953,-1763.91149902,13.12594604,0.00000000,0.00000000,270.00000000); //object(newstandnew2)(1)
	CreateDynamicObject(3657,1924.19543457,-1765.67480469,13.06508732,0.00000000,0.00000000,180.00000000); //object(airseata_las)(1)
	CreateDynamicObject(1215,1926.28845215,-1765.98498535,13.11119843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(11)
	CreateDynamicObject(17969,1908.01550293,-1776.28540039,14.37443447,0.00000000,0.00000000,0.00000000); //object(hub_graffitti)(1)
	CreateDynamicObject(646,1921.84472656,-1765.75158691,13.96339893,0.00000000,0.00000000,0.00000000); //object(veg_palmkb14)(1)
	// -================================  Boulevard LS =============================================- //
	CreateDynamicObject(983,1212.75720215,-1122.16674805,23.92969131,0.00000000,0.00000000,269.99450684); //object(fenceshit3)(41)
	CreateDynamicObject(983,1186.03881836,-1122.00769043,23.88294601,0.00000000,0.00000000,269.99450684); //object(fenceshit3)(48)
	CreateDynamicObject(983,1182.86206055,-1122.05493164,23.87419510,0.00000000,0.00000000,269.99450684); //object(fenceshit3)(49)
	CreateDynamicObject(1215,1225.88952637,-1158.69934082,23.15852737,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1245.33618164,-1135.28125000,23.40343666,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(1215,1254.65930176,-1155.03186035,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
	CreateDynamicObject(1215,1279.86047363,-1158.97741699,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1295.61071777,-1158.68981934,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(7)
	CreateDynamicObject(1215,1311.57165527,-1135.40917969,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(1215,1205.79931641,-1155.19372559,23.22752953,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1215,1073.19836426,-1158.92041016,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(15)
	CreateDynamicObject(1215,1071.70434570,-1134.81481934,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(17)
	CreateDynamicObject(1215,1017.06079102,-1134.92602539,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(19)
	CreateDynamicObject(1215,992.18469238,-1157.97900391,23.43024826,0.00000000,0.00000000,0.00000000); //object(bollardlight)(21)
	CreateDynamicObject(1215,972.37487793,-1158.49645996,23.41949463,0.00000000,0.00000000,0.00000000); //object(bollardlight)(23)
	CreateDynamicObject(1215,952.12390137,-1155.52746582,23.34817314,0.00000000,0.00000000,0.00000000); //object(bollardlight)(24)
	CreateDynamicObject(1215,952.70190430,-1131.42321777,23.42784119,0.00000000,0.00000000,0.00000000); //object(bollardlight)(25)
	CreateDynamicObject(1215,955.09649658,-1210.80236816,16.64270782,0.00000000,0.00000000,0.00000000); //object(bollardlight)(26)
	CreateDynamicObject(2773,1018.24414062,-1134.36230469,23.34535408,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(5)
	CreateDynamicObject(2773,1026.92871094,-1134.35937500,23.33755684,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(6)
	CreateDynamicObject(1215,1028.13171387,-1135.07495117,23.38465118,0.00000000,0.00000000,0.00000000); //object(bollardlight)(27)
	CreateDynamicObject(2773,1026.01000977,-1122.24194336,23.39434433,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(6)
	CreateDynamicObject(2773,1018.97094727,-1122.36560059,23.38367844,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(6)
	CreateDynamicObject(2773,1018.56927490,-1124.18664551,23.38095093,0.00000000,0.00000000,336.00000000); //object(cj_airprt_bar)(6)
	CreateDynamicObject(2773,1026.23559570,-1124.08740234,23.39478493,0.00000000,0.00000000,13.99487305); //object(cj_airprt_bar)(6)
	CreateDynamicObject(1568,1350.77026367,-1125.96801758,22.65625000,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf)(1)
	CreateDynamicObject(1360,1122.42431641,-1161.51391602,23.48288345,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop3)(1)
	CreateDynamicObject(1360,1116.10546875,-1161.07238770,23.56543350,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop3)(2)
	CreateDynamicObject(7662,1106.64611816,-1145.03491211,23.40058899,0.00000000,0.00000000,270.00000000); //object(miragehedge14)(1)
	CreateDynamicObject(7662,1199.39062500,-1144.82092285,23.39715958,0.00000000,0.00000000,270.00000000); //object(miragehedge14)(2)
	CreateDynamicObject(7662,1285.05505371,-1144.82727051,23.40058899,0.00000000,0.00000000,270.00000000); //object(miragehedge14)(3)
	CreateDynamicObject(717,1193.99865723,-1144.82373047,22.78829384,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(2)
	CreateDynamicObject(717,1205.15283203,-1144.86682129,23.10209465,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(3)
	CreateDynamicObject(717,1146.56359863,-1145.09094238,23.09747314,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(4)
	CreateDynamicObject(717,1134.40612793,-1145.01855469,23.13043594,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(5)
	CreateDynamicObject(717,1112.42517090,-1145.21826172,22.65625000,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(6)
	CreateDynamicObject(717,1100.60925293,-1145.07556152,23.10619354,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(7)
	CreateDynamicObject(717,1227.24084473,-1144.90771484,23.06764984,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(8)
	CreateDynamicObject(717,1239.40795898,-1144.57788086,22.92505646,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(9)
	CreateDynamicObject(717,1278.90563965,-1144.87377930,23.10517311,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(10)
	CreateDynamicObject(717,1290.91699219,-1144.86364746,23.11371040,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(11)
	CreateDynamicObject(717,1312.89807129,-1144.83178711,23.13787460,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(12)
	CreateDynamicObject(717,1325.30493164,-1144.35717773,22.73616791,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(13)
	CreateDynamicObject(7662,1003.65844727,-1144.81176758,23.63367462,0.00000000,0.00000000,270.00000000); //object(miragehedge14)(4)
	CreateDynamicObject(717,1043.38891602,-1144.61669922,23.20218658,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(14)
	CreateDynamicObject(717,1031.27343750,-1144.81726074,23.37006187,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(15)
	CreateDynamicObject(717,1009.51611328,-1144.79199219,23.34696579,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(16)
	CreateDynamicObject(717,997.55261230,-1144.71533203,23.28487778,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltreepv)(17)
	CreateDynamicObject(738,971.44647217,-1158.68847656,23.35329056,0.00000000,0.00000000,0.00000000); //object(aw_streettree2)(1)
	CreateDynamicObject(738,992.80493164,-1158.47937012,23.36738968,0.00000000,0.00000000,0.00000000); //object(aw_streettree2)(2)
	CreateDynamicObject(1215,995.42712402,-1144.89245605,23.49665642,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1010.97686768,-1144.78552246,23.25055122,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1029.96020508,-1144.74243164,23.22836304,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1044.78662109,-1144.98059082,23.22727966,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1098.92016602,-1144.88244629,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1114.00146484,-1145.03442383,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1132.94128418,-1145.06970215,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1147.86425781,-1144.91137695,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1191.89306641,-1144.85290527,23.28835869,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1206.73828125,-1144.94201660,23.13462639,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1225.80310059,-1144.85754395,23.04506302,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1240.89355469,-1144.77111816,23.10700226,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1277.37707520,-1144.90197754,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1292.74487305,-1144.81713867,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1311.19494629,-1144.85363770,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1326.33544922,-1144.85229492,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1331.37475586,-1144.89208984,23.21276855,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1360,1329.73449707,-1144.91638184,23.42046547,0.00000000,0.00000000,272.00000000); //object(cj_bush_prop3)(3)
	CreateDynamicObject(1215,1332.58129883,-1145.38244629,23.21276855,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1327.44506836,-1144.90234375,23.21276855,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(983,1329.29870605,-1143.89685059,23.33980560,0.00000000,0.00000000,270.00000000); //object(fenceshit3)(1)
	CreateDynamicObject(983,1329.35400391,-1145.84313965,23.33200073,0.00000000,0.00000000,270.00000000); //object(fenceshit3)(1)
	CreateDynamicObject(1215,1332.62084961,-1144.14733887,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1332.60058594,-1144.80187988,23.22057343,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1115.71459961,-1159.16418457,23.37307549,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1122.65319824,-1159.17578125,23.39244843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1597,1350.56726074,-1120.90820312,25.52637863,0.00000000,0.00000000,356.00000000); //object(cntrlrsac1)(5)
	CreateDynamicObject(1597,1351.78430176,-1105.79589844,25.64109421,0.00000000,0.00000000,353.99548340); //object(cntrlrsac1)(6)
	CreateDynamicObject(1597,1355.36718750,-1085.44531250,26.29489517,0.00000000,0.00000000,347.99194336); //object(cntrlrsac1)(7)
	CreateDynamicObject(1597,1360.50000000,-1060.41833496,28.30481339,0.00000000,0.00000000,355.99194336); //object(cntrlrsac1)(8)
	CreateDynamicObject(1364,1119.33032227,-1162.21813965,23.35606766,0.00000000,0.00000000,180.00000000); //object(cj_bush_prop)(1)
	CreateDynamicObject(1215,1121.58911133,-1161.92712402,23.21425819,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(1215,1116.97387695,-1161.99719238,23.29438782,0.00000000,0.00000000,0.00000000); //object(bollardlight)(22)
	CreateDynamicObject(2773,1120.00439453,-1130.21911621,23.32828331,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(5)
	CreateDynamicObject(2773,1125.40222168,-1129.71118164,23.32191658,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(5)
	//=================================== Interior Museo ============================================================//
	CreateDynamicObject(10023,-2002.1800000,361.1800000,10.6400000,0.0000000,0.0000000,90.0400000); //
CreateDynamicObject(18981,-2012.0700000,384.6700000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(10023,-1987.1200000,388.4800000,10.6700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(10023,-1959.4600000,358.8000000,10.6500000,0.0000000,0.0000000,268.7200000); //
CreateDynamicObject(10023,-1990.8000000,329.7600000,10.6400000,0.0000000,0.0000000,179.0700000); //
CreateDynamicObject(19454,-1987.1100000,398.5200000,17.7300000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-2003.9600000,398.9600000,10.8900000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-2003.9600000,398.9600000,4.0000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-2003.9600000,398.9600000,7.4400000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1974.0000000,396.7100000,4.0000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1964.4200000,396.6800000,7.3800000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1964.4200000,396.6800000,4.0000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1964.4200000,396.6800000,10.8800000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1973.9200000,396.7400000,7.4600000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1973.9600000,396.7100000,10.9200000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1955.8400000,396.5500000,10.8800000,0.0000000,0.0000000,91.8900000); //
CreateDynamicObject(19454,-1955.8400000,396.5500000,4.0000000,0.0000000,0.0000000,91.8900000); //
CreateDynamicObject(19454,-1951.7800000,390.1700000,10.8300000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1955.8400000,396.5500000,7.4400000,0.0000000,0.0000000,91.8900000); //
CreateDynamicObject(19454,-1952.3200000,374.9200000,10.9400000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1951.7800000,390.1700000,7.4300000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1951.8500000,390.4600000,4.1200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1952.3000000,374.9200000,4.1200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1952.3000000,374.9200000,7.5600000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1951.7000000,358.7300000,17.9300000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1951.7000000,358.7300000,4.1200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1951.7000000,358.7300000,7.5300000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1951.7000000,358.7300000,11.0100000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1951.7000000,358.7300000,14.5000000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1952.0600000,342.3700000,10.9600000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1952.0100000,342.6600000,4.1200000,-0.0600000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1952.0500000,342.1200000,7.5800000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1953.4500000,324.1100000,10.8800000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1953.4500000,324.1100000,4.1200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1953.4500000,324.1100000,7.5700000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-1959.3400000,321.2900000,10.7900000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1959.3400000,321.2900000,4.0000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1959.3400000,321.2900000,7.3800000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1975.0300000,320.8100000,10.8600000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1975.0300000,320.7900000,4.0000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1975.0600000,320.7500000,7.4500000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1990.8600000,323.8600000,17.7800000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1990.9000000,323.8400000,4.0000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1990.9200000,323.8200000,7.4500000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1990.9200000,323.8000000,10.8800000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1990.8600000,323.8600000,14.3400000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-2004.2300000,323.3000000,10.8700000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-2004.2300000,323.3000000,4.0000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-2004.2300000,323.3000000,7.4200000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-2010.3100000,329.9700000,11.0200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.3100000,329.9700000,4.1200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.3100000,329.9700000,7.6100000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.2400000,345.0600000,4.1200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.2400000,345.0600000,7.5900000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.2400000,345.0600000,11.0800000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.8900000,361.1700000,4.1200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.8900000,361.1700000,7.6000000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.8900000,361.1700000,11.0900000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.8900000,361.1700000,14.5200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.8900000,361.1700000,17.9500000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.4600000,377.5300000,4.1200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.4600000,377.5300000,7.5800000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2010.4600000,377.5300000,11.0400000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2015.7800000,386.6400000,17.8200000,0.0000000,0.0000000,269.7800000); //
CreateDynamicObject(19454,-2025.3700000,386.6800000,17.5000000,0.0000000,0.0000000,269.7800000); //
CreateDynamicObject(19454,-2025.3700000,386.6800000,4.1200000,0.0000000,0.0000000,269.7800000); //
CreateDynamicObject(19454,-2025.3700000,386.6800000,7.4600000,0.0000000,0.0000000,269.7800000); //
CreateDynamicObject(19454,-2025.3700000,386.6800000,10.7900000,0.0000000,0.0000000,269.7800000); //
CreateDynamicObject(19454,-2025.3700000,386.6800000,14.1500000,0.0000000,0.0000000,269.7800000); //
CreateDynamicObject(19454,-2015.7800000,386.6400000,4.1200000,0.0000000,0.0000000,269.7800000); //
CreateDynamicObject(19454,-2015.7800000,386.6400000,7.4700000,0.0000000,0.0000000,269.7800000); //
CreateDynamicObject(19454,-2015.7800000,386.6400000,10.9500000,0.0000000,0.0000000,269.7800000); //
CreateDynamicObject(19454,-2015.7800000,386.6400000,14.3700000,0.0000000,0.0000000,269.7800000); //
CreateDynamicObject(19454,-2024.6900000,392.4800000,11.0100000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2024.6900000,392.4800000,4.1200000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2024.6900000,392.4800000,7.5300000,0.0000000,0.0000000,359.8100000); //
CreateDynamicObject(19454,-2018.3800000,396.6000000,10.9800000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-2018.3800000,396.6000000,4.0000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-2018.3800000,396.6000000,7.5000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1987.1100000,398.5200000,4.0000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1987.1100000,398.5200000,7.3800000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1987.1100000,398.5200000,10.7900000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(19454,-1987.1100000,398.5200000,14.2300000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(3494,-1986.4100000,324.1000000,6.2600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3494,-1993.7000000,323.8500000,6.2600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(14622,-1987.3300000,382.6600000,19.5300000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(9915,-1989.1100000,342.5700000,-4.4200000,0.0000000,0.0000000,82.3900000); //
CreateDynamicObject(10145,-1963.5900000,383.2700000,4.7500000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3872,-1987.6300000,350.6700000,6.8500000,-40.6200000,93.7800000,211.2200000); //
CreateDynamicObject(3872,-1986.0800000,350.8400000,6.8500000,-40.6200000,93.7800000,56.0600000); //
CreateDynamicObject(2257,-1952.1100000,344.9800000,4.0100000,0.0000000,0.0000000,269.7400000); //
CreateDynamicObject(2256,-1952.1700000,341.2800000,5.4900000,0.0000000,0.0000000,269.7900000); //
CreateDynamicObject(2258,-1952.3700000,339.4700000,4.0900000,0.0000000,0.0000000,269.7500000); //
CreateDynamicObject(3872,-1953.8800000,342.2400000,6.8500000,-40.6200000,93.7800000,112.2900000); //
CreateDynamicObject(2289,-1953.6000000,327.5200000,3.8400000,0.0000000,0.0000000,270.1000000); //
CreateDynamicObject(2283,-1953.6400000,325.0700000,3.8100000,0.0000000,0.0000000,269.7200000); //
CreateDynamicObject(2285,-1954.0400000,326.3800000,4.8700000,0.0000000,0.0000000,271.7800000); //
CreateDynamicObject(3872,-1949.6200000,324.3500000,6.8500000,-40.6200000,93.7800000,185.4500000); //
CreateDynamicObject(3851,-1992.5200000,339.0200000,4.4000000,0.0000000,0.0000000,89.7300000); //
CreateDynamicObject(3851,-1963.4600000,339.4300000,4.4000000,0.0000000,0.0000000,0.0900000); //
CreateDynamicObject(3851,-1963.4400000,351.6600000,4.4000000,0.0000000,0.0000000,0.0900000); //
CreateDynamicObject(3851,-1963.4700000,364.0900000,4.4000000,0.0000000,0.0000000,0.0900000); //
CreateDynamicObject(3494,-1963.3200000,333.3700000,2.8100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3494,-1963.1900000,345.6200000,2.8100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3494,-1963.4300000,357.8100000,2.8100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3872,-1969.1600000,376.5000000,6.8500000,-40.6200000,93.7800000,251.8500000); //
CreateDynamicObject(11489,-1989.7800000,322.8600000,2.3600000,0.0000000,0.0000000,182.9900000); //
CreateDynamicObject(3935,-1985.6300000,335.5200000,4.6000000,0.0000000,0.0000000,179.2600000); //
CreateDynamicObject(2260,-1952.3300000,361.1700000,3.8000000,0.0000000,0.0000000,270.1200000); //
CreateDynamicObject(2261,-1952.2900000,359.9500000,3.8300000,0.0000000,0.0000000,272.5700000); //
CreateDynamicObject(2262,-1952.3000000,358.8500000,3.8900000,0.0000000,0.0000000,272.5700000); //
CreateDynamicObject(2264,-1952.3200000,357.6000000,3.8200000,0.0000000,0.0000000,270.1800000); //
CreateDynamicObject(2265,-1952.3500000,356.5100000,3.8500000,0.0000000,0.0000000,275.9200000); //
CreateDynamicObject(1557,-1985.7900000,398.4600000,2.2800000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1557,-1989.2500000,398.4700000,2.2800000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1985.8700000,337.0200000,2.8600000,0.0000000,0.0000000,273.5500000); //
CreateDynamicObject(2773,-1984.3600000,335.4400000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1987.2900000,335.4800000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1985.8900000,334.2100000,2.8600000,0.0000000,0.0000000,273.5500000); //
CreateDynamicObject(2773,-1983.7200000,325.7200000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1994.4800000,326.6500000,2.8600000,0.0000000,0.0000000,273.5500000); //
CreateDynamicObject(2773,-1986.9100000,326.1500000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1992.4800000,325.3200000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1996.1500000,325.6300000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1985.2400000,327.2300000,2.8600000,0.0000000,0.0000000,273.5500000); //
CreateDynamicObject(2745,-1990.8800000,335.5100000,3.5900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2744,-1994.6400000,335.5400000,4.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2743,-1998.2800000,335.4200000,3.8000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3851,-1963.4100000,327.2000000,4.4000000,0.0000000,0.0000000,0.0900000); //
CreateDynamicObject(2773,-1989.4700000,335.3900000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1991.9600000,335.5000000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1993.8800000,335.3800000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1995.9800000,335.3400000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1990.9000000,334.0900000,2.8600000,0.0000000,0.0000000,273.5500000); //
CreateDynamicObject(2773,-1990.4700000,336.9500000,2.8600000,0.0000000,0.0000000,273.5500000); //
CreateDynamicObject(2773,-1994.9900000,333.9500000,2.8600000,0.0000000,0.0000000,273.5500000); //
CreateDynamicObject(2773,-1998.0800000,334.2100000,2.8600000,0.0000000,0.0000000,273.5500000); //
CreateDynamicObject(2773,-1994.8800000,336.7700000,2.8600000,0.0000000,0.0000000,273.5500000); //
CreateDynamicObject(2773,-1998.1600000,336.3100000,2.8600000,0.0000000,0.0000000,273.5500000); //
CreateDynamicObject(2773,-1999.5800000,335.1900000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2773,-1996.7700000,335.4100000,2.8600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(18981,-1987.1200000,386.2100000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(18981,-1962.1700000,384.6300000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(18981,-1987.2100000,361.4600000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(18981,-1987.2100000,336.4900000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(18981,-1987.2100000,311.5300000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(18981,-2011.8800000,359.8500000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(18981,-2011.9000000,334.9300000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(18981,-1962.4400000,359.7300000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(18981,-1962.3300000,334.9100000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(18981,-1962.5000000,310.4000000,19.3000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(14622,-1987.3300000,382.6600000,5.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(14622,-1987.3300000,382.6600000,12.6100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2267,-2010.1200000,330.2800000,4.1300000,0.0000000,0.0000000,89.6600000); //
CreateDynamicObject(2286,-2010.0600000,344.2400000,4.1700000,0.0000000,0.0000000,89.9100000); //
CreateDynamicObject(8397,-2015.1700000,391.8200000,-42.4600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(14622,-1987.3400000,364.1400000,5.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19454,-2002.0400000,401.3300000,10.7200000,0.0000000,0.0000000,32.9700000); //
CreateDynamicObject(19454,-2002.0400000,401.3300000,4.0000000,0.0000000,0.0000000,32.9700000); //
CreateDynamicObject(19454,-2002.0400000,401.3300000,7.3100000,0.0000000,0.0000000,32.9700000); //
	// -================================  Aparcamiento St María Beach =============================================- //
	CreateDynamicObject(970,359.12124600,-1812.36230500,3.99906500,0.00000000,0.00000000,0.00000000); //object(2)
	CreateDynamicObject(970,354.99923700,-1812.35974100,3.99511200,0.00000000,0.00000000,0.00000000); //object(3)
	CreateDynamicObject(970,350.84991500,-1812.36474600,3.99091200,0.00000000,0.00000000,0.00000000); //object(4)
	CreateDynamicObject(970,346.74987800,-1812.36071800,3.98702400,0.00000000,0.00000000,0.00000000); //object(5)
	CreateDynamicObject(970,342.66690100,-1812.36840800,3.98281100,0.00000000,0.00000000,0.00000000); //object(6)
	CreateDynamicObject(970,338.61465500,-1812.36950700,3.97882000,0.00000000,0.00000000,0.00000000); //object(7)
	CreateDynamicObject(970,330.34967000,-1812.38073700,3.96842300,0.00000000,0.00000000,0.00000000); //object(9)
	CreateDynamicObject(970,326.17645300,-1812.37988300,3.96640800,0.00000000,0.00000000,0.00000000); //object(10)
	CreateDynamicObject(970,322.05777000,-1812.38024900,3.96438500,0.00000000,0.00000000,0.00000000); //object(11)
	CreateDynamicObject(970,317.92639200,-1812.36840800,3.96270500,0.00000000,0.00000000,0.00000000); //object(12)
	CreateDynamicObject(970,313.77969400,-1812.35717800,3.96100000,0.00000000,0.00000000,0.00000000); //object(13)
	CreateDynamicObject(970,310.37042200,-1812.34228500,3.95976100,0.00000000,0.00000000,0.00000000); //object(14)
	CreateDynamicObject(970,308.43722500,-1810.21374500,4.07038300,0.00000000,0.00000000,-89.99998128); //object(15)
	CreateDynamicObject(970,308.43405200,-1806.07763700,4.06154400,0.00000000,0.00000000,-89.99998128); //object(16)
	CreateDynamicObject(970,308.48739600,-1801.99035600,4.15251300,0.00000000,0.00000000,-89.99998128); //object(17)
	CreateDynamicObject(970,308.49069200,-1797.84472700,4.14371000,0.00000000,0.00000000,-89.99998128); //object(18)
	CreateDynamicObject(970,308.50747700,-1793.71118200,4.17922100,0.00000000,0.00000000,-89.99998128); //object(19)
	CreateDynamicObject(970,308.52377300,-1789.55993700,4.19075900,0.00000000,0.00000000,-89.99998128); //object(20)
	CreateDynamicObject(970,308.51736500,-1788.10937500,4.23059500,0.00000000,0.00000000,-89.99998128); //object(21)
	CreateDynamicObject(970,310.52984600,-1785.98046900,4.11960900,0.00000000,0.00000000,0.00000000); //object(22)
	CreateDynamicObject(970,314.72155800,-1786.02661100,4.18693100,0.00000000,0.00000000,0.00000000); //object(23)
	CreateDynamicObject(970,318.83895900,-1786.04638700,4.25279900,0.00000000,0.00000000,0.00000000); //object(24)
	CreateDynamicObject(970,327.02829000,-1786.08215300,4.38463000,0.00000000,0.00000000,0.00000000); //object(26)
	CreateDynamicObject(970,331.18158000,-1786.10546900,4.45146800,0.00000000,0.00000000,0.00000000); //object(27)
	CreateDynamicObject(970,335.34008800,-1786.12231400,4.52137300,0.00000000,0.00000000,0.00000000); //object(28)
	CreateDynamicObject(8041,349.69409200,-1787.00854500,10.07214800,0.00000000,0.00000000,89.99998128); //object(32)
	CreateDynamicObject(970,338.14315800,-1786.10229500,4.58726100,0.00000000,0.00000000,0.00000000); //object(33)
	CreateDynamicObject(970,360.50793500,-1788.07214400,4.86103200,0.00000000,0.00000000,-89.99998128); //object(34)
	CreateDynamicObject(970,360.89669800,-1800.36132800,4.38031800,0.00000000,0.00000000,-90.85941797); //object(35)
	CreateDynamicObject(970,360.78790300,-1796.19421400,4.49962100,0.00000000,0.00000000,-89.99998128); //object(36)
	CreateDynamicObject(970,360.64831500,-1792.15332000,4.65000100,0.00000000,0.00000000,-89.99998128); //object(37)
	CreateDynamicObject(1237,360.26190200,-1786.13000500,4.41219400,0.00000000,0.00000000,0.00000000); //object(39)
	CreateDynamicObject(1237,340.31073000,-1785.96984900,4.09716300,0.00000000,0.00000000,0.00000000); //object(40)
	CreateDynamicObject(1251,344.81417800,-1786.03723100,4.30694600,0.00000000,0.00000000,-89.99998128); //object(41)
	CreateDynamicObject(1251,353.90399200,-1785.99792500,4.48802100,0.00000000,0.00000000,-88.28110789); //object(42)
	CreateDynamicObject(1361,336.36419700,-1812.48168900,4.16525100,0.00000000,0.00000000,0.00000000); //object(135)
	CreateDynamicObject(1361,332.68090800,-1812.49951200,4.15803000,0.00000000,0.00000000,0.00000000); //object(136)
	CreateDynamicObject(1361,321.11694300,-1786.00695800,4.48197000,0.00000000,0.00000000,0.00000000); //object(137)
	CreateDynamicObject(1361,324.72979700,-1785.88439900,4.54082700,0.00000000,0.00000000,0.00000000); //object(138)
	CreateDynamicObject(1597,313.16030900,-1800.16052200,6.20513500,0.00000000,0.00000000,89.99998128); //object(139)
	CreateDynamicObject(1597,322.76184100,-1799.60656700,6.33214300,0.00000000,0.00000000,-89.99998128); //object(140)
	CreateDynamicObject(1597,332.42315700,-1799.56298800,6.33773300,0.00000000,0.00000000,-89.99998128); //object(141)
	CreateDynamicObject(700,327.32196000,-1799.97314500,4.39941700,0.00000000,0.00000000,0.00000000); //object(145)
	CreateDynamicObject(700,317.76477100,-1799.86853000,4.27240900,0.00000000,0.00000000,0.00000000); //object(146)
	CreateDynamicObject(700,308.74038700,-1800.05285600,4.27240900,0.00000000,0.00000000,0.00000000); //object(147)
	CreateDynamicObject(700,336.71615600,-1799.91137700,4.40500700,0.00000000,0.00000000,0.00000000); //object(148)
	CreateDynamicObject(3472,333.16851800,-1799.66430700,3.15607600,0.00000000,0.00000000,0.00000000); //object(149)
	CreateDynamicObject(3472,312.55999800,-1799.68676800,3.39844700,0.00000000,0.00000000,0.00000000); //object(150)
	CreateDynamicObject(3472,323.03418000,-1799.67272900,3.02545300,0.00000000,0.00000000,0.00000000); //object(151)
	CreateDynamicObject(970,310.34433000,-1799.02294900,4.05884900,0.00000000,0.00000000,0.00000000); //object(152)
	CreateDynamicObject(970,314.44125400,-1798.96557600,4.12513300,0.00000000,0.00000000,0.00000000); //object(153)
	CreateDynamicObject(970,318.55984500,-1798.90222200,4.19179100,0.00000000,0.00000000,0.00000000); //object(155)
	CreateDynamicObject(970,322.69604500,-1798.89611800,4.20521300,0.00000000,0.00000000,0.00000000); //object(156)
	CreateDynamicObject(970,326.79223600,-1798.89697300,4.20813500,0.00000000,0.00000000,0.00000000); //object(157)
	CreateDynamicObject(970,330.89617900,-1798.90051300,4.19229300,0.00000000,0.00000000,0.00000000); //object(158)
	CreateDynamicObject(970,335.08688400,-1798.84899900,4.23347900,0.00000000,0.00000000,0.00000000); //object(159)
	CreateDynamicObject(970,310.46014400,-1800.93505900,4.05231000,0.00000000,0.00000000,0.00000000); //object(160)
	CreateDynamicObject(970,314.60681200,-1800.98144500,4.11904900,0.00000000,0.00000000,0.00000000); //object(161)
	CreateDynamicObject(970,318.75631700,-1801.01940900,4.18623600,0.00000000,0.00000000,0.00000000); //object(162)
	CreateDynamicObject(970,322.90301500,-1801.02075200,4.19799100,0.00000000,0.00000000,0.00000000); //object(163)
	CreateDynamicObject(970,327.02911400,-1800.99548300,4.20051400,0.00000000,0.00000000,0.00000000); //object(164)
	CreateDynamicObject(970,331.15847800,-1800.98315400,4.20327900,0.00000000,0.00000000,0.00000000); //object(165)
	CreateDynamicObject(970,334.83090200,-1800.98022500,4.20983300,0.00000000,0.00000000,0.00000000); //object(166)
	CreateDynamicObject(1360,337.30590800,-1800.00732400,4.23781500,0.00000000,0.00000000,0.00000000); //object(168)
	// -==================================== LCN ===============================- //
	CreateDynamicObject(8209, 1262.8988037109, -2070.4582519531, 60.783298492432, 0.000000, 5, 0.000000);
	CreateDynamicObject(8209, 1177.0126953125, -2074.6708984375, 71.108840942383, 0.000000, 359.74731445313, 5.9490966796875);
	CreateDynamicObject(8209, 1474.767578125, -2033.46484375, 36.173934936523, 0.000000, 19.989624023438, 13.892211914063);
	CreateDynamicObject(1337, 1293.9169921875, -2079.888671875, 56.133152008057, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(8209, 1356.0919189453, -2061.2980957031, 54.812126159668, 0.000000, 2, 11.909912109375);
	CreateDynamicObject(8210, 1414.7475585938, -2048.2390136719, 52.767364501953, 0.000000, 5, 13.893432617188);
	CreateDynamicObject(8210, 1130.9482421875, -2078.7099609375, 71.00505065918, 0.000000, 0.000000, 3.966064453125);
	CreateDynamicObject(8209, 1104.171875, -2037.6025390625, 71.108840942383, 0.000000, 0.000000, 268.69067382813);
	CreateDynamicObject(8209, 1518.4473876953, -1988.2165527344, 26.526885986328, 0.000000, 357, 272.66064453125);
	CreateDynamicObject(8210, 1517.1702880859, -1918.2736816406, 24.310028076172, 0.000000, 0.000000, 266.70568847656);
	CreateDynamicObject(8210, 1493.3184814453, -2029.0277099609, 33.340366363525, 0.000000, 5, 13.894897460938);
	CreateDynamicObject(987, 1069.5069580078, -2037.0386962891, 52.512298583984, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(8150, 1073.84375, -1953.7780761719, 20.760799407959, 0.000000, 357, 270.67565917969);
	CreateDynamicObject(8149, 1145.1130371094, -1891.5910644531, 20.175786972046, 0.000000, 0.000000, 270.67565917969);
	CreateDynamicObject(987, 1223.9523925781, -1890.8217773438, 17.538108825684, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(987, 1228.5139160156, -1880.9068603516, 16.658327102661, 0.000000, 0.000000, 272.25);
	CreateDynamicObject(8210, 1255.939453125, -1880.8403320313, 19.658521652222, 0.000000, 0.000000, 0.216064453125);
	CreateDynamicObject(8210, 1283.8952636719, -1880.7170410156, 19.937330245972, 0.000000, 0.000000, 0.2142333984375);
	CreateDynamicObject(8210, 1382.28125, -1902.5375976563, 19.595903396606, 0.000000, 0.000000, 359.46423339844);
	CreateDynamicObject(2921, 1416.6220703125, -1882.12890625, 17.565656661987, 0.000000, 0.000000, 257.74475097656);
	CreateDynamicObject(2921, 1248.0341796875, -2060.9895019531, 63.758350372314, 0.000000, 0.000000, 234.25);
	CreateDynamicObject(2921, 1247.3928222656, -2012.0024414063, 63.492305755615, 0.000000, 0.000000, 170);
	CreateDynamicObject(2921, 1125.3966064453, -2041.3208007813, 73.856964111328, 0.000000, 0.000000, 241.25);
	CreateDynamicObject(16093, 1123.0478515625, -1994.4169921875, 72.28865814209, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(16782, 1121.5665283203, -1995.7923583984, 73.614616394043, 0.000000, 0.000000, 87.5);
	CreateDynamicObject(5170, 1249.3662109375, -2037.3759765625, 61.950668334961, 0.000000, 0.000000, 270.7470703125);
	CreateDynamicObject(5170, 1275.1301269531, -2037.9844970703, 61.854049682617, 0.000000, 0.000000, 270.7470703125);
	CreateDynamicObject(1360, 1264.0593261719, -2044.828125, 59.063106536865, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.9887695313, -2042.4106445313, 59.065086364746, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.9359130859, -2040.271484375, 59.066570281982, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.8850097656, -2038.2124023438, 59.068004608154, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.7985839844, -2035.8785400391, 59.083389282227, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.7919921875, -2033.2507324219, 59.083576202393, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.7456054688, -2031.1677246094, 59.084903717041, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.7336425781, -2029.0100097656, 59.085247039795, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.7292480469, -2027.0437011719, 59.085369110107, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.69921875, -2024.6025390625, 59.086208343506, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.6694335938, -2022.0509033203, 59.087078094482, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.6379394531, -2019.4190673828, 59.087978363037, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.615234375, -2017.58984375, 59.088603973389, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.5852050781, -2015.0091552734, 59.089488983154, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.5791015625, -2012.546875, 59.089649200439, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1360, 1263.6809082031, -2009.7711181641, 59.086750030518, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(984, 1264.7749023438, -2013.9150390625, 58.917007446289, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(984, 1264.7918701172, -2026.2589111328, 58.918449401855, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(984, 1264.7868652344, -2039.0311279297, 58.907325744629, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(984, 1262.7821044922, -2015.6491699219, 58.977096557617, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(984, 1262.7967529297, -2027.4113769531, 58.976676940918, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(984, 1262.7615966797, -2039.4527587891, 58.950233459473, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1282, 1263.9560546875, -2046.5500488281, 59.000896453857, 0.000000, 0.000000, 270.67565917969);
	CreateDynamicObject(870, 1263.8521728516, -2045.0294189453, 59.873626708984, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(870, 1263.8446044922, -2040.9709472656, 59.877090454102, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(870, 1263.640625, -2009.7392578125, 59.897270202637, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(870, 1263.6507568359, -2014.2822265625, 59.900009155273, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(870, 1263.6176757813, -2020.0430908203, 59.898498535156, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(870, 1263.5589599609, -2024.3359375, 59.896728515625, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(870, 1263.7496337891, -2037.1734619141, 59.893909454346, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(870, 1263.3735351563, -2032.9163818359, 59.894096374512, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(870, 1263.5323486328, -2029.0316162109, 59.895767211914, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3512, 1263.5974121094, -2027.0847167969, 59.65376663208, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3512, 1263.587890625, -2011.44921875, 59.658046722412, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(792, 1263.5651855469, -2019.7091064453, 59.65637588501, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3512, 1263.8826904297, -2042.396484375, 59.633483886719, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(792, 1263.7413330078, -2035.0252685547, 59.628631591797, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1768, 1125.416015625, -1994.4274902344, 72.413688659668, 0.000000, 0.000000, 230.97595214844);
	CreateDynamicObject(3017, 1121.7706298828, -1991.4724121094, 73.326805114746, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(3515, 1174.9849853516, -2037.1756591797, 76.131050109863, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(2921, 1577.2021484375, -1633.0938720703, 16.43271446228, 0.000000, 0.000000, 24.783813476563);
	CreateDynamicObject(2921, 1593.0980224609, -1641.7088623047, 15.89612197876, 0.000000, 0.000000, 108.14947509766);
	CreateDynamicObject(2921, 1555.0487060547, -1678.8784179688, 19.584781646729, 0.000000, 0.000000, 337.13989257813);
	CreateDynamicObject(8879, 1909.5498046875, -1882.1583251953, 18.58607673645, 0.000000, 0.000000, 19.306701660156);
	CreateDynamicObject(3749, 1426.7138671875, -1884.2099609375, 18.297096252441, 0.000000, 0.000000, 0.000000);
	// -================================  ESTUDIO CNN =============================================- //
	CreateDynamicObject(14391,249.88735962,304.25994873,999.09527588,0.00000000,0.00000000,179.94287109); //
	CreateDynamicObject(14393,250.75074768,303.27984619,1000.36871338,0.00000000,0.00000000,181.63391113); //
	CreateDynamicObject(14392,250.80520630,303.21340942,999.33160400,0.00000000,0.00000000,180.97521973); //
	CreateDynamicObject(14820,249.26252747,305.72671509,999.05853271,10.54898071,0.00000000,269.77844238); //
	CreateDynamicObject(14820,249.25497437,302.45178223,999.07855225,10.54687500,0.00000000,269.77478027); //
	CreateDynamicObject(10154,251.23742676,298.33959961,998.53216553,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(10154,241.88075256,302.64770508,998.53216553,0.00000000,0.00000000,181.31555176); //
	CreateDynamicObject(1498,242.02909851,301.88348389,998.11431885,0.00000000,0.00000000,90.33483887); //
	CreateDynamicObject(1411,784.70001221,-1330.30004883,15.60000038,0.00000000,0.00000000,358.75000000); //object(dyn_mesh_1) (1)
CreateDynamicObject(1411,787.50000000,-1333.00000000,15.69999981,0.00000000,0.00000000,271.00000000); //object(dyn_mesh_1) (3)
CreateDynamicObject(1411,787.50000000,-1336.50000000,15.69999981,0.00000000,0.00000000,270.99975586); //object(dyn_mesh_1) (4)
CreateDynamicObject(1411,787.50000000,-1340.00000000,15.69999981,0.00000000,0.00000000,270.74975586); //object(dyn_mesh_1) (5)
CreateDynamicObject(1411,787.59997559,-1345.09997559,15.69999981,0.00000000,0.00000000,270.74707031); //object(dyn_mesh_1) (6)
CreateDynamicObject(1411,787.50000000,-1350.19995117,15.69999981,0.00000000,0.00000000,269.74707031); //object(dyn_mesh_1) (7)
CreateDynamicObject(1411,787.50000000,-1355.19995117,15.69999981,0.00000000,0.00000000,269.74182129); //object(dyn_mesh_1) (8)
CreateDynamicObject(1411,787.50000000,-1360.40002441,15.69999981,0.00000000,0.00000000,269.74182129); //object(dyn_mesh_1) (9)
CreateDynamicObject(1411,787.50000000,-1365.69995117,15.69999981,0.00000000,0.00000000,269.74182129); //object(dyn_mesh_1) (10)
CreateDynamicObject(1411,787.50000000,-1370.90002441,15.69999981,0.00000000,0.00000000,269.74182129); //object(dyn_mesh_1) (11)
CreateDynamicObject(1411,787.40002441,-1376.19995117,15.69999981,0.00000000,0.00000000,269.74182129); //object(dyn_mesh_1) (12)
CreateDynamicObject(1411,787.40002441,-1381.50000000,15.69999981,0.00000000,0.00000000,268.49182129); //object(dyn_mesh_1) (13)
CreateDynamicObject(1411,787.29998779,-1382.09997559,15.69999981,0.00000000,0.00000000,268.48937988); //object(dyn_mesh_1) (14)
CreateDynamicObject(1411,771.20001221,-1385.00000000,15.80000019,0.00000000,0.00000000,180.00000000); //object(dyn_mesh_1) (15)
CreateDynamicObject(1411,784.59960938,-1385.00000000,15.89999962,0.00000000,0.00000000,179.99450684); //object(dyn_mesh_1) (16)
CreateDynamicObject(1411,765.90002441,-1385.00000000,15.80000019,0.00000000,0.00000000,179.99450684); //object(dyn_mesh_1) (17)
CreateDynamicObject(1411,760.70001221,-1385.00000000,15.80000019,0.00000000,0.00000000,179.99450684); //object(dyn_mesh_1) (18)
CreateDynamicObject(1411,757.29998779,-1384.90002441,15.80000019,0.00000000,0.00000000,179.99450684); //object(dyn_mesh_1) (19)
CreateDynamicObject(1411,771.29998779,-1329.90002441,15.69999981,0.00000000,0.00000000,358.74755859); //object(dyn_mesh_1) (20)
CreateDynamicObject(1411,766.00000000,-1329.80004883,15.69999981,0.00000000,0.00000000,358.74755859); //object(dyn_mesh_1) (21)
CreateDynamicObject(1411,760.59997559,-1329.69995117,15.69999981,0.00000000,0.00000000,358.74755859); //object(dyn_mesh_1) (22)
CreateDynamicObject(1411,755.29998779,-1329.50000000,15.69999981,0.00000000,0.00000000,358.74755859); //object(dyn_mesh_1) (23)
CreateDynamicObject(1411,749.90002441,-1329.50000000,15.69999981,0.00000000,0.00000000,358.74755859); //object(dyn_mesh_1) (24)
CreateDynamicObject(1411,744.59997559,-1329.50000000,15.69999981,0.00000000,0.00000000,358.74755859); //object(dyn_mesh_1) (25)
CreateDynamicObject(1411,739.29998779,-1329.50000000,15.69999981,0.00000000,0.00000000,0.74755859); //object(dyn_mesh_1) (26)
CreateDynamicObject(1411,734.00000000,-1329.50000000,15.69999981,0.00000000,0.00000000,0.74707031); //object(dyn_mesh_1) (27)
CreateDynamicObject(1251,778.59997559,-1330.19995117,16.39999962,0.00000000,0.00000000,88.75000000); //object(smashbar) (1)
CreateDynamicObject(1251,777.20001221,-1330.19995117,16.39999962,0.00000000,0.00000000,88.74755859); //object(smashbar) (2)
CreateDynamicObject(1251,778.59997559,-1384.90002441,16.60000038,0.00000000,0.00000000,90.00000000); //object(smashbar) (3)
CreateDynamicObject(1251,777.40002441,-1384.90002441,16.60000038,0.00000000,0.00000000,90.00000000); //object(smashbar) (4)

	// Casa VIP Charli
	CreateDynamicObject(8614, 1250.5999755859, -790.5, 91.033996582031, 0.39999389648438, 0.10000610351563, 270);
	CreateDynamicObject(984, 1303.9000244141, -795.43005371094, 83.800003051758, 0, 0, 0);
// CNN Exterior (ZenonCity)
CreateDynamicObject(3626, 756.00, -1380.20, 14.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1371.20, 14.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1362.20, 14.00,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 753.00, -1357.30, 18.20,   90.00, 0.00, 180.00);
CreateDynamicObject(3626, 745.50, -1357.30, 14.10,   90.00, 0.00, 179.99);
CreateDynamicObject(3626, 745.50, -1357.30, 18.20,   90.00, 0.00, 179.99);
CreateDynamicObject(3626, 745.50, -1357.30, 22.10,   90.00, 0.00, 179.99);
CreateDynamicObject(3626, 742.50, -1360.30, 22.10,   90.00, 0.00, 270.00);
CreateDynamicObject(3626, 742.50, -1360.30, 14.10,   90.00, 0.00, 269.99);
CreateDynamicObject(3626, 742.50, -1360.30, 18.20,   90.00, 0.00, 269.99);
CreateDynamicObject(3626, 753.00, -1357.30, 14.10,   90.00, 0.00, 179.99);
CreateDynamicObject(3626, 756.00, -1360.30, 18.20,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1371.20, 18.20,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1362.20, 18.20,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1380.20, 18.20,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 753.00, -1357.30, 22.10,   90.00, 0.00, 179.99);
CreateDynamicObject(3626, 756.00, -1362.20, 22.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1360.30, 22.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1371.20, 22.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 756.00, -1380.20, 22.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3626, 755.10, -1383.20, 20.00,   180.00, 270.00, 90.00);
CreateDynamicObject(3626, 755.10, -1380.20, 23.00,   0.00, 0.00, 270.00);
CreateDynamicObject(3626, 755.10, -1371.30, 23.00,   0.00, 0.00, 270.00);
CreateDynamicObject(3626, 755.10, -1364.10, 23.00,   0.00, 0.00, 270.00);
CreateDynamicObject(3626, 755.10, -1360.30, 23.00,   0.00, 0.00, 270.00);
CreateDynamicObject(3626, 749.00, -1358.20, 23.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3626, 745.50, -1358.20, 23.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 766.90, -1356.60, 14.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3660, 777.40, -1356.60, 14.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 757.60, -1377.40, 17.20,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 757.60, -1377.40, 21.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2946, 757.70, -1362.80, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(2946, 757.70, -1359.60, 13.10,   0.00, 0.00, 179.99);
CreateDynamicObject(3626, 756.00, -1360.30, 14.00,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 757.60, -1361.20, 9.80,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 757.60, -1362.80, 21.60,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 757.60, -1362.80, 17.20,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 756.10, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 760.30, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 764.50, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 768.70, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 772.90, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 777.10, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 781.30, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 785.30, -1357.80, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 785.30, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 781.20, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 777.10, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 773.00, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 768.90, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 764.80, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 760.60, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 756.50, -1355.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 749.30, -1355.70, 21.60,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 749.30, -1355.70, 17.20,   0.00, 0.00, 90.00);
CreateDynamicObject(8661, 767.20, -1340.30, 12.70,   0.00, 0.00, 359.25);
CreateDynamicObject(3601, 743.00, -1372.70, 17.10,   0.00, 0.00, 0.00);
CreateDynamicObject(8661, 727.30, -1339.80, 12.70,   0.00, 0.00, 359.25);
CreateDynamicObject(8661, 767.00, -1360.20, 12.70,   0.00, 0.00, 359.24);
CreateDynamicObject(8661, 727.00, -1359.70, 12.70,   0.00, 0.00, 359.25);
CreateDynamicObject(16501, 735.00, -1354.10, 14.90,   0.00, 0.00, 90.00);
CreateDynamicObject(16501, 735.00, -1354.10, 19.20,   0.00, 0.00, 90.00);
CreateDynamicObject(16501, 735.00, -1354.10, 22.10,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 739.10, -1354.10, 21.50,   90.00, 0.00, 90.00);
CreateDynamicObject(16501, 731.50, -1356.20, 23.70,   90.00, 0.00, 180.00);
CreateDynamicObject(3851, 741.10, -1356.10, 21.50,   90.00, 0.00, 0.00);
CreateDynamicObject(16501, 738.90, -1360.30, 23.60,   90.00, 0.00, 270.00);
CreateDynamicObject(16501, 731.50, -1358.20, 23.70,   90.00, 0.00, 179.99);
CreateDynamicObject(16501, 741.10, -1358.10, 23.60,   90.00, 0.00, 0.00);
CreateDynamicObject(16501, 735.00, -1354.10, 25.00,   0.00, 0.00, 90.00);
CreateDynamicObject(16501, 736.70, -1360.30, 23.60,   90.00, 0.00, 270.00);
CreateDynamicObject(16501, 739.10, -1357.20, 27.20,   0.00, 270.00, 0.00);
CreateDynamicObject(16501, 733.10, -1357.20, 27.20,   0.00, 270.00, 0.00);
CreateDynamicObject(16501, 736.40, -1357.20, 27.20,   0.00, 270.00, 0.00);
CreateDynamicObject(3851, 741.10, -1356.10, 10.20,   90.00, 0.00, 0.00);
CreateDynamicObject(3934, 742.80, -1372.10, 25.00,   0.00, 0.00, 89.25);
CreateDynamicObject(14394, 730.50, -1358.80, 23.79,   0.00, 0.00, 270.00);
CreateDynamicObject(14394, 730.50, -1358.18, 23.33,   0.00, 0.00, 270.00);
CreateDynamicObject(14387, 776.40, -1386.20, 12.10,   0.00, 0.00, 270.00);
CreateDynamicObject(14387, 779.70, -1386.20, 12.10,   0.00, 0.00, 270.00);
CreateDynamicObject(3851, 647.50, -1370.00, 15.00,   90.00, 180.00, 180.00);
CreateDynamicObject(3851, 647.50, -1374.00, 15.00,   90.00, 179.99, 179.99);
CreateDynamicObject(3851, 647.50, -1378.00, 15.00,   90.00, 179.99, 179.99);
CreateDynamicObject(3851, 647.50, -1382.00, 15.00,   90.00, 179.99, 179.99);
CreateDynamicObject(3851, 647.60, -1364.30, 18.70,   0.00, 0.00, 179.99);
CreateDynamicObject(3851, 647.60, -1353.00, 18.70,   0.00, 0.00, 179.99);
CreateDynamicObject(3851, 647.60, -1364.20, 11.10,   90.00, 179.99, 179.99);
CreateDynamicObject(3851, 647.60, -1351.20, 11.10,   90.00, 179.99, 179.99);
CreateDynamicObject(3851, 649.00, -1354.60, 11.10,   90.00, 180.01, 225.98);
CreateDynamicObject(3851, 649.00, -1360.80, 11.10,   90.00, 180.01, 134.02);
CreateDynamicObject(3851, 649.50, -1357.20, 17.30,   0.00, 0.00, 179.99);
CreateDynamicObject(3851, 649.50, -1357.20, 13.40,   0.00, 0.00, 179.99);
CreateDynamicObject(3851, 647.70, -1345.40, 15.00,   90.00, 179.99, 179.74);
CreateDynamicObject(3851, 647.70, -1341.40, 15.00,   90.00, 179.99, 180.24);
CreateDynamicObject(3851, 647.70, -1337.40, 15.00,   90.00, 179.99, 180.24);
CreateDynamicObject(3851, 647.70, -1333.40, 15.00,   90.00, 179.99, 180.24);
CreateDynamicObject(3660, 646.60, -1373.50, 14.80,   0.00, 0.00, 270.00);
CreateDynamicObject(3660, 646.60, -1372.10, 14.80,   0.00, 0.00, 270.00);
CreateDynamicObject(3660, 646.60, -1343.40, 14.80,   0.00, 0.00, 270.00);
CreateDynamicObject(3660, 646.60, -1341.30, 14.80,   0.00, 0.00, 270.00);
CreateDynamicObject(1505, 649.40, -1357.70, 12.50,   0.00, 0.00, 270.00);
CreateDynamicObject(1505, 649.40, -1357.80, 12.50,   0.00, 0.00, 90.74);
CreateDynamicObject(984, 642.90, -1368.80, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 651.70, -1353.30, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(984, 642.90, -1346.90, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 651.70, -1362.20, 13.10,   0.00, 0.00, 90.00);
CreateDynamicObject(984, 642.90, -1378.40, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 642.90, -1337.30, 13.10,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 782.70, -1359.80, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 782.70, -1363.30, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 782.70, -1380.00, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 782.70, -1371.70, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 774.70, -1380.00, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 774.70, -1371.60, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 774.70, -1363.50, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 774.70, -1361.30, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 766.90, -1361.50, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 759.20, -1361.60, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 759.30, -1369.30, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 766.70, -1369.30, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 759.50, -1379.80, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 767.20, -1379.80, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 766.90, -1372.40, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(6136, 759.70, -1372.00, -30.30,   0.00, 270.00, 90.00);
CreateDynamicObject(3660, 758.30, -1374.10, 14.80,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 757.50, -1364.30, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 757.50, -1383.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 759.50, -1381.80, 13.80,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 759.50, -1377.70, 13.80,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 759.50, -1373.60, 13.80,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 759.50, -1369.50, 13.80,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 759.50, -1366.40, 13.80,   0.00, 0.00, 90.00);
CreateDynamicObject(3472, 771.60, -1365.80, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3472, 771.60, -1375.80, 10.40,   0.00, 0.00, 0.00);
CreateDynamicObject(970, 771.60, -1367.90, 13.50,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 771.60, -1373.80, 13.50,   0.00, 0.00, 90.00);
CreateDynamicObject(1364, 772.50, -1373.70, 13.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1364, 772.50, -1368.00, 13.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1364, 770.90, -1368.00, 13.40,   0.00, 0.00, 270.00);
CreateDynamicObject(1364, 771.00, -1373.70, 13.40,   0.00, 0.00, 270.00);
CreateDynamicObject(1361, 771.60, -1370.90, 13.80,   0.00, 0.00, 0.00);
CreateDynamicObject(9697, 734.50, -1349.90, 12.80,   0.00, 0.00, 180.00);
CreateDynamicObject(8841, 754.70, -1340.70, 16.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3881, 784.20, -1334.80, 14.40,   0.00, 0.00, 0.00);
CreateDynamicObject(984, 767.00, -1325.00, 13.00,   0.00, 0.00, 88.75);
CreateDynamicObject(984, 754.20, -1324.70, 13.00,   0.00, 0.00, 88.75);
CreateDynamicObject(3881, 779.80, -1329.80, 9.40,   0.00, 292.00, 89.25);
CreateDynamicObject(3881, 772.60, -1329.70, 9.40,   0.00, 291.99, 89.25);
CreateDynamicObject(1595, 723.30, -1335.80, 32.40,   0.00, 0.00, 142.00);
CreateDynamicObject(1595, 723.30, -1350.50, 32.40,   0.00, 0.00, 142.00);
CreateDynamicObject(1595, 723.20, -1365.30, 32.40,   0.00, 0.00, 142.00);
//CNN Interior
CreateDynamicObject(18009, -2710.78, 524.81, 51.42,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2720.50, 519.55, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 515.22, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 519.55, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 515.22, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 523.90, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 528.24, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 532.60, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 536.97, 51.01,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 523.90, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 528.24, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2720.50, 532.60, 47.75,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2713.96, 513.03, 51.01,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, -2718.30, 513.03, 47.75,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 521.23, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 513.03, 47.75,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 513.03, 51.01,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 514.70, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 517.96, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 514.70, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2713.96, 517.96, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2718.30, 521.23, 52.66,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2719.10, 520.67, 51.01,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.52, 522.47, 50.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2707.51, 533.97, 50.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1649, -2707.51, 517.79, 54.24,   0.00, 0.00, 180.00);
CreateDynamicObject(1649, -2700.92, 519.99, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2707.51, 517.79, 50.99,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 517.79, 50.99,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 517.79, 54.24,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2700.92, 537.35, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 519.99, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 524.33, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 528.66, 50.99,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2700.92, 533.00, 50.99,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 524.33, 54.24,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 528.66, 54.24,   0.00, 0.00, 269.99);
CreateDynamicObject(1649, -2700.92, 533.00, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2700.92, 537.35, 54.24,   0.00, 0.00, 270.00);
CreateDynamicObject(1649, -2703.15, 536.40, 50.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 536.40, 50.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2703.15, 536.40, 54.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 536.40, 54.24,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2707.50, 525.90, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 519.40, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 529.20, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 522.80, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 532.43, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 535.70, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 519.40, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 522.63, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 532.43, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 529.20, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.50, 535.70, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1523, -2706.96, 524.53, 48.17,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2700.55, 524.40, 52.31,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2704.90, 524.47, 52.31,   0.00, 0.00, 0.00);
CreateDynamicObject(1649, -2700.55, 524.40, 52.31,   0.00, 0.00, 179.99);
CreateDynamicObject(2591, -2702.66, 524.43, 48.11,   359.50, 180.00, 89.00);
CreateDynamicObject(2591, -2703.76, 524.47, 48.13,   359.49, 179.99, 88.99);
CreateDynamicObject(1649, -2703.14, 522.63, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.46, 522.80, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2704.90, 524.47, 52.31,   0.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 525.90, 55.90,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2703.14, 519.53, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(1649, -2707.46, 519.53, 53.97,   90.00, 0.00, 179.99);
CreateDynamicObject(2184, -2703.32, 520.12, 48.18,   0.00, 0.00, 180.00);
CreateDynamicObject(1998, -2702.40, 522.80, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(2190, -2704.80, 519.90, 48.96,   0.00, 0.00, 18.00);
CreateDynamicObject(1663, -2701.49, 522.85, 48.64,   0.00, 0.00, 178.00);
CreateDynamicObject(1714, -2704.37, 518.30, 48.20,   0.00, 0.00, 182.00);
CreateDynamicObject(2894, -2704.11, 519.48, 48.96,   0.00, 0.00, 344.00);
CreateDynamicObject(1962, -2700.95, 519.20, 49.79,   0.00, 0.00, 90.00);
CreateDynamicObject(1961, -2700.95, 521.17, 49.30,   0.00, 0.00, 90.00);
CreateDynamicObject(1960, -2700.95, 522.03, 50.47,   0.00, 0.00, 90.00);
CreateDynamicObject(14860, -2703.91, 518.92, 49.60,   0.00, 0.00, 0.00);
CreateDynamicObject(2066, -2705.05, 523.60, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(14493, -2704.80, 531.20, 50.48,   0.00, 0.00, 180.00);
CreateDynamicObject(2637, -2704.07, 533.90, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(2596, -2706.78, 535.97, 51.37,   0.00, 0.00, 40.00);
CreateDynamicObject(2813, -2704.06, 533.87, 48.99,   0.00, 0.00, 0.00);
CreateDynamicObject(2828, -2702.60, 522.74, 48.99,   0.00, 0.00, 286.00);
CreateDynamicObject(14391, -2712.40, 528.10, 49.04,   0.00, 0.00, 0.00);
CreateDynamicObject(1670, -2704.77, 533.62, 49.02,   0.00, 0.00, 0.00);
CreateDynamicObject(625, -2703.78, 524.84, 48.99,   0.00, 0.00, 228.00);
CreateDynamicObject(638, -2706.96, 534.01, 48.88,   0.00, 0.00, 0.00);
CreateDynamicObject(3386, -2708.90, 519.30, 48.18,   0.00, 0.00, 90.00);
CreateDynamicObject(3386, -2708.90, 520.32, 48.18,   0.00, 0.00, 0.00);
CreateDynamicObject(3387, -2709.91, 519.30, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3388, -2710.90, 519.30, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3389, -2711.90, 519.29, 48.18,   0.00, 0.00, 270.00);
CreateDynamicObject(3387, -2712.89, 519.29, 48.18,   0.00, 0.00, 90.00);
CreateDynamicObject(1714, -2710.08, 528.15, 48.18,   0.00, 0.00, 274.00);
CreateDynamicObject(1663, -2717.84, 529.74, 49.04,   0.00, 0.00, 44.00);
CreateDynamicObject(1663, -2717.83, 526.97, 49.04,   0.00, 0.00, 140.00);
CreateDynamicObject(1827, -2716.56, 528.35, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 527.48, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(640, -2719.70, 529.11, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(646, -2719.20, 524.70, 49.99,   0.00, 0.00, 0.00);
CreateDynamicObject(646, -2719.20, 532.21, 49.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1557, -2719.06, 520.38, 47.08,   0.00, 0.00, 208.00);
CreateDynamicObject(1557, -2720.42, 518.09, 47.08,   0.00, 0.00, 90.00);
CreateDynamicObject(638, -2718.17, 517.72, 49.28,   0.00, 0.00, 90.00);
CreateDynamicObject(638, -2718.99, 517.72, 49.28,   0.00, 0.00, 90.00);
CreateDynamicObject(629, -2714.90, 515.60, 48.50,   0.00, 0.00, 220.00);
CreateDynamicObject(741, -2712.05, 516.10, 48.90,   0.00, 0.00, 248.00);
CreateDynamicObject(2572, -2717.70, 514.10, 48.50,   0.00, 0.00, 120.00);
CreateDynamicObject(2266, -2714.87, 519.25, 50.95,   0.00, 0.00, 270.00);
CreateDynamicObject(2179, -2719.80, 524.81, 50.29,   0.00, 0.00, 0.00);
CreateDynamicObject(2179, -2719.80, 531.82, 50.29,   0.00, 0.00, 0.00);
CreateDynamicObject(1892, -2716.11, 520.57, 48.58,   0.00, 0.00, 0.00);
CreateDynamicObject(18075, -2713.50, 528.47, 51.77,   0.00, 0.00, 0.00);
CreateDynamicObject(1776, -2710.81, 536.21, 49.28,   0.00, 0.00, 0.00);
CreateDynamicObject(2700, -2708.35, 535.81, 51.29,   0.00, 0.00, 226.00);
CreateDynamicObject(3031, -2713.24, 514.25, 50.18,   0.00, 0.00, 132.00);
CreateDynamicObject(2295, -2719.82, 535.15, 48.58,   0.00, 0.00, 44.00);
CreateDynamicObject(1510, -2717.00, 528.53, 49.02,   0.00, 0.00, 0.00);
CreateDynamicObject(1667, -2717.00, 528.00, 49.02,   0.00, 0.00, 0.00);
// Restaurante Ayunta (By Esparza)
CreateDynamicObject(3498, 1397.73, -1882.44, 15.96,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1397.29, -1882.28, 18.45,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 1385.99, -1882.27, 18.45,   0.00, 0.00, 90.00);
CreateDynamicObject(3498, 1380.15, -1882.44, 15.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1393.77, -1882.45, 20.22,   0.00, 90.00, 0.00);
CreateDynamicObject(3498, 1384.81, -1882.44, 20.22,   0.00, 90.00, 180.00);
CreateDynamicObject(3498, 1380.11, -1891.77, 15.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 1379.91, -1884.62, 14.33,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1379.89, -1888.56, 14.33,   90.00, 0.00, 0.00);
CreateDynamicObject(3498, 1380.13, -1887.05, 20.22,   0.00, 90.00, 90.00);
CreateDynamicObject(3498, 1380.13, -1887.05, 20.22,   0.00, 90.00, -90.00);
CreateDynamicObject(3851, 1379.90, -1889.60, 14.33,   90.00, 0.00, 0.00);
CreateDynamicObject(3498, 1397.69, -1891.95, 15.94,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1393.89, -1891.95, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1385.27, -1891.98, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 1389.54, -1892.00, 19.36,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1383.05, -1892.03, 14.33,   90.00, 0.00, 90.00);
CreateDynamicObject(3498, 1384.70, -1891.80, 20.22,   0.00, 90.00, 180.00);
CreateDynamicObject(3851, 1382.31, -1892.02, 14.33,   90.00, 0.00, 90.00);
CreateDynamicObject(3498, 1393.58, -1891.80, 20.22,   0.00, 90.00, 180.00);
CreateDynamicObject(3851, 1396.04, -1891.93, 14.33,   90.00, 0.00, 90.00);
CreateDynamicObject(3498, 1389.54, -1892.00, 19.64,   0.00, 90.00, 0.00);
CreateDynamicObject(3851, 1385.73, -1884.40, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1385.72, -1888.28, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1397.00, -1888.31, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1397.03, -1884.41, 20.45,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1385.97, -1889.73, 20.49,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1392.22, -1889.82, 20.47,   0.00, 90.00, 90.00);
CreateDynamicObject(3851, 1397.79, -1884.67, 14.79,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1397.77, -1888.68, 14.79,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 1397.75, -1889.65, 14.79,   90.00, 0.00, 0.00);
CreateDynamicObject(14651, 1383.13, -1889.66, 18.68,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1383.17, -1885.57, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1387.58, -1884.75, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1386.40, -1888.89, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(16151, 1396.95, -1887.19, 16.81,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1390.22, -1887.49, 16.94,   0.00, 0.00, 0.00);
CreateDynamicObject(8615, 1389.37, -1893.13, 14.70,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1395.17, -1899.48, 12.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1679, 1391.92, -1896.33, 12.95,   0.00, 0.00, -79.92);
CreateDynamicObject(1679, 1388.92, -1900.16, 12.95,   0.00, 0.00, -79.92);
CreateDynamicObject(1679, 1387.78, -1896.39, 12.95,   0.00, 0.00, -79.92);
CreateDynamicObject(642, 1387.71, -1896.43, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1391.90, -1896.36, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1395.14, -1899.54, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(642, 1388.87, -1900.16, 13.82,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1368.12, -1892.82, 12.47,   0.00, 0.00, 0.00);
CreateDynamicObject(717, 1368.03, -1899.96, 12.47,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1368.30, -1892.53, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1368.42, -1899.86, 12.92,   0.00, 0.00, 0.00);
CreateDynamicObject(1231, 1379.49, -1882.23, 14.49,   0.00, 0.00, -89.22);
CreateDynamicObject(1231, 1365.99, -1880.63, 14.49,   0.00, 0.00, -89.22);
CreateDynamicObject(717, 1368.19, -1885.65, 12.47,   0.00, 0.00, 0.00);
CreateDynamicObject(869, 1368.16, -1885.64, 12.92,   0.00, 0.00, 0.00);
// -======================================= Casino ==============================================- //
CreateDynamicObject(14624,2238.12060547,1661.44689941,11.92551899,0.00000000,0.00000000,0.00000000); //object(mafcasmain2) (1)
CreateDynamicObject(7191,2231.32543945,1665.34802246,7.88457251,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (1)
CreateDynamicObject(7191,2231.35815430,1665.27746582,11.77499008,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (2)
CreateDynamicObject(8378,2239.27001953,1683.58288574,14.61774826,0.00000000,0.00000000,181.75000000); //object(vgsbighngrdoor) (1)
CreateDynamicObject(8378,2247.72924805,1655.11437988,15.61944771,0.00000000,0.00000000,0.00000000); //object(vgsbighngrdoor) (2)
CreateDynamicObject(7191,2263.94091797,1667.23913574,10.06425953,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (3)
CreateDynamicObject(8659,2264.07153320,1663.41174316,11.94925117,0.00000000,0.00000000,270.00000000); //object(shbbyhswall11_lvs) (1)
CreateDynamicObject(8659,2264.17236328,1692.89587402,11.93328667,0.00000000,0.00000000,269.50000000); //object(shbbyhswall11_lvs) (2)
CreateDynamicObject(1978,2238.26245117,1673.50781250,6.96686316,0.00000000,0.00000000,0.00000000); //object(roulette_tbl) (1)
CreateDynamicObject(1978,2242.91113281,1673.49926758,6.96686316,0.00000000,0.00000000,180.00000000); //object(roulette_tbl) (2)
CreateDynamicObject(1978,2242.90747070,1678.85717773,6.96051788,0.00000000,0.00000000,179.00000000); //object(roulette_tbl) (3)
CreateDynamicObject(1978,2238.14355469,1678.53393555,6.96051788,0.00000000,0.00000000,0.00000000); //object(roulette_tbl) (4)
CreateDynamicObject(2188,2254.72900391,1682.07080078,6.89541054,0.00000000,0.00000000,0.25000000); //object(blck_jack) (1)
CreateDynamicObject(1979,2243.11059570,1672.12707520,6.89041710,0.00000000,0.00000000,0.00000000); //object(wheel_wee) (1)
CreateDynamicObject(1979,2243.09326172,1677.49182129,6.88407135,0.00000000,0.00000000,0.00000000); //object(wheel_wee) (2)
CreateDynamicObject(1979,2237.94970703,1679.90527344,6.88407135,0.00000000,0.00000000,0.00000000); //object(wheel_wee) (3)
CreateDynamicObject(1979,2238.05004883,1674.85424805,6.89041710,0.00000000,0.00000000,0.00000000); //object(wheel_wee) (4)
CreateDynamicObject(1895,2254.70800781,1683.26818848,7.96865606,0.00000000,0.00000000,1.50000000); //object(wheel_o_fortune) (1)
CreateDynamicObject(2188,2260.32714844,1682.19433594,6.89541054,0.00000000,0.00000000,0.24719238); //object(blck_jack) (2)
CreateDynamicObject(1895,2260.33129883,1683.43200684,8.07095814,0.00000000,0.00000000,1.49963379); //object(wheel_o_fortune) (2)
CreateDynamicObject(3437,2232.03271484,1682.23937988,11.77049637,0.00000000,0.00000000,44.00000000); //object(ballypllr01_lvs) (1)
CreateDynamicObject(3437,2263.07397461,1656.52893066,11.77049637,0.00000000,0.00000000,52.49475098); //object(ballypllr01_lvs) (2)
CreateDynamicObject(3437,2231.80517578,1656.68798828,11.77049637,0.00000000,0.00000000,129.99267578); //object(ballypllr01_lvs) (3)
CreateDynamicObject(3437,2263.22460938,1683.15356445,11.76828003,0.00000000,0.00000000,129.99023438); //object(ballypllr01_lvs) (4)
CreateDynamicObject(3441,2233.34887695,1665.24438477,7.88556719,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (1)
CreateDynamicObject(3441,2233.48120117,1670.89404297,7.89191246,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (2)
CreateDynamicObject(3441,2233.45825195,1670.87670898,11.84692955,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (3)
CreateDynamicObject(3441,2233.35815430,1665.22595215,11.84058380,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (4)
CreateDynamicObject(3494,2252.35351562,1676.35107422,9.93001556,0.00000000,0.00000000,0.00000000); //object(luxorpillar04_lvs) (1)
CreateDynamicObject(14582,2246.60180664,1656.23022461,9.39402580,0.00000000,0.00000000,268.75000000); //object(mafiacasinobar1) (1)
CreateDynamicObject(1905,2238.10961914,1672.14135742,6.86254692,0.00000000,0.00000000,0.00000000); //object(pkr_chplo08) (2)
CreateDynamicObject(1905,2238.35717773,1672.30114746,6.86254692,0.00000000,0.00000000,0.00000000); //object(pkr_chplo08) (3)
CreateDynamicObject(2946,2231.43750000,1668.14685059,5.90989399,0.00000000,0.00000000,0.00000000); //object(cr_door_03) (1)
CreateDynamicObject(2946,2231.44140625,1668.17456055,5.89203167,0.00000000,0.00000000,180.00000000); //object(cr_door_03) (2)
CreateDynamicObject(1214,2250.99829102,1657.52880859,5.58489275,0.00000000,0.00000000,0.00000000); //object(bollard) (1)
CreateDynamicObject(1214,2250.42773438,1658.82507324,5.55989265,0.00000000,0.00000000,0.00000000); //object(bollard) (2)
CreateDynamicObject(1214,2249.55273438,1659.69482422,5.53489256,0.00000000,0.00000000,0.00000000); //object(bollard) (3)
CreateDynamicObject(1214,2248.50952148,1660.39550781,5.65989304,0.00000000,0.00000000,0.00000000); //object(bollard) (4)
CreateDynamicObject(1214,2247.29736328,1660.55566406,5.63489294,0.00000000,0.00000000,0.00000000); //object(bollard) (5)
CreateDynamicObject(1214,2245.90405273,1660.55151367,5.60989285,0.00000000,0.00000000,0.00000000); //object(bollard) (6)
CreateDynamicObject(1214,2244.49536133,1660.16247559,5.55989265,0.00000000,0.00000000,0.00000000); //object(bollard) (7)
CreateDynamicObject(1214,2243.52709961,1659.55700684,5.50989246,0.00000000,0.00000000,0.00000000); //object(bollard) (8)
CreateDynamicObject(1214,2242.31225586,1657.50549316,5.60989285,0.00000000,0.00000000,0.00000000); //object(bollard) (9)
CreateDynamicObject(1214,2242.62084961,1658.49133301,5.65989304,0.00000000,0.00000000,0.00000000); //object(bollard) (10)
CreateDynamicObject(3441,2247.35302734,1656.44934082,7.88556719,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (5)
CreateDynamicObject(3441,2245.87182617,1656.39453125,7.88556719,0.00000000,0.00000000,0.00000000); //object(luxorpillar02_lvs) (6)
CreateDynamicObject(1214,2246.63916016,1657.41540527,5.90989399,0.00000000,0.00000000,0.00000000); //object(bollard) (11)
CreateDynamicObject(18014,2232.09936523,1678.85314941,6.34844208,0.00000000,0.00000000,0.00000000); //object(int_rest_veg03) (1)
CreateDynamicObject(18014,2232.10839844,1674.23193359,6.34209681,0.00000000,0.00000000,0.00000000); //object(int_rest_veg03) (2)
CreateDynamicObject(18014,2232.15747070,1662.15563965,6.34844208,0.00000000,0.00000000,0.00000000); //object(int_rest_veg03) (3)
CreateDynamicObject(1361,2235.78491211,1656.76098633,6.65323734,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (1)
CreateDynamicObject(1361,2258.67749023,1656.53796387,6.65323734,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (2)
CreateDynamicObject(2785,2254.01318359,1666.48547363,6.75436735,0.00000000,0.00000000,0.00000000); //object(cj_slot_bank) (1)
CreateDynamicObject(2785,2258.33496094,1666.51196289,6.75436735,0.00000000,0.00000000,0.00000000); //object(cj_slot_bank) (2)
CreateDynamicObject(2785,2254.00830078,1667.51208496,6.75436735,0.00000000,0.00000000,180.75000000); //object(cj_slot_bank) (3)
CreateDynamicObject(2785,2258.31054688,1667.56457520,6.75436735,0.00000000,0.00000000,180.74707031); //object(cj_slot_bank) (4)
CreateDynamicObject(2785,2254.51831055,1672.59411621,6.75436735,0.00000000,0.00000000,0.00000000); //object(cj_slot_bank) (5)
CreateDynamicObject(2785,2258.71728516,1672.59704590,6.75436735,0.00000000,0.00000000,0.00000000); //object(cj_slot_bank) (6)
CreateDynamicObject(2785,2258.72216797,1673.56152344,6.75436735,0.00000000,0.00000000,180.74707031); //object(cj_slot_bank) (7)
CreateDynamicObject(2785,2254.51391602,1673.50439453,6.75436735,0.00000000,0.00000000,180.74707031); //object(cj_slot_bank) (8)
	// -============================== Cyber Café ==========================================- //
	CreateDynamicObject(12843,1092.53417969,-1380.43945312,12.80624962,0.00000000,0.00000000,0.00000000); //object(cos_liquorshop) (1)
	CreateDynamicObject(12844,1089.54785156,-1380.46679688,14.78195858,0.00000000,0.00000000,359.50000000); //object(cos_liqinside) (2)
	CreateDynamicObject(2954,1084.42919922,-1375.44812012,12.82817554,0.00000000,0.00000000,270.00000000); //object(kmb_ot) (1)
	CreateDynamicObject(2954,1084.43017578,-1375.50622559,14.86172867,0.00000000,2.00000000,270.00000000); //object(kmb_ot) (2)
	CreateDynamicObject(1280,1084.25866699,-1385.80151367,13.17749691,0.00000000,0.00000000,91.50000000); //object(parkbench1) (1)
	CreateDynamicObject(1281,1104.75927734,-1380.01562500,13.58163261,0.00000000,0.00000000,342.00000000); //object(parktable1) (1)
	CreateDynamicObject(1281,1108.77478027,-1382.49890137,13.58163261,0.00000000,0.00000000,270.00000000); //object(parktable1) (2)
	CreateDynamicObject(970,1108.77661133,-1385.20068359,13.33273125,0.00000000,0.00000000,0.50000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1099.61035156,-1385.34729004,13.33273125,0.00000000,0.00000000,2.00000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1110.91345215,-1383.09204102,13.33927536,0.00000000,0.00000000,268.99987793); //object(fencesmallb) (3)
	CreateDynamicObject(974,1093.53308105,-1372.20556641,15.08400536,0.00000000,0.00000000,272.00000000); //object(tall_fence) (1)
	CreateDynamicObject(1568,1110.58142090,-1384.93798828,12.78125000,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (1)
	CreateDynamicObject(1568,1097.84497070,-1384.99291992,12.78779411,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (2)
	CreateDynamicObject(1568,1097.82299805,-1376.09619141,12.78125000,0.00000000,0.00000000,0.00000000); //object(chinalamp_sf) (3)
	CreateDynamicObject(1367,1092.23010254,-1385.70190430,13.40314579,0.00000000,0.00000000,0.00000000); //object(cj_postbox) (1)
	CreateDynamicObject(1215,1101.83349609,-1385.21325684,13.34557343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1106.50598145,-1385.14501953,13.34557343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1216,1096.18566895,-1385.74523926,13.43976593,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (2)
	CreateDynamicObject(1216,1096.96252441,-1385.74523926,13.43786907,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (3)
	CreateDynamicObject(1286,1081.86267090,-1385.85839844,13.37843704,0.00000000,0.00000000,182.00000000); //object(newstandnew4) (1)
	CreateDynamicObject(1288,1082.41528320,-1385.86096191,13.37351227,0.00000000,0.00000000,182.00000000); //object(newstandnew2) (1)
	CreateDynamicObject(1215,1084.58093262,-1386.50805664,16.17106056,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(3851,1086.95507812,-1385.25195312,14.80624962,0.00000000,0.00000000,270.00000000); //object(carshowwin_sfsx) (1)
	CreateDynamicObject(1215,1089.78186035,-1386.37145996,16.17106056,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1096.02331543,-1386.44958496,16.17106056,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(3851,1082.58496094,-1379.19921875,13.21324253,0.00000000,0.00000000,0.24719238); //object(carshowwin_sfsx) (2)
	CreateDynamicObject(2009,1091.24450684,-1383.28833008,12.80539608,0.00000000,0.00000000,270.00000000); //object(officedesk2l) (1)
	CreateDynamicObject(2175,1083.44921875,-1381.57421875,12.80539608,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (1)
	CreateDynamicObject(2175,1084.88574219,-1381.56933594,12.81272793,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (2)
	CreateDynamicObject(2175,1086.32592773,-1381.57690430,12.81272793,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (3)
	CreateDynamicObject(2175,1083.34863281,-1378.85351562,12.83039570,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (4)
	CreateDynamicObject(2175,1084.80957031,-1378.85644531,12.81272793,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (5)
	CreateDynamicObject(2175,1086.28076172,-1378.86328125,12.81272793,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_3) (6)
	CreateDynamicObject(2175,1089.77929688,-1378.72131348,12.81272793,0.00000000,0.00000000,180.25000000); //object(med_office4_desk_3) (7)
	CreateDynamicObject(2175,1091.21716309,-1378.72521973,12.81272793,0.00000000,0.00000000,180.24719238); //object(med_office4_desk_3) (8)
	CreateDynamicObject(2175,1092.62463379,-1378.72863770,12.81272793,0.00000000,0.00000000,180.24719238); //object(med_office4_desk_3) (9)
	CreateDynamicObject(2356,1091.36364746,-1384.71154785,12.80539608,0.00000000,0.00000000,321.00000000); //object(police_off_chair) (1)
	CreateDynamicObject(2356,1083.75585938,-1382.90832520,12.81272793,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (2)
	CreateDynamicObject(2356,1085.15991211,-1382.91076660,12.81272793,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (3)
	CreateDynamicObject(2356,1086.60034180,-1382.88769531,12.80539608,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (4)
	CreateDynamicObject(2356,1083.59436035,-1380.15734863,12.80539608,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (5)
	CreateDynamicObject(2356,1085.05749512,-1380.13964844,12.81272793,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (6)
	CreateDynamicObject(2356,1086.70715332,-1380.09973145,12.81272793,0.00000000,0.00000000,0.00000000); //object(police_off_chair) (7)
	CreateDynamicObject(2356,1089.54003906,-1377.34082031,12.81272793,0.00000000,0.00000000,182.00000000); //object(police_off_chair) (8)
	CreateDynamicObject(2356,1090.91235352,-1377.33349609,12.81272793,0.00000000,0.00000000,181.99951172); //object(police_off_chair) (9)
	CreateDynamicObject(2356,1092.41406250,-1377.40722656,12.81272793,0.00000000,0.00000000,181.99951172); //object(police_off_chair) (10)
	CreateDynamicObject(1999,1085.63647461,-1381.48754883,12.76807976,0.00000000,0.00000000,0.00000000); //object(officedesk2) (1)
	CreateDynamicObject(1999,1084.31164551,-1381.48852539,12.76844692,0.00000000,0.00000000,0.00000000); //object(officedesk2) (2)
	CreateDynamicObject(1999,1082.75622559,-1381.48669434,12.78039646,0.00000000,0.00000000,0.00000000); //object(officedesk2) (3)
	CreateDynamicObject(1999,1085.73669434,-1378.79357910,12.78772831,0.00000000,0.00000000,0.00000000); //object(officedesk2) (4)
	CreateDynamicObject(1999,1084.02490234,-1378.79467773,12.78199196,0.00000000,0.00000000,0.00000000); //object(officedesk2) (5)
	CreateDynamicObject(1999,1082.68261719,-1378.80163574,12.78281021,0.00000000,0.00000000,0.00000000); //object(officedesk2) (6)
	CreateDynamicObject(1999,1090.30798340,-1378.76574707,12.76620388,0.00000000,0.00000000,180.75000000); //object(officedesk2) (7)
	CreateDynamicObject(1999,1091.82434082,-1378.76098633,12.77811432,0.00000000,0.00000000,180.74707031); //object(officedesk2) (8)
	CreateDynamicObject(1999,1093.12976074,-1378.74401855,12.77968597,0.00000000,0.00000000,180.75000000); //object(officedesk2) (9)
	CreateDynamicObject(1723,1095.90820312,-1380.42211914,12.80539608,0.00000000,0.00000000,270.50000000); //object(mrk_seating1) (1)
	CreateDynamicObject(3920,1091.14123535,-1385.21215820,16.77091980,0.00000000,0.00000000,179.75000000); //object(lib_veg3) (1)
	CreateDynamicObject(18014,1088.97656250,-1385.84521484,13.03953648,0.00000000,0.00000000,270.00000000); //object(int_rest_veg03) (2)
	CreateDynamicObject(646,1095.86645508,-1384.27429199,14.22192001,0.00000000,0.00000000,0.00000000); //object(veg_palmkb14) (2)
	CreateDynamicObject(792,1079.34008789,-1387.42004395,13.00259399,0.00000000,0.00000000,0.00000000); //object(aw_streettree1) (1)
	CreateDynamicObject(792,1108.19799805,-1378.93762207,13.53124619,0.00000000,0.00000000,336.50000000); //object(aw_streettree1) (2)
	CreateDynamicObject(2690,1086.00170898,-1376.02270508,13.89021015,0.00000000,0.00000000,0.00000000); //object(cj_fire_ext) (1)
	CreateDynamicObject(1210,1091.08935547,-1383.31115723,13.58370876,271.24987793,0.00000000,0.00000000); //object(briefcase) (1)
	CreateDynamicObject(2773,1095.29663086,-1383.93017578,13.32262421,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (1)
	CreateDynamicObject(2894,1091.81188965,-1383.31445312,13.61028004,0.00000000,0.00000000,0.00000000); //object(kmb_rhymesbook) (1)
	CreateDynamicObject(1808,1096.20764160,-1379.24938965,12.80539608,0.00000000,0.00000000,268.00000000); //object(cj_watercooler2) (1)
	CreateDynamicObject(1841,1096.35949707,-1383.75842285,16.11229324,0.00000000,0.00000000,0.00000000); //object(speaker_1) (1)
	CreateDynamicObject(1841,1096.41943359,-1376.90161133,16.09013367,0.00000000,0.00000000,0.00000000); //object(speaker_1) (2)
	CreateDynamicObject(2596,1096.08959961,-1380.46264648,16.24308968,0.00000000,0.00000000,272.00000000); //object(cj_sex_tv) (1)
	CreateDynamicObject(1340,1099.31652832,-1383.34667969,13.91538048,0.00000000,0.00000000,0.00000000); //object(chillidogcart) (1)
	CreateDynamicObject(1341,1100.52355957,-1379.22460938,13.78383636,0.00000000,0.00000000,324.00000000); //object(icescart_prop) (1)
	CreateDynamicObject(1223,1101.61254883,-1389.30249023,12.69149494,0.00000000,0.00000000,280.00000000); //object(lampost_coast) (1)
	CreateDynamicObject(1223,1103.89453125,-1378.02917480,13.28125000,0.00000000,0.00000000,240.00000000); //object(lampost_coast) (3)
	CreateDynamicObject(16779,1085.93273926,-1379.76574707,16.76301765,0.00000000,0.00000000,355.50000000); //object(ufo_light02) (1)
	CreateDynamicObject(16779,1093.37512207,-1380.00732422,16.74996376,0.00000000,0.00000000,0.00000000); //object(ufo_light02) (2)
	CreateDynamicObject(1359,1095.86840820,-1376.59875488,13.50395298,0.00000000,0.00000000,0.00000000); //object(cj_bin1) (1)
	CreateDynamicObject(2412,1094.53698730,-1385.00585938,12.80539608,0.00000000,0.00000000,0.00000000); //object(cj_detector) (1)
	CreateDynamicObject(2413,1089.12194824,-1384.68481445,12.80539608,0.00000000,0.00000000,181.25000000); //object(shop_counter_3a) (1)
	CreateDynamicObject(2413,1087.50573730,-1384.72082520,12.80539608,0.00000000,0.00000000,181.24694824); //object(shop_counter_3a) (2)
	CreateDynamicObject(2488,1089.29760742,-1384.75659180,13.51120472,0.00000000,0.00000000,181.00000000); //object(manhunt_toy_1) (1)
	CreateDynamicObject(2488,1088.60522461,-1384.78820801,13.49805927,0.00000000,0.00000000,180.99975586); //object(manhunt_toy_1) (2)
	CreateDynamicObject(2490,1089.23059082,-1384.49633789,13.13751602,0.00000000,0.00000000,181.00000000); //object(vice_toy_1) (1)
	CreateDynamicObject(2490,1088.44836426,-1384.47937012,13.14030647,0.00000000,0.00000000,180.99975586); //object(vice_toy_1) (2)
	CreateDynamicObject(2484,1087.26464844,-1384.74438477,14.68132496,0.00000000,0.00000000,0.00000000); //object(model_yaught) (1)
	CreateDynamicObject(2489,1087.48742676,-1384.57702637,13.53079510,0.00000000,0.00000000,184.00000000); //object(manhunt_toy_2) (1)
	CreateDynamicObject(2489,1086.83081055,-1384.68835449,13.49906635,0.00000000,0.00000000,183.99902344); //object(manhunt_toy_2) (2)
	CreateDynamicObject(2499,1091.25048828,-1376.06591797,15.60769653,330.02014160,2.30908203,1.15432739); //object(hobby_kite4) (1)
	CreateDynamicObject(2601,1092.10168457,-1383.68713379,13.70128441,0.00000000,0.00000000,0.00000000); //object(cj_juice_can) (1)
	CreateDynamicObject(2495,1087.55554199,-1384.46093750,13.17615986,0.00000000,0.00000000,182.00000000); //object(vice_toy_2) (2)
	CreateDynamicObject(2495,1086.83349609,-1384.45275879,13.18251991,0.00000000,0.00000000,181.99951172); //object(vice_toy_2) (3)
	CreateDynamicObject(1514,1089.42248535,-1384.46032715,14.11250591,0.00000000,0.00000000,274.00000000); //object(dyn_ff_till) (1)
	CreateDynamicObject(2897,1091.31762695,-1385.46826172,21.09654045,271.99996948,269.99993896,183.99980164); //object(funtarp_law) (1)
	CreateDynamicObject(2897,1090.31494141,-1385.31628418,20.98733139,273.99902344,269.99450684,3.99902344); //object(funtarp_law) (2)
	CreateDynamicObject(1975,1091.33581543,-1386.89392090,21.19247246,0.00000000,0.00000000,86.00000000); //object(e_test) (1)
	// -============================ Hospital Interior Plantas 2-3 ==================================- //
    CreateDynamicObject(7191,258.41113281,134.64398193,1030.92004395,0.00000000,90.00000000,90.00000000); //
    CreateDynamicObject(7191,258.43750000,138.53417969,1030.92004395,0.00000000,90.00000000,90.00000000); //
    CreateDynamicObject(8657,280.05175781,136.13769531,1032.20483398,0.00000000,0.00000000,179.99450684); //
    CreateDynamicObject(8657,280.05175781,136.13769531,1034.58483887,0.00000000,179.99450684,0.00000000); //
    CreateDynamicObject(8657,265.09863281,140.41210938,1032.20483398,0.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(8657,265.09863281,140.41210938,1034.50488281,0.00000000,179.99450684,90.00000000); //
    CreateDynamicObject(8657,264.64941406,124.27343750,1034.56481934,0.00000000,179.99450684,270.00000000); //
    CreateDynamicObject(8657,264.64941406,124.27343750,1032.20483398,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(8657,250.25000000,115.50585938,1032.20483398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(7191,258.44238281,126.72070312,1030.92004395,0.00000000,90.00000000,90.00000000); //
    CreateDynamicObject(1557,273.52886963,124.78550720,1031.03662109,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1557,276.55151367,124.78550720,1031.01733398,0.00000000,0.00000000,180.00000000); //
    CreateDynamicObject(1723,278.65527344,130.04589844,1031.01733398,0.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(1723,278.65591431,133.54504395,1031.01733398,0.00000000,0.00000000,269.99450684); //
    CreateDynamicObject(2319,276.97894287,129.81425476,1031.01733398,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(638,271.32720947,125.36067963,1031.71435547,0.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(646,276.95895386,125.72653961,1032.43383789,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(646,278.67523193,134.74702454,1032.43383789,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(16637,277.61172485,136.60105896,1032.52526855,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(1567,274.25936890,136.52627563,1031.01733398,0.00000000,0.00000000,70.00000000); //
    CreateDynamicObject(16637,273.27441406,138.25488281,1032.52526855,0.00000000,0.00000000,29.99816895); //
    CreateDynamicObject(16637,279.91281128,136.60105896,1035.02795410,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(16637,273.27441406,138.25488281,1035.02795410,0.00000000,0.00000000,29.99816895); //
    CreateDynamicObject(16637,276.09439087,136.60105896,1035.02795410,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(2514,278.87249756,138.95448303,1031.01733398,0.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(2516,277.09344482,137.27665710,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2524,277.21755981,139.34338379,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2524,276.62042236,139.36007690,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2524,276.03018188,139.34643555,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2184,271.66827393,136.00288391,1031.01733398,0.00000000,0.00000000,14.00000000); //
    CreateDynamicObject(2184,269.32608032,135.97583008,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2184,266.96417236,137.64817810,1031.01733398,0.00000000,0.00000000,320.00000000); //
    CreateDynamicObject(1720,271.69845581,135.29812622,1031.01733398,0.00000000,0.00000000,223.00000000); //
    CreateDynamicObject(1720,267.81051636,135.70649719,1031.01733398,0.00000000,0.00000000,123.00000000); //
    CreateDynamicObject(1714,271.75390625,138.18164062,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1714,268.96902466,138.29743958,1031.01733398,0.00000000,0.00000000,40.00000000); //
    CreateDynamicObject(1805,269.72573853,134.90742493,1031.26635742,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2190,271.43682861,136.32116699,1031.79309082,0.00000000,0.00000000,145.00000000); //
    CreateDynamicObject(2190,267.77816772,137.05354309,1031.79309082,0.00000000,0.00000000,134.00000000); //
    CreateDynamicObject(2201,272.91824341,136.67001343,1031.79309082,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(948,272.00717163,139.42575073,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1807,279.07357788,135.85008240,1031.56555176,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2250,267.40023804,137.56106567,1032.23840332,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2249,270.02502441,136.31713867,1032.46057129,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2247,273.57601929,136.60325623,1032.25744629,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2108,270.62075806,139.35072327,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2108,278.21881104,126.61055756,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2108,269.04998779,125.38230896,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2108,273.90594482,139.02886963,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,266.04623413,139.16490173,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,266.04623413,137.83267212,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,266.04623413,136.48262024,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,266.04623413,135.13262939,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,265.49511719,134.11035156,1022.61645508,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,264.09082031,134.11035156,1022.61645508,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,262.73046875,134.11035156,1022.61645508,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,261.33007812,134.11035156,1022.61645508,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(1523,259.11914062,133.97656250,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,258.48007202,134.11035156,1022.61645508,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,257.09960938,134.11035156,1022.61645508,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,255.74990845,134.11035156,1022.61645508,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(1523,253.55462646,133.97372437,1031.02807617,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,252.84976196,134.11035156,1022.61645508,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,251.54531860,134.11035156,1022.61645508,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,266.04623413,134.67895508,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,266.04623413,129.11849976,1022.61645508,90.00000000,0.00000000,180.00000000); //
    CreateDynamicObject(9339,266.04589844,125.51757812,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,266.04589844,126.91796875,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,266.04589844,128.31835938,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,265.49902344,129.68215942,1022.61645508,90.00000000,90.00000000,179.99450684); //
    CreateDynamicObject(9339,264.15274048,129.68215942,1022.61645508,90.00000000,90.00000000,179.99450684); //
    CreateDynamicObject(9339,262.80175781,129.68164062,1022.61645508,90.00000000,90.00000000,179.99450684); //
    CreateDynamicObject(9339,261.60177612,129.68164062,1022.61645508,90.00000000,90.00000000,179.99450684); //
    CreateDynamicObject(1523,259.40621948,129.73278809,1031.01867676,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,258.70135498,129.68215942,1022.61645508,90.00000000,90.00000000,0.00000000); //
    CreateDynamicObject(9339,257.40118408,129.68164062,1022.61645508,90.00000000,90.00000000,179.99450684); //
    CreateDynamicObject(9339,256.09960938,129.68164062,1022.61645508,90.00000000,185.98439026,84.01013184); //
    CreateDynamicObject(1523,253.90447998,129.75550842,1031.03295898,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,253.19961548,129.68215942,1022.61645508,90.00000000,90.00000000,0.00000000); //
    CreateDynamicObject(9339,251.89923096,129.68215942,1022.61645508,90.00000000,90.00000000,179.99450684); //
    CreateDynamicObject(9339,250.49882507,129.68164062,1022.61645508,90.00000000,90.00000000,179.99450684); //
    CreateDynamicObject(9339,248.40447998,129.68164062,1034.20507812,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,248.40429688,129.68164062,1035.00512695,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,247.94628906,134.12034607,1034.21508789,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,247.94628906,134.12034607,1035.00500488,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(7191,271.92187500,137.91601562,1035.54504395,0.00000000,270.00000000,90.00000000); //
    CreateDynamicObject(7191,271.92187500,133.96875000,1035.54504395,0.00000000,270.00000000,90.00000000); //
    CreateDynamicObject(7191,271.92187500,130.00390625,1035.54504395,0.00000000,270.00000000,90.00000000); //
    CreateDynamicObject(7191,271.90722656,126.11230469,1035.54504395,0.00000000,270.00000000,89.99450684); //
    CreateDynamicObject(8657,250.25976562,127.02050781,1034.56481934,0.00000000,179.99450684,179.99450684); //
    CreateDynamicObject(8657,250.25976562,147.91113281,1032.20483398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,249.14941406,129.68164062,1029.61645508,90.00000000,90.00000000,179.99450684); //
    CreateDynamicObject(9339,247.89941406,129.68164062,1029.61645508,90.00000000,90.00000000,179.99450684); //
    CreateDynamicObject(9339,249.10235596,133.51933289,1029.61645508,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,247.95750427,133.51933289,1029.61645508,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,246.70710754,133.50665283,1029.61645508,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(7191,271.92187500,134.01875305,1036.62243652,0.00000000,90.00000000,90.00000000); //
    CreateDynamicObject(7191,271.92187500,130.05921936,1036.62243652,0.00000000,90.00000000,90.00000000); //
    CreateDynamicObject(7191,271.92187500,126.09999847,1036.62243652,0.00000000,90.00000000,90.00000000); //
    CreateDynamicObject(8657,280.05175781,136.13769531,1037.80480957,0.00000000,0.00000000,179.99450684); //
    CreateDynamicObject(8657,280.05175781,136.13769531,1040.08483887,0.00000000,179.99450684,0.00000000); //
    CreateDynamicObject(8657,264.64941406,124.27343750,1037.80480957,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(8657,264.64941406,124.27343750,1040.08483887,0.00000000,179.99450684,270.00000000); //
    CreateDynamicObject(8657,265.09863281,140.41210938,1040.08483887,0.00000000,179.99450684,90.00000000); //
    CreateDynamicObject(8657,265.09863281,140.41210938,1037.80480957,0.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(8657,250.25000000,147.91113281,1037.80480957,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(8657,250.25000000,115.50585938,1037.80480957,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(8657,250.25000000,124.77246094,1040.08483887,0.00000000,179.99450684,179.99450684); //
    CreateDynamicObject(7191,271.90722656,126.11230469,1041.14501953,0.00000000,270.00000000,89.99450684); //
    CreateDynamicObject(7191,271.90722656,130.03906250,1041.14501953,0.00000000,270.00000000,89.99450684); //
    CreateDynamicObject(7191,271.90722656,133.96875000,1041.14501953,0.00000000,270.00000000,89.99450684); //
    CreateDynamicObject(7191,271.90722656,137.87402344,1041.14501953,0.00000000,270.00000000,89.99450684); //
    CreateDynamicObject(8657,250.25976562,127.02050781,1035.48486328,0.00000000,179.99450684,179.99450684); //
    CreateDynamicObject(9339,256.99121094,129.01660156,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,256.99121094,127.61621094,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,256.99121094,126.26210785,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,256.99121094,125.06172180,1022.61645508,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1998,261.74243164,126.79685974,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2120,260.62567139,127.38066864,1031.65515137,0.00000000,0.00000000,150.00000000); //
    CreateDynamicObject(1723,260.20098877,125.78017426,1031.01733398,0.00000000,0.00000000,180.00000000); //
    CreateDynamicObject(2069,257.39761353,125.28332520,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2069,261.74328613,125.76998901,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(630,265.24707031,125.41998291,1032.04248047,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1714,262.64172363,126.90074158,1031.01733398,0.00000000,0.00000000,257.00000000); //
    CreateDynamicObject(1808,257.50109863,127.33737946,1031.01733398,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(2195,257.75909424,128.90252686,1031.63452148,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2008,263.68994141,127.77590942,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1714,264.29443359,126.98449707,1031.01733398,0.00000000,0.00000000,199.99511719); //
    CreateDynamicObject(1997,256.17144775,128.18888855,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2603,254.66143799,126.28106689,1031.47058105,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(3386,255.91000366,125.44641113,1031.01733398,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(3386,253.24043274,125.40182495,1031.01733398,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(3394,251.86325073,127.69013977,1031.01733398,0.00000000,0.00000000,180.00000000); //
    CreateDynamicObject(2596,251.24365234,126.89910889,1033.40844727,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(2603,260.65878296,138.00090027,1031.47058105,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2603,258.20355225,137.92263794,1031.47058105,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2603,255.46536255,137.91510010,1031.47058105,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2603,252.38821411,137.43295288,1031.47058105,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(2603,252.20697021,135.18989563,1031.47058105,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(2603,264.53030396,135.65974426,1031.47058105,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(2603,264.67126465,138.65588379,1031.47058105,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(2596,256.68106079,139.56596375,1033.90844727,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2596,260.28067017,139.56542969,1033.90844727,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2596,251.35105896,136.28799438,1033.40844727,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(2596,265.19738770,137.12075806,1033.40844727,0.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(630,251.60876465,139.28472900,1032.04248047,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(630,265.12985229,134.61225891,1032.04248047,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1789,256.73379517,139.16134644,1031.57348633,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1808,253.53744507,139.33825684,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1808,262.97042847,139.45669556,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2146,257.57864380,134.96337891,1031.50292969,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(1208,259.51693726,139.30525208,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1805,251.91613770,136.59503174,1031.26635742,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1805,256.38311768,137.90180969,1031.26635742,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1805,259.26693726,138.29899597,1031.26635742,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1805,261.48965454,138.44882202,1031.26635742,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1805,264.01715088,137.60635376,1031.26635742,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2146,271.67739868,126.77465820,1031.50292969,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(1997,267.19277954,126.43895721,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1997,268.09042358,126.51625061,1031.01733398,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2146,267.37371826,128.76472473,1031.50292969,0.00000000,0.00000000,9.00000000); //
    CreateDynamicObject(2639,262.99304199,130.26667786,1031.64501953,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2639,267.32220459,130.94438171,1037.34741211,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2639,257.19500732,133.55265808,1031.64501953,0.00000000,0.00000000,180.00000000); //
    CreateDynamicObject(2370,254.95985413,128.28311157,1036.71972656,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1723,252.86578369,127.49653625,1036.71972656,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(1723,256.06665039,126.25189209,1036.71972656,0.00000000,0.00000000,180.00000000); //
    CreateDynamicObject(1724,257.48333740,128.82057190,1036.71972656,0.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(646,251.22232056,125.30373383,1038.13623047,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,259.45996094,129.82128906,1049.68237305,90.00000000,0.00000000,1.99951172); //
    CreateDynamicObject(9339,260.01074219,130.35351562,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,259.45214844,128.67285156,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,259.45214844,127.27265167,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,259.45214844,125.87109375,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,259.45214844,124.87109375,1049.68237305,90.00000000,0.00000000,1.99951172); //
    CreateDynamicObject(9339,261.41073608,130.35351562,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,262.70996094,130.35351562,1049.68237305,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(1523,271.70605469,130.41210938,1036.71972656,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,265.60995483,130.35351562,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,266.99938965,130.35351562,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,268.39904785,130.35351562,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,270.99325562,130.36669922,1049.68237305,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(1523,263.38964844,130.38183594,1036.72131348,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,269.61230469,130.35620117,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,273.94229126,130.36621094,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,275.33984375,130.36621094,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,276.73983765,130.36621094,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,278.13925171,130.36621094,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,279.53866577,130.36621094,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,269.45278931,125.61431122,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,269.45214844,129.71386719,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,269.45214844,128.31347656,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,269.45214844,127.01367188,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,276.31445312,130.33789062,1041.32727051,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,276.31445312,130.33789062,1039.92724609,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,276.31445312,130.33789062,1039.92724609,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(2184,251.43470764,136.35646057,1036.71972656,0.00000000,0.00000000,330.00000000); //
    CreateDynamicObject(2184,254.10351562,135.16894531,1036.71972656,0.00000000,0.00000000,11.99707031); //
    CreateDynamicObject(2184,256.92086792,136.04023743,1036.71972656,0.00000000,0.00000000,55.00000000); //
    CreateDynamicObject(632,258.87246704,125.41991425,1037.17260742,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1807,258.87298584,129.74699402,1037.26794434,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2245,255.16983032,129.20268250,1037.87536621,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2855,255.56202698,128.38081360,1037.56665039,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2852,254.90383911,128.45666504,1037.56665039,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2190,253.05952454,135.74813843,1037.49548340,0.00000000,0.00000000,120.00000000); //
    CreateDynamicObject(2190,256.20025635,136.00651550,1037.49548340,0.00000000,0.00000000,190.00000000); //
    CreateDynamicObject(2816,257.52880859,137.26055908,1037.49548340,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2852,254.47703552,135.59184265,1037.49548340,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2247,255.54135132,135.76228333,1037.95983887,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2249,252.25752258,136.00140381,1038.16296387,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2250,257.65869141,137.79319763,1037.94079590,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1714,253.08189392,137.28182983,1036.71972656,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1714,255.48013306,137.79646301,1036.71972656,0.00000000,0.00000000,50.00000000); //
    CreateDynamicObject(2350,253.68997192,134.37995911,1037.09191895,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2350,257.61978149,134.98878479,1037.09191895,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2146,259.87011719,138.12597656,1037.20532227,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(1997,261.01229858,138.22570801,1036.71972656,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,263.42434692,139.13766479,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,263.42382812,137.73672485,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,263.42382812,136.36328125,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,263.96582031,134.43945312,1049.68237305,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,263.42382812,135.00128174,1049.68237305,90.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,265.36523438,134.43945312,1049.68237305,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,266.76464844,134.43945312,1049.68237305,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(1523,267.44705200,134.31433105,1036.71972656,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,269.66406250,134.43945312,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,278.13964844,134.43945312,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,271.06347656,134.43945312,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(1523,273.12432861,134.31433105,1036.71972656,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(9339,272.44042969,134.43945312,1049.68237305,90.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,275.33984375,134.43945312,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,276.74023438,134.43945312,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,279.53906250,134.43945312,1049.68237305,90.00000000,0.00000000,270.00000000); //
    CreateDynamicObject(9339,280.51443481,134.45945740,1039.92724609,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(9339,280.51367188,134.45898438,1041.32727051,0.00000000,0.00000000,90.00000000); //
    CreateDynamicObject(638,262.53640747,137.98303223,1037.41674805,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2146,262.17068481,135.25096130,1037.20532227,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(948,251.70739746,139.25090027,1036.71972656,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2606,254.25962830,139.84564209,1038.99084473,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2609,255.65586853,139.46054077,1037.45141602,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2609,256.07962036,139.45455933,1037.45141602,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2608,253.80113220,139.42341614,1037.43115234,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2603,273.72634888,138.20878601,1037.17297363,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2603,267.37109375,138.37109375,1037.17297363,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2603,270.47314453,138.29277039,1037.17297363,0.00000000,0.00000000,0.00000000); //
    CreateDynamicObject(2603,277.78625488,135.77433777,1037.17297363,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(2603,277.77734375,138.00585938,1037.17297363,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(3396,264.30426025,138.09698486,1036.71972656,0.00000000,0.00000000,180.00000000);
    CreateDynamicObject(1789,269.01666260,139.18623352,1037.27587891,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1789,275.22509766,139.27020264,1037.27587891,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1789,264.98925781,137.09082031,1031.57348633,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(1208,271.77951050,139.32022095,1036.71972656,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(7191,271.92187500,137.97999573,1036.62243652,0.00000000,90.00000000,90.00000000);
    CreateDynamicObject(1208,272.45800781,139.32519531,1036.71972656,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2350,277.30230713,137.00936890,1037.09191895,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2350,278.28005981,138.94383240,1037.09191895,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2350,274.59048462,138.66621399,1037.09191895,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2350,271.53549194,138.41181946,1037.09191895,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2350,268.18701172,138.50868225,1037.09191895,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2146,270.29278564,135.33161926,1037.20532227,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(2596,279.08221436,136.91667175,1039.11083984,0.00000000,0.00000000,270.00000000);
    CreateDynamicObject(2596,272.42907715,139.53532410,1039.11083984,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2596,265.42871094,139.53515625,1039.11083984,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2596,269.42871094,139.53515625,1039.11083984,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2603,263.69067383,127.22865295,1037.17297363,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2603,264.76080322,127.22492981,1037.17297363,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3388,266.01550293,125.34756470,1036.71972656,0.00000000,0.00000000,270.00000000);
    CreateDynamicObject(3388,262.56588745,125.35243225,1036.71972656,0.00000000,0.00000000,270.00000000);
    CreateDynamicObject(3392,267.37316895,126.91036224,1036.71972656,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3788,261.60305786,129.61868286,1037.23913574,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1780,261.48852539,125.39748383,1037.87316895,0.00000000,0.00000000,180.00000000);
    CreateDynamicObject(1808,260.00683594,126.38355255,1036.71972656,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(1720,260.28277588,127.03921509,1036.71972656,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(1339,268.60455322,129.74305725,1037.38171387,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2603,272.84848022,126.29890442,1037.17297363,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2603,276.57571411,126.46539307,1037.17297363,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1808,271.99536133,125.15783691,1036.71972656,0.00000000,0.00000000,180.00000000);
    CreateDynamicObject(1805,272.00152588,126.28439331,1036.96875000,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1805,273.63714600,126.13981628,1036.96875000,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1805,275.69741821,126.00019073,1036.96875000,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1805,277.45550537,125.98606110,1036.96875000,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1971,275.50616455,130.21429443,1038.98632812,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2146,270.37820435,128.48249817,1037.20532227,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2361,277.64889526,129.55229187,1036.71972656,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2596,279.16159058,127.17162323,1039.11083984,0.00000000,0.00000000,270.00000000);
    CreateDynamicObject(2596,274.82241821,125.14347076,1039.11083984,0.00000000,0.00000000,180.00000000);
    CreateDynamicObject(630,278.94854736,125.64418793,1037.74487305,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(630,270.31106567,125.77439880,1037.74487305,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2233,252.32987976,125.56327820,1036.71972656,0.00000000,0.00000000,180.00000000);
    CreateDynamicObject(2233,278.84381104,125.28137207,1031.01733398,0.00000000,0.00000000,270.00000000);
    CreateDynamicObject(2886,250.81646729,132.73609924,1038.44299316,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(2886,250.82617188,132.91308594,1032.74877930,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(14774,277.35574341,139.84571838,1039.41979980,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(14774,267.43118286,139.84571838,1039.30187988,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(14774,262.67932129,129.52973938,1033.97717285,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(14774,263.59545898,139.84568787,1034.00549316,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(14774,253.31752014,139.84570312,1033.97387695,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2639,252.36621094,130.26953125,1031.64501953,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2639,275.81604004,130.91871643,1037.34741211,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2639,270.95886230,133.92492676,1037.34741211,0.00000000,0.00000000,180.00000000);
    CreateDynamicObject(2639,265.38681030,133.87112427,1037.34741211,0.00000000,0.00000000,179.99450684);
    CreateDynamicObject(2987,250.56510925293,131.54936218262,1032.2158203125,0.00000000,0.00000000,90.00000000);
    CreateDynamicObject(2987,250.67543029785,131.59466552734,1037.9182128906,0.00000000,0.00000000,90.00000000);
    // -=============================== FBI Exterior ================================- //
    CreateDynamicObject(8417, 900.53, -1033.51, 30.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(966, 935.01, -1031.48, 30.90,   0.00, 0.00, 178.65);
	CreateDynamicObject(5837, 932.35, -1033.18, 32.62,   0.00, 0.00, 270.67);
	fbibarra = CreateDynamicObject(968, 934.95, -1031.48, 31.80,   0.00, 90.00, 358.10);
	// -======================== Yakuza Exterior ==========================- //
	CreateDynamicObject(2098, 300.50, -1154.20, 82.50,   0.00, 0.00, 312.00);
	CreateDynamicObject(9241, 283.40, -1193.37, 81.40,   0.00, 0.00, 223.99);
	CreateDynamicObject(3471, 302.40, -1155.90, 81.20,   0.00, 0.00, 224.00);
	CreateDynamicObject(3471, 298.90, -1152.20, 81.20,   0.00, 0.00, 223.99);
	CreateDynamicObject(9258, 259.50, -1169.10, 82.10,   0.00, 0.00, 352.00);
	CreateDynamicObject(970, 294.70, -1184.60, 80.50,   0.00, 0.00, 314.00);
	CreateDynamicObject(970, 297.60, -1187.60, 80.50,   0.00, 0.00, 314.00);
	CreateDynamicObject(970, 291.80, -1181.60, 80.50,   0.00, 0.00, 314.00);
	CreateDynamicObject(970, 286.00, -1175.60, 80.50,   0.00, 0.00, 313.99);
	CreateDynamicObject(970, 288.90, -1178.60, 80.50,   0.00, 0.00, 313.99);
	CreateDynamicObject(970, 303.50, -1184.80, 80.50,   0.00, 0.00, 223.99);
	CreateDynamicObject(970, 300.50, -1187.70, 80.50,   0.00, 0.00, 223.99);
	CreateDynamicObject(970, 297.00, -1183.80, 80.50,   0.00, 0.00, 223.99);
	CreateDynamicObject(970, 293.30, -1180.20, 80.50,   0.00, 0.00, 223.99);
	CreateDynamicObject(970, 289.60, -1176.40, 80.50,   0.00, 0.00, 223.99);
	CreateDynamicObject(970, 286.00, -1172.70, 80.50,   0.00, 0.00, 223.99);
	CreateDynamicObject(970, 289.00, -1169.80, 80.50,   0.00, 0.00, 223.99);
	CreateDynamicObject(3749, 320.05, -1186.61, 81.12,   0.00, 0.00, 38.58);
	CreateDynamicObject(1215, 298.62, -1182.30, 80.45,   0.00, 0.00, 359.37);
	CreateDynamicObject(1215, 294.94, -1178.77, 80.42,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 291.17, -1174.80, 80.42,   0.00, 0.00, 0.10);
	CreateDynamicObject(1215, 269.48, -1193.01, 82.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 283.00, -1207.19, 82.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 296.56, -1193.95, 82.71,   0.00, 0.00, 0.00);
	CreateDynamicObject(1215, 283.12, -1180.10, 82.72,   0.00, 0.00, 0.00);
	yakuzagate = CreateDynamicObject(980, 321.32, -1188.11, 78.08,   0.00, 0.00, 218.45);
	// -===================== Interior Ambulance ==========================- //
	CreateDynamicObject(1698, 2002.0, 2285.0, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(1698, 2003.36, 2285.0, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(1698, 2004.72, 2285.0, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(1698, 2002.0, 2288.3, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(1698, 2003.36, 2288.3, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(1698, 2004.72, 2288.3, 1010.0, 0.0, 0.0, 0.0);
	CreateDynamicObject(3386, 2001.58, 2285.75, 1010.1, 0.0, 0.0, 180.0);
	CreateDynamicObject(3388, 2001.58, 2284.8, 1010.1, 0.0, 0.0, 180.0);
	CreateDynamicObject(2146, 2003.3, 2286.4, 1010.6, 0.0, 0.0, 0.0);
	CreateDynamicObject(16000, 2001.3, 2281.0, 1007.5, 0.0, 0.0, 270.0);
	CreateDynamicObject(16000, 2005.4, 2281.0, 1007.5, 0.0, 0.0, 90.0);
	CreateDynamicObject(18049, 2006.0, 2279.5, 1013.05, 0.0, 0.0, 90.0);
	CreateDynamicObject(2639, 2005.0, 2285.55, 1010.7, 0.0, 0.0, 90.0);
	CreateDynamicObject(3791, 2005.3, 2288.25, 1012.4, 270.0, 0.0, 90.0);
	CreateDynamicObject(2174, 2001.7, 2286.74, 1010.1, 0.0, 0.0, 90.0);
	CreateDynamicObject(2690, 2001.41, 2287.0, 1011.25, 0.0, 0.0, 90.0);
	CreateDynamicObject(2163, 2001.3, 2286.84, 1011.9, 0.0, 0.0, 90.0);
	CreateDynamicObject(1789, 2005.1, 2284.1, 1010.7, 0.0, 0.0, 270.0);
	CreateDynamicObject(1369, 2001.85, 2283.85, 1010.7, 0.0, 0.0, 90.0);
	CreateDynamicObject(3384, 2001.9, 2288.85, 1011.1, 0.0, 0.0, 180.0);
	CreateDynamicObject(3395, 2005.3, 2288.32, 1010.05, 0.0, 0.0, 0.0);
    CreateDynamicObject(11469, 2008.6, 2294.5, 1010.1, 0.0, 0.0, 90.0);
    CreateDynamicObject(2154, 2001.55, 2289.75, 1010.0, 0.0, 0.0, 90.0);
    CreateDynamicObject(2741, 2001.4, 2289.65, 1012.0, 0.0, 0.0, 90.0);
    CreateDynamicObject(2685, 2001.35, 2289.65, 1011.5, 0.0, 0.0, 90.0);
    CreateDynamicObject(18056, 2005.4, 2290.4, 1011.9, 0.0, 0.0, 180.0);
    CreateDynamicObject(2688, 2001.4, 2283.85, 1012.0, 0.0, 0.0, 90.0);
    CreateDynamicObject(2687, 2005.35, 2286.0, 1012.0, 0.0, 0.0, 270.0);
    CreateDynamicObject(16000, 2006.5, 2290.0, 1020.0, 0.0, 180.0, 180.0);
    CreateDynamicObject(16000, 1991.0, 2283.4, 1016.0, 0.0, 90.0, 0.0);
    CreateDynamicObject(16000, 2015.7, 2283.4, 1016.0, 0.0, 270.0, 0.0);
    CreateDynamicObject(1719, 2005.0, 2284.1, 1010.6, 0.0, 0.0, 270.0);
    CreateDynamicObject(1718, 2005.1, 2284.1, 1010.73, 0.0, 0.0, 270.0);
    CreateDynamicObject(1785, 2005.1, 2284.1, 1010.95, 0.0, 0.0, 270.0);
    CreateDynamicObject(1783, 2005.05, 2284.1, 1010.4, 0.0, 0.0, 270.0);
	/* Cajeros */
	CreateDynamicObject(2754,1269.66125488,-1323.76599121,13.40214443,0.00000000,0.00000000,0.00000000); //object(otb_machine) (4)
	CreateDynamicObject(2754,2823.22656250,-1593.80871582,11.00387192,0.00000000,0.00000000,244.00000000); //object(otb_machine) (5)
	CreateDynamicObject(2754,1589.39196777,-2295.21191406,13.46932220,0.00000000,0.00000000,90.00000000); //object(otb_machine) (6)
	CreateDynamicObject(2754,1591.40454102,-2295.21191406,13.46932220,0.00000000,0.00000000,90.00000000); //object(otb_machine) (7)
	CreateDynamicObject(2754,1593.41723633,-2295.21191406,13.46932220,0.00000000,0.00000000,90.00000000); //object(otb_machine) (8)
	CreateDynamicObject(2754,450.53472900,-1794.50781250,5.43714857,0.00000000,0.00000000,270.00000000); //object(otb_machine) (9)
	CreateDynamicObject(2754,1415.19128418,-1020.33685303,23.73026848,0.00000000,0.00000000,90.00000000); //object(otb_machine) (10)
	CreateDynamicObject(2754,1417.67700195,-1020.33593750,23.73026848,0.00000000,0.00000000,90.00000000); //object(otb_machine) (11)
	// ++
	CreateDynamicObject(971,1025.2795,-1029.2299,32.1016,-0.00000,0.000000,0); // Pay & Spray
	CreateDynamicObject(971,488.2341,-1735.4591,11.1416,-0.00000,0.000000,174); // Pay & Spray
	CreateDynamicObject(971,2071.5410,-1831.4143,13.5469,-0.00000,0.000000,90); // Pay & Spray
	CreateDynamicObject(971,719.8199,-462.4768,16.3359,-0.00000,0.000000,0); // Pay & Spray
	CreateDynamicObject(971,-1904.4561,277.8578,41.0469,-0.00000,0.000000,0); // Pay & Spray
	CreateDynamicObject(1676,1007.3336,-936.4127,42.7581,-0.00000,0.000000,5); // Gas tank in Vinewood
	CreateDynamicObject(1676,1000.6406,-937.1027,42.7581,-0.00000,0.000000,5); // Gas tank in Vinewood
	// 	-= New CarWash System  =-
entrancegate = CreateObject(17951,1911.21130371,-1780.68151855,14.15972233,0.00000000,0.00000000,90.00000000);
exitgate = CreateObject(17951,1911.21130371,-1771.97814941,14.15972233,0.00000000,0.00000000,90.00000000);
CreateObject(1250,1908.84997559,-1783.68945312,13.40625000,0.00000000,0.00000000,90.00000000);
entrancetext = Create3DTextLabel("Nadie está lavando su auto, puedes lavar el tuyo.\nPor: $5 (/lavar)",0x008B00FF,1911.1886,-1784.2952,14.5,50,0,1);
comisaria = CreateObject(3976, 1571.63, -1675.74, 35.68, 360.00, 0.00, 0.09);
	printf("-=============== Objetos Cargados ===============-");
	printf("- CreateDynamicObjetcs [%d]", CountDynamicObjects());
	

	// -============================================== [ Faction Cars ] =========================================- //
	// LSPD (1 - 22)
	AddStaticVehicleEx(596,1601.872924,-1704.370971,5.612636,89.574440,0,1,60000); // Patrulla LS   	1
	AddStaticVehicleEx(596,1601.902221,-1700.465332,5.634525,89.566131,0,1,60000); // Patrulla LS   	2
	AddStaticVehicleEx(596,1601.933105,-1696.409912,5.642260,89.562606,0,1,60000); // Patrulla LS   	3
	AddStaticVehicleEx(596,1601.963134,-1692.478881,5.656129,89.555740,0,1,60000); // Patrulla LS   	4
	AddStaticVehicleEx(596,1595.511840,-1710.769531,5.613651,0.000000,0,1,60000); // Patrulla LS    	5
	AddStaticVehicleEx(596,1591.606079,-1710.771240,5.626485,0.000000,0,1,60000); // Patrulla LS    	6
	//autos modificado
    new autopoli;
    autopoli = 	AddStaticVehicleEx(402,1545.2782,-1676.3499,5.6112,87.3121,0,0,60000); // Patrulla LS       7
    SetVehicleAttachedObject(autopoli,0, 19419, 0.0, -0.3, 0.8, 0.000000, 0.000000, 0.000000);
    new AutoConCosas;
    AutoConCosas = AddStaticVehicleEx(411,1545.4321,-1671.7544,5.6138,91.1411,0,0,60000); // Patrulla LS	8
    SetVehicleAttachedObject(AutoConCosas,0, 19419, 0.0, -0.2, 0.7, 0.000000, 0.000000, 0.000000);
	//fin
	AddStaticVehicleEx(599,1526.548095,-1644.479614,6.056174,179.637084,0,1,60000); // Ranger   		9
	AddStaticVehicleEx(599,1530.429199,-1644.505371,6.124225,179.634948,0,1,60000); // Ranger   		10
	AddStaticVehicleEx(525,1534.434448,-1644.530761,6.133507,179.633880,-1,103,60000); // Ranger   		11
	AddStaticVehicleEx(525,1538.758666,-1644.558349,6.156028,179.631210,-1,103,60000); // Ranger   		12
	AddStaticVehicleEx(523,1567.272338,-1708.937011,5.457219,354.100372,0,1,60000); // HPV 1000 		13
	AddStaticVehicleEx(523,1565.331420,-1708.737304,5.475297,354.107971,0,1,60000); // HPV 1000 		14
	AddStaticVehicleEx(523,1562.516479,-1708.446411,5.508016,354.100280,0,1,60000); // HPV 1000 		15
	AddStaticVehicleEx(427,1571.071044,-1615.492797,13.514673,268.842010,0,1,60000); // Enforcer    	16
	AddStaticVehicleEx(427,1557.802734,-1615.510131,13.514776,269.681549,0,1,60000); // Enforcer    	17
	AddStaticVehicleEx(601,1544.134521,-1609.579345,13.141159,269.321655,0,1,60000); // SWAT Van    	18
	AddStaticVehicleEx(497,1563.660034,-1655.212158,28.589679,88.595161,0,1,60000); // Police Maverick  19
	AddStaticVehicleEx(430,661.1824,-2006.5925,-0.5202,38.5216,-1,-1,60000); //Predator   20
	AddStaticVehicleEx(430,646.9103,-2007.3157,0.0745,354.4583,-1,-1,60000); //Predator   21
	AddStaticVehicleEx(430,635.1070,-2006.1445,-0.1934,354.5684,-1,-1,60000); //Predator   22
	// Transport LS (23 - 34)
	AddStaticVehicleEx(420,1802.108398,-1901.992065,13.182017,359.172454,6,6,60000); // Taxi        23
	AddStaticVehicleEx(420,1802.041625,-1909.239135,13.178486,0.243935,6,6,60000); // Taxi          24
	AddStaticVehicleEx(420,1801.961425,-1916.413452,13.173706,359.274993,6,6,60000); // Taxi        25
	AddStaticVehicleEx(420,1801.870727,-1924.109741,13.170453,358.887084,6,6,60000); // Taxi        26
	AddStaticVehicleEx(420,1780.686523,-1901.657958,13.190039,1.394230,6,6,60000); // Taxi          27
	AddStaticVehicleEx(420,1780.808837,-1909.585815,13.186038,0.924842,6,6,60000); // Taxi          28
	AddStaticVehicleEx(420,1780.813476,-1917.090332,13.165364,359.639434,6,6,60000); // Taxi        29
	AddStaticVehicleEx(420,1780.745849,-1924.819213,13.165236,359.531585,6,6,60000); // Taxi        30
	AddStaticVehicleEx(431,1796.509887,-1903.939697,13.502617,358.146545,6,0,60000); // Bus         31
	AddStaticVehicleEx(431,1796.283325,-1921.651000,13.462456,359.212310,6,0,60000); // Bus         32
	AddStaticVehicleEx(437,1785.929077,-1904.228881,13.526880,359.343902,6,0,60000); // Coach       33
	AddStaticVehicleEx(437,1786.115478,-1920.841186,13.525323,359.975769,6,0,60000); // Coach       34
	// Rent Cars Hospital (35  - 38)
	AddStaticVehicleEx(462, 1189.0740, -1362.4146, 13.1538, 0.0000, 1, 1, 60000); // PCJ-600    35
	AddStaticVehicleEx(462, 1188.9646, -1360.5306, 13.1573, 0.0000, 1, 1, 60000); // PCJ-600    36
	AddStaticVehicleEx(462, 1188.8898, -1364.8148, 13.1487, 0.0000, 1, 1, 60000); // PCJ-600    37
	AddStaticVehicleEx(462, 1188.7474, -1367.1798, 13.1555, 0.0000, 1, 1, 60000); // PCJ-600    38
	// SAMD (39 - 47)
	AddStaticVehicleEx(416,1097.6229,-1328.4508,13.4449,359.6445,3,3,60000); // Ambulancia  	39
	AddStaticVehicleEx(416,1110.9609,-1328.4464,13.4448,1.3679,3,3,60000); // Ambulancia    	40
	AddStaticVehicleEx(416,1123.9703,-1328.4863,13.4420,359.8991,3,3,60000); // Ambulancia      41
	AddStaticVehicleEx(416,1095.5303,-1315.5038,13.8521,269.5015,1,3,60000); // Ambulancia      42
	AddStaticVehicleEx(416,1136.3173,-1338.6797,13.8751,0.5538,1,3,60000); // Ambulancia  		43
	AddStaticVehicleEx(416,1141.5852,-1338.4622,13.7902,1.1260,1,3,60000); // Ambulancia  		44
	AddStaticVehicleEx(596,1131.2094,-1327.8986,13.3697,0.5494,3,1,60000); // Patrulla LS 		45
	AddStaticVehicleEx(596,1134.8329,-1309.3987,13.3042,359.3751,3,1,60000); // Patrulla LS 	46
	AddStaticVehicleEx(563,1162.8477,-1309.0045,32.2224,271.4168,1,3,60000); // Raindance 47
	// La Hermandad (48 - 54)
 	AddStaticVehicleEx(534,1877.6788,-2015.3239,13.2868,179.8463,79,79,60000); // Remington		48
	AddStaticVehicleEx(468,1877.7257,-2025.4558,13.2032,179.8737,79,79,60000); // Sanchez       49
	AddStaticVehicleEx(474,1877.6980,-2035.0145,13.2044,179.5377,79,79,60000); // Hermes        50
	AddStaticVehicleEx(466,1888.5956,-2015.0223,13.2861,179.9924,79,79,60000); // Gleendade     51
	AddStaticVehicleEx(545,1888.5200,-2025.0873,13.2044,179.8876,79,79,60000); // Hermes        52
	AddStaticVehicleEx(567,1888.4783,-2035.2653,13.2046,179.9893,79,79,60000); // Savanna       53
	AddStaticVehicleEx(468,1884.3893,-2012.8998,13.2907,179.4729,79,79,60000); // Sanchez     	54
	// Groove Street (55 - 60)
    AddStaticVehicleEx(567,2514.033203,-1666.834228,13.196761,146.604492,16,16,60000); // Savanna   55
	AddStaticVehicleEx(567,2507.031494,-1684.601928,13.144980,238.152038,16,16,60000); // Savanna   56
	AddStaticVehicleEx(492,2499.072265,-1650.737060,13.307857,152.592132,16,16,60000); // Greenwood  57
	AddStaticVehicleEx(492,2514.673828,-1679.253051,13.382580,44.357257,16,16,60000); // Greenwood   58
	AddStaticVehicleEx(517,2470.653320,-1653.038696,13.294920,116.369949,16,16,60000); // Majestic  59
	AddStaticVehicleEx(517,2458.179443,-1671.415893,13.353937,233.656723,16,16,60000); // Majestic  60
	// Latin Kings (61 - 66)
	AddStaticVehicleEx(482,2278.9849,-1038.3428,50.0680,132.7227,6,1,60000); //Burrito 61
	AddStaticVehicleEx(600,2275.7161,-1034.9799,50.6073,137.0734,6,1,60000); //Picador 62
	AddStaticVehicleEx(474,2272.0862,-1031.4424,51.6779,136.5865,6,1,60000); //Hermes 63
	AddStaticVehicleEx(567,2270.1992,-1046.1663,49.8699,46.8058,6,1,60000); //Savanna 64
	AddStaticVehicleEx(517,2270.3054,-1054.2903,49.0315,52.5484,6,1,60000); //Majestic 65
	AddStaticVehicleEx(475,2251.9172,-1037.6565,53.9322,46.5032,6,1,60000); //Sabre 66
	// Mecánicos LS (67 - 77)
	AddStaticVehicleEx(525,1555.3035,-2179.1509,13.5171,270.00000000,-1,103,60000); //Tow Truck    	67
	AddStaticVehicleEx(525,1555.2161,-2173.4900,14.0628,270.00000000,-1,103,60000); //Tow Truck    	68
	AddStaticVehicleEx(525,1554.9871,-2167.0168,13.9075,270.00000000,-1,103,60000); //Tow Truck    	69
	AddStaticVehicleEx(525,1554.6331,-2161.5227,13.5194,270.00000000,-1,103,60000); //Tow Truck     70
	AddStaticVehicleEx(525,1554.9430,-2155.3367,14.4679,270.00000000,-1,103,60000); //Tow Truck     71
	AddStaticVehicleEx(525,1584.1494,-2166.8643,13.8328,178.00000000,-1,103,60000); //Tow Truck     72
	AddStaticVehicleEx(552,1677.33898926,-2159.23535156,13.33159542,90.00000000,96,-1,60000); //Utility         73
	AddStaticVehicleEx(552,1677.33886719,-2162.98535156,13.33159542,90.00000000,96,-1,60000); //Utility         74
	AddStaticVehicleEx(552,1677.33886719,-2166.49023438,13.33159542,90.00000000,96,-1,60000); //Utility         75
	AddStaticVehicleEx(554,1677.54821777,-2173.87011719,13.74968719,90.00000000,96,53,60000); //Yosemite        76
	AddStaticVehicleEx(554,1677.54785156,-2170.52099609,13.74968719,90.00000000,96,53,60000); //Yosemite        77
	// Moteros (78-83)
	AddStaticVehicleEx(463,668.3020,-470.8735,15.8733,90.00000000,0,3,60000); //Freeway		78
	AddStaticVehicleEx(463,668.3607,-467.8112,15.8615,90.00000000,0,1,60000); //Freeway		79
	AddStaticVehicleEx(463,668.0578,-464.3808,15.8735,90.00000000,0,1,60000); //Freeway    	80
	AddStaticVehicleEx(463,668.4078,-461.6642,15.8745,90.00000000,0,1,60000); //Freeway       81
	AddStaticVehicleEx(463,668.2161,-458.4044,15.8766,0.00000000,0,1,60000); //Freeway       82
	AddStaticVehicleEx(463,668.6605,-474.0596,15.8763,0.00000000,0,1,60000); //Freeway 		83
	// Ballas (84-87)
	AddStaticVehicleEx(517,2234.8367,-1418.8125,23.7646,90.7258,147,1,60000); //landstaker  		84
    AddStaticVehicle(412,2240.7791,-1412.6093,23.7481,88.2374,147,1); // ballas
	AddStaticVehicleEx(492,2245.5205,-1418.7866,23.6926,91.3633,147,1,60000); //Sentinel		86
    AddStaticVehicleEx(585,2251.1768,-1412.7244,23.4998,88.7860,147,147,60000); //Camioneta
 	// Mafia Italiana (88 - 98)
	AddStaticVehicleEx(487,1156.0237,-2019.9352,69.1782,95.6593,54,29,60000); //Maverick	    	89
	AddStaticVehicleEx(560,1259.286010,-2012.548950,59.145359,269.972534,0,0,60000); // Sultan      90
	AddStaticVehicleEx(560,1259.231079,-2015.927124,59.147296,268.529296,0,0,60000); // Sultan      91
	AddStaticVehicleEx(580,1258.436401,-2039.223754,59.259601,271.035675,0,0,60000); // Stafford    92
	AddStaticVehicleEx(580,1268.647216,-2039.133544,58.958675,90.153411,0,0,60000); // Stafford     93
	AddStaticVehicleEx(579,1268.526733,-2017.254272,59.105506,91.021903,0,0,60000); // Huntley      94
	AddStaticVehicleEx(409,1265.397583,-2059.459228,59.089286,268.428039,0,0,60000); // Stetch      95
	AddStaticVehicleEx(521,1259.4476,-2020.8646,59.0056,268.7068,0,3,60000); //FCR-900				96
	AddStaticVehicleEx(521,1259.6389,-2025.1091,59.0002,268.0077,0,3,60000); //FCR-900				97
	AddStaticVehicleEx(454,555.79998779,-2032.50000000,0.00000000,86.00000000,-1,-1,60000); //Tropic
    AddStaticVehicleEx(493,663.50000000,-1990.40002441,0.00000000,84.00000000,-1,-1,60000); //Jetmax
	// Mafia Yakuza (99 - 105)
	AddStaticVehicleEx(487,284.7756,-1191.6740,83.4046,313.3094,1,1,60000); //Maverick      100
	AddStaticVehicleEx(421,300.1776,-1184.2240,80.7965,313.4090,1,1,60000); // Washington   101
	AddStaticVehicleEx(421,289.3760,-1173.1157,80.7945,314.8468,1,1,60000); // Washington   102
	AddStaticVehicleEx(409,286.1261,-1159.3438,80.7120,223.2264,1,1,60000); // Stetch       103
	AddStaticVehicleEx(477,296.4089,-1180.6697,80.6678,312.9961,1,1,60000); // ZR-350       104
	AddStaticVehicleEx(477,292.6966,-1176.8223,80.6680,312.6440,1,1,60000); // ZR-350       105
	AddStaticVehicleEx(454,554.70001221,-2046.19995117,0.00000000,86.00000000,-1,-1,60000); //Tropic
	// Mafia Rusa (106 - 114)
	AddStaticVehicleEx(487,753.0640,-1260.0903,13.7613,87.4251,3,3,60000); // HelicopteroBratva 108
	AddStaticVehicleEx(587,682.820617,-1298.060913,13.343244,59.179347,3,3,60000); // Euros 	109
	AddStaticVehicleEx(587,682.641357,-1303.870361,13.343059,59.926479,3,3,60000); // Euros 	110
	AddStaticVehicleEx(560,660.4418,-1294.5135,13.3939,180.278610,3,3,60000); // Sultan			111
	AddStaticVehicleEx(500,660.5356,-1277.7412,13.4050,180.059020,3,3,60000); // Mesa			112
	AddStaticVehicleEx(409,660.3193,-1286.2423,13.3451,179.893463,3,3,60000); // Stetch    		113
	AddStaticVehicleEx(521,680.255493,-1256.782348,13.162422,119.174400,3,3,60000); // FCR-900  114
	AddStaticVehicleEx(521,680.837829,-1260.290527,13.159105,119.163414,3,3,60000); // FCR-900 	115
	AddStaticVehicleEx(454,553.40002441,-2060.19995117,0.00000000,86.00000000,-1,-1,60000); //Tropic
	//Gobierno (115 - 119)
	AddStaticVehicleEx(487,1352.80151367,-1646.44958496,18.08156967,0.00000000,-1,133,60000); //Maverick 	118
	AddStaticVehicleEx(409,1363.14257812,-1658.98486328,13.40606880,270.00000000,-1,133,60000) //Stretch  	119
	AddStaticVehicleEx(445,1361.64257812,-1650.87536621,13.29033661,270.00000000,-1,133,60000) //Admiral 	120
	AddStaticVehicleEx(445,1361.64257812,-1643.37890625,13.29033661,270.00000000,-1,133,60000) //Admiral 	121
	AddStaticVehicleEx(409,1363.2819,-1635.4894,13.1828,270.00000000,-1,133,60000) //Stretch                122
	// CNN Vehículos (120 - 124)
	AddStaticVehicleEx(582,740.687255,-1334.894653,13.601684,230.120437,2,1,60000); // News Van 125
	AddStaticVehicleEx(582,746.701599,-1334.121826,13.597522,230.621170,2,1,60000); // News Van 126
	AddStaticVehicleEx(582,753.755615,-1333.973510,13.593895,231.211013,2,1,60000); // News Van 127
	AddStaticVehicleEx(488,743.5662,-1372.6359,25.9022,358.8606,2,1,60000); // San News 			128
	AddStaticVehicleEx(493,665.20001221,-1960.69995117,0.00000000,130.00000000,-1,-1,60000); //Jetmax
    //HireCar LS Motos Ayuntamiento (125 - 132)
   	AddStaticVehicleEx(462,1516.9426,-1740.9094,13.1280,0.6564,1,1,60000); //PCJ-600
	AddStaticVehicleEx(462,1519.6926,-1740.9188,13.1390,0.6819,1,1,60000); //PCJ-600
	AddStaticVehicleEx(462,1522.4230,-1740.9619,13.1282,0.6272,1,1,60000); //PCJ-600
	AddStaticVehicleEx(462,1524.9800,-1740.9399,13.1283,0.6530,1,1,60000); //PCJ-600
	AddStaticVehicleEx(462,1440.0135,-1740.8601,13.1388,0.6501,1,1,60000); //PCJ-600
	AddStaticVehicleEx(462,1437.4845,-1740.8759,13.1280,0.6526,1,1,60000); //PCJ-600
	AddStaticVehicleEx(462,1434.8259,-1740.8284,13.1260,0.6557,1,1,60000); //PCJ-600
	AddStaticVehicleEx(462,1432.4387,-1740.9076,13.1295,0.6557,1,1,60000); //PCJ-600
	//HireCar LS Carros Aeropuerto (133 - 147)
	AddStaticVehicleEx(445,1556.423461,-2211.869628,13.429610,0.052339,1,1,60000); // Admiral    139
	AddStaticVehicleEx(401,1552.788085,-2212.119140,13.334337,359.923370,1,1,60000); // Bravura  140
	AddStaticVehicleEx(527,1549.522216,-2212.081054,13.270193,0.344349,1,1,60000); // Cadrona    141
	AddStaticVehicleEx(542,1546.203002,-2211.995849,13.297778,0.231546,1,1,60000); // Clover     142
	AddStaticVehicleEx(585,1542.961303,-2211.763671,13.141497,0.857080,1,1,60000); // Emperor    143
	AddStaticVehicleEx(526,1539.667480,-2211.760986,13.321266,359.911529,1,1,60000); // Fortune  144
	AddStaticVehicleEx(426,1536.454589,-2211.585693,13.297459,0.266878,1,1,60000); // Premier    145
	AddStaticVehicleEx(516,1533.163940,-2212.053710,13.388772,1.013363,1,1,60000); // Nebula     146
	AddStaticVehicleEx(421,1529.885009,-2212.194335,13.437132,0.048456,1,1,60000); // Washington 147
	AddStaticVehicleEx(540,1526.460571,-2211.934814,13.415851,359.411499,1,1,60000); // Vincen   148
	AddStaticVehicleEx(481,1665.1927,-1721.3252,13.1464,358.3296,1,1,60000); // BICI  149
	AddStaticVehicleEx(481,1666.9301,-1721.3503,13.1464,0.4800,1,1,60000); // BICI  150
	AddStaticVehicleEx(481,1668.3821,-1721.4498,13.1441,1.2688,1,1,60000); // BICI    151
	AddStaticVehicleEx(481,1669.9792,-1721.4805,13.1432,357.3879,1,1,60000); // BICI   152
	AddStaticVehicleEx(481,1671.6835,-1721.4163,13.1437,2.5635,1,1,60000); // BICI      153
	// Practise Car LS (148 - 152)
	AddStaticVehicleEx(421,2065.262207,-1918.597290,13.429368,1.480812,1,1,60000); // Washington    154
	AddStaticVehicleEx(421,2062.163085,-1918.677490,13.849746,1.480680,1,1,60000); // Washington    155
	AddStaticVehicleEx(421,2058.549560,-1918.771118,13.833255,1.480680,1,1,60000); // Washington    156
	AddStaticVehicleEx(421, 2117.3010, -2434.1685, 14.0596, 163.0440, 1, 1,60000); // Washington    157
	AddStaticVehicleEx(453, 2498.0916, -2268.2861, 0.4534, 267.2552, 1, 1,60000); //Squalo
	// Train (153 - 156)
	AddStaticVehicleEx(538,1700.7551,-1953.6531,14.8756,200.0,-1,-1, 30000); // Train 160-163
	// Sweeper (157 - 162)
	AddStaticVehicleEx(574,1668.6692,-1896.1118,13.2720,268.0269,26,26,30000); // Barrendero 164
	AddStaticVehicleEx(574,1668.7383,-1891.4990,13.2720,270.7320,26,26,30000); // Barrendero 165
	AddStaticVehicleEx(574,1668.7280,-1886.8180,13.2720,268.9658,26,26,30000); // Barrendero 166
	AddStaticVehicleEx(574,1648.0117,-1886.5215,13.2906,88.000,26,26,30000); // Barrendero 	 167
	AddStaticVehicleEx(574,1648.1605,-1891.7621,13.2899,88.000,26,26,30000); // Barrendero 	 168
	AddStaticVehicleEx(574,1648.1470,-1895.4053,13.2896,88.000,26,26,30000); // Barrendero 	 169
	// Planes (163 - 167)
	AddStaticVehicleEx(519,1422.52661133,-2442.94995117,15.22200012,180.00000000,53,1,30000); //Shamal  170
	AddStaticVehicleEx(553,1471.54858398,-2440.02978516,15.78968716,182.00000000,1,53,30000); //Nevada  171
	AddStaticVehicleEx(519,1451.6981,-2631.3005,14.4640,268.6503,1,1,60000); // Shamal  				172
	AddStaticVehicleEx(553,1566.4611,-2643.8928,14.4698,11.7026,6,1,60000); // Nevada   				173
	AddStaticVehicleEx(577,2003.3944,-2452.6799,14.4688,127.0967,1,1,60000); // AT400   			174
	// Narcotraficantes (168 - 182)
	AddStaticVehicleEx(487,-1185.8750,-1192.1776,129.3959,268.3604,0,0,60000); // maverick 		175
	AddStaticVehicleEx(532,-1004.9100,-1059.9202,130.1992,91.9248,0,0,60000); // Combine  176
	AddStaticVehicleEx(532,-1005.0146,-1048.2922,130.1916,91.9248,0,0,60000); // Combine  177
	AddStaticVehicleEx(532,-1004.5343,-1036.0684,130.1953,91.9248,0,0,60000); // Combine  178
	AddStaticVehicleEx(442,-1166.8616,-1216.8577,129.0304,315.3459,0,0,60000); // Romero 179
	AddStaticVehicleEx(442,-1144.6677,-1217.1616,129.0493,246.9406,0,0,60000); // Romero  180
	AddStaticVehicleEx(442,-1123.1732,-1156.5939,129.0621,153.0297,0,0,60000); // Romero  181
	AddStaticVehicleEx(521,-1068.6520,-1179.4266,128.7794,241.1949,0,0,60000); // FCR-900  182
	AddStaticVehicleEx(521,-1037.7664,-1176.7258,128.7872,49.6653,0,0,60000); // FCR-900  183
	AddStaticVehicleEx(521,-1035.9081,-1197.5005,128.7833,38.8553,0,0,60000); // FCR-900  184
	AddStaticVehicleEx(521,-1024.5863,-1161.8444,128.7841,117.9461,0,0,60000); // FCR-900 185
	AddStaticVehicleEx(560,-1023.1431,-1136.9429,128.9222,90.0000,0,0,60000); // Sultan   186
	AddStaticVehicleEx(560,-1023.1059,-1140.7585,128.9239,90.0000,0,0,60000); // Sultan  187
	AddStaticVehicleEx(560,-1023.2950,-1143.8713,128.9243,90.0000,0,0,60000); // Sultan 188
	AddStaticVehicleEx(560,-1023.1422,-1147.3424,128.9236,90.0000,0,0,60000); // Sultan 189
	// Pizza Bike's (183 - 189)
	AddStaticVehicleEx(448,2098.1230,-1793.0132,12.9839,90.0772,3,6,60000); // Pizza Bike 190
	AddStaticVehicleEx(448,2098.2832,-1795.6893,12.9883,91.5060,3,6,60000); // Pizza Bike 191
	AddStaticVehicleEx(448,2098.3613,-1798.0608,12.9877,91.7122,3,6,60000); // Pizza Bike 192
	AddStaticVehicleEx(448,2098.3203,-1800.7795,12.9845,85.5136,3,6,60000); // Pizza Bike 193
	AddStaticVehicleEx(448,2098.2366,-1813.5295,12.9579,87.1491,3,6,60000); // Pizza Bike 194
	AddStaticVehicleEx(448,2098.3098,-1816.9644,12.9802,86.0768,3,6,60000); // Pizza Bike 195
	AddStaticVehicleEx(448,2098.3701,-1821.2499,12.9777,94.8276,3,6,60000); // Pizza Bike 196
	// SAEM Cars (190 - 215)
	AddStaticVehicleEx(470,2786.89990234,-2456.00000000,13.80000019,91.99951172,-1,-1,60000); //Patriot	   197
	AddStaticVehicleEx(470,2795.60009766,-2455.89990234,13.80000019,91.99951172,-1,-1,60000); //Patriot    198
	AddStaticVehicleEx(468,2779.10009766,-2425.39990234,13.39999962,0.00000000,16,1,60000); //Sanchez      199
	AddStaticVehicleEx(468,2776.80004883,-2425.30004883,13.39999962,0.00000000,16,1,60000); //Sanchez      200
	AddStaticVehicleEx(471,2776.50000000,-2408.69995117,13.19999981,180.00000000,37,16,60000); //Quad      201
	AddStaticVehicleEx(471,2782.30004883,-2408.69995117,13.19999981,180.00000000,37,16,60000); //Quad      202
	AddStaticVehicleEx(563,2712.60009766,-2351.39990234,31.20000076,89.99450684,4,16,60000); //Raindance   203
	AddStaticVehicleEx(425,2732.19995117,-2351.39990234,31.20000076,89.99499512,-1,-1,60000); //Hunter     204
	AddStaticVehicleEx(563,2692.00000000,-2350.89941406,31.20000076,90.00000000,4,16,60000); //Raindance   205
	AddStaticVehicleEx(520,2645.00000000,-2380.69921875,31.00000000,0.00000000,-1,-1,60000); //Hydra       206
	AddStaticVehicleEx(476,2670.80004883,-2379.10009766,31.20000076,0.00000000,4,16,60000); //Rustler      207
	AddStaticVehicleEx(476,2656.89990234,-2379.39990234,31.20000076,0.00000000,4,16,60000); //Rustler      208
	AddStaticVehicleEx(520,2632.00000000,-2380.60009766,31.00000000,0.00000000,-1,-1,60000); //Hydra       209
	AddStaticVehicleEx(425,2732.10009766,-2380.00000000,31.20000076,89.98950195,-1,-1,60000); //Hunter     210
	AddStaticVehicleEx(548,2687.39990234,-2379.50000000,32.20000076,90.00000000,-1,-1,60000); //Cargobob   211
	AddStaticVehicleEx(548,2708.69995117,-2379.60009766,32.20000076,90.00000000,-1,-1,60000); //Cargobob   212
	AddStaticVehicleEx(470,2779.30004883,-2456.19995117,13.80000019,91.99401855,-1,-1,60000); //Patriot    213
	AddStaticVehicleEx(433,2794.39990234,-2417.89990234,14.19999981,92.00000000,-1,-1,60000); //Barracks   214
	AddStaticVehicleEx(433,2782.69995117,-2417.80004883,14.19999981,90.00000000,-1,-1,60000); //Barracks   215
	AddStaticVehicleEx(432,2793.00000000,-2494.60009766,13.69999981,90.00000000,-1,-1,60000); //Rhino      216
	AddStaticVehicleEx(432,2781.19995117,-2494.60009766,13.69999981,90.00000000,-1,-1,60000); //Rhino      217
	AddStaticVehicleEx(472,2768.39990234,-2583.10009766,0.00000000,270.00000000,-1,-1,60000); //Coastguard 218
	AddStaticVehicleEx(472,2757.30004883,-2583.10009766,0.00000000,270.00000000,-1,-1,60000); //Coastguard 219
	AddStaticVehicleEx(472,2746.00000000,-2583.00000000,0.00000000,270.00000000,-1,-1,60000); //Coastguard 220
	AddStaticVehicleEx(473,2723.39990234,-2583.19995117,0.00000000,268.00000000,-1,-1,60000); //Dinghy 221
	AddStaticVehicleEx(472,2733.50000000,-2583.19995117,0.00000000,270.00000000,-1,-1,60000); //Coastguard 222
	// FBI Cars (216 - 225)
	AddStaticVehicleEx(487,914.3138,-1015.5195,111.2309,1.2336,0,0,60000);   //Maverick         223
	AddStaticVehicleEx(490,882.9553,-1051.1324,31.7305,270.6666,-1,-1,60000); //FBI Rancher     224
    AddStaticVehicleEx(490,883.0836,-1046.2347,31.7312,269.8616,-1,-1,60000); //FBI Rancher     225
    AddStaticVehicleEx(490,883.1074,-1041.3933,31.7304,269.5601,-1,-1,60000); //FBI Rancher     226
    AddStaticVehicleEx(490,900.2916,-1052.3723,31.7092,271.2446,-1,-1,60000); //FBI Rancher     227
    AddStaticVehicleEx(490,910.4120,-1052.0814,31.6745,272.0134,-1,-1,60000); //FBI Rancher     228
    AddStaticVehicleEx(507,921.4523,-1052.0695,31.4261,271.3322,0,0,60000);   //Elegant         229
    AddStaticVehicleEx(507,931.7161,-1051.5729,31.4254,272.1486,0,0,60000);   //Elegant         230
    AddStaticVehicleEx(595,598.7766,-2003.6339,0.0178,355.9137,-1,-1,60000); //Launch
	AddStaticVehicleEx(595,610.0480,-2004.6071,-0.2140,354.7550,-1,-1,60000); //Launch
    // Hitman Cars (226 - 228)
    AddStaticVehicleEx(560,-261.5185,-2146.1267,28.7624,136.6198,0,0,60000); //Sultan      233
    AddStaticVehicleEx(560,-259.3938,-2154.0054,28.7965,99.7559,0,0,60000); //Sultan      234
    AddStaticVehicleEx(482,-258.4031,-2164.0430,29.1948,103.0483,0,0,60000); //Burrito     235
    //Autos de Corte Judicial (229 - 232)
    AddStaticVehicleEx(405,1522.9946,-1549.1818,13.2936,270.3260,1,1,60000); //Sentinel
    AddStaticVehicleEx(507,1522.8800,-1552.3274,13.2930,270.3498,1,1,60000); //Elegant
    AddStaticVehicleEx(580,1522.4932,-1555.5957,13.2949,270.1446,1,1,60000); //Stafford
    AddStaticVehicleEx(579,1522.6097,-1558.4924,13.2941,270.6899,1,1,60000); //Huntley
    // Camioneros Cars (233 - 240)
    AddStaticVehicleEx(456,2217.5012,-2606.6030,13.6472,179.9134,-1,-1,60000); //Mule 242
    AddStaticVehicleEx(456,2217.3772,-2615.5388,13.6405,179.7724,-1,-1,60000); //Mule 243
    AddStaticVehicleEx(498,2217.3928,-2625.3667,13.6407,179.8098,-1,-1,60000); //Mule 244
    AddStaticVehicleEx(498,2203.3933,-2641.7988,13.6408,270.5010,-1,-1,60000); //Mule 245
    AddStaticVehicleEx(499,2222.2065,-2667.6165,13.6347,5.1526,-1,-1,60000); //Mule 246
    AddStaticVehicleEx(499,2193.8635,-2647.7454,13.6406,269.7316,-1,-1,60000); //Mule 247
    AddStaticVehicleEx(414,2222.4839,-2678.4028,13.6348,359.3468,-1,-1,60000); //Mule 246
    AddStaticVehicleEx(414,2203.0740,-2634.8933,13.6406,269.8508,-1,-1,60000); //Mule 247
    // Pescadores Barcos (241 - 244)
    AddStaticVehicleEx(453,645.90002441,-2021.69995117,0.00000000,175.99548340,-1,-1,60000); //Reefer
	AddStaticVehicleEx(453,634.70001221,-2020.80004883,0.00000000,175.99548340,-1,-1,60000); //Reefer
	AddStaticVehicleEx(453,609.20001221,-2018.80004883,0.00000000,176.00000000,-1,-1,60000); //Reefer
	AddStaticVehicleEx(453,597.09997559,-2018.09997559,0.00000000,176.00000000,-1,-1,60000); //Reefer
	// Piratas del Asfalto (245 - 251)
	AddStaticVehicleEx(470,1067.2734,-288.4244,73.7953,180.4567,10,10,60000); // Burrito
    AddStaticVehicleEx(468,1070.8168,-288.3434,73.7960,178.8188,10,10,60000); // Sanchez
    AddStaticVehicleEx(468,1074.0359,-288.2414,73.7924,179.1789,10,10,60000); // Sanchez
    AddStaticVehicleEx(482,1077.3967,-288.2927,73.7902,177.8422,10,10,60000); // Burrito
    AddStaticVehicleEx(568,1088.8794,-317.4892,73.7965,125.2607,10,10,60000); // Huntley
    AddStaticVehicleEx(579,1032.5238,-309.3335,73.7949,179.2606,10,10,60000); // Huntley
    AddStaticVehicleEx(443,1016.1971,-323.4321,74.1905,225.3353,10,10,60000); // Meverick
	// Rent Boats (252 - 257)
	AddStaticVehicleEx(484,572.09997559,-2007.80004883,0.00000000,176.00000000,-1,-1,60000); //Marquis
	AddStaticVehicleEx(454,557.20001221,-2004.40002441,0.00000000,86.00000000,-1,-1,60000); //Tropic
	AddStaticVehicleEx(493,633.90002441,-1956.00000000,0.00000000,174.00000000,-1,-1,60000); //Jetmax
	AddStaticVehicleEx(446,610.00000000,-1954.00000000,-1.00000000,174.00000000,-1,-1,60000); //Squalo
	AddStaticVehicleEx(452,621.29998779,-1956.00000000,0.00000000,174.00000000,-1,-1,60000); //Speeder
	AddStaticVehicleEx(454,556.40002441,-2018.19995117,0.00000000,86.00000000,-1,-1,60000); //Tropic
	//-=========================================== [][][] ==================================================- //
	for(new i; i<VV; i++)
    {
        new string[32];
        format(string, 128, "LS - %d",i);
    	SetVehicleNumberPlate(i, string);
    	SetVehicleToRespawn(i);
    }
	for(new c = VV; c < sizeof(CarInfo); c++)
	{
		AddStaticVehicleEx(CarInfo[c][cModel],CarInfo[c][cLocationx],CarInfo[c][cLocationy],CarInfo[c][cLocationz]+1.0,CarInfo[c][cAngle],CarInfo[c][cColorOne],CarInfo[c][cColorTwo],60000);
        SetVehicleParamsEx(c,0,0,0,CarInfo[c][cLock],0,0,0);
        if(CarInfo[c][cOwned] == 0)
        {
        	SetVehicleNumberPlate(c, "For Sale");
        	SetVehicleVirtualWorld(c, 0);
        	CarInfo[c][cBattery] = 0;
        	CarInfo[c][cVehTime] = 1999999999;
        	CarInfo[c][cGPS] = 0;
		}
		else
		{
		    SetVehicleNumberPlate(c, CarInfo[c][cPlate]);
		    SetVehicleVirtualWorld(c, 5);
		}
		SetVehicleToRespawn(c);
	}
	// -========================= Dynamic Pickups ========================- //
	/*    Police LA     */
	CreateDynamicPickup(1314, 1, 267.5095,87.0759,1001.0391); // arrestar LSPD
	CreateDynamicPickup(1314, 1, 200.7091,168.4553,1003.0234); // arrestar FBI
	CreateDynamicPickup(1314, 1, 625.9482,854.0344,-90.2031); // arrestar2 SAEM
	CreateDynamicPickup(1318, 1, 242.7591,66.4315,1003.6406); // Inside PD elevator
    CreateDynamicPickup(1318, 1, 1524.5724,-1677.8043,6.2188); // PD Tunnel
    CreateDynamicPickup(1318, 1, 1557.7257,-1675.2711,28.3955); // PD roof
    CreateDynamicPickup(1318, 1, 1579.9940,-1634.2922,13.5626); // camaras
	/*      Umbrella  + Hitman  */
	CreateDynamicPickup(1239, 1, 251.0016,118.2015,1003.2188); // Contrato
    CreateDynamicPickup(1313, 1, 1425.2998,-1291.2107,13.5560); // Hitman
    CreateDynamicPickup(1239, 1, -282.7598,-2174.3972,28.6580); // Hitman
	/*      SAMUR       */
	CreateDynamicPickup(1318, 1, -2647.8711,539.6345,48.0835); // Exit Hospital
	CreateDynamicPickup(1318, 1, -2662.2495,537.6510,48.0843, 0); // Elevator LS
	CreateDynamicPickup(1239, 1, -2639.9487,535.6438,51.6134); // Equipo
	CreateDynamicPickup(1239, 1, 1161.8463,-1328.4821,31.4967); // Ascensor terraza
	/*          Other ENTER / EXITS     */
 	CreateDynamicPickup(1239, 1, 1615.2629,-2160.2664,13.6281); // Equipo mecanicos
	CreateDynamicPickup(1239, 1, -2659.7708,506.9668,48.0847); // seguro ls
	CreateDynamicPickup(1239, 1, 663.9432,-568.8129,16.3433); // FARMACIA INFO
    CreateDynamicPickup(1318, 1, 2105.2844,-1806.5475,13.5547); // Pizzeria LS
    CreateDynamicPickup(1239, 1, 379.1396,-114.2661,1001.4922); // Tomarpizza
   	CreateDynamicPickup(1318, 1, 154.2457,-1946.2103,5.1346); // Faro ENTER
   	CreateDynamicPickup(1318, 1, 154.1186,-1949.6292,47.8750); // Faro EXIT
   	CreateDynamicPickup(1239, 1, -2665.0129,535.0582,48.0791); // Ascensor Planta 2-3
   	CreateDynamicPickup(1239, 1, 994.3551,-1296.4821,13.5469); // JOB Tren
	CreateDynamicPickup(1239, 1, 1957.3217,-2183.6399,13.5469); // JOB Piloto
   	CreateDynamicPickup(1239, 1, 1616.0295,-1897.1339,13.5491); // JOB Vendedor moviles
	CreateDynamicPickup(1239, 1, 378.6049,-119.5969,1001.4922); // JOB Pizzero
	CreateDynamicPickup(1239, 1, 893.6022,-2488.9248,3098.3235); //JOB Pescador
	CreateDynamicPickup(1239, 1, 2215.5657,-2661.1208,13.5469); // JOB Camionero
	CreateDynamicPickup(1239, 1, 1070.6956,-1861.3844,13.5857); // JOB Guardaespaldas
	CreateDynamicPickup(1239, 1, 1649.5122,-1578.7310,13.5319); // JOB Detective
   	CreateDynamicPickup(1239, 1, 2634.9543,-2351.2449,30.5923); // Misil 1
   	CreateDynamicPickup(1239, 1, 2752.9141,-2351.3301,31.0923); // Misil 2
   	pMatI = CreateDynamicPickup(1279, 2, 2825.5139,-1518.7112,12.0470); // MAT-LOAD I
   	pMatII = CreateDynamicPickup(1279, 2, 2281.5518,-2364.5908,13.5469); // MAT-LOAD II
   	pMatIII = CreateDynamicPickup(1279, 2, 1086.5568,-2074.6069,59.0720); // MAT-LOAD III
	/*      Info & Ayuda & Points       */
	CreateDynamicPickup(1239, 1, -2355.8621,914.9895,93.8007); // Bowling
	CreateDynamicPickup(1239, 1, -2355.6140,910.4491,93.8007); // Bowling
	CreateDynamicPickup(1239, 1, -2355.9583,905.1354,93.8007); // Bowling
	CreateDynamicPickup(1239, 1, 364.4181,186.8598,1014.1875); // Autoescuela EXAMEN CAr
	CreateDynamicPickup(1239, 1, 1790.4347,-1591.3114,13.4938); // Boleto VIP
	CreateDynamicPickup(1239, 1, 2556.3853,-1296.8981,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 2543.2500,-1296.3975,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 2542.9377,-1290.5266,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 2556.0679,-1290.1639,1044.1250); // FABRICAR ARMAS
	CreateDynamicPickup(1239, 1, 1623.6274,-2150.6238,13.6528); // Equipo Mecanico
	CreateDynamicPickup(1239, 1, 366.6122,158.6483,1008.3828); // Equipo Gobierno
	/* Pickups mapas información */
	CreateDynamicPickup(1239, 1, 1181.4065,-1318.3972,13.6281);
	CreateDynamicPickup(1239, 1, 772.0750,-1327.3168,13.5469);
	CreateDynamicPickup(1239, 1, 1813.9435,-1901.8436,13.5730);
	CreateDynamicPickup(1239, 1, 1639.5374,-2187.5317,13.5469);
	CreateDynamicPickup(1239, 1, 1839.1881,-1421.8048,13.5625);
	CreateDynamicPickup(1239, 1, 1193.3491,-1156.8507,23.8864);
	CreateDynamicPickup(1239, 1, 456.6184,-1493.9646,31.0939);
	CreateDynamicPickup(1239, 1, 1451.2942,-1026.9141,23.8281);
	CreateDynamicPickup(1239, 1, 2089.0627,-1823.5455,13.5469);
	CreateDynamicPickup(1239, 1, 1718.7406,-1865.7048,13.5723);
	/* Pickup carwash */
	CreateDynamicPickup(1239, 1, 1909.8049,-1783.8279,13.3828);
	
	

	printf("HZ-RP: %d Pickups Cargados",CountDynamicPickups());

	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
	}
	// ===================- Non-Stopable Timers
	synctimer = SetTimer("SyncUp", 60000, 1);
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	camtimer = SetTimer("CamionTimer", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	accountstimer = SetTimer("SaveAccounts", 300000, 1);
	globaltimer = SetTimer("SaveGlobal", 450000, 1);
	//timevehtimer = SetTimer("TimerVeh", 480000, 1);
	checkgastimer = SetTimer("CheckGas", RunOutTime, 1);
	disease = SetTimer("DiseaseSystem", 60000, 1);
	LifeTimer = SetTimer("CheckVida", 1500, 1);
	KeysTimer = SetTimer("Tiempo1",100,1);

	for(new i = 0; i<MAX_PLAYERS; i++)
	{
	    Tutorial[i] = TextDrawCreate(310.000000, 174.000000, "~r~Titulo~w~~n~Capacidad Capacidad Capacidad Capacidad Capacidad Capacidad Capacidad");
		TextDrawAlignment(Tutorial[i], 2);
		TextDrawBackgroundColor(Tutorial[i], 255);
		TextDrawFont(Tutorial[i], 1);
		TextDrawLetterSize(Tutorial[i], 0.419999, 1.200000);
		TextDrawColor(Tutorial[i], -1);
		TextDrawSetOutline(Tutorial[i], 1);
		TextDrawSetProportional(Tutorial[i], 1);
	
		RegDraw[i] = TextDrawCreate(190.000000, 367.000000, "~n~Sexo:  ~r~Masculino          ~w~Edad: ~r~29~n~~n~~w~Origen: ~r~Argentina    ~w~Estilo: ~r~Pandilla1");
		TextDrawBackgroundColor(RegDraw[i], 255);
		TextDrawFont(RegDraw[i], 1);
		TextDrawLetterSize(RegDraw[i], 0.320000, 1.200000);
		TextDrawColor(RegDraw[i], -1);
		TextDrawSetOutline(RegDraw[i], 1);
		TextDrawSetProportional(RegDraw[i], 1);
		TextDrawUseBox(RegDraw[i], 1);
		TextDrawBoxColor(RegDraw[i], 70);
		TextDrawTextSize(RegDraw[i], 400.000000, 110.000000);

	    Taximeter[i] = TextDrawCreate(209.000000, 431.000000,"  A Pagar ~g~999$ ~w~- Tarifa: ~g~7$");
		TextDrawBackgroundColor(Taximeter[i], 255);
		TextDrawFont(Taximeter[i], 2);
		TextDrawLetterSize(Taximeter[i], 0.400000, 1.000000);
		TextDrawColor(Taximeter[i], -1);
		TextDrawSetOutline(Taximeter[i], 0);
		TextDrawSetProportional(Taximeter[i], 1);
		TextDrawSetShadow(Taximeter[i], 1);
		TextDrawUseBox(Taximeter[i], 1);
		TextDrawBoxColor(Taximeter[i], 255);
		TextDrawTextSize(Taximeter[i], 457.000000, -30.000000);
	}

	RegInfo = TextDrawCreate(194.000000, 353.000000, "Informacion del personaje");
	TextDrawBackgroundColor(RegInfo, -1);
	TextDrawFont(RegInfo, 0);
	TextDrawLetterSize(RegInfo, 0.500000, 1.799999);
	TextDrawColor(RegInfo, 255);
	TextDrawSetOutline(RegInfo, 1);
	TextDrawSetProportional(RegInfo, 1);
	return 1;
}

public SyncUp()
{
    SyncTime();
    DollahScoreUpdate();

	PayDayLeft -= 1;
	if(PayDayLeft == 0)	PayDay();

	Loop(i, MAX_PLAYERS)
	{
		if(AFK[i] > 1) AFK[i] --;
	}
}

public SyncTime()
{
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		ghour = tmphour;
		if (realtime)
		{
			SetWorldTime(tmphour);
		}
		if(tmphour == 10 || tmphour == 15 ||tmphour == 20 || tmphour == 3)
		{
			new string[80];
            format(string, sizeof(string), "{2F99B5}Noticias de la Loteria: {FFFFFF}Hemos empesado la elección de la loteria.");
	        OOCOff(COLOR_WHITE, string);
	        new rand = random(51);
	        if(rand == 0) { rand += 1; }
	        Lotto(rand);
		}
 	}
}

public SaveAccounts()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))	OnPlayerUpdateTime(i);
    }
    SetTimer("CheckSuciedad", 60000, 0);
    SetTimer("CheckMusculos", 75000, 0);
    SetTimer("CheckHambre", 40000, 0);
    SetTimer("CheckPeso", 55000, 0);
    SetTimer ("CheckDinero", 60000, 0);
	return 1;
}

function SaveGlobal()
{
    UpdateCars();
    UpdateBizz();
    UpdateHouses();
    SaveFunds();
    SaveTrunk();
    return 1;
}

function Ectasy(i)
{
    new Float:cx, Float:cy, Float:cz, string[128];	GetPlayerPos(i, cx, cy, cz);
	if(UsingEctasy[i] > 0)
	{
        UsingEctasy[i] -= 1;
 		switch(UsingEctasy[i])
   		{
     		case 285: { format(string, sizeof(string),"%s dice: Vivo en un lugar paralelo a la realidad.", PlayerName(i));  Message(i, COLOR_FADE, string); GetPlayerPos(i, InceptionPos[i][0],InceptionPos[i][1],InceptionPos[i][2]); }
			case 280: { format(string, sizeof(string),"Voz desconocida dice: ¿ Cuánto tiempo %s, verdad ?", PlayerName(i));  Message(i, COLOR_FADE, string); }
			case 275: { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ No me recuerdas, soy yo ... ?"); }
			case 270: { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ No me respondes ... que mal educado ... ?"); }
			case 260: { Message(i, COLOR_FADE, "Voz desconocida dice: Veo, que ... has crecido ..."); }
			case 250: { Message(i, COLOR_FADE, "Voz desconocida dice: Has aceptado pactar, conmigo. Verdad?"); }
			case 240: { Message(i, COLOR_FADE, "Voz desconocida dice: Estás en lo cierto pero ... pactar conmigo tiene sus inconvenientes"); }
			case 230: { Message(i, COLOR_FADE, "Voz desconocida dice: Pero ... veo que tu los has aceptado."); }
			case 220: { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ No te gusta tu realidad, verdad ?"); }
			case 210: { Message(i, COLOR_FADE, "Voz desconocida dice: Yo te ofrezco una, pero producto de tu imaginación."); }
			case 200: { Message(i, COLOR_FADE, "Voz desconocida dice: ¿ Aceptas ?"); }
			case 195: { SetPlayerWeather(i, 250); }
			case 190: { Message(i, COLOR_FADE, "Voz desconocida dice: Es normal tu miedo... lo tomaré como un Sí!"); }
			case 180: { Message(i, COLOR_FADE, "Voz desconocida dice: Muahahaha! Intenta salir del laberinto de tu subconciente amigo."); }
			case 170: { Message(i, COLOR_FADE, "Voz suave dice: No! No camines! No intentes salir de aquí! No podrás!"); }
			case 160: { Message(i, COLOR_FADE, "Voz suave dice: Solo puedes salir si consigues devolverme a la vida!"); }
			case 150: { Message(i, COLOR_FADE, "Voz suave dice: Para eso, necesitas mi alma! Encuentrala, porfavor!"); }
			case 140: { Message(i, COLOR_FADE, "Voz suave dice: Guíate por tu intuición, piensa en lo real!"); }
			case 130: { Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha! Nunca saldrás de aqui!"); }
			case 125: { SetPlayerWeather(i, 19); }
			case 110: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha!");}
			case 108: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha!");}
			case 106: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Muahahahaahahahaaha!");}
			case 104: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hahahahaaha!");}
			case 102: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Atrapado en tu realidad ficticia!");}
			case 100: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Moriraas!");}
			case 96: { SetPlayerPos(i, cx+100, cy+50, cz+3); }
			case 95: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hhaahhahaa!"); SetPlayerPos(i, cx+100, cy+50, cz+3);}
			case 94: { SetPlayerPos(i, cx+100, cy+50, cz+3); Message(i, COLOR_FADE, "Voz desconocida dice: Hasta nunca ... !"); SetPlayerPos(i, cx+100, cy+50, cz+3);}
			case 93: { SetPlayerWeather(i, 2009); SetPlayerPos(i, cx+100, cy+50, cz+3); }
			case 92: { SetPlayerPos(i, cx+100, cy+50, cz+3); }
			case 60: { format(string, sizeof(string),"%s dice: He de volver a la realidad, ahora!", PlayerName(i));  Message(i, COLOR_FADE, string); }
			case 10: { format(string, sizeof(string),"%s dice: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaahhhhh!", PlayerName(i));  Message(i, COLOR_FADE, string); }
			case 9: { SetPlayerWeather(i, 150); }
		}
	}
	if(UsingEctasy[i] == 0 && EctasyEffect[i] == 1 && UsingDrugs[i] == 1)
	{
	    KillTimer(DrugTimer[i]),
		GText(i, "~w~Efecto ~y~extasis ~n~~w~pasado", 5000, 1);
  		UsingDrugs[i] = 0;
		SetPlayerWeather(i, DefaultWeather);
		UsingEctasy[i] = 0;
  		EctasyEffect[i] = 0
    	SetPlayerPos(i, InceptionPos[i][0],InceptionPos[i][1],InceptionPos[i][2]);
	    SetPlayerVirtualWorld(i, 0);
	}
	return 1;
}

function SpeedEffectEnd(playerid)
{
    SetPlayerStats(playerid);
	GText(playerid, "~w~Efecto ~p~speed ~n~~w~pasado", 5000, 1);
    UsingDrugs[playerid] = 0;
    KillTimer(DrugTimer[playerid]);
    return 1;
}

function GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}
	
public PayDay()
{
    TillTimer();
	new string[68];
	new account, interest, rent, key, secur, checks;
	PayDayLeft = 60;
	for(new i ; i < MAX_PLAYERS; i++)
	{
        if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
				account = PlayerInfo[i][pAccount];
				key = PlayerInfo[i][pPhousekey];
				rent = PlayerInfo[i][pRent];
				if(PlayerInfo[i][pDonateT] == 1) checks = 2000;
				else checks = 1000;
	   			account += checks;
				interest = PlayerInfo[i][pAccount]/20000;
				PlayerInfo[i][pAccount] = account+interest;
				Tax += TaxValue;
			    PlayerInfo[i][pAccount] -= TaxValue;
				switch(PlayerInfo[i][pSeguro])
				{
	    			case 0: secur = 0;
	    			case 1: secur = 200;
 				}
 				PlayerInfo[i][pAccount] -= secur;
 				Fondos[SAMUR] += secur;
 				if(key != 9999)
				{
					if(strcmp(PlayerName(i), HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > PlayerInfo[i][pAccount])
					{
		   				HouseInfo[key][hRooms] += 1;
						PlayerInfo[i][pPhousekey] = 9999;
						Message(i, COLOR_WHITE, "No puedes pagar el alquiler del cuarto, despídete.");
						PlayerInfo[i][pRent] = 0;
						rent = 0;
					}
					HouseInfo[key][hRentabil] = HouseInfo[key][hRentabil]+rent;
				}
				PlayerInfo[i][pAccount] -= rent;
				new ebill = 20;
				if(PlayerInfo[i][pPhousekey] != 9999)
				{
    				PlayerInfo[i][pAccount] -= ebill;
				}
				else
				{
					ebill = 0;
				}
				Message(i, COLOR_ASKQ, "|___ Estado Bancario ___|");
				format(string, sizeof(string), "  Pago: $%d   Impuestos: -$%d", checks, TaxValue);
				Message(i, COLOR_WHITE, string);
				format(string, sizeof(string), "  Gastos de Domicilio: -$%d", ebill+rent);
				Message(i, COLOR_GRAD1, string);
				format(string, sizeof(string), "  Seguro Medico: -$%d", secur);
				Message(i, COLOR_GRAD2, string);
				format(string, sizeof(string), "  Interés $%d", interest);
				Message(i, COLOR_GRAD2, string);
				format(string, sizeof(string), "  Gastos totales: $%d", TaxValue + ebill + rent + secur);
				Message(i, COLOR_GRAD3, string);
				format(string, sizeof(string), "  Beneficios totales: $%d", checks+interest-ebill-TaxValue-rent-secur);
				Message(i, COLOR_GRAD3, string);
				Message(i, 0xB6B6B6FF, "|--------------------------------------|");
				format(string, sizeof(string), "  Antiguo Balance: %d$", PlayerInfo[i][pAccount] - checks - interest + ebill + TaxValue + rent + secur);
				Message(i, 0x00711DFF, string);
				format(string, sizeof(string), "  Nuevo Balance: %d$", PlayerInfo[i][pAccount]);
				Message(i, 0x00CC00FF, string);
				
				//////////PAGAS A FACCION/////////////// POR LUCAS_NECK
				 if(PlayerInfo[i][pMember] == 1)
               {
                if(PlayerInfo[i][pRank] <= 1)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $200");
                       SendClientMessage(i, COLOR_WHITE, "Por ser policia de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 200);
                   }
                   else if(PlayerInfo[i][pRank] <= 3)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $500");
                       SendClientMessage(i, COLOR_WHITE, "Por ser policia de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 500);
                   }
                 else if(PlayerInfo[i][pRank] <= 5)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $600");
                       SendClientMessage(i, COLOR_WHITE, "Por ser policia de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 600);
                   }
                   else if(PlayerInfo[i][pRank] >= 6)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $800");
                       SendClientMessage(i, COLOR_WHITE, "Por ser policia de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 800);
                   }
               }

               if(PlayerInfo[i][pLeader] == 1 )
               {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "Te han acreditado $1000");
                       SendClientMessage(i, COLOR_WHITE, "Por ser policia de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 1000);
}

                                            ///////////////////////////////////////////

				if(PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pMember] == 24)
               {
                if(PlayerInfo[i][pRank] <= 1)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $200");
                       SendClientMessage(i, COLOR_WHITE, "Por ser FBI/Militar de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 200);
                   }
                   else if(PlayerInfo[i][pRank] <= 2)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $300");
                       SendClientMessage(i, COLOR_WHITE, "Por ser FBI/Militar de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 300);
                   }
                 else if(PlayerInfo[i][pRank] <= 3)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $400");
                       SendClientMessage(i, COLOR_WHITE, "Por ser FBI/Militar de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 400);
                   }
                   else if(PlayerInfo[i][pRank] >= 5)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $500");
                       SendClientMessage(i, COLOR_WHITE, "Por ser FBI/Militar de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 500);
                   }
               }
               if(PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pLeader] == 24)
               {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "Te han acreditado $1000");
                       SendClientMessage(i, COLOR_WHITE, "Por ser FBI/Militar de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 1000);
}
                       ///////////////////////////////////////////

				/*if(PlayerInfo[i][pMember] == 25)
               {
                if(PlayerInfo[i][pRank] <= 1)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $900");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Abogado de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 500);
                   }
                   else if(PlayerInfo[i][pRank] <= 2)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $1000");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Fiscal de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 1000);
                   }
                 else if(PlayerInfo[i][pRank] <= 3)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $1500");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Juez de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 1500);
                   }
			   }
               if(PlayerInfo[i][pLeader] == 25)
               {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "Te han acreditado $2000");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Juez Supremo de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 2000);

                                              ///////////////////////////////////////////

				 if(PlayerInfo[i][pMember] == 16)
               {
                if(PlayerInfo[i][pRank] <= 1)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $900");
                       SendClientMessage(i, COLOR_WHITE, "Por ser del Gobierno de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 900);
                   }
                   else if(PlayerInfo[i][pRank] <= 2)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $1000");
                       SendClientMessage(i, COLOR_WHITE, "Por ser del Gobierno de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 1000);
                   }
                 else if(PlayerInfo[i][pRank] <= 4)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $1500");
                       SendClientMessage(i, COLOR_WHITE, "Por ser del Gobierno de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 1500);
                   }
			   }
               if(PlayerInfo[i][pLeader] == 16)
               {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "Te han acreditado $2000");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Presidente de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 2000);*/


                                      ////////////////////////////////////////////////

                       				if(PlayerInfo[i][pMember] == 4)
               {
                if(PlayerInfo[i][pRank] <= 1)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $200");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Medico de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 200);
                       }
                   else if(PlayerInfo[i][pRank] <= 3)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $300");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Medico de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 300);
                   }
                   else if(PlayerInfo[i][pRank] <= 4)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $400");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Medico de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 400);
                   }
                 else if(PlayerInfo[i][pRank] <= 5)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $600");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Medico de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 600);
                   }
			   }
               if(PlayerInfo[i][pLeader] == 4)
               {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "Te han acreditado $900");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Jefe Medico de Los Santos");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 900);
}

                       ////////////////////////////////////////////////

               /* if(PlayerInfo[i][pMember] == 15 || PlayerInfo[i][pMember] == 17)
               {
                if(PlayerInfo[i][pRank] <= 1)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $700");
                       SendClientMessage(i, COLOR_WHITE, "Por ser rango 1");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 700);
                       }
                   else if(PlayerInfo[i][pRank] <= 3)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $850");
                       SendClientMessage(i, COLOR_WHITE, "Por ser rango 3");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 850);
                   }
                   else if(PlayerInfo[i][pRank] <= 4)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $1000");
                       SendClientMessage(i, COLOR_WHITE, "Por ser rango 4");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 1000);
                   }
                   }
                 else if(PlayerInfo[i][pRank] <= 5)
                   {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "El jefe te acredito $1500");
                       SendClientMessage(i, COLOR_WHITE, "Por ser rango 5");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 1500);
                   }
			   }
               if(PlayerInfo[i][pLeader] == 15 || PlayerInfo[i][pLeader] == 17)
               {
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       SendClientMessage(i, COLOR_WHITE, "Te han acreditado $2000");
                       SendClientMessage(i, COLOR_WHITE, "Por ser Jefe");
                       SendClientMessage(i, COLOR_RED, "|-------------------------------------------------------|");
                       GivePlayerMoney(i, 2000);*/

                    ///////////////////////////////////////////////////////////////////////
                       

  				format(string, sizeof(string), "~h~~g~Dia de paga, gracias por preferirnos!");
				GameTextForPlayer(i, string, 5000, 1);
				cNicotina[i] = 0;	cEnergysil[i] = 0;	cSIDA[i] = 0;	cCancer[i] = 0;		cEpilepsia[i] = 0;
				PlayerInfo[i][pRob] = 0;
				//PlayerInfo[i][pMusculoso] = 0;
				PlayerInfo[i][pConnectTime] += 1;
				PlayerInfo[i][pExp] += 1;
				PlayerInfo[i][pSuciedad] += 5;
				//PlayerInfo[i][pHambre] += 2;
				//PlayerInfo[i][pPeso] += 1;
				PlayerInfo[i][pContract] -= 1;
				if(DobleOn == 1) PlayerInfo[i][pExp] += 1;
				if(TripleOn == 1) PlayerInfo[i][pExp] += 2;
				if(Advertencia_Debe[i]==1)
				{
				SendClientMessage(i, COLOR_LIGHTRED, "Usted fallo en pagar su deuda, estara uno segundos en la prisión.");
				GameTextForPlayer(i, "~r~Atrapado!", 2000, 1);
				SetPosEx(i,197.5159,174.6245,1003.0234,3.1802,3,0);
				PlayerInfo[i][pJailed] = 3
				PlayerInfo[i][pJailTime] = 240;
				ResetPlayerWeapons(i);
				ResetPlayerMoney(i);
				PlayerInfo[i][pBusqueda] = 0;
				SetPlayerWantedLevel(i, 0);
				format(string, sizeof(string), "Usted es encarcelado por %d segundos. Fianza: Deuda con el Estado", PlayerInfo[i][pJailTime]);
				SendClientMessage(i, COLOR_LIGHTBLUE, string);
				Advertencia_Debe[i] = 0;
                   }
				}
			}
		}
	PayDayLeft = 60;
	return 1;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}

public OnPlayerRegister(playerid, password[])
{
    if(IsPlayerConnected(playerid))
	{
		new PlayerFile[64], playername3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername3, sizeof(playername3));
		format(PlayerFile, sizeof(PlayerFile), "users/%s.ini", playername3);
		new
			INI:PlayerAcc = INI_Open( PlayerFile );
			strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 24);
			INI_WriteString(PlayerAcc, "Key", PlayerInfo[playerid][pKey]);
			INI_Close(PlayerAcc);
	}
	return 1;
}

public OnPlayerUpdateTime(playerid)
{
	if(gPlayerLogged[playerid] == 1)
	{
 		new string[128], string3[64], playername3[MAX_PLAYER_NAME];

		GetPlayerName(playerid, playername3, sizeof(playername3));

		format(string3, sizeof(string3), "users/%s.ini", playername3);

		new INI:PlayerAcc = INI_Open( string3 );

			INI_WriteString( PlayerAcc, "Key", 			PlayerInfo[playerid][pKey]);
			INI_WriteInt( PlayerAcc, "Level", 			PlayerInfo[playerid][pLevel]);
            INI_WriteInt( PlayerAcc, "Contrato", 			PlayerInfo[playerid][pContract]);
			INI_WriteInt( PlayerAcc, "AdminCP",       	PlayerInfo[playerid][pAdminCP]);
			INI_WriteInt( PlayerAcc, "Facciones",       PlayerInfo[playerid][pFacciones]);
			INI_WriteInt( PlayerAcc, "Helper",      	PlayerInfo[playerid][pHelper]);
			INI_WriteInt( PlayerAcc, "ConnectedTime",   PlayerInfo[playerid][pConnectTime]);
			INI_WriteInt( PlayerAcc, "Registered",      PlayerInfo[playerid][pReg]);
			INI_WriteInt( PlayerAcc, "Sex",             PlayerInfo[playerid][pSex]);
			INI_WriteInt( PlayerAcc, "Age",             PlayerInfo[playerid][pAge]);
			INI_WriteInt( PlayerAcc, "Origin",          PlayerInfo[playerid][pOrigin]);
			INI_WriteInt( PlayerAcc, "Walk",            PlayerInfo[playerid][pWalk]);
			INI_WriteInt( PlayerAcc, "Respect",         PlayerInfo[playerid][pExp]);
			INI_WriteInt( PlayerAcc, "Money",           GetPlayerMoney(playerid));
			INI_WriteInt( PlayerAcc, "Bank",            PlayerInfo[playerid][pAccount]);
            INI_WriteInt( PlayerAcc, "Cheques",         PlayerInfo[playerid][pCheques]);
            INI_WriteInt( PlayerAcc, "Kills",           PlayerInfo[playerid][pKills]);
            INI_WriteInt( PlayerAcc, "Deaths",          PlayerInfo[playerid][pDeaths]);
            INI_WriteInt( PlayerAcc, "Arrested",        PlayerInfo[playerid][pArrested]);
            INI_WriteInt( PlayerAcc, "LottoNr",         PlayerInfo[playerid][pLottoNr]);
            INI_WriteInt( PlayerAcc, "Job",             PlayerInfo[playerid][pJob]);
            INI_WriteInt( PlayerAcc, "Jailed",          PlayerInfo[playerid][pJailed]);
            INI_WriteInt( PlayerAcc, "JailTime",        PlayerInfo[playerid][pJailTime]);
            INI_WriteInt( PlayerAcc, "Materiales",      PlayerInfo[playerid][pMats]);
            INI_WriteInt( PlayerAcc, "Drogas",          PlayerInfo[playerid][pDrugs]);
            INI_WriteInt( PlayerAcc, "Speed",           PlayerInfo[playerid][pSpeed]);
            INI_WriteInt( PlayerAcc, "Ectasy",          PlayerInfo[playerid][pEctasy]);
            INI_WriteInt( PlayerAcc, "Ritalin",         PlayerInfo[playerid][pRitalin]);
            INI_WriteInt( PlayerAcc, "Heroina",         PlayerInfo[playerid][pHeroina]);
            INI_WriteInt( PlayerAcc, "Marihuana",       PlayerInfo[playerid][pMarihuana]);
            INI_WriteInt( PlayerAcc, "Leader",          PlayerInfo[playerid][pLeader]);
            INI_WriteInt( PlayerAcc, "Member",          PlayerInfo[playerid][pMember]);
            INI_WriteInt( PlayerAcc, "Rank",            PlayerInfo[playerid][pRank]);
            INI_WriteInt( PlayerAcc, "Char",            PlayerInfo[playerid][pChar]);
            	GetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
            INI_WriteFloat( PlayerAcc, "Health",		PlayerInfo[playerid][pHealth]);
            	GetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
            INI_WriteFloat( PlayerAcc, "Armour",		PlayerInfo[playerid][pArmour]);
            	PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
            INI_WriteInt( PlayerAcc, "Int",             PlayerInfo[playerid][pInt]);
            	PlayerInfo[playerid][pVirWorld] = GetPlayerVirtualWorld(playerid);
			INI_WriteInt( PlayerAcc, "VirWorld",        PlayerInfo[playerid][pVirWorld]);
            INI_WriteInt( PlayerAcc, "Team",            PlayerInfo[playerid][pTeam]);
            INI_WriteInt( PlayerAcc, "Model",           PlayerInfo[playerid][pModel]);
            INI_WriteInt( PlayerAcc, "PhoneNr",         PlayerInfo[playerid][pPnumber]);
            INI_WriteInt( PlayerAcc, "Minutes",         PlayerInfo[playerid][pMinutes]);
            INI_WriteInt( PlayerAcc, "MTexto",          PlayerInfo[playerid][pMTexto]);
            INI_WriteInt( PlayerAcc, "Ipod",            PlayerInfo[playerid][pIpod]);
            INI_WriteInt( PlayerAcc, "Car",             PlayerInfo[playerid][pPcarkey]);
            INI_WriteInt( PlayerAcc, "Car2",            PlayerInfo[playerid][pPcarkey2]);
            INI_WriteInt( PlayerAcc, "TimeCar",         PlayerInfo[playerid][pTimeCar]);
            INI_WriteInt( PlayerAcc, "TimeCar2",        PlayerInfo[playerid][pTimeCar2]);
            INI_WriteInt( PlayerAcc, "House",           PlayerInfo[playerid][pPhousekey]);
            INI_WriteInt( PlayerAcc, "Negocio",         PlayerInfo[playerid][pPbizzkey]);
   			GetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
			INI_WriteFloat( PlayerAcc, "Pos_x",         PlayerInfo[playerid][pPos_x]);
			INI_WriteFloat( PlayerAcc, "Pos_y",         PlayerInfo[playerid][pPos_y]);
			INI_WriteFloat( PlayerAcc, "Pos_z",         PlayerInfo[playerid][pPos_z]);
			INI_WriteInt( PlayerAcc, "CarLic",          PlayerInfo[playerid][pCarLic]);
			INI_WriteInt( PlayerAcc, "FlyLic",          PlayerInfo[playerid][pFlyLic]);
			INI_WriteInt( PlayerAcc, "BoatLic",         PlayerInfo[playerid][pBoatLic]);
			INI_WriteInt( PlayerAcc, "GunLic",          PlayerInfo[playerid][pGunLic]);
			INI_WriteInt( PlayerAcc, "Gafas",           PlayerInfo[playerid][pGafas]);
			INI_WriteInt( PlayerAcc, "Tutorial",        PlayerInfo[playerid][pTut]);
			INI_WriteString( PlayerAcc, "Antecedente1",	PlayerInfo[playerid][pAntecedente1]);
        	INI_WriteString( PlayerAcc, "Antecedente2",	PlayerInfo[playerid][pAntecedente2]);
        	INI_WriteString( PlayerAcc, "Antecedente3",	PlayerInfo[playerid][pAntecedente3]);
        	INI_WriteString( PlayerAcc, "Note1", 		PlayerInfo[playerid][pNote1]);
        	INI_WriteString( PlayerAcc, "Note2", 		PlayerInfo[playerid][pNote2]);
        	INI_WriteString( PlayerAcc, "Note3", 		PlayerInfo[playerid][pNote3]);
        	INI_WriteString( PlayerAcc, "Note4", 		PlayerInfo[playerid][pNote4]);
        	INI_WriteString( PlayerAcc, "Note5", 		PlayerInfo[playerid][pNote5]);
        	INI_WriteString( PlayerAcc, "SMS1", 		PlayerInfo[playerid][pSMS_1]);
        	INI_WriteString( PlayerAcc, "SMS2", 		PlayerInfo[playerid][pSMS_2]);
        	INI_WriteString( PlayerAcc, "SMS3", 		PlayerInfo[playerid][pSMS_3]);
        	INI_WriteString( PlayerAcc, "SMS4", 		PlayerInfo[playerid][pSMS_4]);
        	INI_WriteString( PlayerAcc, "SMS5", 		PlayerInfo[playerid][pSMS_5]);
        	INI_WriteInt( PlayerAcc, "Lighter",         PlayerInfo[playerid][pLighter]);
        	INI_WriteInt( PlayerAcc, "Cigarettes",      PlayerInfo[playerid][pCigarettes]);
            INI_WriteInt( PlayerAcc, "Mascara",         PlayerInfo[playerid][pMask]);
        	INI_WriteInt( PlayerAcc, "Locked",          PlayerInfo[playerid][pLocked]);
        	INI_WriteInt( PlayerAcc, "Advertencias",    PlayerInfo[playerid][pAdvertencias]);
        	INI_WriteInt( PlayerAcc, "AdminAdver",      PlayerInfo[playerid][pAdminAdver]);
        	INI_WriteInt( PlayerAcc, "DNI",             PlayerInfo[playerid][pDNI]);
        	INI_WriteString( PlayerAcc, "MSN",          PlayerInfo[playerid][pMSN]);
        	INI_WriteString( PlayerAcc, "Estado",       PlayerInfo[playerid][pEstado]);
        	INI_WriteInt( PlayerAcc, "Weapon",          PlayerInfo[playerid][pWeapon]);
        	INI_WriteInt( PlayerAcc, "Ammo",            PlayerInfo[playerid][pAmmo]);
        	INI_WriteInt( PlayerAcc, "Weapon2",         PlayerInfo[playerid][pWeapon2]);
        	INI_WriteInt( PlayerAcc, "Ammo2",           PlayerInfo[playerid][pAmmo2]);
        	INI_WriteInt( PlayerAcc, "Weapon3",         PlayerInfo[playerid][pWeapon3]);
        	INI_WriteInt( PlayerAcc, "Ammo3",           PlayerInfo[playerid][pAmmo3]);
        	INI_WriteInt( PlayerAcc, "Weapon4",         PlayerInfo[playerid][pWeapon4]);
        	INI_WriteInt( PlayerAcc, "Ammo4",           PlayerInfo[playerid][pAmmo4]);
        	INI_WriteInt( PlayerAcc, "Weapon5",         PlayerInfo[playerid][pWeapon5]);
        	INI_WriteInt( PlayerAcc, "Ammo5",           PlayerInfo[playerid][pAmmo5]);
        	INI_WriteInt( PlayerAcc, "Weapon6",         PlayerInfo[playerid][pWeapon6]);
        	INI_WriteInt( PlayerAcc, "Ammo6",           PlayerInfo[playerid][pAmmo6]);
        	INI_WriteInt( PlayerAcc, "Weapon7",         PlayerInfo[playerid][pWeapon7]);
        	INI_WriteInt( PlayerAcc, "Ammo7",           PlayerInfo[playerid][pAmmo7]);
        	INI_WriteInt( PlayerAcc, "Weapon8",         PlayerInfo[playerid][pWeapon8]);
        	INI_WriteInt( PlayerAcc, "Ammo8",           PlayerInfo[playerid][pAmmo8]);
        	INI_WriteInt( PlayerAcc, "Weapon9",         PlayerInfo[playerid][pWeapon9]);
        	INI_WriteInt( PlayerAcc, "Ammo9",           PlayerInfo[playerid][pAmmo9]);
        	INI_WriteInt( PlayerAcc, "Weapon10",        PlayerInfo[playerid][pWeapon10]);
        	INI_WriteInt( PlayerAcc, "Ammo10",          PlayerInfo[playerid][pAmmo10]);
        	INI_WriteInt( PlayerAcc, "Weapon11",        PlayerInfo[playerid][pWeapon11]);
        	INI_WriteInt( PlayerAcc, "Ammo11",          PlayerInfo[playerid][pAmmo11]);
        	INI_WriteInt( PlayerAcc, "Weapon12",        PlayerInfo[playerid][pWeapon12]);
        	INI_WriteInt( PlayerAcc, "Ammo12",          PlayerInfo[playerid][pAmmo12]);
        	INI_WriteInt( PlayerAcc, "Maleta",          PlayerInfo[playerid][pMaleta]);
        	INI_WriteInt( PlayerAcc, "Mochila",         PlayerInfo[playerid][pMochila]);
        	INI_WriteInt( PlayerAcc, "Casco",           PlayerInfo[playerid][pCasco]);
        	INI_WriteInt( PlayerAcc, "SIDA",            PlayerInfo[playerid][pSIDA]);
        	INI_WriteInt( PlayerAcc, "Cancer",          PlayerInfo[playerid][pCancer]);
        	INI_WriteInt( PlayerAcc, "Epilepsia",       PlayerInfo[playerid][pEpilepsia]);
        	INI_WriteInt( PlayerAcc, "DEagle",          PlayerInfo[playerid][pDEagle]);
        	INI_WriteInt( PlayerAcc, "Shotgun",         PlayerInfo[playerid][pShotgun]);
        	INI_WriteInt( PlayerAcc, "MP5",             PlayerInfo[playerid][pMP5]);
        	INI_WriteInt( PlayerAcc, "AK47",            PlayerInfo[playerid][pAK47]);
        	INI_WriteInt( PlayerAcc, "M4",              PlayerInfo[playerid][pM4]);
        	INI_WriteInt( PlayerAcc, "Sniper",          PlayerInfo[playerid][pSniper]);
        	INI_WriteInt( PlayerAcc, "FStyle",          PlayerInfo[playerid][pFStyle]);
        	INI_WriteInt( PlayerAcc, "Leccion",         PlayerInfo[playerid][pLeccion]);
        	INI_WriteInt( PlayerAcc, "Busqueda",        PlayerInfo[playerid][pBusqueda]);
        	INI_WriteInt( PlayerAcc, "AntiSIDA",        PlayerInfo[playerid][pAntiSIDA]);
        	INI_WriteInt( PlayerAcc, "AntiCancer",      PlayerInfo[playerid][pAntiCancer]);
        	INI_WriteInt( PlayerAcc, "AntiEpilepsia",   PlayerInfo[playerid][pAntiEpilepsia]);
        	INI_WriteInt( PlayerAcc, "Rent",            PlayerInfo[playerid][pRent]);
        	INI_WriteInt( PlayerAcc, "Rob",             PlayerInfo[playerid][pRob]);
        	//INI_WriteInt( PlayerAcc, "Musculoso",       PlayerInfo[playerid][pMusculoso]);
        	INI_WriteInt( PlayerAcc, "Donate",          PlayerInfo[playerid][pDonateT]);
        	INI_WriteInt( PlayerAcc, "CarPremium",      PlayerInfo[playerid][pCarPremium]);
        	INI_WriteInt( PlayerAcc, "CarPremium2",     PlayerInfo[playerid][pCarPremium2]);
        	INI_WriteInt( PlayerAcc, "BanDuda",         PlayerInfo[playerid][pBanDuda]);
        	INI_WriteInt( PlayerAcc, "Seguro",          PlayerInfo[playerid][pSeguro]);
        	INI_WriteInt( PlayerAcc, "Walkie",          PlayerInfo[playerid][pWalkie]);
        	INI_WriteInt( PlayerAcc, "Head",            PlayerInfo[playerid][pHead]);
        	INI_WriteInt( PlayerAcc, "Married",         PlayerInfo[playerid][pMarried]);
        	INI_WriteString( PlayerAcc, "MarriedTo",	PlayerInfo[playerid][pMarriedTo]);
        	INI_WriteInt( PlayerAcc, "Entered",         PlayerInfo[playerid][pEntered]);
        	INI_WriteInt( PlayerAcc, "Peces",           PlayerInfo[playerid][pPeces]);
        	INI_WriteInt( PlayerAcc, "Implementos",     PlayerInfo[playerid][pImplementos]);
        	INI_WriteInt( PlayerAcc, "Carnada",         PlayerInfo[playerid][pCarnada]);
        	INI_WriteInt( PlayerAcc, "Fichas",          PlayerInfo[playerid][pFichas]);
        	INI_WriteInt( PlayerAcc, "DNIFalse",        PlayerInfo[playerid][pDNIFalse]);
        	INI_WriteString( PlayerAcc, "DNIName",      PlayerInfo[playerid][pDNIName]);
        	INI_WriteInt( PlayerAcc, "Suciedad", 	    PlayerInfo[playerid][pSuciedad]);
        	//INI_WriteInt( PlayerAcc, "Musculos", 	    PlayerInfo[playerid][pMusculos]);
        	//INI_WriteInt( PlayerAcc, "Hambre", 	        PlayerInfo[playerid][pHambre]);
        	//INI_WriteInt( PlayerAcc, "Peso", 	        PlayerInfo[playerid][pPeso]);
        	INI_WriteInt( PlayerAcc, "AnilloCom",       PlayerInfo[playerid][pAnilloCom]);
        	INI_WriteInt( PlayerAcc, "AnilloOro",       PlayerInfo[playerid][pAnilloOro]);
        	INI_WriteInt( PlayerAcc, "Collar",          PlayerInfo[playerid][pCollar]);
        	INI_WriteInt( PlayerAcc, "AnilloDia",       PlayerInfo[playerid][pAnilloDia]);
        	INI_WriteInt( PlayerAcc, "Pulsera",         PlayerInfo[playerid][pPulsera]);
        	INI_WriteInt( PlayerAcc, "Aretes",          PlayerInfo[playerid][pAretes]);
        	INI_WriteInt( PlayerAcc, "Reloj",           PlayerInfo[playerid][pReloj]);
        	for(new v = 0; v < MAX_PLAYERTOYS; v++)
 			{
 			    format(string, 128, "pt%dModelID",v);
 			    INI_WriteInt( PlayerAcc, string,        PlayerToyInfo[playerid][v][ptModelID]);
 			    format(string, 128, "pt%dBone",v);
                INI_WriteInt( PlayerAcc, string,        PlayerToyInfo[playerid][v][ptBone]);
                format(string, 128, "pt%dPosX",v);
                INI_WriteFloat( PlayerAcc, string,      PlayerToyInfo[playerid][v][ptPosX]);
                format(string, 128, "pt%dPosY",v);
                INI_WriteFloat( PlayerAcc, string,		PlayerToyInfo[playerid][v][ptPosY]);
                format(string, 128, "pt%dPosZ",v);
                INI_WriteFloat( PlayerAcc, string,		PlayerToyInfo[playerid][v][ptPosZ]);
                format(string, 128, "pt%dRotX",v);
                INI_WriteFloat( PlayerAcc, string,		PlayerToyInfo[playerid][v][ptRotX]);
                format(string, 128, "pt%dRotY",v);
                INI_WriteFloat( PlayerAcc, string,		PlayerToyInfo[playerid][v][ptRotY]);
                format(string, 128, "pt%dRotZ",v);
                INI_WriteFloat( PlayerAcc, string,		PlayerToyInfo[playerid][v][ptRotZ]);
			}
			
   		INI_Close( PlayerAcc );
	}
	return 1;
}

public LoadUser(playerid, name[], value[])
{
	new string[128];
    INI_String("Key",          	PlayerInfo[playerid][pKey], 28);
    INI_Int("Contrato",        PlayerInfo[playerid][pContract]);
	INI_Int( "Level",			PlayerInfo[playerid][pLevel]);
 	INI_Int( "AdminCP",			PlayerInfo[playerid][pAdminCP]);
 	INI_Int( "Facciones",       PlayerInfo[playerid][pFacciones]);
   	INI_Int( "Helper",			PlayerInfo[playerid][pHelper]);
    INI_Int( "ConnectedTime",	PlayerInfo[playerid][pConnectTime]);
    INI_Int( "Registered",		PlayerInfo[playerid][pReg]);
    INI_Int( "Sex",				PlayerInfo[playerid][pSex]);
    INI_Int( "Age",				PlayerInfo[playerid][pAge]);
    INI_Int( "Origin",			PlayerInfo[playerid][pOrigin]);
    INI_Int( "Walk",			PlayerInfo[playerid][pWalk]);
    INI_Int( "Respect",			PlayerInfo[playerid][pExp]);
    INI_Int( "Money",			PlayerInfo[playerid][pCash]);
    INI_Int( "Bank",			PlayerInfo[playerid][pAccount]);
    INI_Int( "Cheques",			PlayerInfo[playerid][pCheques]);
    INI_Int( "Kills",			PlayerInfo[playerid][pKills]);
    INI_Int( "Deaths",			PlayerInfo[playerid][pDeaths]);
    INI_Int( "Arrested",		PlayerInfo[playerid][pArrested]);
    INI_Int( "LottoNr",			PlayerInfo[playerid][pLottoNr]);
    INI_Int( "Job",				PlayerInfo[playerid][pJob]);
    INI_Int( "Jailed",			PlayerInfo[playerid][pJailed]);
    INI_Int( "JailTime",		PlayerInfo[playerid][pJailTime]);
    INI_Int( "Materiales",		PlayerInfo[playerid][pMats]);
    INI_Int( "Drogas",			PlayerInfo[playerid][pDrugs]);
    INI_Int( "Speed",			PlayerInfo[playerid][pSpeed]);
    INI_Int( "Ectasy",			PlayerInfo[playerid][pEctasy]);
    INI_Int( "Ritalin",			PlayerInfo[playerid][pRitalin]);
    INI_Int( "Heroina",			PlayerInfo[playerid][pHeroina]);
    INI_Int( "Marihuana",		PlayerInfo[playerid][pMarihuana]);
    INI_Int( "Leader",			PlayerInfo[playerid][pLeader]);
    INI_Int( "Member",			PlayerInfo[playerid][pMember]);
    INI_Int( "Rank",			PlayerInfo[playerid][pRank]);
    INI_Int( "Char",			PlayerInfo[playerid][pChar]);
    INI_Float( "Health",		PlayerInfo[playerid][pHealth]);
    INI_Float( "Armour",		PlayerInfo[playerid][pArmour]);
    INI_Int( "Int",				PlayerInfo[playerid][pInt]);
    INI_Int( "VirWorld",        PlayerInfo[playerid][pVirWorld]);
    INI_Int( "Team",			PlayerInfo[playerid][pTeam]);
    INI_Int( "Model",			PlayerInfo[playerid][pModel]);
    INI_Int( "PhoneNr",			PlayerInfo[playerid][pPnumber]);
    INI_Int( "Minutes",			PlayerInfo[playerid][pMinutes]);
    INI_Int( "MTexto",			PlayerInfo[playerid][pMTexto]);
    INI_Int( "Ipod",			PlayerInfo[playerid][pIpod]);
    INI_Int( "Car",				PlayerInfo[playerid][pPcarkey]);
    INI_Int( "Car2",			PlayerInfo[playerid][pPcarkey2]);
    INI_Int( "TimeCar",			PlayerInfo[playerid][pTimeCar]);
    INI_Int( "TimeCar2",		PlayerInfo[playerid][pTimeCar2]);
    INI_Int( "House",			PlayerInfo[playerid][pPhousekey]);
    INI_Int( "Negocio",         PlayerInfo[playerid][pPbizzkey]);
    INI_Float( "Pos_x",			PlayerInfo[playerid][pPos_x]);
	INI_Float( "Pos_y",			PlayerInfo[playerid][pPos_y]);
	INI_Float( "Pos_z",			PlayerInfo[playerid][pPos_z]);
	INI_Int( "CarLic",			PlayerInfo[playerid][pCarLic]);
	INI_Int( "FlyLic",			PlayerInfo[playerid][pFlyLic]);
	INI_Int( "BoatLic",			PlayerInfo[playerid][pBoatLic]);
	INI_Int( "GunLic",			PlayerInfo[playerid][pGunLic]);
	INI_Int( "Gafas",           PlayerInfo[playerid][pGafas]);
	INI_Int( "Tutorial",		PlayerInfo[playerid][pTut]);
	INI_String("Antecedente1", 	PlayerInfo[playerid][pAntecedente1], 78);
	INI_String("Antecedente2", 	PlayerInfo[playerid][pAntecedente2], 78);
	INI_String("Antecedente3", 	PlayerInfo[playerid][pAntecedente3], 78);
	INI_String("Note1",		 	PlayerInfo[playerid][pNote1], 80);
	INI_String("Note2", 		PlayerInfo[playerid][pNote2], 80);
	INI_String("Note3", 		PlayerInfo[playerid][pNote3], 80);
	INI_String("Note4",		 	PlayerInfo[playerid][pNote4], 80);
	INI_String("Note5",		 	PlayerInfo[playerid][pNote5], 80);
	INI_String("SMS1",		  	PlayerInfo[playerid][pSMS_1], 86);
	INI_String("SMS2",		  	PlayerInfo[playerid][pSMS_2], 86);
	INI_String("SMS3",		  	PlayerInfo[playerid][pSMS_3], 86);
	INI_String("SMS4",		  	PlayerInfo[playerid][pSMS_4], 86);
	INI_String("SMS5",		  	PlayerInfo[playerid][pSMS_5], 86);
	INI_Int( "Lighter",			PlayerInfo[playerid][pLighter]);
	INI_Int( "Cigarettes",		PlayerInfo[playerid][pCigarettes]);
	INI_Int( "Mascara",         PlayerInfo[playerid][pMask]);
	INI_Int( "Locked",			PlayerInfo[playerid][pLocked]);
	INI_Int( "Advertencias",    PlayerInfo[playerid][pAdvertencias]);
	INI_Int( "AdminAdver",      PlayerInfo[playerid][pAdminAdver]);
	INI_Int( "DNI"	,			PlayerInfo[playerid][pDNI]);
	INI_String( "MSN",		  	PlayerInfo[playerid][pMSN], 54);
	INI_String( "Estado",       PlayerInfo[playerid][pEstado], 26);
	INI_Int( "Weapon",			PlayerInfo[playerid][pWeapon]);
	INI_Int( "Ammo",			PlayerInfo[playerid][pAmmo]	);
	INI_Int( "Weapon2",			PlayerInfo[playerid][pWeapon2]);
	INI_Int( "Ammo2",			PlayerInfo[playerid][pAmmo2]);
	INI_Int( "Weapon3",			PlayerInfo[playerid][pWeapon3]);
	INI_Int( "Ammo3",			PlayerInfo[playerid][pAmmo3]);
	INI_Int( "Weapon4",			PlayerInfo[playerid][pWeapon4]);
	INI_Int( "Ammo4",			PlayerInfo[playerid][pAmmo4]);
	INI_Int( "Weapon5",			PlayerInfo[playerid][pWeapon5]);
	INI_Int( "Ammo5",			PlayerInfo[playerid][pAmmo5]);
	INI_Int( "Weapon6",			PlayerInfo[playerid][pWeapon6]);
	INI_Int( "Ammo6",			PlayerInfo[playerid][pAmmo6]);
	INI_Int( "Weapon7",			PlayerInfo[playerid][pWeapon7]);
	INI_Int( "Ammo7",			PlayerInfo[playerid][pAmmo7]);
	INI_Int( "Weapon8",			PlayerInfo[playerid][pWeapon8]);
	INI_Int( "Ammo8",			PlayerInfo[playerid][pAmmo8]);
	INI_Int( "Weapon9",			PlayerInfo[playerid][pWeapon9]);
	INI_Int( "Ammo9",			PlayerInfo[playerid][pAmmo9]);
	INI_Int( "Weapon10",		PlayerInfo[playerid][pWeapon10]);
	INI_Int( "Ammo10",			PlayerInfo[playerid][pAmmo10]);
	INI_Int( "Weapon11",		PlayerInfo[playerid][pWeapon11]);
	INI_Int( "Ammo11",			PlayerInfo[playerid][pAmmo11]);
	INI_Int( "Weapon12",		PlayerInfo[playerid][pWeapon12]);
	INI_Int( "Ammo12",			PlayerInfo[playerid][pAmmo12]);
	INI_Int( "Mochila",			PlayerInfo[playerid][pMochila]);
	INI_Int( "Casco",           PlayerInfo[playerid][pCasco]);
	INI_Int( "SIDA",			PlayerInfo[playerid][pSIDA]	);
	INI_Int( "Cancer",			PlayerInfo[playerid][pCancer]);
	INI_Int( "Epilepsia",		PlayerInfo[playerid][pEpilepsia]);
	INI_Int( "DEagle",			PlayerInfo[playerid][pDEagle]);
	INI_Int( "Shotgun",			PlayerInfo[playerid][pShotgun]);
	INI_Int( "MP5"	,			PlayerInfo[playerid][pMP5]);
	INI_Int( "AK47",			PlayerInfo[playerid][pAK47]);
	INI_Int( "M4"	,			PlayerInfo[playerid][pM4]);
	INI_Int( "Sniper",			PlayerInfo[playerid][pSniper]);
	INI_Int( "FStyle",			PlayerInfo[playerid][pFStyle]);
	INI_Int( "Leccion",			PlayerInfo[playerid][pLeccion]);
	INI_Int( "Busqueda",		PlayerInfo[playerid][pBusqueda]);
	INI_Int( "AntiSIDA",		PlayerInfo[playerid][pAntiSIDA]);
	INI_Int( "AntiCancer",		PlayerInfo[playerid][pAntiCancer]);
	INI_Int( "AntiEpilepsia",	PlayerInfo[playerid][pAntiEpilepsia]);
	INI_Int( "Rent",			PlayerInfo[playerid][pRent]);
	INI_Int( "Rob",				PlayerInfo[playerid][pRob]);
	//INI_Int( "Musculos",		PlayerInfo[playerid][pMusculos]);
	INI_Int( "Donate",          PlayerInfo[playerid][pDonateT]);
	INI_Int( "CarPremium",      PlayerInfo[playerid][pCarPremium]);
	INI_Int( "CarPremium2",     PlayerInfo[playerid][pCarPremium2]);
	INI_Int( "BanDuda",         PlayerInfo[playerid][pBanDuda]);
	INI_Int( "Seguro",			PlayerInfo[playerid][pSeguro]);
	INI_Int( "Walkie",			PlayerInfo[playerid][pWalkie]);
	INI_Int( "Donate",          PlayerInfo[playerid][pDonateT]);
	INI_Int( "Head",    	  	PlayerInfo[playerid][pHead]);
	INI_Int( "Married",         PlayerInfo[playerid][pMarried]);
	INI_String( "MarriedTo",    PlayerInfo[playerid][pMarriedTo], 64);
	INI_Int( "Entered",         PlayerInfo[playerid][pEntered]);
	INI_Int( "Peces",           PlayerInfo[playerid][pPeces]);
	INI_Int( "Implementos",     PlayerInfo[playerid][pImplementos]);
	INI_Int( "Carnada",         PlayerInfo[playerid][pCarnada]);
	INI_Int( "Fichas",          PlayerInfo[playerid][pFichas]);
	INI_Int( "DNIFalse",        PlayerInfo[playerid][pDNIFalse]);
	INI_String( "DNIName",      PlayerInfo[playerid][pDNIName], 32);
	INI_Int( "Suciedad",        PlayerInfo[playerid][pSuciedad]);
	//INI_Int( "Musculos",        PlayerInfo[playerid][pMusculos]);
	//INI_Int( "Hambre",          PlayerInfo[playerid][pHambre]);
	//INI_Int( "Peso",            PlayerInfo[playerid][pPeso]);
	INI_Int( "AnilloCom",       PlayerInfo[playerid][pAnilloCom]);
	INI_Int( "AnilloOro",       PlayerInfo[playerid][pAnilloOro]);
	INI_Int( "Collar",          PlayerInfo[playerid][pCollar]);
	INI_Int( "AnilloDia",       PlayerInfo[playerid][pAnilloDia]);
	INI_Int( "Pulsera",         PlayerInfo[playerid][pPulsera]);
	INI_Int( "Aretes",          PlayerInfo[playerid][pAretes]);
	INI_Int( "Reloj",           PlayerInfo[playerid][pReloj]);
	for(new v = 0; v < MAX_PLAYERTOYS; v++)
	{
 		format(string, 128, "pt%dModelID",v);
   		INI_Int( string,        PlayerToyInfo[playerid][v][ptModelID]);
	    format(string, 128, "pt%dBone",v);
	    INI_Int( string,        PlayerToyInfo[playerid][v][ptBone]);
	    format(string, 128, "pt%dPosX",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptPosX]);
	    format(string, 128, "pt%dPosY",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptPosY]);
	    format(string, 128, "pt%dPosY",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptPosZ]);
	    format(string, 128, "pt%dRotX",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptRotX]);
	    format(string, 128, "pt%dRotY",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptRotY]);
	    format(string, 128, "pt%dRotZ",v);
	    INI_Float( string,        PlayerToyInfo[playerid][v][ptRotZ]);
	}
	return 0;
}

public OnPlayerLogin(playerid)
{
    new string2[128];
	if(PlayerInfo[playerid][pLocked] == 8)
	{
 		Message(playerid, COLOR_YELLOW2, "Atención: Tu cuenta figura como bloqueada.");
 		Message(playerid, COLOR_YELLOW2, "(Baneado)");
		Message(playerid, COLOR_YELLOW2, "Acude al foro para reclamar tu desbaneo.");
  		Ban(playerid);
	}
 	ResetPlayerMoney(playerid), GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	if(PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pLevel] = 1;
		PlayerInfo[playerid][pHealth] = 50.0;
		PlayerInfo[playerid][pPos_x] = 1612.3240;
		PlayerInfo[playerid][pPos_y] = -2330.1670;
		PlayerInfo[playerid][pPos_z] = 13.5469;
		PlayerInfo[playerid][pInt] = 0;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pModel] = 135;
		PlayerInfo[playerid][pPhousekey] = 9999;
		PlayerInfo[playerid][pPbizzkey] = 9999;
		PlayerInfo[playerid][pPcarkey] = 9999;
		PlayerInfo[playerid][pPcarkey2] = 9999;
		PlayerInfo[playerid][pCarPremium] = 9999;
		PlayerInfo[playerid][pCarPremium2] = 9999;
		PlayerInfo[playerid][pAccount] = 0;
		PlayerInfo[playerid][pReg] = 1;
		GivePlayerMoney(playerid, 3000);
	}
	ClearChatbox(playerid, 10);
	format(string2, sizeof(string2), "* Bienvenido a {FF5E00}Hermandad Zero RP {018CFE}, %s.", PlayerName(playerid));
	Message(playerid, COLOR_WHITE, string2);
	Message(playerid, COLOR_WHITE, "* {018CFE}¡Recuerda invitar a tus amigos al servidor!");
	if(DobleOn == 1) Message(playerid, AMARILLO_ADMIN, "* Informacion: {FFFFFF}El sistema de doble experiencia esta activo, recuerda jugar para subir mas rapido de nivel.");
	if(TripleOn == 1) Message(playerid, COLOR_RED2, "* Informacion: {FFFFFF}Se ha activado el sistema de TRIPLE experiencia. Ahora subiras 3 veces mas rápido tus puntos de respeto.");
	if(PlayerInfo[playerid][pAdminCP] > 0)
	{
 		format(string2, sizeof(string2), "- {ADFF2F}Nivel Administrativo {FFFFFF}%d", PlayerInfo[playerid][pAdminCP]);
   		Message(playerid, -1, string2);
	}

	SetTimerEx("Spawned", 10000, false, "i", playerid);
	gPlayerLogged[playerid] = 1;
 	SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
  	SpawnPlayer(playerid);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
 		{
			if(Maskuse[i] == 1)
    		{
     			ShowPlayerNameTagForPlayer(playerid, i, 0);
       		}
    	}
	}
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new Float:cx, Float:cy, Float:cz, contacto = PlayerInfo[playerid][pPnumber];
	new idcar = GetPlayerVehicleID(playerid),string[128], giveplayerid;

	switch(dialogid)
	{
	    case BUYTOYS:
	    {
	        if(response)
	        {
 				new stringg[512];
				for(new x;x<MAX_PLAYERTOYS;x++)
				{
					new name[24];
    				format(name, sizeof(name), "Nada");

					for(new i;i<sizeof(HoldingObjectsAll);i++)
					{
						if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
 						{
							format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
						}
					}
					format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
				}
				ShowPlayerDialog(playerid, BUYTOYS2, DIALOG_STYLE_LIST, "Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
			}
		}
		case BUYTOYS2:
		{
		    if (response)
		    {
		 		if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return Message(playerid, COLOR_YELLOW, "* Ya tienes algo en esa ranura, eliminala con /toys");

				slotselection[playerid] = listitem;

				new stringg[3821];
				for(new x;x<sizeof(HoldingObjectsAll);x++)
				{
 					format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, HoldingObjectsAll[x][holdingmodelname], HoldingObjectsAll[x][holdingprice]);
				}
				ShowPlayerDialog(playerid, BUYTOYS3, DIALOG_STYLE_LIST, "Selecciona un Objeto", stringg, "Comprar", "Cancelar");
			}
		}
		case BUYTOYS3:
		{
		    if (response)
		    {
				if(GetPlayerMoney(playerid) < HoldingObjectsAll[listitem][holdingprice])
				{
  					Message(playerid, COLOR_WHITE, "* Usted no tiene suficiente dinero");
				}
				else
				{
					Bought(playerid, HoldingObjectsAll[listitem][holdingprice]);
					if(PlayerToPoint(30.0,playerid,211.7609,-7.6523,1001.2109))     Till(9, HoldingObjectsAll[listitem][holdingprice]);
	    			if(PlayerToPoint(20.0,playerid,207.7558,-103.3743,1005.2578))   Till(10, HoldingObjectsAll[listitem][holdingprice]);
					PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = HoldingObjectsAll[listitem][holdingmodelid];

					new modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
					switch(modelid)
					{
					    case 19006..19035,19138..19140:
					    {
	       					PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
	    				}
	    				case 18891..18910:
	    				{
			    			PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
						}
						case 18926..18935:
						{
							PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
						}
						case 18911..18920:
						{
	    					PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
						}
						case 19078:
						{
	    					PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
						}
						case 18641..18644,18890,19080..19084:
						{
	    					PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
						}
						default:
						{
							PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
							PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
						}
					}
					format(string, sizeof(string), "* Usted a comprado un %s por $%d (Slot: %d)", HoldingObjectsAll[listitem][holdingmodelname], HoldingObjectsAll[listitem][holdingprice], slotselection[playerid]);
    				Message(playerid, COLOR_RED, string);
    				Message(playerid, COLOR_WHITE, " Usa /toys para editar tus objetos.");
				}
   }
  }
		case TOYS:
		{
		    if (response)
		    {
				switch(listitem)
				{
				    case 0:
				    {
			  			new stringg[512];
						for(new x;x<MAX_PLAYERTOYS;x++)
						{
    						new name[24];
    						format(name, sizeof(name), "Nada");

							for(new i;i<sizeof(HoldingObjectsAll);i++)
							{
    							if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
        						{
        							format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
								}
							} format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
						} ShowPlayerDialog(playerid, WEARTOY, DIALOG_STYLE_LIST, "Seleccione un Objeto", stringg, "Seleccionar", "Cancelar");
   					}
   					case 1:
					{
   						new stringg[512];
						for(new x;x<MAX_PLAYERTOYS;x++)
						{
    						new name[24];
    						format(name, sizeof(name), "Nada");

							for(new i;i<sizeof(HoldingObjectsAll);i++)
							{
    							if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
        						{
        							format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
								}
							} format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
						} ShowPlayerDialog(playerid, EDITTOYS, DIALOG_STYLE_LIST, "Seleccione un Objeto", stringg, "Seleccionar", "Cancelar");
  					}
  					case 2:
  					{
			   			new stringg[512];
						for(new x;x<MAX_PLAYERTOYS;x++)
						{
							new name[24];
    						format(name, sizeof(name), "Nada");

							for(new i;i<sizeof(HoldingObjectsAll);i++)
							{
    							if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
   								{
       								format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
								}
							} format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
						} ShowPlayerDialog(playerid, DELETETOY, DIALOG_STYLE_LIST, "Seleccione un Objeto", stringg, "Borrar", "Cancelar");
					}
				}
			}
		}
		case EDITTOYS:
		{
		    if (response)
		    {
		 		if(PlayerToyInfo[playerid][listitem][ptModelID] == 0)
 				{
 					ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Menú: Edición", "Usted no tiene nada en ese slot!", "OK", "");
				}
				else
				{
   					slotselection[playerid] = listitem;
	  				ShowEditMenu(playerid);
				}
			}
		}
		case EDITTOYS2:
		{
	 		if (response)
 			{
 			    switch(listitem)
				{
					case 0:
					{
	      				ShowPlayerDialog(playerid, EDITTOYSBONE, DIALOG_STYLE_LIST, "Selecciona una Parte", "Columna\nCabeza\nBrazo Izq Sup\nBrazo Der Sup\nMano Izq\nMano Derecha\nMuslo Izq\nMuslo Der\nPie Izq\nPie Der\nRight calf\nLeft calf\nAnteBrazo Izq\nAnteBrazo Der\nClavicula Izq\nClavicula Der\nCuello\nQuijada", "Aceptar", "Cancelar");
			    	}
			    	case 1:
			    	{
		      			ShowPlayerDialog(playerid, EDITTOYSPX, DIALOG_STYLE_INPUT, "Menú: Edición", "Escribe una X Offset de -100 a 100 (Ejm: 55, o 33.4)", "Enter", "Cancelar");
					}
					case 2:
		   			{
      					ShowPlayerDialog(playerid, EDITTOYSPY, DIALOG_STYLE_INPUT, "Menú: Edición", "Escribe una Y Offset de -100 a 100 (Ejm: 55, o 33.4)", "Enter", "Cancelar");
					}
					case 3:
		   			{
      					ShowPlayerDialog(playerid, EDITTOYSPZ, DIALOG_STYLE_INPUT, "Menú: Edición", "Escribe una Z Offset de -100 a 100 (Ejm: 55, o 33.4)", "Enter", "Cancelar");
					}
					case 4:
		   			{
      					ShowPlayerDialog(playerid, EDITTOYSRX, DIALOG_STYLE_INPUT, "Menú: Edición", "Escribe una X Rotación de 0 a 360 (Ejm: 90, o 270.4)", "Enter", "Cancelar");
					}
					case 5:
					{
		      			ShowPlayerDialog(playerid, EDITTOYSRY, DIALOG_STYLE_INPUT, "Menú: Edición", "Escribe una Y Rotación de 0 a 360 (Ejm: 90, o 270.4)", "Enter", "Cancelar");
					}
					case 6:
		   			{
      					ShowPlayerDialog(playerid, EDITTOYSRZ, DIALOG_STYLE_INPUT, "Menú: Edición", "Escribe una Z Rotación de 0 a 360 (Ejm: 90, o 270.4)", "Enter", "Cancelar");
					}
				}
			}
			else
			{
  				new stringg[512];
				for(new x;x<MAX_PLAYERTOYS;x++)
				{
   					new name[24];
   					format(name, sizeof(name), "Nada");

					for(new i;i<sizeof(HoldingObjectsAll);i++)
					{
    					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
        				{
       						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
						}
					} format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
				} ShowPlayerDialog(playerid, EDITTOYS, DIALOG_STYLE_LIST, "Seleccionar un Accesorio", stringg, "Seleccionar", "Cancelar");
			}
		}
		case EDITTOYSPX:
		{
 			if(response)
 			{
 	    		new Float:offset = floatstr(inputtext);
 	    		if(offset < -100) offset = 0;
				else if(offset > 100) offset = 100;
    			offset = offset/100;
    			PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = offset;
			}
			ShowEditMenu(playerid);
		}
		case EDITTOYSPY:
		{
	  		if (response)
 			{
     			new Float:offset = floatstr(inputtext);
				if(offset < -100) offset = 0;
				else if(offset > 100) offset = 100;
   				offset = offset/100;
   				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = offset;
			}
			ShowEditMenu(playerid);
		}
		case EDITTOYSPZ:
		{
	 		if (response)
 			{
     			new Float:offset = floatstr(inputtext);
     			if(offset < -100) offset = 0;
				else if(offset > 100) offset = 100;
				offset = offset/100;
 	 			PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = offset;
			}
			ShowEditMenu(playerid);
		}
		case EDITTOYSRX:
		{
 			if (response)
 			{
     			new Float:offset = floatstr(inputtext);
     			if(offset < -100) offset = 0;
				else if(offset > 360) offset = 360;
   				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = offset;
			}
			ShowEditMenu(playerid);
		}
		case EDITTOYSRY:
		{
	 		if(response)
 			{
     			new Float:offset = floatstr(inputtext);
     			if(offset < -100) offset = 0;
				else if(offset > 360) offset = 360;
   				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = offset;
			}
			ShowEditMenu(playerid);
		}
		case EDITTOYSRZ:
		{
 			if (response)
 			{
     			new Float:offset = floatstr(inputtext);
     			if(offset < -100) offset = 0;
				else if(offset > 360) offset = 360;
   				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = offset;
			}
			ShowEditMenu(playerid);
		}
		case EDITTOYSBONE:
		{
	 		if(response)
 			{
     			PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = listitem+1;
			}
			ShowEditMenu(playerid);
		}
		case WEARTOY:
		{
		    if (response)
		    {
		 		if(PlayerToyInfo[playerid][listitem][ptModelID] == 0)
 				{
 	    			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Menú: Poner/Quitar", "Usted no tiene ningún objeto en este slot!", "OK", "");
				}
				else
				{
   					if(IsPlayerAttachedObjectSlotUsed(playerid, listitem))
					{
   						new name[24];
   						format(name, sizeof(name), "Nada");

						for(new i;i<sizeof(HoldingObjectsAll);i++)
  						{
							if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
							{
								format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
							}
						}
	    				format(string, sizeof(string), "Te quitaste tu %s (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
						Message(playerid, COLOR_RED, string);
	    				RemovePlayerAttachedObject(playerid, listitem);
					}
					else
					{
    					SetPlayerAttachedObject(playerid, listitem, PlayerToyInfo[playerid][listitem][ptModelID], PlayerToyInfo[playerid][listitem][ptBone], PlayerToyInfo[playerid][listitem][ptPosX], PlayerToyInfo[playerid][listitem][ptPosY], PlayerToyInfo[playerid][listitem][ptPosZ], PlayerToyInfo[playerid][listitem][ptRotX], PlayerToyInfo[playerid][listitem][ptRotY], PlayerToyInfo[playerid][listitem][ptRotZ], 1, 1, 1);
    					new name[24];
    					format(name, sizeof(name), "Nada");

						for(new i;i<sizeof(HoldingObjectsAll);i++)
  						{
							if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
							{
								format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
							}
						}
						format(string, sizeof(string), "Te pusiste un %s. (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
						Message(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
		}
		case DELETETOY:
		{
		    if (response)
		    {
				PlayerToyInfo[playerid][listitem][ptModelID] = 0;
				PlayerToyInfo[playerid][listitem][ptBone] = 0;
				PlayerToyInfo[playerid][listitem][ptPosX] = 0.0;
				PlayerToyInfo[playerid][listitem][ptPosY] = 0.0;
				PlayerToyInfo[playerid][listitem][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][listitem][ptPosX] = 0.0;
				PlayerToyInfo[playerid][listitem][ptPosY] = 0.0;
				PlayerToyInfo[playerid][listitem][ptPosZ] = 0.0;
				if(IsPlayerAttachedObjectSlotUsed(playerid, listitem))
				{
				    RemovePlayerAttachedObject(playerid, listitem);
				}
				format(string, sizeof(string), "Usted ha eliminado su accesorio del slot %d", listitem);
   				ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Menú", string, "OK", "");
			}
		}
		case CLOTHES_CHOOSE_DIALOG:
		{
			if(response)
 			{
  				switch(listitem)
    			{
   					case 0:
     				{
		           		ClothesID	[playerid] = 16005;
		           		Accesory	[playerid] = 1;
            			Message(playerid, COLOR_YELLOW2, "- Utiliza la tecla ESPACIO para ver las distintas gafas");
		           		Message(playerid, COLOR_YELLOW2, "- Utiliza /comprar para comprar las gafas");
		           		Message(playerid, COLOR_YELLOW2, "- Utiliza /salirvestidor para no comprar nada");
					}
					case 1:
					{
    					ClothesID	[playerid] = 18910;
    					Accesory	[playerid] = 2;
    					Message(playerid, COLOR_YELLOW2, "- Utiliza la tecla ESPACIO para ver las distintas bandanas");
		            	Message(playerid, COLOR_YELLOW2, "- Utiliza /comprar para comprar la bandana");
		            	Message(playerid, COLOR_YELLOW2, "- Utiliza /salirvestidor para no comprar nada");
		            	Message(playerid, COLOR_YELLOW2, "** Recuerda: las bandanas solo se permiten con skin de pandillero**");
					}
					case 2:
					{
		        	    ClothesID	[playerid] = 18925;
		        	    Accesory	[playerid] = 3;
		        	    Message(playerid, COLOR_YELLOW2, "- Utiliza la tecla ESPACIO para ver los distintos gorros");
	           		 	Message(playerid, COLOR_YELLOW2, "- Utiliza /comprar para comprar los gorros");
		            	Message(playerid, COLOR_YELLOW2, "- Utiliza /salirvestidor para no comprar nada");
					}
	        	}
	    	}
		}
		case SEL_SKIN:                        //DIALOG DEL ANTIGUO /cropa  usado en /cropaid
		{
 	    	if (response)
			{
 	        	if(strval(inputtext) > 281 && strval(inputtext) < 289 || strval(inputtext) == 71) return Message(playerid, COLOR_GRAD2, "Skin Reservada");
 	        	if(strval(inputtext) > 273 && strval(inputtext) < 280 || strval(inputtext) == 70) return Message(playerid, COLOR_GRAD2, "Skin Reservada");
 	        	if(strval(inputtext) < 1 || strval(inputtext) > 299) return Message(playerid, COLOR_GRAD2, "ERROR! Skin de 1 a 299");
            	if(CheckMoney(playerid,200))
				{
            	    PlayerInfo[playerid][pChar] = strval(inputtext);
                	SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
                	if(PlayerInfo[playerid][pDonateT] == 0){
						Bought(playerid, 200);
                		if(PlayerToPoint(30.0,playerid,211.7609,-7.6523,1001.2109))     Till(9, 200);
	    				if(PlayerToPoint(20.0,playerid,207.7558,-103.3743,1005.2578))   Till(10, 200);
  					}
		    	}
		    	return 1;
	    	}
		}
  case CAMARAS_LSPD:
  			{
                if(response){
            switch(listitem){
            case 0: // CAMARA 1
         {
		SetPlayerCameraPos(playerid, 1424.3242,-1304.9410,30.8439);
		SetPlayerCameraLookAt(playerid, 1408.4377,-1361.6721,8.5547);

		TextDrawShowForPlayer(playerid,TVCAM_CornerTopLeft);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerTopRight);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerBottomLeft);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerBottomRight);
                              



      	}
        case 1: //CAMARA 2
        {
		SetPlayerCameraPos(playerid, 2252.0281,-2241.3621,22.6538);
		SetPlayerCameraLookAt(playerid, 2254.5698,-2205.7773,13.3154);
		 		TextDrawShowForPlayer(playerid,TVCAM_CornerTopLeft);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerTopRight);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerBottomLeft);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerBottomRight);
                                


      	}
         case 2: //CAMARA 3
      	{
		SetPlayerCameraPos(playerid, 1542.7139,-1650.4813,28.4021);
		SetPlayerCameraLookAt(playerid, 1529.6488,-1688.7915,13.3828);

		TextDrawShowForPlayer(playerid,TVCAM_CornerTopLeft);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerTopRight);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerBottomLeft);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerBottomRight);
                                


      	}
            case 3: //CAMARA 4
         {
		SetPlayerCameraPos(playerid, 1643.1034,-1723.1521,21.6860);
	    SetPlayerCameraLookAt(playerid, 1568.2974,-1732.8523,13.3828);
	     	    TextDrawShowForPlayer(playerid,TVCAM_CornerTopLeft);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerTopRight);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerBottomLeft);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerBottomRight);
                                


      }
          case 4://CAMARA 5
         {
		SetPlayerCameraPos(playerid, 1543.6251,-1631.9451,16.1278);
		SetPlayerCameraLookAt(playerid, 1594.8489,-1618.4550,13.4102);
		 TextDrawShowForPlayer(playerid,TVCAM_CornerTopLeft);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerTopRight);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerBottomLeft);
                                TextDrawShowForPlayer(playerid,TVCAM_CornerBottomRight);
                                



      }
      case 5://CAMARA 6
         {
		SetCameraBehindPlayer(playerid);
		CancelSelectTextDraw(playerid);
                                        TextDrawHideForPlayer(playerid,TVCAM_CornerTopLeft);
                                        TextDrawHideForPlayer(playerid,TVCAM_CornerTopRight);
                                        TextDrawHideForPlayer(playerid,TVCAM_CornerBottomLeft);
                                        TextDrawHideForPlayer(playerid,TVCAM_CornerBottomRight);
                                TextDrawHideForPlayer(playerid,TextdrawUp);
                                    TextDrawHideForPlayer(playerid,TextdrawDown);
                                    TextDrawHideForPlayer(playerid,TextdrawLeft);
                                    TextDrawHideForPlayer(playerid,TextdrawRight);
                                    TextDrawHideForPlayer(playerid,TextdrawFinish);

			}
      	}
      }
   }
		case AYUDA_DIALOG:
		{
		    if (response){
    	    	switch(listitem){
					case 0:
					{
                	   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> CarJack [CJ]", cj, "Aceptar", "Volver" );
					}
                	case 1:
                	{
                	   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> DeathMatch [DM]", dm, "Aceptar", "Volver" );
					}
					case 2:
					{
                	   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> MetaGaming [MG]", mg, "Aceptar", "Volver" );
   	 				}
			    	case 3:
			    	{
					   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> PowerGaming [PG]", pg, "Aceptar", "Volver" );
					}
					case 4:
					{
					   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Badly Parked Car [BPC]", bpc, "Aceptar", "Volver" );
					}
					case 5:
					{
					   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Bad Driving [BD]", bd, "Aceptar", "Volver" );
					}
					case 6:
					{
					   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Revenge Kill [RK]", rk, "Aceptar", "Volver" );
					}
					case 7:
					{
					   ShowPlayerDialog(playerid,500,DIALOG_STYLE_MSGBOX, "{FF231D}> Noob Abuser [NA]", na, "Aceptar", "Volver" );
					}
				}
			}
		}
		case 500:
		{
         	if(!response)
         	{
            	ShowPlayerDialog(playerid, AYUDA_DIALOG, DIALOG_STYLE_LIST, "{FF0D00}>{6CF600}HermandadZero {FFFFFF}-{9024D3}Reglas de Rol", " {00FF00}>{FFFFFF}CarJack \n {00FF00}>{FFFFFF}DeathMatch \n {00FF00}>{FFFFFF}MetaGaming \n {00FF00}>{FFFFFF}PowerGaming \n {00FF00}>{FFFFFF}Badly Parked Car \n {00FF00}>{FFFFFF}Bad Driving \n {00FF00}>{FFFFFF}Revenge Kill \n {00FF00}>{FFFFFF}Noob Abuser", "Ver", "Salir");
		 	}
		}
		
		case COLOR_ADM:
		{
		    if(response)
	    	{
	        	switch(listitem)
	        	{
	        	    case 0: { SetPlayerColor(playerid, ROJO_ADMIN);   	Color[playerid] = ROJO_ADMIN;		}
	            	case 1: { SetPlayerColor(playerid, VERDE_ADMIN);    Color[playerid] = VERDE_ADMIN;		}
	            	case 2: { SetPlayerColor(playerid, AMARILLO_ADMIN); Color[playerid] = AMARILLO_ADMIN; 	}
	            	case 3: { SetPlayerColor(playerid, CREMA_ADMIN);    Color[playerid] = CREMA_ADMIN; 		}
                	case 4: { SetPlayerColor(playerid, ROSADO_ADMIN);   Color[playerid] = ROSADO_ADMIN; 	}
                	case 5: { SetPlayerColor(playerid, CELESTE_ADMIN);  Color[playerid] = CELESTE_ADMIN; 	}
                	case 6: { SetPlayerColor(playerid, MORADO_ADMIN);   Color[playerid] = MORADO_ADMIN; 	}
                	case 7: { SetPlayerColor(playerid, ORANGE_ADMIN);   Color[playerid] = ORANGE_ADMIN; 	}
                	case 8: { SetPlayerColor(playerid, COLOR_WHITE);    Color[playerid] = COLOR_WHITE; 		}
                	case 9: { SetPlayerColor(playerid, NEGRO_ADMIN);    Color[playerid] = NEGRO_ADMIN; 		}
		    	}
			}
		}
		case CELDAS:
		{
	    	if(response)
	    	{
	    	    switch(listitem)
	    	    {
	    	        case 0:
	    	        {
        	            MoveDynamicObject(fbig1,200.0562,155.4197,1002.0234, 1.5, -1000.0, -1000.0, -1000.0);
        	            SetTimer("FBIGATEC1", 7000, 0);
        	            format(string, sizeof(string), "* %s apreta el boton y abre la celda Nro. 1", PlayerName(playerid));
  		         		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
	            	case 1:
	            	{
                	    MoveDynamicObject(fbig2,200.1218,190.7283,1002.0355, 1.5, -1000.0, -1000.0, -1000.0);
                	    SetTimer("FBIGATEC2", 7000, 0);
                	    format(string, sizeof(string), "* %s apreta el boton y abre la celda Nro. 2", PlayerName(playerid));
                	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
		    	}
			}
		}
		case CPRISION:
		{
			if(response)
			{
        	    switch(listitem)
            	{
            		case 0:
            		{
            	       ShowPlayerDialog(playerid,CELDA1,DIALOG_STYLE_MSGBOX, "{FFFFFF}> Celda Nro 1 - Seleccione:", "{00E400}Quiere Abrir o Cerrar la celda?", "Abrir", "Cerrar" );
            	    }
                	case 1:
                	{
                	   ShowPlayerDialog(playerid,CELDA2,DIALOG_STYLE_MSGBOX, "{FFFFFF}> Celda Nro 2 - Seleccione:", "{00E400}Quiere Abrir o Cerrar la celda?", "Abrir", "Cerrar" );
                	}
                	case 2:
                	{
                	   ShowPlayerDialog(playerid,CELDA3,DIALOG_STYLE_MSGBOX, "{FFFFFF}> Celda Nro 3 - Seleccione:", "{00E400}Quiere Abrir o Cerrar la celda?", "Abrir", "Cerrar" );
					}
				}
			}
		}
		case CELDA1:
		{
			if(response)
			{
        	    MoveDynamicObject(prison1,601.87536,857.282714,-95.533393, 0.8, -1000.0, -1000.0, -1000.0);
            	Message(playerid, COLOR_BLUE,"La celda numero uno está abierta.");
			}
			else
			{
			    MoveDynamicObject(prison1,601.875366,857.282714,-91.008117, 0.8, -1000.0, -1000.0, -1000.0);
           		Message(playerid, COLOR_BLUE,"La celda número uno está cerrada.");
     		}
		}
		case CELDA2:
		{
			if(response)
			{
        	    MoveDynamicObject(prison2,610.680053,857.309631,-95.558395, 0.8, -1000.0, -1000.0, -1000.0);
            	Message(playerid, COLOR_BLUE,"La celda número dos está abierta.");
        	}
        	else
        	{
        	    MoveDynamicObject(prison2,610.68005,857.30963,-91.00811, 0.8, -1000.0, -1000.0, -1000.0);
           		Message(playerid, COLOR_BLUE,"La celda número dos está cerrada.");
       		}
    	}
		case CELDA3:
		{
	        if(response)
    	    {
        	    MoveDynamicObject(prison3,619.552978,857.303405,-95.583473, 0.8, -1000.0, -1000.0, -1000.0);
            	Message(playerid, COLOR_BLUE,"La celda número tres está abierta.");
			}
			else
			{
			    MoveDynamicObject(prison3,619.55297,857.30340,-91.00819, 0.8, -1000.0, -1000.0, -1000.0);
	       		Message(playerid, COLOR_BLUE,"La celda número tres está cerrada.");
			}
		}
		case TEST_0:{
	   	    if(response){
    	        switch(listitem){
	    	        case 3:{
						Message(playerid, -1, "{69FF9C}Respuesta Correcta, exactamente no puedes hacer Metagaming, no puedes mezclar información OOC con IC.");
                	    Message(playerid, -1, "{69FF9C}Tampoco puedes hacer emoticones en signos como xD, :), por el chat normal.");
                    	ClearChatbox(playerid, 8);
						new t10[] = "{FFFFFF}Es hacer cosas imposibles en el juego.\nEs matar a cualquier persona por diversión.\nEs Saltar muchas veces para ir más rapido.\nEs decir por el cmd /duda Necesito un Adm.";
						ShowPlayerDialog(playerid, TEST_1, DIALOG_STYLE_LIST, "{4DE868}¿Que significa PG - PowerGaming?", t10, "OK", "");
	            	}
	            	default:{
						Message(playerid, -1, "{FF0000}Respuesta Incorrecta.");
	                	FailTuto[playerid] += 1;
	                	ClearChatbox(playerid, 8);
                    	new t10[] = "{FFFFFF}Es hacer cosas imposibles en el juego.\nEs matar a cualquier persona por diversión.\nEs Saltar muchas veces para ir más rapido.\nEs decir por el cmd /duda Necesito un Adm.";
						ShowPlayerDialog(playerid, TEST_1, DIALOG_STYLE_LIST, "{4DE868}¿Que significa PG - PowerGaming?", t10, "OK", "");
	            	}
	        	}
			}
		}
		case TEST_1:{
	        if(response){
    	        switch(listitem){
					case 0:{
						Message(playerid, -1, "{69FF9C}Respuesta Correcta, hacer PowerGaming está penado, nunca hagas cosas irreales o ficticias.");
						ClearChatbox(playerid, 8);
						new t1[] = "{FFFFFF}Sales corriendo sin ningún rol.\nSaco un arma y los mato.\nMe rindo, levanto las manos (/rendirse).\nLes saludo y pregunto ¿que pasa?.";
						ShowPlayerDialog(playerid, TEST_2, DIALOG_STYLE_LIST, "{4DE868}Si una persona te apunta con un arma ¿Que harias?", t1, "OK", "");
		            }
		            default:{
						Message(playerid, -1, "{FF0000}Respuesta Incorrecta.");
	        	        FailTuto[playerid] += 1;
						ClearChatbox(playerid, 8);
						new t1[] = "{FFFFFF}Sales corriendo sin ningún rol.\nSaco un arma y los mato.\nMe rindo, levanto las manos (/rendirse).\nLes saludo y pregunto ¿que pasa?.";
						ShowPlayerDialog(playerid, TEST_2, DIALOG_STYLE_LIST, "{4DE868}Si una persona te apunta con un arma ¿Que harias?", t1, "OK", "");
	            	}
	        	}
			}
		}
		case TEST_2:{
	        if(response){
    	        switch(listitem){
	    	        case 2:{
						Message(playerid, -1, "{69FF9C}Respuesta Correcta, en la vida real no puedes hacer nada, solo te queda rendirte y rolear.");
						ClearChatbox(playerid, 8);
						new t2[] = "{FFFFFF}Matar a un administrador.\nEs matar sin alguna razón.\nSacar un arma en el ayuntamiento.\nReportar a un usuario.";
						ShowPlayerDialog(playerid, TEST_3, DIALOG_STYLE_LIST, "{4DE868}Que Significa DeathMatch?", t2, "OK", "");
	            	}
		            default:{
						Message(playerid, -1, "{FF0000}Respuesta Incorrecta.");
	    	            FailTuto[playerid] += 1;
	        	        ClearChatbox(playerid, 8);
						new t2[] = "{FFFFFF}Matar a un administrador.\nEs matar sin alguna razón.\nSacar un arma en el ayuntamiento.\nReportar a un usuario.";
						ShowPlayerDialog(playerid, TEST_3, DIALOG_STYLE_LIST, "{4DE868}Que Significa DeathMatch?", t2, "OK", "");
	            	}
	        	}
			}
		}
		case TEST_3:{
	        if(response){
    	        switch(listitem){
	    	        case 1:{
						Message(playerid, -1, "{69FF9C}Respuesta Correcta, No puedes andar matando por diversión a otros usuarios, está penado.");
						ClearChatbox(playerid, 8);
						new t3[] = "{FFFFFF}Es para dudas o preguntas frecuentes.\nEs para reportar personas.\nEs para pedir un skin.\nEs para mandar anuncios.";
						ShowPlayerDialog(playerid, TEST_4, DIALOG_STYLE_LIST, "{4DE868}Que uso se le da al cmd /new?", t3, "OK", "");
	            	}
		            default:{
						Message(playerid, -1, "{FF0000}Respuesta Incorrecta.");
						FailTuto[playerid] += 1;
						ClearChatbox(playerid, 8);
						new t3[] = "{FFFFFF}Es para dudas o preguntas frecuentes.\nEs para reportar personas.\nEs para pedir un skin.\nEs para mandar anuncios.";
						ShowPlayerDialog(playerid, TEST_4, DIALOG_STYLE_LIST, "{4DE868}Que uso se le da al cmd /new?", t3, "OK", "");
	            	}
	        	}
			}
		}
		case TEST_4:{
	        if(response){
    	        switch(listitem){
					case 0:{
						Message(playerid, -1, "{69FF9C}Respuesta Correcta, el comando /new, solo es para dudas [FAQ]");
						ClearChatbox(playerid, 8);
						new t4[] = "{FFFFFF}Sí puedo estarlo cuando me aburra y no haya que rolear.\nSolo si uso el comando /afk.\nSí, puedo estarlo en cualquier momento.\nSí, me pongo un /yo ((OFF ROL)) y puedo estarlo.";
						ShowPlayerDialog(playerid, TEST_5, DIALOG_STYLE_LIST, "{4DE868}¿Puedes estar off rol en el servidor?", t4, "OK", "");
	            	}
		            default:{
						Message(playerid, -1, "{FF0000}Respuesta Incorrecta.");
	    	            FailTuto[playerid] += 1;
            	     	ClearChatbox(playerid, 8);
						new t4[] = "{FFFFFF}Sí puedo estarlo cuando me aburra y no haya que rolear.\nSolo si uso el comando /afk.\nSí, puedo estarlo en cualquier momento.\nSí, me pongo un /yo ((OFF ROL)) y puedo estarlo.";
						ShowPlayerDialog(playerid, TEST_5, DIALOG_STYLE_LIST, "{4DE868}¿Puedes estar off rol en el servidor?", t4, "OK", "");
	            	}
	        	}
			}
		}
		case TEST_5:{
	        if(response){
    	        switch(listitem){
	    	        case 1:{
						Message(playerid, -1, "{69FF9C}Respuesta Correcta, solo puedes estar Off-Rol si usas el comando /afk.");
						ClearChatbox(playerid, 8);
						new t5[] = "{FFFFFF}Llamar a un taxi [444] o andar.\nIntentando entrar a cualquier coche para conducirlo.\nPedir que me lleven por cualquier canal OOC.\nAlquilar el coche de un amigo, con acuerdo OOC previo.";
						ShowPlayerDialog(playerid, TEST_6, DIALOG_STYLE_LIST, "{4DE868}¿Qué debo hacer si tengo que andar una distancia larga?", t5, "OK", "");
	            	}
		            default:{
						Message(playerid, -1, "{FF0000}Respuesta Incorrecta.");
	    	            FailTuto[playerid] += 1;
						if(FailTuto[playerid] > 5) RepetirTuto(playerid);
						else{
						    ClearChatbox(playerid, 8);
							new t5[] = "{FFFFFF}Llamar a un taxi [444] o andar.\nIntentando entrar a cualquier coche para conducirlo.\nPedir que me lleven por cualquier canal OOC.\nAlquilar el coche de un amigo, con acuerdo OOC previo.";
							ShowPlayerDialog(playerid, TEST_6, DIALOG_STYLE_LIST, "{4DE868}¿Qué debo hacer si tengo que andar una distancia larga?", t5, "OK", "");
						}
	            	}
	        	}
			}
		}
		case TEST_6:{
    	    if(response){
	            switch(listitem){
					case 0:{
						Message(playerid, -1, "{69FF9C}Respuesta Correcta, no puedes pedir a alguien que te lleve a un lugar, debes llamar a un taxi con el comando {FF0000}/iphone");
						ClearChatbox(playerid, 8);
						new t5[] = "{FFFFFF}Es golpear a muchas personas.\nEs usar el comando /paja.\nEs vengarte despues de haber muerto en un Rol.\nEs vengarte de la policia cuando te arresta.";
						ShowPlayerDialog(playerid, TEST_7, DIALOG_STYLE_LIST, "{4DE868}¿Qué Es RevengeKill?", t5, "OK", "");
	            	}
		            default:{
						Message(playerid, -1, "{FF0000}Respuesta Incorrecta.");
	    	            FailTuto[playerid] += 1;
						if(FailTuto[playerid] > 5) RepetirTuto(playerid);
						else{
						    ClearChatbox(playerid, 8);
							new t5[] = "{FFFFFF}Es golpear a muchas personas.\nEs usar el comando /paja.\nEs vengarte despues de haber muerto en un Rol.\nEs vengarte de la policia cuando te arresta.";
							ShowPlayerDialog(playerid, TEST_7, DIALOG_STYLE_LIST, "{4DE868}¿Qué Es RevengeKill?", t5, "OK", "");
						}
					}
	        	}
			}
		}
		case TEST_7:{
	        if(response){
         		switch(listitem){
            		case 2:{
						Message(playerid, -1, "{69FF9C}Respuesta Correcta, tú no puedes vengarte después de haber muerto, hacer eso es penado.");
						ClearChatbox(playerid, 8);
						new t5[] = "{FFFFFF}Enviándole mensajes privados.{69FF9C}[/w]\nCreando un anuncio o enviandole SMS.\nCon el comando {FF0000}/duda.\n{FFFFFF}Por mensaje privado vía Foro.";
						ShowPlayerDialog(playerid, TEST_8, DIALOG_STYLE_LIST, "{4DE868}¿Cuál es la manera correcta de pedir ayuda a un admin?", t5, "OK", "");
	            	}
	            	default:{
						Message(playerid, -1, "{FF0000}Respuesta Incorrecta.");
		                FailTuto[playerid] += 1;
						if(FailTuto[playerid] > 5) RepetirTuto(playerid);
						else{
						    ClearChatbox(playerid, 8);
							new t5[] = "{FFFFFF}Enviándole mensajes privados.{69FF9C}[/w]\nCreando un anuncio o enviandole SMS.\nCon el comando {FF0000}/duda.\n{FFFFFF}Por mensaje privado vía Foro.";
							ShowPlayerDialog(playerid, TEST_8, DIALOG_STYLE_LIST, "{4DE868}¿Cuál es la manera correcta de pedir ayuda a un admin?", t5, "OK", "");
						}
					}
	        	}
			}
		}
		case TEST_8:{
	        if(response){
    	        switch(listitem){
	    	        case 2:{
						Message(playerid, -1, "{69FF9C}Respuesta Correcta. Exacto, tú no puedes usar otra forma de buscar a un administrador.");
						ClearChatbox(playerid, 8);
						new t5[] = "{FFFFFF}En el chat normal.\n/b /f (Chat OOC)\n/r (radio).\nEn cualquiera, es una palabra normal.";
						ShowPlayerDialog(playerid, TEST_9, DIALOG_STYLE_LIST, "{4DE868}¿En qué canal se puede decir ''xD''?", t5, "OK", "");
	            	}
		            default:{
						Message(playerid, -1, "{FF0000}Respuesta Incorrecta.");
	    	            FailTuto[playerid] += 1;
						if(FailTuto[playerid] > 5) RepetirTuto(playerid);
						else{
						    ClearChatbox(playerid, 8);
							new t5[] = "{FFFFFF}En el chat normal.\n/b /f (Chat OOC)\n/r (radio).\nEn cualquiera, es una palabra normal.";
							ShowPlayerDialog(playerid, TEST_9, DIALOG_STYLE_LIST, "{4DE868}¿En qué canal se puede decir ''xD''?", t5, "OK", "");
						}
    				}
	        	}
			}
		}
		case TEST_9:{
	        if(response){
            switch(listitem){
		            case 1:{
						Message(playerid, -1, "{69FF9C}Respuesta Correcta, Si lo haces en un canal IC, sería Metagaming.");
						format(string, sizeof(string), "{69FF9C}Felicidades! {FF0000}Test finalizado. Puntaje: %d/10", 10-FailTuto[playerid]);
						Message(playerid, -1, string);
						FailTuto[playerid] = 0;
						ClearChatbox(playerid, 8);
						new lu[] = "{FFFFFF}Has terminado el tutorial, ahora ya puedes empezar a jugar, recuerda respetar las reglas del servidor.";
						ShowPlayerDialog(playerid, SEL_CITY, DIALOG_STYLE_MSGBOX, "{46FF92} - Tutorial Finalizado", lu, "Ok", "");
	            	}
	            	default:{
						Message(playerid, -1, "{FF0000}Respuesta Incorrecta.");
		                FailTuto[playerid] += 1;
						if(FailTuto[playerid] > 5) RepetirTuto(playerid);
						else{
						    format(string, sizeof(string), "{69FF9C}Felicidades! {FF0000}Test finalizado. Puntaje: %d/10", 10-FailTuto[playerid]);
							Message(playerid, -1, string);
					    	ClearChatbox(playerid, 8);
							new lu[] = "{FFFFFF}Has terminado el tutorial, ahora ya puedes empezar a jugar, recuerda respetar las reglas del servidor.";
							ShowPlayerDialog(playerid, SEL_CITY, DIALOG_STYLE_MSGBOX, "{4DE868}HermandadZero RP - Tutorial Finalizado", lu, "Ok", "");
						}
	            	}
	        	}
			}
		}
		case SEL_CITY:{
	        if(response){
    	        ClearChatbox(playerid, 20);
				TutTime[playerid] = 0;
				new ranmoney = random(30000);
				PlayerInfo[playerid][pAccount] = ranmoney;
				Message(playerid, -1, "{018CFE}¡Bienvenido! {FFEAFF}Si tienes cualquier duda no dudes en usar en comando{FF5E00} /duda [Pregunta]");
				Message(playerid, -1, "{FFFFFF}Si ves algún tipo de antirol, porfavor reportelo usando el comando{FF5E00} /re [id] [Razón]");
				Message(playerid, -1, "{FFFFFF}Si tienes cualquier otra duda usa el comando{FF5E00} /ayuda");
                Message(playerid, -1, "{FFFFFF}Para recibir sus stats iniciales use el comando{FF5E00} /recibirstats");
				gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0;
				PlayerInfo[playerid][pReg] = 1;
				PlayerInfo[playerid][pTut] = 1;
				Muted[playerid] = 0;
				SetPosEx(playerid, 1684.79,-2239.39,13.55,0,0,0);
				OnPlayerUpdateTime(playerid);
				TogglePlayerControllable(playerid, 1);
  				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
				UpdatePlayerStat(playerid);
				ClearAnimations(playerid);
				SetPlayerStats(playerid);
			}
		}
		case TEL_INPUT:
		{
	    	if(response)
	    	{
	        	if(TEL_INPUT_ID[playerid] == 1)
	        	{
	        	    if(strval(inputtext) > 999999 || strval(inputtext) < 1000)
	        	    {
            	        ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Inserte el número del destino del mensaje\nTeléfono entre 4-6 carácteres", "Enviar", "Cancelar");
                	    return 1;
	            	}
		            TEL_INPUT_ID[playerid] = 2;
					TEL_NUMBER[playerid] = strval(inputtext);
					format(string, sizeof(string), "Telf: %d",TEL_NUMBER[playerid]);
					Message(playerid, COLOR_GRAD2, string);
    				ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Escriba el texto a enviar", "Enviar", "Cancelar");
	        	}
	        	else if(TEL_INPUT_ID[playerid] == 2)
	        	{
	            	if(DetectarSPAM(inputtext) || strlen(inputtext) > 80 || strlen(inputtext) < 1 || strfind(inputtext, "=", true) != -1)
	            	{
	            	    ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Escriba el texto a enviar\nLímite 80 carácteres", "Enviar", "Cancelar");
	            	    return 1;
	            	}
        	 		if(PlayerInfo[playerid][pMTexto] < 1) return Message(playerid, COLOR_WHITE, "{018CFE}OTECEL: {FFFFFF}Te informamos que no tienes mensajes disponibles, contrata un paquete.");
					PlayerInfo[playerid][pMTexto] -= 1;
					format(string, 60, "* %s manda un mensaje de texto.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					Loop(i,MAX_PLAYERS)
			    	{
						if(PlayerInfo[i][pPnumber] == TEL_NUMBER[playerid])
						{
					    	new h,m,s,y,month,d,mtext[12];
	     					gettime(h,m,s);
							getdate(y,month,d);
							switch(month)
							{
							    case 1:     mtext = "Enero";
							    case 2:     mtext = "Febrero";
							    case 3:     mtext = "Marzo";
						    	case 4:     mtext = "Abril";
							    case 5:     mtext = "Mayo";
							    case 6:     mtext = "Junio";
							    case 7:     mtext = "Julio";
							    case 8:     mtext = "Agosto";
							    case 9:     mtext = "Septiembre";
							    case 10:    mtext = "Octubre";
							    case 11:    mtext = "Noviembre";
						    	case 12:    mtext = "Diciembre";
		    				}
							if(strcmp(PlayerInfo[i][pSMS_1], "Vacío", true) == 0)
						    {
						        Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (1)");
						        format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
						        strmid(PlayerInfo[i][pSMS_1], string, 0, strlen(string), 80);
						    }
						    else if(strcmp(PlayerInfo[i][pSMS_2], "Vacío", true) == 0)
					    	{
						        Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (2)");
						        format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
						        strmid(PlayerInfo[i][pSMS_2], string, 0, strlen(string), 80);
						    }
						    else if(strcmp(PlayerInfo[i][pSMS_3], "Vacío", true) == 0)
						    {
						        Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (3)");
						        format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
					    	    strmid(PlayerInfo[i][pSMS_3], string, 0, strlen(string), 80);
					    	}
						    else if(strcmp(PlayerInfo[i][pSMS_4], "Vacío", true) == 0)
						    {
						        Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (4)");
						        format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
						        strmid(PlayerInfo[i][pSMS_4], string, 0, strlen(string), 80);
						    }
						    else if(strcmp(PlayerInfo[i][pSMS_5], "Vacío", true) == 0)
						    {
						        Message(i, COLOR_WHITE, "Información: {007711}Tienes un nuevo mensaje en tu buzón de entrada (5)");
						        format(string, sizeof(string),"(%s/%d - %d:%d) Mensaje: %s (RE:%d)", mtext,d,h,m,inputtext,PlayerInfo[playerid][pPnumber]);
						        strmid(PlayerInfo[i][pSMS_5], string, 0, strlen(string), 80);
						    }
					    	else
						    {
						        Message(i, COLOR_WHITE, "Información: {FF4400}Tienes lleno el buzón de entrada. No recibirás mas mensajes. (5/5)");
						        Message(playerid, COLOR_GRAD2, "Operadora: Este número está apagado o fuera de cobertura");
						    }
						}
					}
	        	}
		        else if(TEL_INPUT_ID[playerid] == 3)
		        {
        	 		new phonenumb = strval(inputtext);
          			if(PlayerInfo[playerid][pMinutes] < 1 && phonenumb != 911) return Message(playerid, COLOR_WHITE, "{018CFE}OTECEL: {FFFFFF}Estimado cliente, usted no cuenta con saldo disponible para realizar la llamada.");
            		format(string, sizeof(string), "* %s saca su teléfono.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerAttachedObject(playerid, 0, 18866, 6, 0.03999, 0.00999, 0.00000, -90.00000, 0.00000, 180.00000);
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);

					if(phonenumb == 444)
					{
   						if(TransportDuty[playerid] > 0) return Message(playerid, COLOR_GREY, "¡No puedes llamar a un taxi ahora!");
				    	if(TaxiCalled[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya has llamado un taxi (/cancelar taxi)!");
						ClearChatbox(playerid, 10);
    					Message(playerid, COLOR_WHITE, "*** {EE9900}Compañía de Taxi {FFFFFF}***");
				    	Message(playerid, COLOR_YELLOW2, "{EE9900}Operadora: {FFFFFF}¿ Que servicio necesita ?");
			    		Message(playerid, COLOR_YELLOW2, "{EE9900}Operadora: {FFFFFF}Diga \"TAXI\" si necesita servicio de taxi.");
			    		Message(playerid, COLOR_YELLOW2, "{EE9900}Operadora: {FFFFFF}Diga \"NO\" para cancelar la llamada.");
				    	PlayerInfo[playerid][pMinutes] -= 15;
				    	Mobile[playerid] = 445;
  					}
   					else if(phonenumb == 555)
   					{
   						ClearChatbox(playerid, 10);
	  			   		Message(playerid, COLOR_WHITE, "*** {117799}555 Servicio Mecánico {FFFFFF}***");
		   			   	Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Hola! ¿ Necesita un mecánico ?");
	   				    Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Recuerde venir al taller si necesita Tuning o arreglos menores!");
	   				    Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Si necesita asistencia urgente, diga ASISTENCIA.");
	   				    Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Si quiere anular la llamada diga NO.");
	   			    	PlayerInfo[playerid][pMinutes] -= 15;
	   			    	Mobile[playerid] = 556;
	   				}
					else if(phonenumb == 911)
					{
						ClearChatbox(playerid, 10);
						Message(playerid, COLOR_WHITE, "*** {004488}911 Servicio de Emergencias {FFFFFF}***");
						Message(playerid, COLOR_WHITE, "{004488}Operadora: {FFFFFF}Diga el servicio que necesita, gracias.");
						Message(playerid, COLOR_WHITE, "{004488}Operadora: {FFFFFF}Diga \"Policia\" para contactar con la autoridad.");
     					Message(playerid, COLOR_WHITE, "{004488}Operadora: {FFFFFF}Diga \"SAMUR\" para contactar con los servicios médicos.");
						Mobile[playerid] = 911;
					}
					else if(phonenumb == 111)
					{
    					new pizzaworkers = 0;
        				for(new i=0; i<MAX_PLAYERS; i++)
           				{
              				if(IsPlayerConnected(i))
                 			{
                   				if(PlayerInfo[i][pJob] == 6 && JobDuty[i] == 1)
                      			{
	                        		pizzaworkers++;
    	                      	}
        	                }
            	       	}
					    format(string, sizeof(string), "{E1BB69}%s Necesita Una Pizza. (use {FF0A2F}/AceptarPizza {E1BB69}para aceptar la llamada)", PlayerName(playerid));
				    	SendJobMessage(6, -1, string);
				    	Message(playerid, -1, "   {FF0A2F}*** {FFFFFF}Pizza Stack Delivery {FF0A2F}***");
				    	Message(playerid, COLOR_WHITE, "Operadora: Bueno? Pizza Stack, que desea?");
				    	Message(playerid, COLOR_WHITE, "Operadora: Gracias, su pedido fue informado, si no responden intente más tarde.");
				    	Message(playerid, COLOR_WHITE, "Operadora: Hasta Luego.");
				    	PlayerInfo[playerid][pMinutes] -= 10;
				    	PizzaCall = playerid;
				    	return 1;
					}
					else if(phonenumb == PlayerInfo[playerid][pPnumber])
					{
						Message(playerid, COLOR_WHITE, "El número marcado correspode a su dispositivo móvil");
						return 1;
					}
					else if(Mobile[playerid] != 255)
					{
						Message(playerid, COLOR_WHITE, "¡Usted está en una llamada!");
						return 1;
					}
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
							{
								Mobile[playerid] = i;
								if(IsPlayerConnected(i))
								{
					   				if(giveplayerid != INVALID_PLAYER_ID)
								    {
				        				if(PhoneOnline[i] > 0) return Message(playerid, COLOR_GREY, "¡Fuera de cobertura!");

										if(Mobile[i] == 255)
										{
											format(string, sizeof(string), "{DD1111}iPhone{FFFFFF}: Tu teléfono está sonando #%d, utiliza {DD6611}/contestar", PlayerInfo[playerid][pPnumber]);
											Message(i, COLOR_WHITE, string);
											format(string, sizeof(string), "* El teléfono de %s está sonando.", PlayerName(i));
											ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
											CellTime[playerid] = 1;
											return 1;
										}
									}
								}
							}
						}
					}
    			}
	    	}
		}
		case DIA_RENTA:
		{
			if(response)
		{
			if(HireKey[playerid] != 9999) return SendClientMessage(playerid, COLOR_GREY, "Ya has rentado un vehículo, utiliza /desrentarveh");
			if(Hire_Vehicle(idcar)){
			new found;
			for(new i=0; i<MAX_PLAYERS; i++){
			if(HireKey[i] == idcar){
 			found = 1;
 			SendClientMessage(playerid, COLOR_GRAD2, "Este vehículo ya está rentado");
			break;
			}
				}
				if(found != 1){
				if(CheckMoney(playerid, 125))
			{
			Bought(playerid, 125);
			SendClientMessage(playerid, COLOR_WHITE, "Utiliza /desrentarveh cuando no lo necesites");
			HireKey[playerid] = idcar;
				}
			}
		} else RemovePlayerFromVehicle(playerid);
			return 1;
			}
		}
		case IPHONE_OPTIONS:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
			    	{
				        ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Llamar", "{DD1111}iPhone {FFFFFF}- Inserte el teléfono a llamar\n\n\n\t1\t2\t3\n\t4\t5\t6\n\t7\t8\t9\n\t#\t0\t*", "Enviar", "Cancelar");
						TEL_INPUT_ID[playerid] = 3;
				    }
				    case 1:
			    	{
				        ShowPlayerDialog(playerid, TEL_INPUT, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Enviar SMS", "{DD1111}iPhone {FFFFFF}- Inserte el número del destino del mensaje", "Enviar", "Cancelar");
						TEL_INPUT_ID[playerid] = 1;
				    }
				    case 2:
			    	{
			        	ShowPlayerDialog(playerid, TEL_MSGBOX, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Buzón de entrada", "- \tBuzón de entrada 1\n- \tBuzón de entrada 2\n- \tBuzón de entrada 3\n- \tBuzón de entrada 4\n- \tBuzón de entrada 5", "Ver", "Borrar");
			    	}
				    case 3:
				    {
        	            ShowPlayerDialog(playerid, IPHONE_AGENDA, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Organizador", "- \t\tVer Nota\n- \t\tCrear Nota\n- \t\tBorrar Nota", "Aceptar", "Salir");
				    }
			    	case 4:
			    	{
				        new strsald[256];
				        format(strsald, sizeof(strsald), "{FFFFFF}Estimado cliente, usted cuenta con un saldo de $%d para llamadas a telefono celular\n\t\tEl saldo de su paquete de mensajes escritos es de %d\n\n\t\t\t\t{018CFE}Gracias por utilizar nuestros servicios!", PlayerInfo[playerid][pMinutes]/10, PlayerInfo[playerid][pMTexto]);
				        ShowPlayerDialog(playerid, 312, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Consulta de Saldo", strsald, "Ok", "");
				    }
				}
			}
		}
		case TEL_MSGBOX:
		{
			if(response)
			{
				switch(listitem)
				{
			    	case 0:
			    	{
				        ClearChatbox(playerid, 10);
				        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 1 =======================================================");
				        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pSMS_1]);
				    }
			    	case 1:
			    	{
				        ClearChatbox(playerid, 10);
				        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 2 =======================================================");
				        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pSMS_2]);
				    }
			    	case 2:
			    	{
				        ClearChatbox(playerid, 10);
				        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 3 =======================================================");
				        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pSMS_3]);
				    }
			    	case 3:
			    	{
				        ClearChatbox(playerid, 10);
				        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 4 =======================================================");
				        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pSMS_4]);
				    }
			    	case 4:
			    	{
				        ClearChatbox(playerid, 10);
				        Message(playerid, 0xFF0000FF, "iPhone ======= Buzón 5 =======================================================");
				        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pSMS_5]);
				    }
				}
			}
			else
			{
		    	switch(listitem)
				{
			    	case 0:
			    	{
				        strmid(PlayerInfo[playerid][pSMS_1], "Vacío", 0, strlen("Vacío"), 32);
				        Message(playerid, COLOR_GRAD2, "Mensaje borrado.");
				    }
				    case 1:
			    	{
			        	strmid(PlayerInfo[playerid][pSMS_2], "Vacío", 0, strlen("Vacío"), 32);
				        Message(playerid, COLOR_GRAD2, "Mensaje borrado.");
				    }
				    case 2:
				    {
			    	    strmid(PlayerInfo[playerid][pSMS_3], "Vacío", 0, strlen("Vacío"), 32);
			        	Message(playerid, COLOR_GRAD2, "Mensaje borrado.");
			    	}
				    case 3:
				    {
				        strmid(PlayerInfo[playerid][pSMS_4], "Vacío", 0, strlen("Vacío"), 32);
				        Message(playerid, COLOR_GRAD2, "Mensaje borrado.");
			    	}
				    case 4:
				    {
				        strmid(PlayerInfo[playerid][pSMS_5], "Vacío", 0, strlen("Vacío"), 32);
				        Message(playerid, COLOR_GRAD2, "Mensaje borrado.");
			    	}
				}
			}
		}
		case IPHONE_AGENDA:
		{
 			if(response)
			{
				switch(listitem)
				{
	   				case 0:
				    {
       					ShowPlayerDialog(playerid, IPHONE_AGENDA_VB, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Visualizador de Notas", "- \t\tNota 1\n- \t\tNota 2\n- \t\tNota 3\n- \t\tNota 4\n- \t\tNota 5", "Ver", "Salir");
				        TEL_INPUT_ID[playerid] = 5;
			    	}
				    case 1:
				    {
       					ShowPlayerDialog(playerid, IPHONE_AGENDA_ESCRIBIR, DIALOG_STYLE_INPUT, "{DD1111}iPhone {FFFFFF}- Crear nota", "{DD1111}iPhone {FFFFFF}- Escriba su nota", "Aceptar", "Salir");
				    }
			    	case 2:
			    	{
	       				ShowPlayerDialog(playerid, IPHONE_AGENDA_VB, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Borrador de Notas", "- \t\tNota 1\n- \t\tNota 2\n- \t\tNota 3\n- \t\tNota 4\n- \t\tNota 5", "Borrar", "Salir");
				        TEL_INPUT_ID[playerid] = 0;
				    }
				}
			}
		}
		case IPHONE_AGENDA_ESCRIBIR:
		{
	 		if(response)
			{
  				if(StringOther(playerid, inputtext) == 1)
    			{
	     			if(strcmp(PlayerInfo[playerid][pNote1],"None",true) == 0)
					{
						strmid(PlayerInfo[playerid][pNote1], inputtext, 0, strlen(inputtext), 80);
	    				format(string, sizeof(string), "Nota1: %s", PlayerInfo[playerid][pNote1]);
					    Message(playerid, COLOR_GRAD2, string);
					}
					else if(strcmp(PlayerInfo[playerid][pNote2],"None",true) == 0)
					{
	   					strmid(PlayerInfo[playerid][pNote2], inputtext, 0, strlen(inputtext), 80);
		  				format(string, sizeof(string), "Nota2: %s", PlayerInfo[playerid][pNote2]);
					   	Message(playerid, COLOR_GRAD2, string);
					}
					else if(strcmp(PlayerInfo[playerid][pNote3],"None",true) == 0)
					{
	   					strmid(PlayerInfo[playerid][pNote3], inputtext, 0, strlen(inputtext), 80);
	   					format(string, sizeof(string), "Nota3: %s", PlayerInfo[playerid][pNote3]);
	   					Message(playerid, COLOR_GRAD2, string);
					}
					else if(strcmp(PlayerInfo[playerid][pNote4],"None",true) == 0)
					{
	   					strmid(PlayerInfo[playerid][pNote4], inputtext, 0, strlen(inputtext), 80);
	   					format(string, sizeof(string), "Nota4: %s", PlayerInfo[playerid][pNote4]);
	   					Message(playerid, COLOR_GRAD2, string);
					}
					else if(strcmp(PlayerInfo[playerid][pNote5],"None",true) == 0)
					{
	   					strmid(PlayerInfo[playerid][pNote5], inputtext, 0, strlen(inputtext), 80);
						format(string, sizeof(string), "Nota5: %s", PlayerInfo[playerid][pNote5]);
	   					Message(playerid, COLOR_GRAD2, string);
					}
					else Message(playerid, COLOR_GRAD2, "No tiene páginas libres en su agenda.");
				}
				else Message(playerid, COLOR_GRAD2, "* Has utilizado carácteres no permitidos.");
   			}
		}

		case IPHONE_AGENDA_VB:
		{
	 		if(response)
   			{
  				switch(listitem)
				{
   					case 0:
			    	{
	       				if(TEL_INPUT_ID[playerid] == 5)
				        {
				        	ClearChatbox(playerid, 10);
					        Message(playerid, 0xFF0000FF, "iPhone ======= Nota 1 =======================================================");
					        Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pNote1]);
						}
						else
						{
	    					strmid(PlayerInfo[playerid][pNote1], "None", 0, strlen("None"), 80);
       						Message(playerid, COLOR_GRAD2, "Nota 1 borrada.");
						}
	    			}
				    case 1:
				    {
       					if(TEL_INPUT_ID[playerid] == 5)
				        {
			    	    	ClearChatbox(playerid, 10);
				    	    Message(playerid, 0xFF0000FF, "iPhone ======= Nota 2 =======================================================");
				        	Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pNote2]);
						}
						else
						{
	    					strmid(PlayerInfo[playerid][pNote2], "None", 0, strlen("None"), 80);
       						Message(playerid, COLOR_GRAD2, "Nota 2 borrada.");
						}
	    			}
				    case 2:
				    {
       					if(TEL_INPUT_ID[playerid] == 5)
				        {
			    	    	ClearChatbox(playerid, 10);
				    	    Message(playerid, 0xFF0000FF, "iPhone ======= Nota 3 =======================================================");
				        	Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pNote3]);
						}
						else
						{
	    					strmid(PlayerInfo[playerid][pNote3], "None", 0, strlen("None"), 80);
       						Message(playerid, COLOR_GRAD2, "Nota 3 borrada.");
						}
			   		}
				    case 3:
			    	{
				        if(TEL_INPUT_ID[playerid] == 5)
			    	    {
			        		ClearChatbox(playerid, 10);
				        	Message(playerid, 0xFF0000FF, "iPhone ======= Nota 4 =======================================================");
				        	Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pNote4]);
						}
						else
						{
	    					strmid(PlayerInfo[playerid][pNote4], "None", 0, strlen("None"), 80);
       						Message(playerid, COLOR_GRAD2, "Nota 4 borrada.");
						}
		    		}
				    case 4:
			    	{
				        if(TEL_INPUT_ID[playerid] == 5)
			    	    {
			        		ClearChatbox(playerid, 10);
				        	Message(playerid, 0xFF0000FF, "iPhone ======= Nota 5 =======================================================");
				        	Message(playerid, COLOR_GRAD2, PlayerInfo[playerid][pNote5]);
						}
						else
						{
	    					strmid(PlayerInfo[playerid][pNote5], "None", 0, strlen("None"), 80);
       						Message(playerid, COLOR_GRAD2, "Nota 5 borrada.");
						}
	    			}
				}
			}
		}


		case DRUGS_DIALOG:
		{
		    if(response)
		    {
	    	    if(strval(inputtext) > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "No tienes esa cantidad!");
	        	new drug[12];
	        	switch(NarcoSellArm[playerid]){
		            case 1:		drug = "Speed";
		            case 2:		drug = "Extasis";
	    	        case 3:		drug = "Ritalin";
	        	    case 4:		drug = "Heroina";
	            	case 5:		drug = "Marihuana";
         		}
		        NarcoSellPrice[playerid] = strval(inputtext);
		        BuyNarco[BuyNarco[playerid]] = playerid;
	    	    format(string, sizeof(string), "\tDEMANDA DE DROGAS (%s)\t\n Drogas: %d - Tipo: %s - Precio: %d$",PlayerName(playerid),NarcoSellAmmo[playerid],drug,NarcoSellPrice[playerid]);
	        	ShowPlayerDialog(BuyNarco[playerid], CONFIRM_DRUGS_DIALOG, DIALOG_STYLE_MSGBOX, "Comprar drogas", string, "Aceptar", "Cancelar");
	    	}
		}
		case CONFIRM_DRUGS_DIALOG:
		{
		    if(response)
			{
			    if(NarcoSellPrice[BuyNarco[playerid]] > GetPlayerMoney(BuyNarco[playerid])) return Message(playerid, COLOR_GRAD2, "No tiene esa cantidad!");

				new drug[12];
				switch(NarcoSellArm[BuyNarco[playerid]]){
				    case 1:		drug = "Speed";
				    case 2:		drug = "Extasis";
			    	case 3:		drug = "Ritalin";
			  	  	case 4:		drug = "Heroina";
			    	case 5:		drug = "Marihuana";
   				}
				format(string, sizeof(string), "* %s compró a %s %d gramos de %s por %d$", PlayerName(BuyNarco[playerid]), PlayerName(playerid),NarcoSellAmmo[BuyNarco[playerid]],drug,NarcoSellPrice[BuyNarco[playerid]]);
				Message(playerid, COLOR_WHITE, string);
				Message(BuyNarco[playerid], COLOR_WHITE, string);

				Bought(BuyNarco[playerid], NarcoSellPrice[BuyNarco[playerid]]);
				Earn(playerid, NarcoSellPrice[BuyNarco[playerid]]);

				switch(NarcoSellArm[BuyNarco[playerid]]){
				    case 1:	{PlayerInfo[BuyNarco[playerid]][pSpeed] += NarcoSellAmmo[BuyNarco[playerid]]; PlayerInfo[playerid][pSpeed] -= NarcoSellAmmo[BuyNarco[playerid]];}
				    case 2:	{PlayerInfo[BuyNarco[playerid]][pEctasy] += NarcoSellAmmo[BuyNarco[playerid]]; PlayerInfo[playerid][pEctasy] -= NarcoSellAmmo[BuyNarco[playerid]];}
				    case 3:	{PlayerInfo[BuyNarco[playerid]][pRitalin] += NarcoSellAmmo[BuyNarco[playerid]]; PlayerInfo[playerid][pRitalin] -= NarcoSellAmmo[BuyNarco[playerid]];}
			    	case 4:	{PlayerInfo[BuyNarco[playerid]][pHeroina] += NarcoSellAmmo[BuyNarco[playerid]]; PlayerInfo[playerid][pHeroina] -= NarcoSellAmmo[BuyNarco[playerid]];}
			    	case 5:	{PlayerInfo[BuyNarco[playerid]][pMarihuana] += NarcoSellAmmo[BuyNarco[playerid]]; PlayerInfo[playerid][pMarihuana] -= NarcoSellAmmo[BuyNarco[playerid]];}
				}
				BuyNarco[playerid] = 0;
				BuyNarco[BuyNarco[playerid]] = 0;

				NarcoSellPrice[playerid] = 0;
				NarcoSellPrice[BuyNarco[playerid]] = 0;

				NarcoSellArm[playerid] = 0;
				NarcoSellArm[BuyNarco[playerid]] = 0;

				NarcoSellAmmo[playerid] = 0;
				NarcoSellAmmo[BuyNarco[playerid]] = 0;
	    	}
		}
		case DIALOG_HIT:
		{
	 	    if(response)
 		    {
 	    	    if(strval(inputtext) < 1 || strval(inputtext) > 299) return Message(playerid, COLOR_GRAD2, "ERROR! Skin de 1 a 299");
            	if(CheckMoney(playerid,200))
				{
	                PlayerInfo[playerid][pChar] = strval(inputtext);
    	            SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			    }
		    	return 1;
	    	}
		}
		case EQUIPO_CORTEJUDICIAL:
		{
	 	    if(response)
 		    {
   	        	switch(listitem)
	        	{
			        case 0:
			        {
        	            if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 147); }
		                SetHP(playerid, 100);
	                    SetPlayerArmour(playerid, 100);
						format(string, sizeof(string), "* %s se pone el uniforme de Abogado.", PlayerName(playerid));
						ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
			        case 1:
			        {
                        if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 227); }
		                SetHP(playerid, 100);
	                    SetPlayerArmour(playerid, 100);
						format(string, sizeof(string), "* %s se pone el uniforme de Fiscal.", PlayerName(playerid));
						ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 2:
					{
        	            if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 187); }
		                SetHP(playerid, 100);
	                    SetPlayerArmour(playerid, 100);
						format(string, sizeof(string), "* %s se pone el uniforme de Juez.", PlayerName(playerid));
						ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 3:
					{
        	            if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 228); }
		                SetHP(playerid, 100);
	                    SetPlayerArmour(playerid, 100);
						format(string, sizeof(string), "* %s se pone el uniforme de Juez Supremo.", PlayerName(playerid));
						ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		case EQUIPO_HITMAN:
		{
	 	    if(response)
 		    {
 	    	    ResetPlayerWeapons(playerid);
   	        	switch(listitem)
	        	{
			        case 0:
			        {
        	            SetHP(playerid, 100);
            	        SetPlayerArmour(playerid, 100);
                	    SafeGivePlayerWeapon(playerid, 4, 1);
						SafeGivePlayerWeapon(playerid, 23, 300);
		        	}
			        case 1:
			        {
        	            SetHP(playerid, 100);
            	        SetPlayerArmour(playerid, 100);
                	    SafeGivePlayerWeapon(playerid, 4, 1);
						SafeGivePlayerWeapon(playerid, 34, 300);
					}
					case 2:
					{
        	            SetHP(playerid, 100);
            	        SetPlayerArmour(playerid, 100);
                	    SafeGivePlayerWeapon(playerid, 4, 1);
						SafeGivePlayerWeapon(playerid, 24, 300);
					}
					case 3:
					{
        	            SetHP(playerid, 100);
            	        SetPlayerArmour(playerid, 100);
					}
				}
			}
		}
		case GOOGLE:
		{
		    if(response)
		    {
		        Bought(playerid, 3);
		        Till(12, 3);
	    	    if(strfind(inputtext, "Concesionario", true) != -1)
				{
			    	ClearChatbox(playerid,10);
				    Message(playerid, COLOR_BLUE, "www.mundoauto.com - Todo tipo de vehículos a tu alcanze!");
				    SetPlayerCheckpoint(playerid, 1654.5254,-1655.7502,22.5156, 10.0);
				    Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
				    return 1;
				}
				else if(strfind(inputtext, "Ropa", true) != -1)
				{
				    ClearChatbox(playerid,10);
				    Message(playerid, COLOR_RED2, "www.victim.eu - Llévalo con orgullo");
			    	SetPlayerCheckpoint(playerid, 460.6988,-1501.1395,31.0564, 10.0);
			    	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    	return 1;
				}
				else if(strfind(inputtext, "Trabajo", true) != -1)
				{
				    ClearChatbox(playerid,10);
				    Message(playerid, COLOR_GREEN, "Trabajo de disponibles en: www.amantedelparo.org");
			    	Message(playerid, COLOR_GRAD2, "- Vendedor moviles");
			    	Message(playerid, COLOR_GRAD2, "- Barrendero");
			    	Message(playerid, COLOR_GRAD2, "- Conductor de Tren");
			    	Message(playerid, COLOR_GRAD2, "- Piloto");
			    	Message(playerid, COLOR_GRAD2, "- Ladrón");
			    	Message(playerid, COLOR_GRAD2, "- Pizzero");
			    	Message(playerid, COLOR_GRAD2, "- Pescador");
		    		Message(playerid, COLOR_GRAD2, "- Camionero");
		    		return 1;
				}
				else if(strfind(inputtext, "Vendedor", true) != -1)
				{
				    ClearChatbox(playerid,10);
					Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
					SetPlayerCheckpoint(playerid, 994.3785,-1296.4718,13.5469, 10.0);
					return 1;
				}
				else if(strfind(inputtext, "Pizzero", true) != -1)
				{
        	        ClearChatbox(playerid,10);
            	    SetPlayerCheckpoint(playerid, 2104.5273,-1806.6123,13.5547, 10.0);
                	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
                	return 1;
				}
				else if(strfind(inputtext, "Camionero", true) != -1)
				{
        	        ClearChatbox(playerid,10);
            	    SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 10.0);
                	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
                	return 1;
				}
				else if(strfind(inputtext, "Barrendero", true) != -1)
				{
				    ClearChatbox(playerid,10);
					SetPlayerCheckpoint(playerid, 1616.0780,-1896.7744,13.5490, 10.0);
					Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
					return 1;
				}
				else if(strfind(inputtext, "Piloto", true) != -1)
				{
				    ClearChatbox(playerid,10);
            	    SetPlayerCheckpoint(playerid, 1957.3217,-2183.6399,13.5469, 10.0);
                	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
                	return 1;
				}
				else if(strfind(inputtext, "Tren", true) != -1)
				{
				    ClearChatbox(playerid,10);
					SetPlayerCheckpoint(playerid, 1684.6482,-1944.7058,13.5469, 10.0);
					Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
					return 1;
				}
				else if(strfind(inputtext, "Ladron", true) != -1)
				{
				    ClearChatbox(playerid,10);
					SetPlayerCheckpoint(playerid, 2275.2427,-1105.6196,37.9766, 10.0);
					Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
					return 1;
				}
				else if(strfind(inputtext, "Renta", true) != -1)
				{
				    ClearChatbox(playerid,10);
				    Message(playerid, COLOR_BLUE, "www.mecanico-ls.ls - Reparacion y alquiler de vehículos");
			    	SetPlayerCheckpoint(playerid, 1597.0762,-2194.6619,13.3750, 10.0);
			    	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    	return 1;
				}
				else if(strfind(inputtext, "Banco", true) != -1)
				{
			    	ClearChatbox(playerid,10);
				    Message(playerid, COLOR_GREEN, "www.dowjones.org - Banco central de Los Santos");
				    SetPlayerCheckpoint(playerid, 300.0895,-1611.6455,33.1248, 10.0);
				    Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
				    return 1;
				}
				else if(strfind(inputtext, "Biblioteca", true) != -1)
				{
				    ClearChatbox(playerid,10);
				    Message(playerid, COLOR_GREEN, "www.bookandstudy.org - Biblioteca de Los Santos");
			    	SetPlayerCheckpoint(playerid, 1546.6545,-1097.5780,25.0625, 10.0);
                	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
                	return 1;
            	}
				else if(strfind(inputtext, "Ammunation", true) != -1)
				{
			    	ClearChatbox(playerid,10);
			    	Message(playerid, COLOR_RED, "www.armas-legales.com - Ammunation Roosevelt");
			    	SetPlayerCheckpoint(playerid, 1368.4303,-1280.0046,13.5469, 10.0);
			    	Message(playerid, 0xD9006CFF, "- Dirígete al Checkpoint!");
			    	return 1;
				}
	    	}
		}
		case BRILLO_GAFAS:
		{
		    if(response)
	        {
                if(!strcmp(inputtext, "Luminoso", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000025);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                }
                if(!strcmp(inputtext, "Normal", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000040);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                }
                if(!strcmp(inputtext, "Oscuro", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000055);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                }
                if(!strcmp(inputtext, "MuyOscuro", true))
                {
                        TextDrawHideForPlayer(playerid, SunGlasses);
                        TextDrawBoxColor(SunGlasses, 0x00000065);
                        TextDrawShowForPlayer(playerid, SunGlasses);
                }
         	}
		}
		case PETITION_DIALOG:
		{
	    if(response)
		    {
		        format(string, sizeof(string), "* %s acepta una petición.", PlayerName(playerid));
      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        	if(Petition_ID[playerid] == 1)
	        	{
					format(string, sizeof(string), "* %s aceptó tu entrevista", PlayerName(playerid));
					Message(LiveOffer[playerid], 0x00FFFFFF, string);
					format(string, sizeof(string), "* Aceptaste la entrevista de %s", PlayerName(LiveOffer[playerid]));
					Message(playerid, 0x00FFFFFF, string);
					Message(playerid, COLOR_YELLOW, "* Utiliza (/c) para hablar fuera de antena. Y (/centrevista) para salir de la entrevista.");
					Message(LiveOffer[playerid], COLOR_YELLOW, "* Utiliza (/c) para hablar fuera de antena. Y (/centrevista) para cancelar la entrevista.");
					TalkingLive[playerid] = 1;
					TalkingLive[LiveOffer[playerid]] = 1;
					Facturing[playerid] = 0;
					Petition_ID[playerid] = 0;
	        	}
		        else if(Petition_ID[playerid] == 2)
		        {
	    	        if(CheckMoney(playerid,NarcoSellPrice[playerid]))
	        	    {
		        	    new gunname[12];
		            	GetWeaponName(NarcoSellArm[playerid], gunname, sizeof(gunname));
						format(string, sizeof(string), "* %s compra a %s una %s con %d balas por %d",PlayerName(playerid), PlayerName(BuyNarco[playerid]),gunname,NarcoSellAmmo[playerid],NarcoSellPrice[playerid]);
						Message(playerid, COLOR_WHITE, string);
						Message(BuyNarco[playerid], COLOR_WHITE, string);
						SafeGivePlayerWeapon(playerid,NarcoSellArm[playerid],NarcoSellAmmo[playerid]);
						SafeGivePlayerWeapon(BuyNarco[playerid],NarcoSellArm[playerid],-NarcoSellAmmo[playerid]);
						Bought(playerid, NarcoSellPrice[playerid]);
						Earn(BuyNarco[playerid], NarcoSellPrice[playerid]);
						Facturing[playerid] = 0;
						Petition_ID[playerid] = 0;
						BuyNarco[playerid] = 999;
						NarcoSellPrice[playerid] = 0;
						NarcoSellArm[playerid] = 0;
						NarcoSellAmmo[playerid] = 0;
					}
					else
					{
						Message(playerid, COLOR_GRAD2, "No tienes dinero suficiente!");
						Message(BuyNarco[playerid], COLOR_GRAD2, "El comprador no tiene suficiente dinero!");
						BuyNarco[playerid] = 999;
						NarcoSellPrice[playerid] = 0;
						NarcoSellArm[playerid] = 0;
						NarcoSellAmmo[playerid] = 0;
						Facturing[playerid] = 0;
						Petition_ID[playerid] = 0;
						return 1;
					}
	        	}
	        	else if(Petition_ID[playerid] == 3)
		        {
		            Message(playerid, COLOR_WHITE, "¡Felicidades! Tienes nuevo vehículo, utiliza /papeles");
		            Message(OwnableCarOffer[playerid], COLOR_WHITE, "Has vendido tu vehículo!");
					RemovePlayerFromVehicle(OwnableCarOffer[playerid]);
					Bought(playerid, OwnableCarPrice[playerid]);
					Earn(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
					PlayerInfo[playerid][pPcarkey] = OwnableCarID[playerid];
       				PlayerInfo[playerid][pTimeCar] = gettime() + 1296000;
					PlayerInfo[OwnableCarOffer[playerid]][pPcarkey] = 9999;
					PlayerInfo[OwnableCarOffer[playerid]][pTimeCar] = 0;
					CarInfo[OwnableCarID[playerid]][cVehTime] = gettime() + 1296000;
					strmid(CarInfo[OwnableCarID[playerid]][cOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 999);
					Petition_ID[playerid] = 0;
      				Facturing[playerid] = 0;
					OwnableCarOffer[playerid] = 999;
					OwnableCarID[playerid] = 999;
					OwnableCarPrice[playerid] = 0;
					UpdateCars();
	        	}
		        else if(Petition_ID[playerid] == 4)
		        {
	    	        Message(playerid, COLOR_WHITE, "¡Felicidades! Tienes nuevo vehículo, utiliza /papeles2");
	        	    Message(OwnableCarOffer[playerid], COLOR_WHITE, "Has vendido tu vehículo!");
					RemovePlayerFromVehicle(OwnableCarOffer[playerid]);
					Bought(playerid, OwnableCarPrice[playerid]);
					Earn(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
					PlayerInfo[playerid][pPcarkey2] = OwnableCarID[playerid];
       				PlayerInfo[playerid][pTimeCar2] = gettime() + 1296000;
					PlayerInfo[OwnableCarOffer[playerid]][pPcarkey2] = 9999;
					PlayerInfo[OwnableCarOffer[playerid]][pTimeCar2] = 0;
					CarInfo[OwnableCarID[playerid]][cVehTime] = gettime() + 1296000;
					strmid(CarInfo[OwnableCarID[playerid]][cOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 999);
					Petition_ID[playerid] = 0;
      				Facturing[playerid] = 0;
					OwnableCarOffer[playerid] = 999;
					OwnableCarID[playerid] = 999;
					OwnableCarPrice[playerid] = 0;
					UpdateCars();
	        	}
	    	}
		    else
		    {
	    	    format(string, sizeof(string), "* %s rechaza una petición.", PlayerName(playerid));
      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        	if(Petition_ID[playerid] == 1)
	        	{
					format(string, sizeof(string), "* %s rechazó tu entrevista. Utiliza (/centrevista) para terminar la entrevista.", PlayerName(playerid));
					Message(LiveOffer[playerid], 0x00FFFFFF, string);
					format(string, sizeof(string), "* Rechazaste la entrevista de %s", PlayerName(LiveOffer[playerid]));
					Message(playerid, 0x00FFFFFF, string);
					Facturing[playerid] = 0;
					Petition_ID[playerid] = 0;
	        	}
		        else if(Petition_ID[playerid] == 2)
		        {
					format(string, sizeof(string), "* %s rechazó comprarte el arma.",PlayerName(playerid));
					Message(BuyNarco[playerid], COLOR_WHITE, string);
	            	BuyNarco[playerid] = 999;
					NarcoSellPrice[playerid] = 0;
					NarcoSellArm[playerid] = 0;
					NarcoSellAmmo[playerid] = 0;
					Facturing[playerid] = 0;
					Petition_ID[playerid] = 0;
	        	}
		        else if(Petition_ID[playerid] == 3)
		        {
					format(string, sizeof(string), "* %s rechazó comprarte el vehículo.",PlayerName(playerid));
					Message(OwnableCarOffer[playerid], COLOR_WHITE, string);
	            	Petition_ID[playerid] = 0;
      				Facturing[playerid] = 0;
					OwnableCarOffer[playerid] = 999;
					OwnableCarID[playerid] = 999;
					OwnableCarPrice[playerid] = 0;
	        	}
		        else if(Petition_ID[playerid] == 4)
		        {
					format(string, sizeof(string), "* %s rechazó comprarte el vehículo.",PlayerName(playerid));
					Message(OwnableCarOffer[playerid], COLOR_WHITE, string);
	            	Petition_ID[playerid] = 0;
					Facturing[playerid] = 0;
					OwnableCarOffer[playerid] = 999;
					OwnableCarID[playerid] = 999;
					OwnableCarPrice[playerid] = 0;
	        	}
	    	}
		}
		case DIALOG_SO:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
	                    format(string, sizeof(string), "Atención: %s [%d] ha solicitado a un Ayudante.", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 1);
	                    PlayerSol[playerid] = 1;
	                    Message(playerid, -1, "{1AFF2A}HZ-RP{FFFFFF}: En breve un Ayudante le dará soporte");
					}
					case 1:
					{
	                    format(string, sizeof(string), "Atención: %s [%d] ha solicitado a un Moderador.", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 1);
	                    PlayerSol[playerid] = 1;
	                    Message(playerid, -1, "{1AFF2A}HZ-RP{FFFFFF}: En breve un moderador le dará soporte");
					}
					case 2:
					{
	                    format(string, sizeof(string), "Atención: %s [%d] ha solicitado a un Administrador.", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 1);
	                    PlayerSol[playerid] = 1;
	                    Message(playerid, -1, "{1AFF2A}HZ-RP{FFFFFF}: En breve un Administrador le dará soporte");
					}
					case 3:
					{
	                    format(string, sizeof(string), "Atención: %s [%d] ha solicitado a un Técnico [2012].", PlayerName(playerid), playerid);
	                    ABroadCast(0xEBBDA3FF, string, 1);
	                    PlayerSol[playerid] = 1;
	                    Message(playerid, -1, "{1AFF2A}HZ-RP{FFFFFF}: En breve un Técnico le brindará ayuda en lo que necesite.");
					}
				}
			}
		}
		case DLOGIN:
		{
	        if (response)
    	    {
        		if(IsNull(inputtext))
            	{
	                ShowLoginDialog(playerid,DLOGIN);
    	            return 1;
				}
				new string2[128], PlayerPass[32], playername2[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playername2, sizeof(playername2));
				format(string2, sizeof(string2), "users/%s.ini", playername2);
				INI_ParseFile(string2, "GetPlayerPass", .bExtra = true,  .extra = playerid);
				GetPVarString(playerid, "pPassword", PlayerPass, 32);
				if(!strcmp(PlayerPass, inputtext))
				{
				    format(string2, sizeof(string2), "users/%s.ini", playername2);
  		    		INI_ParseFile(string2, "LoadUser", false, true, playerid, true, false );
    		    	OnPlayerLogin(playerid);
   	    		}
	            else
				{
					ClearChatbox(playerid, 10);
  					ShowLoginDialog(playerid,DLOGIN);
					Message(playerid, COLOR_WHITE, "Contraseña {DD1111}INCORRECTA");
					gPlayerLogTries[playerid] += 1;
					if(gPlayerLogTries[playerid] == 4) { Kick(playerid); }
				}
	        }
    	    else
			{
            	Kick(playerid);
        	}
	        return 1;
    	}
    	case DREGISTER:
    	{
	        if (response)
    	    {
        	    if(strlen(inputtext) > 18)
            	{
	                Message(playerid, COLOR_GRAD2, "¡Contraseña con un máximo de 18 carácteres!");
    	            ShowRegisterDialog(playerid,DREGISTER);
        	        return 1;
            	}
	            if(IsNull(inputtext))
    	        {
        	        ShowRegisterDialog(playerid,DREGISTER);
            	    return 1;
            	}
				OnPlayerRegister(playerid,inputtext);
				ShowLoginDialog(playerid,DLOGIN);
        	}
	        else
    	    {
        	    Kick(playerid);
        	}
			return 1;
    	}
    	case DIALOG_REG_MSN:
    	{
	        if(response)
    	    {
        	    new str[2] = "@";
            	if(strfind(inputtext, str, true) != -1 && strfind(inputtext, "=", true) == -1)
				{
					strmid(PlayerInfo[playerid][pMSN], inputtext, 0, strlen(inputtext), 48);
					format(string,sizeof(string),"¿ Confirmas tu e-mail %s ?",PlayerInfo[playerid][pMSN]);
					ShowPlayerDialog(playerid, DIALOG_REG_MSNC, DIALOG_STYLE_MSGBOX, "Información", string, "Confirmar", "Cancelar");
				} else return ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Formato Inválido","Has insertado un formato inválido \n Ej: tuemail@hotmail.com","Registrar","Cancelar");
    	    } else return ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Rellena tus datos","Para poder jugar debes registrar tu e-mail","Registrar","Cancelar");
		}
		case DIALOG_REG_MSNC:
		{
		    if(response)
		    {
		        ShowPlayerDialog(playerid,DIALOG_REG_TUT,DIALOG_STYLE_MSGBOX,"{00DD00}Fin del registro",   \
				"{FFFFFF}Información previa al tutorial:\n\n\
				En el tutorial puedes pasar de página cuando tu desees.\n \
				Lee con mucha atención el tutorial para evitar dudas obvias del servidor.\n\n \
				Utiliza la tecla ESPACIO (sprint, correr) para pasar de concepto/página.\n \
				Utiliza la tecla C (crouch, agacharse) para comenzar de nuevo el tutorial.\n\n\
				\t\t\t¿ Listo para ver ver el tutorial ?"	,"Ver","");
				return 1;
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Rellena tus datos","Para poder jugar debes registrar tu e-mail","Registrar","Cancelar");
			}
		}
		case DIALOG_REG_TUT:
		{
		    if(response)
		    {
		        ClearChatbox(playerid, 10);
	    	    Message(playerid, COLOR_YELLOW2, "Fin del registro. Ahora verás el tutorial, si sabes rolear puedes usar /saltartutorial");
	        	TutTime[playerid] = 5;
	        	TutorialStep_Forward(playerid);
	        	SetPlayerVirtualWorld(playerid, 9);
			}
		}
		case UMBRELLA7_DIALOG:
		{
	 		if(response)
   			{
     			new servicio[128];
				strmid(servicio, inputtext, 0, strlen(inputtext), 255);
     			format(string, sizeof(string), "* Petición de Servicio: %s", inputtext);
				SendRadioMessage(8,TEAM_RADIO_COLOR,string);
				format(string, sizeof(string), "* Cliente: %s - Contacto: %d", PlayerName(playerid), contacto);
				SendRadioMessage(8,TEAM_RADIO_COLOR,string);
				Message(playerid, COLOR_WHITE, "* Su petición de servicio ha sido enviada. Porfavor, espere la respuesta de un agente.");
				Message(playerid, COLOR_WHITE, "* La operación puede tardar diversos minutos. Su teléfono y nombre quedaron registrados.");
   			}
		}
		case U7_OPEN:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
					case 0:
					{
    					if(Revisado[playerid] == 1 || Moteros(playerid))
			        	{
							SetPlayerChatBubble(GetClosestNPC(playerid,5), "Adiós!", COLOR_WHITE, 25.0, 5000);
			             	ProxDetector(40.0, playerid, "Agente Richard: Adiós",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			              	MoveDynamicObject(u7d3, 247.81130981445, 110.8671875, 1002.21875, 0.5, -1000.0, -1000.0, -1000.0);
				        }
						else
						{
							SetPlayerChatBubble(GetClosestNPC(playerid,5), "Tendrías que estar a fuera!", COLOR_WHITE, 25.0, 5000);
			             	ProxDetector(40.0, playerid, "Agente Richard: Tendrías que estar a fuera!",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						}
					}
					case 1:
					{
					    if(Moteros(playerid))
					    {
							SetPlayerChatBubble(GetClosestNPC(playerid,5), "La policía llegará en breve!", COLOR_WHITE, 25.0, 5000);
		    	         	ProxDetector(40.0, playerid, "Agente Richard: La policía llegará en breve! Sálvese quien pueda!",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		        	     	MoveDynamicObject(u7d3, 247.81130981445, 110.8671875, 1002.21875, 0.5, -1000.0, -1000.0, -1000.0);
							SendRadioMessage(1, TEAM_BLUE_COLOR, "La Empresa de Investigacion está siendo asaltada!");
				    	} else return ProxDetector(40.0, playerid, "Agente Richard: Ati no te voy a obedecer!",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					}
	    	    }
	    	}
		}
		case EQUIPO_PIZZA:
		{
		    if(response)
		    {
	    	    ResetPlayerWeapons(playerid);
	        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        	switch (listitem)
	        	{
	            	case 0:
	            	{
         				Skin(playerid, 155);
						format(string, sizeof(string), "* %s se viste con su ropa de pizzero.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 1:
					{
						Skin(playerid, PlayerInfo[playerid][pChar]);
						format(string, sizeof(string), "* %s se viste con su ropa normal.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		case EQUIPO_FBI:{
		    if(response){
		        ResetPlayerWeapons(playerid);
	    	    switch (listitem){
	        	    case 0:{
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 300);
								SafeGivePlayerWeapon(playerid, 41, 1000);
                                if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 286); }
								if(PlayerInfo[playerid][pSex] == 2) { Skin(playerid, 12); }
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se pone el uniforme de FBI.", PlayerName(playerid));
								ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 1:{
				                SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 17, 20);
								SafeGivePlayerWeapon(playerid, 29, 1000);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								SafeGivePlayerWeapon(playerid, 27, 1850);
								SafeGivePlayerWeapon(playerid, 34, 1850);
								SafeGivePlayerWeapon(playerid, 31, 1250);
								if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 286); }
								if(PlayerInfo[playerid][pSex] == 2) { Skin(playerid, 12); }
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se pone el uniforme de FBI.", PlayerName(playerid));
									ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 2:{
				                if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "¡No puedes utilizar esta opción!");
				                SafeGivePlayerWeapon(playerid, 43, 200);
				                SafeGivePlayerWeapon(playerid, 24, 300);
								if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 286); }
								if(PlayerInfo[playerid][pSex] == 2) { Skin(playerid, 12); }
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se pone su uniforme de Criminalista.", PlayerName(playerid));
								ProxDetector(2.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 3:{
								if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 137); }
								if(PlayerInfo[playerid][pSex] == 2) { Skin(playerid, 152); }
								PlayerInfo[playerid][pMask] = 1;
								SafeGivePlayerWeapon(playerid, 24, 200);
								SafeGivePlayerWeapon(playerid, 43, 75);
								Message(playerid, -1, "Estas encubierto y tienes una máscara. [/mascara]");
					}
					case 4:{
								if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 135); }
								if(PlayerInfo[playerid][pSex] == 2) { Skin(playerid, 151); }
								PlayerInfo[playerid][pMask] = 1;
								SafeGivePlayerWeapon(playerid, 24, 200);
								SafeGivePlayerWeapon(playerid, 43, 75);
								Message(playerid, -1, "Estas encubierto y tienes una máscara. [/mascara]");
					}
					case 5:
					{
								if(PlayerInfo[playerid][pSex] == 1) { Skin(playerid, 98); }
								if(PlayerInfo[playerid][pSex] == 2) { Skin(playerid, 172); }
								PlayerInfo[playerid][pMask] = 1;
								SafeGivePlayerWeapon(playerid, 24, 200);
								SafeGivePlayerWeapon(playerid, 43, 75);
								Message(playerid, -1, "Estas encubierto y tienes una máscara. [/mascara]");
					}
					case 6:
					{
								SetPlayerArmour(playerid, 200);
								SetHP(playerid, 100);
					}
					case 7:{
				                Skin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con su ropa normal.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		case EQUIPO_NG:{
		    if(response){
		        ResetPlayerWeapons(playerid);
	    	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        	switch (listitem){
	            	case 0:{
				                SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 31, 3250);
								Skin(playerid, 179);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de entrenamiento.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
	            	case 1:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 46, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 31, 3250);
								SafeGivePlayerWeapon(playerid, 29, 5250);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de Soldado.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
		            case 2:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 34, 200);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se equipa con armas de Francotirador.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
	        	    case 3:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 29, 500);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste y equipa con US Army Liviana.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
	            	case 4:{
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 29, 500);
								SafeGivePlayerWeapon(playerid, 27, 400);
								SafeGivePlayerWeapon(playerid, 31, 4400);
								SafeGivePlayerWeapon(playerid, 16, 8);
								Skin(playerid, 287);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste y equipa con US Army Pesada.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
		            case 5:{
								Skin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con su ropa normal.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
	        	    case 6:{
				                SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s coje un chaleco antibalas.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		case EQUIPO_DIALOG:
		{
		    if(response)
		    {
	    	    ResetPlayerWeapons(playerid);
	        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        	switch (listitem)
	        	{
	        	    case 0:
					{
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 300);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								Skin(playerid, 71);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de Cadete.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 1:
					{
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								SafeGivePlayerWeapon(playerid, 25, 1000);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								Skin(playerid, 280);
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) { Skin(playerid, 280); }
								if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) { Skin(playerid, 282); }
								format(string, sizeof(string), "* %s se viste con uniforme de Agente.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 2:
					{
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 25, 700);
								SafeGivePlayerWeapon(playerid, 29, 1000);
								Skin(playerid, 284);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* %s se viste con uniforme de Motorista.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 3:
					{
				                if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 17, 20);
								SafeGivePlayerWeapon(playerid, 29, 1000);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								SafeGivePlayerWeapon(playerid, 27, 1850);
								SafeGivePlayerWeapon(playerid, 34, 1850);
								SafeGivePlayerWeapon(playerid, 31, 1250);
								SetPlayerArmour(playerid, 200);
								SetHP(playerid, 100);
								Skin(playerid, 285);
								format(string, sizeof(string), "* %s se viste con equipo de Antidisturbio.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SetPlayerAttachedObject( playerid, 0, 18637, 5, -0.027496, -0.114117, -0.139993, 69.771209, 0.000000, 75.639694, 1.000000, 1.000000, 1.000000 );
								Att_Obj_Slot_0[playerid] = "Escudo Táctico";
								SetPlayerAttachedObject( playerid, 3, 368, 2, -0.012214, 0.055286, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
								Att_Obj_Slot_3[playerid] = "Vision Nocturna";
								SetPlayerAttachedObject( playerid, 4, 1672, 7, 0.000280, 0.024868, -0.122518, 103.762588, 274.482788, 268.962951, 1.000000, 1.000000, 1.000000 );
								Att_Obj_Slot_4[playerid] = "Granada gas";
					}
					case 4:
					{
				                if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
				                SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 25, 500);
								SafeGivePlayerWeapon(playerid, 29, 1000);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								Skin(playerid, 265);
								format(string, sizeof(string), "* %s se viste con uniforme de Inspector.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 5:
					{
				                if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
								SafeGivePlayerWeapon(playerid, 4, 1);
								SafeGivePlayerWeapon(playerid, 25, 500);
								SafeGivePlayerWeapon(playerid, 41, 1250);
								SafeGivePlayerWeapon(playerid, 43, 500);
								SetHP(playerid, 100);
								SetPlayerArmour(playerid, 100);
								Skin(playerid, 217);
								format(string, sizeof(string), "* %s se viste con uniforme de Policía Científica.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 6:
					{
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 25, 500);
								SafeGivePlayerWeapon(playerid, 29, 500);
								SetHP(playerid, 100);
								if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) { Skin(playerid, 283); }
								if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) { Skin(playerid, 288); }
								format(string, sizeof(string), "* %s se viste con el traje de Comisario.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 7:
					{
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
								SetPlayerArmour(playerid, 100);
								SetHP(playerid, 100);
								format(string, sizeof(string), "* %s se coloca el chaleco antibalas.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 8:
					{
				                if(OnDuty[playerid] != 1) return Message(playerid, COLOR_GRAD2, "No estás de servicio!");
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "No puedes utilizar esta opción!");
								SafeGivePlayerWeapon(playerid, 3, 1);
								SafeGivePlayerWeapon(playerid, 24, 500);
								format(string, sizeof(string), "* %s agarra su pistola & porra.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 9:
					{
								Skin(playerid, PlayerInfo[playerid][pChar]);
								SafeGivePlayerWeapon(playerid, 24, 175);
								format(string, sizeof(string), "* %s se viste con ropa normal.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		case EQUIPO_DIALOG3:
		{
		    if(response)
		    {
	    	    ResetPlayerWeapons(playerid);
	        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        	switch (listitem)
	        	{
		            case 0:
					{
				                if(PlayerInfo[playerid][pRank] < 2) return Message(playerid, COLOR_GRAD2, "Rango insuficiente!");
								SafeGivePlayerWeapon(playerid, 23, 200);
								SafeGivePlayerWeapon(playerid, 43, 100);
								Skin(playerid, 166);
							 	SetHP(playerid, 100);
								format(string, sizeof(string), "* Detective %s se viste con su uniforme.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 1:
					{
				                if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "Rango insuficiente!");
								SafeGivePlayerWeapon(playerid, 24, 200);
								Skin(playerid, 165);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* Guardaespaldas %s se viste con su uniforme.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 2:
					{
				                if(PlayerInfo[playerid][pRank] < 4) return Message(playerid, COLOR_GRAD2, "Rango insuficiente!");
								SafeGivePlayerWeapon(playerid, 23, 200);
								SafeGivePlayerWeapon(playerid, 34, 30);
								Skin(playerid, 164);
								SetPlayerArmour(playerid, 100);
								format(string, sizeof(string), "* Agente %s se viste con su uniforme.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 3:
					{
								Skin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con ropa normal.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		case EQUIPO_DIALOG4:
		{
		    if(response)
		    {
	    	    switch (listitem)
	        	{
	            	case 0:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 70);
								format(string, sizeof(string), "* %s se pone su bata blanca y se desinfecta sus manos.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 1:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 274);
								format(string, sizeof(string), "* %s se viste y guarda su radio.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 2:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 275);
								format(string, sizeof(string), "* %s se viste y guarda su radio.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 3:
					{
				                SetHP(playerid, 100);
								SetPlayerSkin(playerid, 276);
								format(string, sizeof(string), "* %s se viste y guarda su radio.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 4:
					{
								if(OnDuty[playerid] == 1) {	SendClientMessage(playerid, COLOR_GRAD2, "Estás en labor! Termina tu turno!"); return 1;    }
								SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con ropa normal", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		case EQUIPO_DIALOG5:
		{
		    if(response)
		    {
	    	    switch (listitem)
	        	{
	            	case 0:
					{
								SetPlayerSkin(playerid, 253);
								format(string, sizeof(string), "* %s se pone su traje de chófer.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 1:
					{
								SetPlayerSkin(playerid, 255);
								format(string, sizeof(string), "* %s se pone su traje de chófer.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 2:
					{
								SetPlayerSkin(playerid, 261);
								format(string, sizeof(string), "* %s se pone su traje de chófer.", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					case 3:
					{
								SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
								format(string, sizeof(string), "* %s se viste con ropa normal", PlayerName(playerid));
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		case EQUIPO_MECANICO:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
		                Skin(playerid, 180);
		                SafeGivePlayerWeapon(playerid, 41, 1000);
	    	            format(string, sizeof(string), "* %s se viste con uniforme de ayudante.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
		            case 1:
		            {
		                Skin(playerid, 50);
	    	            SafeGivePlayerWeapon(playerid, 41, 1000);
	        	        format(string, sizeof(string), "* %s se viste con uniforme de mecanico.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
		            case 2:
		            {
	    	            Skin(playerid, 268);
	        	        SafeGivePlayerWeapon(playerid, 41, 1000);
	            	    format(string, sizeof(string), "* %s se viste con uniforme de ingeniero.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
	    	        case 3:
		            {
		                Skin(playerid, 185);
	        	        format(string, sizeof(string), "* %s se viste con su uniforme de director.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
		            case 4:
		            {
	    	            SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	        	        format(string, sizeof(string), "* %s se viste con su ropa normal.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            	}
	     		}
		    }
		}
		case EQUIPO_GOBIERNO:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0:
			    	{
						Skin(playerid, 164);
						SetHP(playerid,100);
						SetPlayerArmour(playerid, 100);
						SafeGivePlayerWeapon(playerid, 29, 1000);
						SafeGivePlayerWeapon(playerid, 41, 1250);
						SafeGivePlayerWeapon(playerid, 27, 1850);
						SafeGivePlayerWeapon(playerid, 34, 1850);
						SafeGivePlayerWeapon(playerid, 31, 1250);
						format(string, sizeof(string), "* %s se viste con su uniforme de guardaespaldas.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    	}
				    case 1:
				    {
				        ResetPlayerWeapons(playerid);
	        	        SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	            	    format(string, sizeof(string), "* %s se viste su ropa normal.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    	}
		        }
			}
		}
		case D247_BUY:
		{
			if(response)
			{
			    switch(listitem)
		    	{
	         		case 0:
			        {
			            if(CheckMoney(playerid,5))
			            {
				            ShowPlayerDialog(playerid, LOTTO_BUY, DIALOG_STYLE_INPUT, "Lotería Nacional","Inserta un número entre 1 y 50. Mucha Suerte!","Comprar","Cancelar");
			    	        return 1;
						}
			        }
			         case 1:
			        {
		    	        if(CheckMoney(playerid,70))
		        	    {
	                        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
				            SafeGivePlayerWeapon(playerid, 41, 500);
				            Message(playerid, COLOR_WHITE, "Has comprado un Spray.");
				            Bought(playerid, 70);
				            if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 70);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 70);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 70);
			    	        return 1;
						}
			        }
		         	case 2:
			        {
		    	        if(CheckMoney(playerid,20))
		        	    {
			        	    ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            	PlayerInfo[playerid][pCigarettes] = 20;
			            	Message(playerid, COLOR_WHITE, "Has una cajetilla con 20 cigarros, utilza \"/cfumar\"");
			            	Bought(playerid, 20);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 20);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 20);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 20);
			            	return 1;
						}
			        }
		         	case 3:
			        {
						if(CheckMoney(playerid,20))
		    	        {
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    PlayerInfo[playerid][pLighter] = 30;
			            	SendClientMessage(playerid, COLOR_WHITE, "Compraste un encendedor.");
			            	Bought(playerid, 20);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 20);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 20);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 20);
			            	return 1;
						}
			        }
			        case 4:
			        {
						if(CheckMoney(playerid,300))
		        	    {
			        	    ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            	PlayerInfo[playerid][pGafas] = 1;
			            	SendClientMessage(playerid, COLOR_WHITE, "Compraste unas gafas, puedes utilizar: /gafas & /brillo");
			            	Bought(playerid, 300);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 300);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 300);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 300);
			            	return 1;
						}
		        	}
			        case 5:
			        {
						if(CheckMoney(playerid,175))
		    	        {
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    PlayerInfo[playerid][pMaleta] = 1;
			            	Message(playerid, COLOR_WHITE, "Compraste una maleta, puedes utilizar /maleta");
			            	Bought(playerid, 175);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 175);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 175);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 175);
			            	return 1;
						}
		        	}
			        case 6:
			        {
						if(CheckMoney(playerid,75))
		    	        {
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    PlayerInfo[playerid][pMochila] = 1;
			            	Message(playerid, COLOR_WHITE, "Compraste una mochila, utiliza /mochila");
			            	Bought(playerid, 75);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 75);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 75);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 75);
			            	return 1;
						}
		        	}
			        case 7:
			        {
						if(CheckMoney(playerid,120))
		    	        {
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    PlayerInfo[playerid][pCasco] = 1;
			            	Message(playerid, COLOR_WHITE, "Compraste un casco, utiliza /casco");
		            		Bought(playerid, 120);
		            		if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 120);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 120);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 120);
			            	return 1;
						}
			        }
			        case 8:
			        {
						if(CheckMoney(playerid,50))
		        	    {
			        	    ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            	Skate[playerid] = 1;
			            	Message(playerid, COLOR_WHITE, "Compraste unos patines, utiliza /patines");
			            	Bought(playerid, 50);
			            	if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 50);
                        	if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 50);
                        	if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 50);
			            	return 1;
						}
					}
				}
			}
		}
		case LOTTO_BUY:
		{
			if(response)
			{
			    if(strval(inputtext) > 0 && strval(inputtext) < 51)
		    	{
					PlayerInfo[playerid][pLottoNr] = strval(inputtext);
					Message(playerid, COLOR_WHITE, "Lotería comprada!");
					Bought(playerid, 5);
					if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469))    Till(3, 5);
    				if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469))  	Till(4, 5);
       				if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573))    	Till(5, 5);
				}
			}
		}
		case CAMEL_MENU:
		{
		    if(response)
    	 	{
     		    switch(listitem)
     	    	{
	     	        case 0:
    	 	        {
						if(Delivery[playerid] < 1) return ProxDetector(40.0, playerid, "Beautiful dice: No tienes ningún paquete para entregarme idiota!",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						new rec = Delivery[playerid]*100;
						PlayerInfo[playerid][pMats] += rec;
						Delivery[playerid] = 0;
						format(string, sizeof(string), "* Entregaste el paquee con éxito, recibes a cambio %d materiales, ahora tienes %d", rec, PlayerInfo[playerid][pMats]);
						Message(playerid, COLOR_WHITE, string);
						ProxDetector(20.0, playerid, "Beautiful dice: Gracias. Tráeme más cuando puedas.",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
     	        	}
     		        case 1:
	     	        {
						if(TelfRob[playerid] < 1) return ProxDetector(40.0, playerid, "Beautiful dice: No tienes ningún teléfono para entregarme idiota!",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						new tefran = random(200);
						new robcash = tefran*TelfRob[playerid];
						format(string, sizeof(string), "* Entregaste con éxito %d teléfono(s) robados, te dan a cambio %d$", TelfRob[playerid], robcash);
						Message(playerid, COLOR_WHITE, string);
						ProxDetector(20.0, playerid, "Beautiful dice: Gracias. Tráeme más cuando puedas.",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						Earn(playerid, robcash);
						TelfRob[playerid] -= 1;
     	        	}
     	        	case 2:
     	        	{
     	        	    if(CheckMoney(playerid,10000))
     	        	    {
     	        	        if(PlayerInfo[playerid][pLevel] < 5) return Message(playerid, COLOR_GRAD2, "Necesitas ser minimo nivel 5 para adquirir esto.");
     	        	        if(PlayerInfo[playerid][pDNIFalse] > 0) return Message(playerid, COLOR_GRAD2, "Ya posees un DNI Falso.");
     	        	    	ShowPlayerDialog(playerid,DNI_MENU,DIALOG_STYLE_INPUT,"Traficante - DNI Falso","Ingresa el nombre que quieres usar para el DNI Falso.","Aceptar","Salir");
     	        	    }
     	        	}
				}
			}
			else ProxDetector(40.0, playerid, "Beautiful dice: Vete a la mierda! Ya tengo suficientes clientes!",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		case DNI_MENU:
		{
		    if(response)
		    {
		        if(strlen(inputtext) < 1 || strlen(inputtext) > 32 || strfind(inputtext, "_", true) != -1)
		        {
		            ShowPlayerDialog(playerid,DNI_MENU,DIALOG_STYLE_INPUT,"Traficante - DNI Falso", "Ingresa el nombre que quieres usar, Ejemplo: Jonathan Torres", "Aceptar", "Cancelar");
          		}
          		else{
          		    strmid(DNIName[playerid], inputtext, 0, strlen(inputtext), 32);
          			format(string, sizeof(string), "¿Estás seguro que quieres usar el nombre de\n\t%s en tu DNI falso?", DNIName[playerid]);
					ShowPlayerDialog(playerid,DNI_CONFIRM,DIALOG_STYLE_MSGBOX,"Traficante - DNI Falso", string, "Aceptar", "Cancelar");
				}
			}
  		}
  		case DNI_CONFIRM:
  		{
  		    if(response)
  		    {
				strmid(PlayerInfo[playerid][pDNIName], DNIName[playerid], 0, strlen(DNIName[playerid]), 32);
				new dni = 100000 + random(899999);  PlayerInfo[playerid][pDNIFalse] = dni;
				format(string, sizeof(string), "* Has obtenido una identificación falsa, con el nombre de {41FF2F}%s.", PlayerInfo[playerid][pDNIName]);
				Message(playerid, COLOR_WHITE, string);
				Bought(playerid, 10000);
  		    }
  		}
		case CREATE_WEAPON:
		{
		    if(response)
    	 	{
     		    switch(listitem)
     	    	{
     	        	case 0:
     	        	{
	     	            ShowPlayerDialog(playerid,CREATE_WEAPON,DIALOG_STYLE_LIST,"Fábrica de Armas",   \
						"Arma\tMateriales \tMunición/Unidades\n" \
						"Navaja 	\t25 \t1\n" \
						"Bate 		\t40 \t1\n" \
						"Katana		\t80 \t1\n" \
						"C.Molotov 	\t120 \t1\n" \
						"9mm 		\t200 \t140\n" \
						"D.Eagle 	\t300 \t140\n" \
						"S.Pistol 	\t280 \t140\n" \
						"Shotgun	\t450 \t60\n" \
						"SPAS12		\t500 \t60\n" \
						"MP5		\t190 \t150\n" \
						"AK47		\t200\t150\n" \
						"M4			\t200 \t150\n" \
						"Rifle		\t420 \t45\n" \
						"Sniper		\t500 \t60\n" \
						,"Aceptar","Salir");
     	        	}
	     	        case 1: MakeWeapon(playerid, 25, 4, 1);
    	 	        case 2: MakeWeapon(playerid, 40, 5, 1);
     		        case 3: MakeWeapon(playerid, 80, 8, 1);
     	    	    case 4: MakeWeapon(playerid, 120, 18, 1);
     	        	case 5: MakeWeapon(playerid, 200, 22, 140);
	     	        case 6: MakeWeapon(playerid, 300, 24, 140);
    	 	        case 7: MakeWeapon(playerid, 280, 23, 140);
     		        case 8: MakeWeapon(playerid, 450, 25, 60);
     	    	    case 9: MakeWeapon(playerid, 500, 27, 60);
     	        	case 10: MakeWeapon(playerid, 190, 29, 150);
	     	        case 11: MakeWeapon(playerid, 200, 30, 150);
    	 	        case 12: MakeWeapon(playerid, 200, 31, 150);
     		        case 13: MakeWeapon(playerid, 420, 33, 45);
     	    	    case 14: MakeWeapon(playerid, 500, 34, 60);
				}
			}
		}
		case AMMUNATION_MENU:
		{
			if(response)
			{
			    switch(listitem)
		    	{
			        case 0:
			        {
			            ShowPlayerDialog(playerid,AMMUNATION_MENU_DEF,DIALOG_STYLE_LIST,"Defensa personal","Spray - (5$)\nPuño americano - (25$)\nNavaja - (45$)\nCané - (15$)\nBate - (75$)","Comprar","Atras");
		    	    }
					case 1:
					{
					    ShowPlayerDialog(playerid,AMMUNATION_MENU_PIS,DIALOG_STYLE_LIST,"Pistolas","9mm :20: - (220$)\nDesert Eagle :10: - (300$)","Aceptar","Atras");
                    }
					case 2:
					{
					    ShowPlayerDialog(playerid,AMMUNATION_MENU_ESC,DIALOG_STYLE_LIST,"Escopetas","Escopeta Caza :20: - (399$)\nShotgun :15: - (499$)","Aceptar","Atras");
					}
					case 3:
					{
					    ShowPlayerDialog(playerid,AMMUNATION_MENU_PRO,DIALOG_STYLE_LIST,"Protección","Chaleco - (400$)","Aceptar","Atras");
					}
					case 4:
					{
					    ShowPlayerDialog(playerid,AMMUNATION_MENU_LEC,DIALOG_STYLE_LIST,"Lecciones","Ammunation's Weapon Guide (55$)\nGuía Desert Eagle(45$)\nLección Shotgun I(65$)\nLección Shotgun II(75$)\nSubFusil-MP5 Guía Toma I(82$)\nSubFusil-MP5 Guía Toma II(89$)\nRifles de Asalto AK47-M4 I(70$)\nRifles de Asalto AK47-M4 II(99$)\nRifles de Asalto AK47-M4 III(129$)","Aceptar","Atras");
					}
				}
			}
		}
		case AMMUNATION_MENU_DEF:
		{
			if(response)
			{
        	    if(PlayerInfo[playerid][pLevel] < 2)
		    	{
	                Message(playerid, COLOR_GRAD2, " Debes ser mayor de nivel 2 para comprar armas.");
    	            return 1;
        	    }
		    	switch(listitem)
		    	{
			        case 0:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 2);
		        	        Bought(playerid, 2);
							SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
							SafeGivePlayerWeapon(playerid, 41, 500);
						}
						else
						{
						    Till(17, 5);
						    Bought(playerid, 5);
							SafeGivePlayerWeapon(playerid, 41, 500);
						}
		        	}
			        case 1:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 15);
		        	        Bought(playerid, 15);
							SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
							SafeGivePlayerWeapon(playerid, 1, 1);
						}
						else
						{
						    Till(17, 25);
						    Bought(playerid, 25);
							SafeGivePlayerWeapon(playerid, 1,1);
						}
		        	}
			        case 2:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 25);
		        	        Bought(playerid, 25);
							SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
							SafeGivePlayerWeapon(playerid, 4,1);
						}
						else
						{
						    Till(17, 40);
						    Bought(playerid, 40);
							SafeGivePlayerWeapon(playerid, 4,1);
						}
		        	}
			        case 3:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 5);
		        	        Bought(playerid, 5);
							SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
							SafeGivePlayerWeapon(playerid, 15,1);
						}
						else
						{
						    Till(17, 15);
						    Bought(playerid, 15);
							SafeGivePlayerWeapon(playerid, 15,1);
						}
		        	}
			        case 4:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 45);
		        	        Bought(playerid, 45);
							SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
							SafeGivePlayerWeapon(playerid, 5,1);
						}
						else
						{
						    Till(17, 60);
						    Bought(playerid, 60);
							SafeGivePlayerWeapon(playerid, 5,1);
						}
			        }
				}
			}
			else ShowAmmunation(playerid);
		}
		case AMMUNATION_MENU_PIS:
		{
			if(response)
			{
        	    if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, " Debes ser mayor a nivel 2 para comprar armas.");
		    	switch(listitem)
		    	{
			        case 0:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 140);
		        	        Bought(playerid, 140);
							SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
							SafeGivePlayerWeapon(playerid, 22, 20);
						}
						else
						{
						    Till(17, 220);
						    Bought(playerid, 220);
							SafeGivePlayerWeapon(playerid,22,20);
						}
		    	    }
		        	case 1:
		        	{
			            if(PlayerInfo[playerid][pGunLic] == 1)
			            {
			                Till(17, 200);
			                Bought(playerid, 200);
							SendClientMessage(playerid, COLOR_YELLOW, "Se le ha realizado un descuento por tener Licencia de Armas.");
							SafeGivePlayerWeapon(playerid, 24,10);
						}
						else
						{
						    Till(17, 300);
						    Bought(playerid, 300);
							SafeGivePlayerWeapon(playerid, 24,10);
						}
			        }
				}
			}
			else ShowAmmunation(playerid);
		}
		case AMMUNATION_MENU_ESC:
		{
			if(response)
			{
        	    if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, " Debes ser mayor a nivel 2 para comprar armas.");
		    	switch(listitem)
		    	{
			        case 0:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 270);
		        	        Bought(playerid, 270);
							SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%% por tener la licencia de armas.");
							SafeGivePlayerWeapon(playerid, 33,20);
						}
						else
						{
						    Till(17, 399);
						    Bought(playerid, 399);
							SafeGivePlayerWeapon(playerid, 33,20);
						}
		        	}
			        case 1:
			        {
			            if(PlayerInfo[playerid][pGunLic] == 1)
		    	        {
		    	            Till(17, 310);
		        	        Bought(playerid, 310);
							SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%% por tener la licencia de armas.");
							SafeGivePlayerWeapon(playerid, 25,15);
						}
						else
						{
						    Till(17, 499);
						    Bought(playerid, 499);
							SafeGivePlayerWeapon(playerid, 25,15);
						}
		        	}
	     		}
			}
			else ShowAmmunation(playerid);
		}
		case AMMUNATION_MENU_PRO:
		{
			if(response)
			{
  				if(PlayerInfo[playerid][pGunLic] == 1)
     			{
     			    Till(17, 300);
       				Bought(playerid, 300);
					SendClientMessage(playerid, COLOR_YELLOW, "Se te ha descontado el 30%% por tener la licencia de armas.");
					SetPlayerArmour(playerid, 100);
				}
				else
				{
				    Till(17, 400);
	   				Bought(playerid, 400);
					SetPlayerArmour(playerid, 100);
				}
			}
			else ShowAmmunation(playerid);
		}
		case AMMUNATION_MENU_LEC:
		{
			if(response)
			{
			    switch(listitem)
		    	{
		        	case 0:
		        	{
		        	    Till(17, 55);
			            Bought(playerid, 55);
			            Message(playerid, COLOR_WHITE, "Has comprado Ammunation's Weapon Guide, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 10;
		    	    }
		        	case 1:
		        	{
		        	    Till(17, 45);
			            Bought(playerid, 45);
			            Message(playerid, COLOR_WHITE, "Has comprado Guía Desert Eagle, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 15;
		    	    }
		        	case 2:
		        	{
		        	    Till(17, 60);
			            Bought(playerid, 60);
			            Message(playerid, COLOR_WHITE, "Has comprado Lección Shotgun I, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 20;
		    	    }
		        	case 3:
		        	{
		        	    Till(17, 75);
			            Bought(playerid, 75);
			            Message(playerid, COLOR_WHITE, "Has comprado Lección Shotgun II, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 21;
		    	    }
		        	case 4:
		        	{
		        	    Till(17, 82);
			            Bought(playerid, 82);
			            Message(playerid, COLOR_WHITE, "Has comprado SubFusil-MP5 Guía Toma I, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 30;
		    	    }
		        	case 5:
		        	{
		        	    Till(17, 89);
			            Bought(playerid, 89);
			            Message(playerid, COLOR_WHITE, "Has comprado SubFusil-MP5 Guía Toma II, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 31;
		    	    }
		        	case 6:
		        	{
		        	    Till(17, 95);
			            Bought(playerid, 95);
			            Message(playerid, COLOR_WHITE, "Has comprado Rifles de Asalto AK47-M4 I, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 40;
		    	    }
		        	case 7:
		        	{
		        	    Till(17, 99);
			            Bought(playerid, 99);
			            Message(playerid, COLOR_WHITE, "Has comprado Rifles de Asalto AK47-M4 II, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 41;
		    	    }
		        	case 8:
		        	{
		        	    Till(17, 129);
			            Bought(playerid, 129);
			            Message(playerid, COLOR_WHITE, "Has comprado Rifles de Asalto AK47-M4 III, ve donde Raul Blanco.");
			            PlayerInfo[playerid][pLeccion] = 42;
		    	    }
     			}
			}
			else ShowAmmunation(playerid);
		}
		case FSTYLE_DIALOG:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
				        if(CheckMoney(playerid, 1500))
				        {
							Bought(playerid, 1500);
							Till(19, 1500);
							PlayerInfo[playerid][pFStyle] = 7;
							SetPlayerStats(playerid);
							Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido Knee Head!");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						}
					}
					case 1:
	    	        {
				        if(CheckMoney(playerid, 1000))
			    	    {
                    	    Bought(playerid, 1000);
                    	    Till(19, 1000);
							PlayerInfo[playerid][pFStyle] = 6;
							SetPlayerStats(playerid);
							Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido Kung Fu!");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						}
					}
					case 2:
	    	        {
				        if(CheckMoney(playerid, 800))
			    	    {
							Bought(playerid, 800);
							Till(19, 800);
							PlayerInfo[playerid][pFStyle] = 5;
							SetPlayerStats(playerid);
							Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido a Boxear!");
							ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
						}
					}
				}
			}
		}
		case DIALOG_AMMU_MANAGER:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
		                new book[32];
					    if(PlayerInfo[playerid][pLeccion] == 10) {  book = "Ammunation's Weapon Guide"; }
					    if(PlayerInfo[playerid][pLeccion] == 15) {  book = "Guía Desert Eagle"; }
					    if(PlayerInfo[playerid][pLeccion] == 20) {  book = "Lección Shotgun I"; }
					    if(PlayerInfo[playerid][pLeccion] == 21) {  book = "Lección Shotgun II"; }
				    	if(PlayerInfo[playerid][pLeccion] == 30) {  book = "SubFusil-MP5 Guía Toma I"; }
					    if(PlayerInfo[playerid][pLeccion] == 31) {  book = "SubFusil-MP5 Guía Toma II"; }
					    if(PlayerInfo[playerid][pLeccion] == 40) {  book = "Rifles de Asalto AK47-M4 I"; }
					    if(PlayerInfo[playerid][pLeccion] == 41) {  book = "Rifles de Asalto AK47-M4 II"; }
					    if(PlayerInfo[playerid][pLeccion] == 42) {  book = "Rifles de Asalto AK47-M4 III"; }
					    format(string, sizeof(string), "%s", book)
						ShowPlayerDialog(playerid, DIALOG_LECCION,DIALOG_STYLE_LIST,"Lecciones disponibles", string, "Aprender", "Cancelar");
	            	}
		            case 1:
		            {
						new style[16];
					    ClearChatbox(playerid, 10);
						Message(playerid, COLOR_YELLOW, "-- Tus habilidades --");
						format(string, sizeof(string), "DEagle: (%d%%) - Shotgun: (%d%%) - MP5: (%d%%) - AK47: (%d%%) - M4: (%d%%) - Sniper: (%d%%)",
						PlayerInfo[playerid][pDEagle]/10,PlayerInfo[playerid][pShotgun]/10,PlayerInfo[playerid][pMP5]/10,PlayerInfo[playerid][pAK47]/10,PlayerInfo[playerid][pM4]/10,PlayerInfo[playerid][pSniper]/10)
						Message(playerid, COLOR_GRAD2, string);
						if(PlayerInfo[playerid][pFStyle] == 4) { style = "Normal"; 		}
						if(PlayerInfo[playerid][pFStyle] == 5) { style = "Boxing" ;		}
						if(PlayerInfo[playerid][pFStyle] == 6) { style = "Kung Fu" ;	}
						if(PlayerInfo[playerid][pFStyle] == 7) { style = "Kneehead" ;	}
						format(string, sizeof(string), "Estilo de lucha: %s", style)
						Message(playerid, COLOR_GRAD2, string);
					    return 1;
	    	        }
				}
			}
		}
		case DIALOG_LECCION:
		{
		    if(response)
		    {
	    	    if(PlayerInfo[playerid][pLeccion] == 10)
	        	{
	                if(PlayerInfo[playerid][pDEagle] > 189) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
    	            if(PlayerInfo[playerid][pShotgun] > 149) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
        	        if(PlayerInfo[playerid][pMP5] > 174) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
            	    if(PlayerInfo[playerid][pM4] > 174) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
                	if(PlayerInfo[playerid][pAK47] > 174) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	                if(PlayerInfo[playerid][pSniper] > 149) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
		           	PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pDEagle] += 90;
					PlayerInfo[playerid][pMP5] += 75;
					PlayerInfo[playerid][pM4] += 75;
					PlayerInfo[playerid][pAK47] += 75;
					PlayerInfo[playerid][pSniper] += 25;
					PlayerInfo[playerid][pShotgun] += 50;
					SetPlayerStats(playerid);
					return 1;
				}
				if(PlayerInfo[playerid][pLeccion] == 15)
		        {
		            if(PlayerInfo[playerid][pDEagle] < 190) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	    	        if(PlayerInfo[playerid][pDEagle] > 289) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	        	   	PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pDEagle] += 100;
					SetPlayerStats(playerid);
					return 1;
				}
				if(PlayerInfo[playerid][pLeccion] == 20)
		        {
	    	        if(PlayerInfo[playerid][pShotgun] < 150) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pShotgun] > 229) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           		PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pShotgun] += 80;
					SetPlayerStats(playerid);
					return 1;
				}
				if(PlayerInfo[playerid][pLeccion] == 21)
		        {
	    	        if(PlayerInfo[playerid][pShotgun] < 150) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pShotgun] < 230) return Message(playerid, COLOR_GRAD2, "Debes leer la Toma I");
	            	if(PlayerInfo[playerid][pShotgun] > 349) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
		           	PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pShotgun] += 120;
					SetPlayerStats(playerid);
					return 1;
				}
				if(PlayerInfo[playerid][pLeccion] == 30)
		        {
	    	        if(PlayerInfo[playerid][pMP5] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pMP5] > 274) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           		PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pMP5] += 100;
					SetPlayerStats(playerid);
					return 1;
				}
				if(PlayerInfo[playerid][pLeccion] == 31)
		        {
	    	        if(PlayerInfo[playerid][pMP5] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pMP5] < 275) return Message(playerid, COLOR_GRAD2, "Debes leer la Toma I")
	            	if(PlayerInfo[playerid][pMP5] > 424) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           		PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pMP5] += 150;
					SetPlayerStats(playerid);
					return 1;
				}
				if(PlayerInfo[playerid][pLeccion] == 40)
		        {
	    	        if(PlayerInfo[playerid][pAK47] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pM4] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            	if(PlayerInfo[playerid][pM4] > 249) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
		            if(PlayerInfo[playerid][pAK47] > 249) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
		           	PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pM4] += 75;
					PlayerInfo[playerid][pAK47] += 75;
					SetPlayerStats(playerid);
					return 1;
				}
				if(PlayerInfo[playerid][pLeccion] == 41)
		        {
	    	        if(PlayerInfo[playerid][pAK47] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pM4] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            	if(PlayerInfo[playerid][pM4] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
	            	if(PlayerInfo[playerid][pAK47] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
            		if(PlayerInfo[playerid][pM4] > 339) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	            	if(PlayerInfo[playerid][pAK47] > 339) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           		PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pM4] += 90;
					PlayerInfo[playerid][pAK47] += 90;
					SetPlayerStats(playerid);
					return 1;
				}
				if(PlayerInfo[playerid][pLeccion] == 42)
		        {
	    	        if(PlayerInfo[playerid][pAK47] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	        	    if(PlayerInfo[playerid][pM4] < 175) return Message(playerid, COLOR_GRAD2, "Debes leer primero el libro de Ammunation's Weapons Guide");
	            	if(PlayerInfo[playerid][pM4] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
	            	if(PlayerInfo[playerid][pAK47] < 250) return Message(playerid, COLOR_GRAD2, "Debes leer la toma I");
	            	if(PlayerInfo[playerid][pAK47] < 340) return Message(playerid, COLOR_GRAD2, "Debes leer la toma II");
	            	if(PlayerInfo[playerid][pM4] < 340) return Message(playerid, COLOR_GRAD2, "Debes leer la toma II");
	            	if(PlayerInfo[playerid][pM4] > 514) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	            	if(PlayerInfo[playerid][pAK47] > 514) return Message(playerid, COLOR_GRAD2, "Ya has alcanzado la Experiencia que te puede dar este libro!");
	           		PlayerPlaySound(playerid, 1054, 0,0,0);
					PlayerInfo[playerid][pLeccion] = 0;
					Message(playerid, COLOR_WHITE, "Felicidades! Has aprendido la leccion!");
					PlayerInfo[playerid][pM4] += 175;
					PlayerInfo[playerid][pAK47] += 175;
					SetPlayerStats(playerid);
					return 1;
				}
			}
		}
		case DIALOG_LSPD_ELEVATOR:
		{
		    if(response)
		    {
				SetPlayerPos(playerid, 1526.5972,-1676.0651,5.8906);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SetPlayerPos(playerid, 1556.1990,-1671.6530,28.3956);
				SetPlayerInterior(playerid,0);
			}
		}
		case DIALOG_SAMUR_ELEVATOR:
		{
		    if(response)
		    {
				SetPlayerPos(playerid, 1144.9569,-1329.5032,13.5840);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SetPlayerPos(playerid, 1161.8463,-1328.4821,31.4967);
				SetPlayerInterior(playerid,0);
			}






				/*switch(listitem)
	        	{
		            case 0:	SetPosEx(playerid, 1144.9569,-1329.5032,13.5840,355.2150, 0, 0);
					case 1:	SetPosEx(playerid, 228,1159.5662,-1351.6556, 180, 0, 0);
 				}*/

		}
		case DIALOG_FBI_ELEVATOR:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0:
					{
					    if(PlayerToPoint(5.0,playerid,914.2907,-1037.3264,31.8984))
						{
							SetPosEx(playerid,208.0704,142.1360,1003.0234,0, 3, 0);
						}
						else
						{
							SetPosEx(playerid,914.2907,-1037.3264,31.8984,0,0,0);
						}
					}
					case 1:
					{
        	            if(PlayerToPoint(5.0,playerid,914.0172,-1026.9460,111.0547))
            	        {
							SetPosEx(playerid,208.0704,142.1360,1003.0234,0, 3, 0);
						}
						else {
						    SetPosEx(playerid,914.0172,-1026.9460,111.0547,0,0,0);
	    				}
					}
				}
			}
		}
		case DIALOG_TAXI_RADAR:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
		                if(TaxiSlot1 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        GetPlayerPos(TaxiSlot1, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
				        Message(TaxiSlot1, COLOR_ORANGE, string);
			    	    format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot1));
       	 				SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	TaxiCalled[TaxiSlot1] = 0;
			        	TaxiSlot1 = 999; SlotZone1 = "Sin Localizar"; SlotCity1 = "No"; TiempoSlot1 = 0;
			        	return 1;
					}
			 		case 1:
				    {
				        if(TaxiSlot2 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
			    	    Message(TaxiSlot2, COLOR_ORANGE, string);
			        	format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot2));
			        	SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot2, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	TaxiCalled[TaxiSlot2] = 0;
			        	TaxiSlot2 = 999; SlotZone2 = "Sin Localizar"; SlotCity2 = "No"; TiempoSlot2 = 0;
			        	return 1;
		 			}
		 			case 2:
			    	{
				        if(TaxiSlot3 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
				        Message(TaxiSlot3, COLOR_ORANGE, string);
				        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot3));
			    	    SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot3, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	TaxiCalled[TaxiSlot3] = 0;
			        	TaxiSlot3 = 999; SlotZone3 = "Sin Localizar"; SlotCity3 = "No"; TiempoSlot3 = 0;
			        	return 1;
		 			}
			 		case 3:
				    {
				        if(TaxiSlot4 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
			    	    Message(TaxiSlot4, COLOR_ORANGE, string);
			        	format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot4));
			        	SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot4, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	TaxiCalled[TaxiSlot4] = 0;
			        	TaxiSlot4 = 999; SlotZone4 = "Sin Localizar"; SlotCity4 = "No"; TiempoSlot4 = 0;
			        	return 1;
		 			}
		 			case 4:
			    	{
				        if(TaxiSlot5 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
				        Message(TaxiSlot5, COLOR_ORANGE, string);
				        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot5));
			    	    SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot5, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
		        		TaxiCalled[TaxiSlot5] = 0;
			        	TaxiSlot5 = 999; SlotZone5 = "Sin Localizar"; SlotCity5 = "No"; TiempoSlot5 = 0;
			        	return 1;
		 			}
		 			case 5:
			    	{
				        if(TaxiSlot6 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
				        Message(TaxiSlot6, COLOR_ORANGE, string);
				        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot6));
			    	    SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot6, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	TaxiCalled[TaxiSlot6] = 0;
			        	TaxiSlot6 = 999; SlotZone6 = "Sin Localizar"; SlotCity6 = "No"; TiempoSlot6 = 0;
			        	return 1;
		 			}
	                case 6:
				    {
				        if(TaxiSlot7 == 999) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
			    	    Message(TaxiSlot7, COLOR_ORANGE, string);
			        	format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot7));
                    	SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot7, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	TaxiCalled[TaxiSlot7] = 0;
			        	TaxiSlot7 = 999; SlotZone7 = "Sin Localizar"; SlotCity7 = "No"; TiempoSlot7 = 0;
			        	return 1;
		 			}
		 			case 7:
			    	{
				        if(TaxiSlot8 == 0) return Message(playerid, COLOR_GRAD2, "¡El slot esta vacio!");
				        format(string, sizeof(string), "[TAXI] %s ha aceptado su llamada. Se dirige hacia usted, porfavor no se mueva.", PlayerName(playerid));
				        Message(TaxiSlot8, COLOR_ORANGE, string);
				        format(string, sizeof(string), "[CENTRAL] %s ha aceptado la llamada de %s.", PlayerName(playerid), PlayerName(TaxiSlot8));
			    	    SendJobMessage(9, TEAM_BLUE_COLOR, string);
			        	GetPlayerPos(TaxiSlot8, cx, cy, cz);	SetPlayerCheckpoint(playerid, cx, cy ,cz, 5.0);
			        	TaxiCalled[TaxiSlot8] = 0;
			        	TaxiSlot8 = 999; SlotZone8 = "Sin Localizar"; SlotCity8 = "No"; TiempoSlot8 = 0;
			        	return 1;
		 			}
			 		case 8:
				    {
				        return 1;
		 			}
				}
			}
			else
			{
			    switch(listitem)
		        {
	    	        case 0: { TaxiCalled[TaxiSlot1] = 0, TaxiSlot1 = 999; SlotZone1 = "Sin Localizar"; SlotCity1 = "No"; TiempoSlot1 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot1"); return 1; }
	        	    case 1: { TaxiCalled[TaxiSlot2] = 0, TaxiSlot2 = 999; SlotZone2 = "Sin Localizar"; SlotCity2 = "No"; TiempoSlot2 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot2"); return 1; }
	            	case 2: { TaxiCalled[TaxiSlot3] = 0, TaxiSlot3 = 999; SlotZone3 = "Sin Localizar"; SlotCity3 = "No"; TiempoSlot3 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot3"); return 1; }
		            case 3: { TaxiCalled[TaxiSlot4] = 0, TaxiSlot4 = 999; SlotZone4 = "Sin Localizar"; SlotCity4 = "No"; TiempoSlot4 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot4"); return 1; }
		            case 4: { TaxiCalled[TaxiSlot5] = 0, TaxiSlot5 = 999; SlotZone5 = "Sin Localizar"; SlotCity5 = "No"; TiempoSlot5 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot5"); return 1; }
	    	        case 5: { TaxiCalled[TaxiSlot6] = 0, TaxiSlot6 = 999; SlotZone6 = "Sin Localizar"; SlotCity6 = "No"; TiempoSlot6 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot6"); return 1; }
	        	    case 6: { TaxiCalled[TaxiSlot7] = 0, TaxiSlot7 = 999; SlotZone7 = "Sin Localizar"; SlotCity7 = "No"; TiempoSlot7 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot7"); return 1; }
	            	case 7: { TaxiCalled[TaxiSlot8] = 0, TaxiSlot8 = 999; SlotZone8 = "Sin Localizar"; SlotCity8 = "No"; TiempoSlot8 = 0; Message(playerid,COLOR_GRAD2,"Borrado Slot8"); return 1; }
	            	case 8: { return 1; }
				}
			}
		}
		case BAR_MENU:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
					case 0: { ShowPlayerDialog(playerid, BAR_MENU_TAPAS, DIALOG_STYLE_LIST, "Platos del Día", "Huevos con Chorizo (20$)\nJamón Ibérico (30$)\nSopa de Marisco (25$)\nMacarrones a la Bolognesa (15$)\nEnsalada (10$)", "Pedir", "Atrás"); return 1; }
					case 1: { ShowPlayerDialog(playerid, BAR_MENU_BEBIDAS, DIALOG_STYLE_LIST, "Bebidas y refrescos", "Cerveza (3$)\nVino tinto (5$)\nChampagne (6$)\nCoca-Cola (2$)\nAgua (1$)", "Pedir", "Atrás"); return 1; }
				}
			}
		}
		case BAR_MENU_TAPAS:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0:
		            {
        	     		new Float:Health;
					 	GetPlayerHealth(playerid, Health);
		        	    if(Health < 101)	{	SetHP(playerid, Health+20); 	}
         				format(string, sizeof(string), "* %s come un plato de Huevos con Chorizo", PlayerName(playerid));
		            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            	Bought(playerid, 20);
		            	CheckBizz(playerid, 20);
		            	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
		            	if(PlayerDrunk[playerid] > 10)
		            	{
		            	    
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", PlayerName(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		    	            PlayerInfo[playerid][pCancer] += 3;
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
		            }
		            case 1:
	    	        {
	        	        new Float:Health;
	            	    GetPlayerHealth(playerid, Health);
	                	if(Health < 101)	{	SetHP(playerid, Health+30); 	}
	                	format(string, sizeof(string), "* %s come un plato de Jamón Ibérico", PlayerName(playerid));
	                	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                	Bought(playerid, 30);
	                	CheckBizz(playerid, 30);
	                	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	                	if(PlayerDrunk[playerid] > 10)
	                	
		            	{
		            	
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", PlayerName(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	            PlayerInfo[playerid][pCancer] += 3;
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
	            	}
		            case 2:
		            {
	    	            new Float:Health;
	        	        GetPlayerHealth(playerid, Health);
	            	    if(Health < 101)	{	SetHP(playerid, Health+25); 	}
	                	format(string, sizeof(string), "* %s come un plato de Sopa de Marisco", PlayerName(playerid));
	                	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Bought(playerid, 25);
						CheckBizz(playerid, 25);
	                	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	                	if(PlayerDrunk[playerid] > 10)
	                	
		            	{
		            	
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", PlayerName(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		    	            PlayerInfo[playerid][pCancer] += 3;
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
		            }
		            case 3:
	    	        {
	        	        new Float:Health;
	            	    GetPlayerHealth(playerid, Health);
	                	if(Health < 101)	{	SetHP(playerid, Health+15); 	}
		                format(string, sizeof(string), "* %s come un plato de Macarrones a la Bolognesa", PlayerName(playerid));
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    	            Bought(playerid, 15);
	    	            CheckBizz(playerid, 15);
	        	        ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	            	    if(PlayerDrunk[playerid] > 10)
	            	    
		            	{
		            	
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", PlayerName(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		    	            PlayerInfo[playerid][pCancer] += 3;
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
		            }
		            case 4:
	    	        {
	        	        new Float:Health;
	            	    GetPlayerHealth(playerid, Health);
	                	if(Health < 101)	{	SetHP(playerid, Health+10); 	}
		                format(string, sizeof(string), "* %s come un plato de Ensalada", PlayerName(playerid));
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    	            Bought(playerid, 10);
	    	            CheckBizz(playerid, 10);
	        	        ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,0);
	            	    if(PlayerDrunk[playerid] > 10)
	            	    
		            	{
		            	
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha comido", PlayerName(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		    	            PlayerInfo[playerid][pCancer] += 3;
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
		            }
			 	}
			}
		}
		case BAR_MENU_BEBIDAS:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0:
		            {
	    	            new Float:Health;
	        	        GetPlayerHealth(playerid, Health);
	            	    if(Health < 101)	{	SetHP(playerid, Health+3); 	}
	                	format(string, sizeof(string), "* %s se bebe una Cerveza.", PlayerName(playerid));
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                Bought(playerid, 3);
		                CheckBizz(playerid, 3);
	    	            PlayerDrunk[playerid] += 2;
	        	        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
	            	    if(PlayerDrunk[playerid] > 10)
	            	    
		            	{
		            	
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha bebido.", PlayerName(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		    	            PlayerInfo[playerid][pCancer] += 5;
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    PlayerDrunk[playerid]  += 1;
		                	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
	    	        }
	        	    case 1:
	            	{
		                new Float:Health;
		                GetPlayerHealth(playerid, Health);
	    	            if(Health < 101)	{	SetHP(playerid, Health+5); 	}
	        	        format(string, sizeof(string), "* %s se bebe una copa de Vino.", PlayerName(playerid));
	            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                	Bought(playerid, 5);
	                	CheckBizz(playerid, 5);
		                PlayerDrunk[playerid] += 1;
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
	    	            if(PlayerDrunk[playerid] > 10)
	    	            
		    	        {
		    	        
			    	        SetHP(playerid, 20);
	               			format(string, sizeof(string), "* %s vomita lo que ha bebido.", PlayerName(playerid));
		                	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			                PlayerInfo[playerid][pCancer] += 5;
			                PlayerInfo[playerid][pEpilepsia] += 1;
			                PlayerDrunk[playerid]  += 1;
		    	            SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		        	        ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
	            	}
		            case 2:
		            {
	    	            new Float:Health;
	        	        GetPlayerHealth(playerid, Health);
	            	    if(Health < 101)	{	SetHP(playerid, Health+6); 	}
	                	format(string, sizeof(string), "* %s se bebe una copa de Champagne.", PlayerName(playerid));
		                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                Bought(playerid, 6);
		                CheckBizz(playerid, 6);
	    	            PlayerDrunk[playerid] += 3;
	        	        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
	            	    if(PlayerDrunk[playerid] > 10)
	            	    
		            	{
		            	
				            SetHP(playerid, 20);
		               		format(string, sizeof(string), "* %s vomita lo que ha bebido.", PlayerName(playerid));
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		    	            PlayerInfo[playerid][pCancer] += 5;
		        	        PlayerInfo[playerid][pEpilepsia] += 1;
		            	    PlayerDrunk[playerid]  += 1;
		                	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
	    	        }
	        	    case 3:
	            	{
		                new Float:Health;
		                GetPlayerHealth(playerid, Health);
	    	            if(Health < 101)	{	SetHP(playerid, Health+2); 	}
	        	        format(string, sizeof(string), "* %s se bebe una Coca-Cola.", PlayerName(playerid));
	            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                	Bought(playerid, 2);
	                	CheckBizz(playerid, 2);
		                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
		                if(PlayerDrunk[playerid] > 10)
						
			            {
			            
				            SetHP(playerid, 20);
	            	   		format(string, sizeof(string), "* %s vomita lo que ha bebido.", PlayerName(playerid));
		            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		                	PlayerDrunk[playerid]  += 1;
			                SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
			                ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
						}
	        	    }
	            	case 4:
	            	{
		                new Float:Health;
		                GetPlayerHealth(playerid, Health);
	    	            if(Health < 101)	{	SetHP(playerid, Health+1); 	}
	        	        format(string, sizeof(string), "* %s se bebe una botella pequeña de agua.", PlayerName(playerid));
	            	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                	Bought(playerid, 1);
	                	CheckBizz(playerid, 1);
	                	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
	                	if(PlayerDrunk[playerid] > 0)
	                	
		            	{
			                PlayerDrunk[playerid]  -= 1;
						}
	    	        }
		 		}
			}
		}
	
		case DIALOG_FARMACIA:
		{
			if(response)
	    	{
	        	switch(listitem)
	        	{
		            case 0:
		            {
	    	            if(CheckMoney(playerid, 3))
	        	        {
							Message(playerid, COLOR_WHITE, "Has comprado un condon, utiliza /condon.");
							Bought(playerid, 3);
							Till(31, 3);
							Condom[playerid] ++;
						}
		            }
		            case 1:
	    	        {
	        	        if(CheckMoney(playerid, 10))
	            	    {
							Message(playerid, COLOR_WHITE, "Has comprado una caja con 5 ibuprofenos. Utiliza /pastilla.");
							Bought(playerid, 10);
							Till(31, 10);
							Ibuprofeno[playerid] += 5;
						}
		            }
		            case 2:
	    	        {
	        	        if(CheckMoney(playerid, 30))
	            	    {
							Message(playerid, COLOR_WHITE, "Has comprado una caja con 6 parches de nicotina, utiliza /pastilla.");
							Bought(playerid, 30);
							Till(31, 30);
							Nicotina[playerid] += 6;
						}
		            }
		            case 3:
	    	        {
	        	        if(CheckMoney(playerid, 40))
	            	    {
							Message(playerid, COLOR_WHITE, "Has comprado una caja de 4 pastillas de Energysil. Utiliza /pastilla");
							Bought(playerid, 40);
							Till(31, 40);
							Energysil[playerid] += 4;
	                    }
		            }
	    	        case 4:
		    	    {
		        	    if(CheckMoney(playerid, 1000))
                    	{
							Message(playerid, COLOR_WHITE, "Has comprado 5 pastillas para curar el SIDA recetadas por el médico.");
							Bought(playerid, 1000);
							Till(31, 1000);
							PlayerInfo[playerid][pAntiSIDA] += 5;
        	            }
		    	    }
	            	case 5:
	            	{
			            if(CheckMoney(playerid, 500))
    	                {
							Message(playerid, COLOR_WHITE, "Has comprado 5 pastillas anti epilépticas recetadas por el médico.");
							Bought(playerid, 500);
							Till(31, 500);
							PlayerInfo[playerid][pAntiEpilepsia] += 5;
                    	}
		        	}
		            case 6:
		            {
			            if(CheckMoney(playerid, 800))
		    	        {
							Message(playerid, COLOR_WHITE, "Has comprado 5 pastillas contra el cáncer recetadas por el médico.");
							Bought(playerid, 800);
							Till(31, 800);
							PlayerInfo[playerid][pAntiCancer] += 5;
						}
		            }
				}
			}
		}
		case MECANICO_MENU:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
					case 0:
					{
				        if(!IsAtTaller(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en el taller!");
	    				if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
						ShowPlayerDialog(playerid, MECANICO_MENU_REPARACION, DIALOG_STYLE_LIST, "-> Reparaciones <-", "Reparar Motor\nReparar Motor + Carrocería", "Reparar", "Atrás");
						return 1;
					}
					case 1:
					{
					    if(!IsAtTaller(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en el taller!");
					    if(IsPlayerInAnyVehicle(playerid))
				    	{
							format(string, sizeof(string), "* %s llena el depósito del vehículo.", PlayerName(playerid));
			      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					  		Gas[idcar] = 100;
					  		return 1;
						}
						else return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
					}
					case 2:
					{
        	            if(!IsAtTaller(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en el taller!");
	    				if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
						ShowPlayerDialog(playerid, MECANICO_MENU_TUNING, DIALOG_STYLE_LIST, "-> Tunear <-", "Tuning General\nTuning Específico\nCambiar Color\nCambiar Nombre Vehículo\nCambiar Motor\nBaterías", "Aceptar", "Atrás");
						return 1;
					}
					case 3:
					{
				    	ShowPlayerDialog(playerid, MECANICO_MENU_EMBARGAR, DIALOG_STYLE_LIST, "-> Embargar <-", "Incrementar +1 Embargo\nDecrementar -1 Embargo\nMultar vehículo\nDesembargar vehículo", "Aceptar", "Atrás");
						return 1;
					}
					case 4:
					{
					    Remolcar(playerid);
					}
					case 5:
					{
					    ShowPlayerDialog(playerid, MECANICO_MENU_OTROS, DIALOG_STYLE_LIST, "-> Otros <-", "Matricular Vehículo\nExaminar Vehículo\nInstalar alarma", "Aceptar", "Atrás");
						return 1;
		}
					case 6:
					{
						if( !IsAtTaller( playerid ) ) return Message( playerid, COLOR_GRAD2, "No estás en el taller!" );
						if( !IsPlayerInAnyVehicle( playerid ) ) return Message( playerid, COLOR_GRAD2, "No estas montado en ningun vehiculo." );

						if( PlayerInfo[ playerid ][ pRank ] > 1 ) { // Cr34 =>
							ChangeVehicleColor( idcar, 0, 0 );
							if(CarInfo[ idcar ][ cWheel ] > 0) 			RemoveVehicleComponent( idcar, CarInfo[ idcar ][ cWheel ] );
							if(CarInfo[ idcar ][ cHydraulics ] > 0) 	RemoveVehicleComponent( idcar, CarInfo[ idcar ][ cHydraulics ] );
							if(CarInfo[ idcar ][ cNitro ] > 0) 	 	RemoveVehicleComponent( idcar, CarInfo[ idcar ][ cNitro ] );
							if(CarInfo[ idcar ][ cSideskirt ] > 0)
							{
								RemoveVehicleComponent( idcar, CarInfo[ idcar ][ cSideskirt ] );
								new skirt = CarInfo[ idcar ][ cSideskirt ];
								// X-FLOW
								if( skirt == 1030 ) RemoveVehicleComponent( idcar, 1031 );
								else if( skirt == 1039 ) RemoveVehicleComponent( idcar, 1041 );
								else if( skirt == 1048 ) RemoveVehicleComponent( idcar, 1052 );
								else if( skirt == 1070 ) RemoveVehicleComponent( idcar, 1072 );
								else if( skirt == 1057 ) RemoveVehicleComponent( idcar, 1063 );
								else if( skirt == 1093 ) RemoveVehicleComponent( idcar, 1095 );
								// ALIEN
								if( skirt == 1026 ) RemoveVehicleComponent( idcar, 1027 );
								else if( skirt == 1036 ) RemoveVehicleComponent( idcar, 1040 );
								else if( skirt == 1047 ) RemoveVehicleComponent( idcar, 1051 );
								else if( skirt == 1069 ) RemoveVehicleComponent( idcar, 1071 );
								else if( skirt == 1056 ) RemoveVehicleComponent( idcar, 1062 );
								else if( skirt == 1094 ) RemoveVehicleComponent( idcar, 1090 );
							}
							if( CarInfo[ idcar ][ cRoof ] > 0 ) 	 	RemoveVehicleComponent( idcar, CarInfo[ idcar ][ cRoof ] );
							if( CarInfo[ idcar ][ cSpoiler ] > 0 ) 	 	RemoveVehicleComponent( idcar, CarInfo[ idcar ][ cSpoiler ] );
							if( CarInfo[ idcar ][ cRearBumper ] > 0 ) 	RemoveVehicleComponent( idcar, CarInfo[ idcar ][ cRearBumper ] );
							if( CarInfo[ idcar ][ cFrontBumper ] > 0 ) 	RemoveVehicleComponent( idcar, CarInfo[ idcar ][ cFrontBumper ] );
							if( CarInfo[ idcar ][ cExhaust ] > 0 ) 		RemoveVehicleComponent( idcar, CarInfo[ idcar ][ cExhaust ] );
							if( CarInfo[ idcar ][ cPaintjob ] > 0 ) 	ChangeVehiclePaintjob( idcar, 0 );
							ShowPlayerDialog( playerid, MECANICO_MENU_CHECK_REMOVEALL, DIALOG_STYLE_MSGBOX, "Restaurar valores del vehiculo a fabrica", "¿Estas seguro de que quieres hacer este cambio? (haras perder al cliente todo el tuneo del vehiculo)", "Si", "No" );
						} else
						return Message( playerid, COLOR_GRAD2, "Debes ser al menos rank 2 en tu faccion para poder usar esta funcion." );

					}
				}
			}
		}

  case MECANICO_MENU_CHECK_REMOVEALL:
  {
			if(response)
			{
				CarInfo[ idcar ][ cColorOne ] = 0;
				CarInfo[ idcar ][ cColorTwo ] = 0;
				CarInfo[ idcar ][ cWheel ] = 0;
				CarInfo[ idcar ][ cHydraulics ] = 0;
				CarInfo[ idcar ][ cNitro ] = 0;
				CarInfo[ idcar ][ cSideskirt ] = 0;
				CarInfo[ idcar ][ cRoof ] = 0;
				CarInfo[ idcar ][ cSpoiler ] = 0;
				CarInfo[ idcar ][ cRearBumper ] = 0;
				CarInfo[ idcar ][ cFrontBumper ] = 0;
				CarInfo[ idcar ][ cExhaust ] = 0;
				CarInfo[ idcar ][ cPaintjob ] = 0;
				Message( playerid, COLOR_WHITE, "Vehiculo devuelto a valores de fabrica!" );
			} else {
				AddCarTuning( idcar );
				Message( playerid, COLOR_GRAD2, "Vehiculo devuelto al estado anterior." );
				return 1;
			}
		}
		case MECANICO_MENU_REPARACION:
		{
			if(response)
		    {
        	 	GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
	        	{
		            case 0: {
					format(string, sizeof(string), "* %s arregla el motor del vehículo.", PlayerName(playerid));
      				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		  			SetVehicleHealth(idcar, 1000.0);
					return 1; }
					case 1: {
					format(string, sizeof(string), "* %s coloca una carrocería nueva al vehículo y cambia el motor dañado.", PlayerName(playerid));
    	  			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			  		RepairVehicle(idcar);
					return 1; }
				}
			}
		}
		case MECANICO_MENU_EMBARGAR:
		{
			if(response)
		    {
				switch(listitem)
				{
			    	case 0:
			    	{
				        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
					    if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
				        Message(playerid, COLOR_YELLOW, "¡Has agregado un embargo a este vehículo!");
				        CarInfo[idcar][cEmbargo] += 1;
			    	    return 1;
					}
					case 1:
					{
					    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
					    if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
				    	Message(playerid, COLOR_YELLOW, "¡Has quitado un embargo a este vehículo!");
      					CarInfo[idcar][cEmbargo] -= 1;
			        	return 1;
					}
					case 2:
					{
					    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
					    if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
					    ShowPlayerDialog(playerid, MECANICO_MENU_MULTAR, DIALOG_STYLE_INPUT, "-> Multar vehículo <-", "Estás a punto de multar un vehículo. Elige el precio que creas conveniente para sancionar el vehículo.\nRecuerda que el valor no debe sobrepasar los 3000$ de multa. Escribe el valor a multar:", "Multar", "Cancelar");
				    	return 1;
					}
					case 3:
					{
					    ShowPlayerDialog(playerid, MECANICO_MENU_DESEMBARGAR, DIALOG_STYLE_INPUT, "-> Desembargar vehículo <-", "Inserta el ID del vehículo para desembargar.", "Desembargar", "Cancelar");
					    return 1;
					}
				}
			}
		}
		case MECANICO_MENU_MULTAR:
		{
			if(response)
		    {
	    	    if(strval(inputtext) < 1 || strval(inputtext) > 3000) return Message(playerid, COLOR_GRAD2, "¡ Valor entre 1 - 3000$ !");
	        	if(CarInfo[idcar][cEmbargo] > 2) return Message(playerid, COLOR_GRAD2, "¡ Este vehículo ya alcanzó el máximo de embargos y no puedes multarlo !");
		        if(CarInfo[idcar][cMulta] > 8999) return Message(playerid, COLOR_GRAD2, "¡ No puedes multar este vehículo. Muchas multas acumuladas !");
		        CarInfo[idcar][cMulta] += strval(inputtext);
				format(string, sizeof(string), "  Multaste al vehículo con %d$!", strval(inputtext));
				Message(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
		case MECANICO_MENU_DESEMBARGAR:
		{
			if(response)
		    {
	    	    if(!IsAnOwnableCar(strval(inputtext))) return Message(playerid, COLOR_GRAD2, "No es un vehículo con embargos!");
	        	CarInfo[strval(inputtext)][cMulta] = 0;
		        CarInfo[strval(inputtext)][cEmbargo] = 0;
				format(string, sizeof(string), "  Desemargaste al vehículo: %s cuyo dueño es %s !", CarInfo[strval(inputtext)][cName],CarInfo[strval(inputtext)][cOwner]);
				Message(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
		case MECANICO_MENU_TUNING:
		{
			if(response)
		    {
	    	    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "No estás en un vehículo!");
	        	if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Este vehículo no tiene dueño!");
	        	switch(listitem)
	        	{
					case 0:	{ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_global, DIALOG_STYLE_LIST, "-> Piezas Globales <-", "Nitro\nLlantas\nSuspensión\nGPS", "Aceptar", "Atrás");}
					case 1:
					{
					    if(Boats(idcar)) return Message(playerid, COLOR_GRAD2, "¡No puedes ponerle esto a este tipo de vehiculo!");
						ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_SPECIAL, DIALOG_STYLE_LIST, "-> Tuning avanzado <-", "Piezas Wheel Arch Angels\nVinilo Alien\nVinilo Acces\nVinilo X-Flow", "Aceptar", "Atrás");
					}
					case 2: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_color, DIALOG_STYLE_LIST, "-> Cambiar Color <-", "Cambiar Color #1\nCambiar Color #2", "Aceptar", "Atrás");}
					case 3: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_name, DIALOG_STYLE_INPUT, "-> Cambiar Nombre Modelo <-", "Introduce el nuevo nombre del vehículo, ejemplo: Mercedes\n\nMáximo 12 carácteres.", "Cambiar", "Salir");}
					case 4: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_motor, DIALOG_STYLE_LIST, "-> Cambiar Motor <-", "Motor 95 \t(Capacidad gasolina: 100l)\nMotor 98 \t(Capacidad gasolina: 120l)\nMotor Diesel \t(Capacidad gasolina: 160l)\nMotor Biodiesel \t(Capacidad gasolina: 230l)", "Instalar","Salir");}
					case 5: {ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_bateria, DIALOG_STYLE_LIST, "-> Baterías <-", "Batería Cyclon 6V\t(Calidad: Baja)\nBatería Duncan 8V\t(Calidad: Media)\nBatería Bosch 12V\t(Calidad: Óptima)", "Instalar","Salir");}
				}
			}
		}
		case MECANICO_MENU_TUNING_SPECIAL:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
		                ShowPlayerDialog(playerid, TUNING_WAA, DIALOG_STYLE_LIST, "-> WAA <-", "Carrocería X-FLOW\nCarrocería Alien", "Aceptar", "Atrás");
		            }
	    	        case 1:
	        	    {
	            	    if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Vehículo sin dueño");
	                	if(IsLocolowVehicle(idcar) || IsWAAVehicle(idcar))
	                	{
		                    CarInfo[idcar][cPaintjob] = 1;
		                    ChangeVehiclePaintjob(idcar, CarInfo[idcar][cPaintjob]-1);
	    	                Message(playerid, COLOR_GRAD2, "Vinilo instalado!");
	        	        } else Message(playerid, COLOR_GRAD2, "Este vehículo no permite vinilos!");
	            	}
		            case 2:
		            {
	    	            if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Vehículo sin dueño");
	        	        if(IsLocolowVehicle(idcar) || IsWAAVehicle(idcar))
	            	    {
	                	    CarInfo[idcar][cPaintjob] = 2;
	                    	ChangeVehiclePaintjob(idcar, CarInfo[idcar][cPaintjob]-1);
	                    	Message(playerid, COLOR_GRAD2, "Vinilo instalado!");
	                	} else Message(playerid, COLOR_GRAD2, "Este vehículo no permite vinilos!");
	            	}
		            case 3:
		            {
	    	            if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "Vehículo sin dueño");
	        	        if(IsLocolowVehicle(idcar) || IsWAAVehicle(idcar))
	            	    {
	                    	CarInfo[idcar][cPaintjob] = 3;
	                	    ChangeVehiclePaintjob(idcar, CarInfo[idcar][cPaintjob]-1);
	                    	Message(playerid, COLOR_GRAD2, "Vinilo instalado!");
	                	} else Message(playerid, COLOR_GRAD2, "Este vehículo no permite vinilos!");
	            	}
		        }
			}
		}
		case TUNING_WAA:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
	            	// XFLOW TUNING
		            case 0:
		            {
	    	            Message(playerid, COLOR_GRAD2, "CASE0");
						switch(GetVehicleModel(idcar))
			    	    {
			        	    case 560:
			            	{
		                        CarInfo[idcar][cSideskirt] = 	1030;
		                        CarInfo[idcar][cRoof] = 		1033;
	    	                    CarInfo[idcar][cSpoiler] = 		1139;
	        	                CarInfo[idcar][cRearBumper] = 	1140;
	            	            CarInfo[idcar][cFrontBumper] = 	1170;
	                	        CarInfo[idcar][cExhaust] = 	1029;
	                    	    AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            	}
				            case 562:
				            {
	    	                    CarInfo[idcar][cSideskirt] = 	1039;
	        	                CarInfo[idcar][cRoof] = 		1035;
	            	            CarInfo[idcar][cRearBumper] = 	1148;
	                	        CarInfo[idcar][cFrontBumper] = 	1172;
	                    	    CarInfo[idcar][cExhaust] = 	1037;
	                        	CarInfo[idcar][cSpoiler] = 	1146;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            	}
				            case 565:
				            {
	    	                    CarInfo[idcar][cSideskirt] = 	1048;
	        	                CarInfo[idcar][cRoof] = 		1053;
	            	            CarInfo[idcar][cSpoiler] = 		1050;
	                	        CarInfo[idcar][cRearBumper] = 	1151;
	                    	    CarInfo[idcar][cFrontBumper] = 	1152;
	                        	CarInfo[idcar][cExhaust] = 	1045;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            	}
				            case 559:
				            {
	    	                    CarInfo[idcar][cSideskirt] = 	1070;
	        	                CarInfo[idcar][cRoof] = 		1068;
	            	            CarInfo[idcar][cSpoiler] = 		1158;
	                	        CarInfo[idcar][cRearBumper] = 	1161;
	                    	    CarInfo[idcar][cFrontBumper] = 	1173;
	                        	CarInfo[idcar][cExhaust] = 	1066;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            	}
				            case 561:
				            {
	    	                    CarInfo[idcar][cSideskirt] = 	1057;
	        	                CarInfo[idcar][cRoof] = 		1061;
	            	            CarInfo[idcar][cSpoiler] = 		1060;
	                	        CarInfo[idcar][cRearBumper] = 	1156;
	                    	    CarInfo[idcar][cFrontBumper] = 	1157;
	                        	CarInfo[idcar][cExhaust] = 	1059;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            	}
				            case 558:
				            {
	    	                    CarInfo[idcar][cSideskirt] = 	1093;
	        	                CarInfo[idcar][cRoof] = 		1091;
	            	            CarInfo[idcar][cSpoiler] = 		1163;
	                	        CarInfo[idcar][cRearBumper] = 	1167;
	                    	    CarInfo[idcar][cFrontBumper] = 	1165;
	                        	CarInfo[idcar][cExhaust] = 	1089;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería XFLOW Instalada!");
			            	}
				            default: Message(playerid, COLOR_GRAD2, "Este vehículo no permite este tipo de tuning.");
				        }
	    	        }
	        	    // ALIEN TUNING
					case 1:
	            	{
		                Message(playerid, COLOR_GRAD2, "CASE0");
						switch(GetVehicleModel(idcar))
				        {
				            case 560:
			    	        {
	                	        CarInfo[idcar][cSideskirt] = 	1026;
	                    	    CarInfo[idcar][cRoof] = 		1032;
	                        	CarInfo[idcar][cSpoiler] = 		1138;
	                        	CarInfo[idcar][cRearBumper] = 	1141;
	                        	CarInfo[idcar][cFrontBumper] = 	1169;
	                        	CarInfo[idcar][cExhaust] = 	1028;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
            	   				Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            	}
				            case 562:
				            {
	    	                    CarInfo[idcar][cSideskirt] = 	1036;
	        	                CarInfo[idcar][cRoof] = 		1038;
	            	            CarInfo[idcar][cRearBumper] = 	1149;
	                	        CarInfo[idcar][cFrontBumper] = 	1171;
	                    	    CarInfo[idcar][cExhaust] = 	1034;
	                        	CarInfo[idcar][cSpoiler] = 	1147;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            	}
				            case 565:
				            {
	    	                    CarInfo[idcar][cSideskirt] = 	1047;
	        	                CarInfo[idcar][cRoof] = 		1054;
	            	            CarInfo[idcar][cSpoiler] = 		1049;
	                	        CarInfo[idcar][cRearBumper] = 	1150;
	                    	    CarInfo[idcar][cFrontBumper] = 	1153;
                        		CarInfo[idcar][cExhaust] = 	1046;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            	}
				            case 559:
				            {
	    	                    CarInfo[idcar][cSideskirt] = 	1069;
	        	                CarInfo[idcar][cRoof] = 		1067;
	            	            CarInfo[idcar][cSpoiler] = 		1162;
	                	        CarInfo[idcar][cRearBumper] = 	1159;
	                    	    CarInfo[idcar][cFrontBumper] = 	1160;
	                        	CarInfo[idcar][cExhaust] = 	1065;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
				            }
				            case 561:
				            {
	        	                CarInfo[idcar][cSideskirt] = 	1056;
	            	            CarInfo[idcar][cRoof] = 		1055;
	                	        CarInfo[idcar][cSpoiler] = 		1058;
	                    	    CarInfo[idcar][cRearBumper] = 	1154;
	                        	CarInfo[idcar][cFrontBumper] = 	1153;
	                        	CarInfo[idcar][cExhaust] = 	1064;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            	}
				            case 558:
				            {
	    	                    CarInfo[idcar][cSideskirt] = 	1094;
	        	                CarInfo[idcar][cRoof] = 		1088;
	            	            CarInfo[idcar][cSpoiler] = 		1164;
	                	        CarInfo[idcar][cRearBumper] = 	1168;
	                    	    CarInfo[idcar][cFrontBumper] = 	1166;
	                        	CarInfo[idcar][cExhaust] = 	1092;
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSideskirt]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRoof]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cRearBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cFrontBumper]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cExhaust]);
	                        	AddVehicleComponent(idcar, CarInfo[idcar][cSpoiler]);
	                        	Message(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            	}
				            default: Message(playerid, COLOR_GRAD2, "Este vehículo no permite este tipo de tuning.");
				        }
	    	        }
	        	}
			}
		}
		case MECANICO_MENU_TUNING_global:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
					{
					    if(Boats(idcar)) return Message(playerid, COLOR_GRAD2, "¡No puedes ponerle esto a este tipo de vehiculo!");
						ShowPlayerDialog(playerid, TUNING_MENU_NITRO, DIALOG_STYLE_LIST, "-> Nitroso <-", "x2\nx5\nx10", "Tunear", "<<");
					}
	        	    case 1:
					{
					    if(Boats(idcar)) return Message(playerid, COLOR_GRAD2, "¡No puedes ponerle esto a este tipo de vehiculo!");
						ShowPlayerDialog(playerid, TUNING_MENU_RUEDAS, DIALOG_STYLE_LIST, "-> Menú Llantas <-", "OffRoad\nShadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAcces", "Tunear", "<<");
					}
	        	    case 2:
					{
					    if(Boats(idcar)) return Message(playerid, COLOR_GRAD2, "¡No puedes ponerle esto a este tipo de vehiculo!");
						ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_global_suspensionystereo, DIALOG_STYLE_LIST, "-> Supensión & Stereo <-", "Suspensión Hidráulica\nQuitar Suspension", "Tunear", "<<");
					}
	        	    case 3: { CarInfo[idcar][cGPS] = 1; Message(playerid, COLOR_WHITE, "* Has instalado un GPS en el vehículo.");   }
				}
			}
		}
		case MECANICO_MENU_TUNING_color:
		{
			if(response)
		    {
	    	    switch(listitem)
				{
					case 0: { ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_color_1, DIALOG_STYLE_INPUT, "-> Cambiar Color #1 <-", "Inserta el ID del Color a pintar (0-255)", "Pintar", "Atrás"); }
					case 1: { ShowPlayerDialog(playerid, MECANICO_MENU_TUNING_color_2, DIALOG_STYLE_INPUT, "-> Cambiar Color #2 <-", "Inserta el ID del Color a pintar (0-255)", "Pintar", "Atrás"); }
				}
			}
		}
		case MECANICO_MENU_TUNING_name:
		{
		    if(response)
		    {
        	    strmid(CarInfo[idcar][cName], inputtext, 0, strlen(inputtext), 12);
            	format(string, sizeof(string), "- Nuevo modelo: %s", CarInfo[idcar][cPlate]);
         		GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	    	}
		}
		case MECANICO_MENU_TUNING_motor:
		{
			if(response)
		    {
        		GetVehiclePos(idcar, cx, cy, cz);
        		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
				{
					case 0: { CarInfo[idcar][cGas] = 0; Message(playerid, COLOR_GRAD2, "Motor 95 instalado!"); }
					case 1: { CarInfo[idcar][cGas] = 1; Message(playerid, COLOR_GRAD2, "Motor 98 instalado!"); }
					case 2: { CarInfo[idcar][cGas] = 2; Message(playerid, COLOR_GRAD2, "Motor Diesel instalado!"); }
					case 3:	{ CarInfo[idcar][cGas] = 3; Message(playerid, COLOR_GRAD2, "Motor Biodiesel instalado!");  }
				}
			}
		}
		case MECANICO_MENU_TUNING_bateria:
		{
			if(response)
		    {
        		GetVehiclePos(idcar, cx, cy, cz);
        		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
				{
					case 0: { CarInfo[idcar][cBattery] = 1000; Message(playerid, COLOR_GRAD2, "Batería Cyclon 6V instalado!"); }
					case 1: { CarInfo[idcar][cBattery] = 5000; Message(playerid, COLOR_GRAD2, "Batería Duncan 8V instalado!"); }
					case 2: { CarInfo[idcar][cBattery] = 10000; Message(playerid, COLOR_GRAD2, "Batería Bosch 12V instalado!"); }
				}
			}
		}
		case MECANICO_MENU_TUNING_global_suspensionystereo:
		{
			if(response)
		    {
        	 	GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
	        	{
		            case 0: { Message(playerid, COLOR_WHITE, ">- Suspensión Hidráulica -<"); CarInfo[idcar][cHydraulics] = 1087; AddVehicleComponent(idcar, CarInfo[idcar][cHydraulics]);  return 1; }
		            case 1: { Message(playerid, COLOR_WHITE, ">- Suspensión Quitada -<"); CarInfo[idcar][cHydraulics] = 0; return 1; }
				}
			}
		}
		case MECANICO_MENU_TUNING_color_1:
		{
			if(response)
		    {
	    	    if(strval(inputtext) < 0 || strval(inputtext) > 255) return Message(playerid, COLOR_GRAD2, "ID Incorrecto de Color (0-255)");
         		GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1134, cx, cy, cz);
            	CarInfo[idcar][cColorOne] = strval(inputtext);
            	ChangeVehicleColor(idcar, CarInfo[idcar][cColorOne], CarInfo[idcar][cColorTwo]);
			}
		}
		case MECANICO_MENU_TUNING_color_2:
		{
			if(response)
		    {
	    	    if(strval(inputtext) < 0 || strval(inputtext) > 255) return Message(playerid, COLOR_GRAD2, "ID Incorrecto de Color (0-255)");
         		GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1134, cx, cy, cz);
            	CarInfo[idcar][cColorTwo] = strval(inputtext);
            	ChangeVehicleColor(idcar, CarInfo[idcar][cColorOne], CarInfo[idcar][cColorTwo]);
			}
		}
		case TUNING_MENU_RUEDAS:
		{
			if(response)
		    {
        	 	GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
	        	{
		            case 0: { Message(playerid, COLOR_WHITE, ">- Llantas OffRoad puestas! -<"); CarInfo[idcar][cWheel] = 1025; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]); return 1; }
		            case 1: { Message(playerid, COLOR_WHITE, ">- Llantas Shadow puestas! -<"); CarInfo[idcar][cWheel] = 1073; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	    	        case 2: { Message(playerid, COLOR_WHITE, ">- Llantas Mega puestas! -<"); CarInfo[idcar][cWheel] = 1074; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]); return 1; }
	        	    case 3: { Message(playerid, COLOR_WHITE, ">- Llantas Rimshine puestas! -<"); CarInfo[idcar][cWheel] = 1075; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 4: { Message(playerid, COLOR_WHITE, ">- Llantas Wires puestas! -<"); CarInfo[idcar][cWheel] = 1076; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 5: { Message(playerid, COLOR_WHITE, ">- Llantas Classic puestas! -<"); CarInfo[idcar][cWheel] = 1077; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 6: { Message(playerid, COLOR_WHITE, ">- Llantas Twist puestas! -<"); CarInfo[idcar][cWheel] = 1078; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 7: { Message(playerid, COLOR_WHITE, ">- Llantas Cutter puestas! -<"); CarInfo[idcar][cWheel] = 1079; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 8: { Message(playerid, COLOR_WHITE, ">- Llantas Switch puestas! -<"); CarInfo[idcar][cWheel] = 1080; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 9: { Message(playerid, COLOR_WHITE, ">- Llantas Grove puestas! -<"); CarInfo[idcar][cWheel] = 1081; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 10: { Message(playerid, COLOR_WHITE, ">- Llantas Import puestas! -<"); CarInfo[idcar][cWheel] = 1082; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 11: { Message(playerid, COLOR_WHITE, ">- Llantas Dollar puestas! -<"); CarInfo[idcar][cWheel] = 1083; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 12: { Message(playerid, COLOR_WHITE, ">- Llantas Trance puestas! -<"); CarInfo[idcar][cWheel] = 1084; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 13: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); CarInfo[idcar][cWheel] = 1085; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 14: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); CarInfo[idcar][cWheel] = 1096; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 15: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); CarInfo[idcar][cWheel] = 1097; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
	            	case 16: { Message(playerid, COLOR_WHITE, ">- Llantas Atomic puestas! -<"); CarInfo[idcar][cWheel] = 1098; AddVehicleComponent(idcar, CarInfo[idcar][cWheel]);  return 1; }
				}
			}
		}
		case TUNING_MENU_NITRO:{
			if(response)
		    {
        	 	GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
	        	{
		            case 0: { Message(playerid, COLOR_WHITE, "Nitro x2 Instalado."); CarInfo[idcar][cNitro] = 1009; AddVehicleComponent(idcar, CarInfo[idcar][cNitro]); return 1; }
		            case 1: { Message(playerid, COLOR_WHITE, "Nitro x5 Instalado."); CarInfo[idcar][cNitro] = 1008; AddVehicleComponent(idcar, CarInfo[idcar][cNitro]); return 1; }
	    	        case 2: { Message(playerid, COLOR_WHITE, "Nitro x10 Instalado."); CarInfo[idcar][cNitro] = 1010; AddVehicleComponent(idcar, CarInfo[idcar][cNitro]); return 1; }
	        	}
			}
		}
		case MECANICO_MENU_OTROS:
		{
			if(response)
		    {
        	 	GetVehiclePos(idcar, cx, cy, cz);
         		PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        	switch(listitem)
	        	{
		            case 0:
					{
					    ShowPlayerDialog(playerid, MECANICO_MENU_OTROS_matricula, DIALOG_STYLE_INPUT, "-> Matricula <-", "Inserta una matrícula, de 5 carácteres numéricos", "Matricular", "Atrás");
					}
					case 1:
					{
						KillTimer(mmtimer);
					    mmtimer = SetTimer("MM_Noise", 1000, true);
					    SetTimerEx("MM_Exam", 6000, false, "i", playerid);
					    Message(playerid, COLOR_WHITE, "* Examinando vehículo, espere");
					}
					case 2:
					{
						CarInfo[idcar][cAlarm] = 1;
					    Message(playerid, COLOR_WHITE, "Alarma instalada!");
					}
				}
			}
		}
		case MECANICO_MENU_OTROS_matricula:
		{
			if(response)
		    {
	    	    if(strval(inputtext) > 99999 || strval(inputtext) < 11111) return ShowPlayerDialog(playerid, MECANICO_MENU_OTROS_matricula, DIALOG_STYLE_INPUT, "-> Matricula <-", "Inserta una matrícula, de 5 carácteres numéricos", "Matricular", "Atrás");
	        	format(string, sizeof(string), "SA - %d", strval(inputtext));
	        	strmid(CarInfo[idcar][cPlate], string, 0, strlen(string), 11);
	        	SetVehicleNumberPlate(idcar, CarInfo[idcar][cPlate]);
	        	Message(playerid, COLOR_WHITE, "Martrícula cambiada! Cuando respawnee el vehículo se verá la nueva matrícula!");
			}
		}
		case REQF_ACCEPT:
		{
		    if(response)
		    {
	    	    format(string, sizeof(string), "¡Felicidades! Ahora trabajas en %s, aceptaste el contrato!",ReqF_Name[playerid]);
	        	Message(playerid, COLOR_YELLOW, string);
	        	PlayerInfo[playerid][pMember]= ReqF_Faction[playerid];
	        	PlayerInfo[playerid][pRank] = 1;
	        	UpdatePlayerStat(playerid);
	        	format(string, sizeof(string), "* %s acepta un contrato.", PlayerName(playerid));
      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        	ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0; Facturing[playerid] = 0;
	    	}
		    else
			{
        	    Message(playerid, COLOR_GRAD2, "Rechazaste el contrato.");
            	format(string, sizeof(string), "* %s rechaza un contrato.", PlayerName(playerid));
      			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0; Facturing[playerid] = 0;
			}
		}
		case ENTER_LSTV:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
	            	{
	                    Pause(playerid);
		                SetPosEx(playerid, -2719.7854,519.2936,48.3752,0,0,0);
	    	            GText(playerid, "~g~~h~lstv", 5000, 1);
	        	    }
	            	case 1:
	            	{
		                Pause(playerid);
		                SetPosEx(playerid, 243.2710,302.7583,999.1343+1,0,0,0);
	    	            GText(playerid, "~g~~h~lstv", 5000, 1);
	        	    }
		        }
		    }
		}
		case GASOLINA_DIALOG:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0: FuelCar(playerid, 0);
		            case 1: FuelCar(playerid, 1);
	    	        case 2: FuelCar(playerid, 2);
	        	    case 3: FuelCar(playerid, 3);
	        	}
		    }
		}
		case IMPORTAR_MOTOR:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0:
					{
			        	Message(playerid, COLOR_YELLOW, "Motor instalado: sin plomo 95, capacidad: 100l");
						CarInfo[idcar][cGas] = 0;
					}
	        	    case 1:
					{
			        	Message(playerid, COLOR_YELLOW, "Motor instalado: sin plomo 98, capacidad: 120l");
						CarInfo[idcar][cGas] = 1;
					}
					case 2:
					{
			        	Message(playerid, COLOR_YELLOW, "Motor instalado: Diesel, capacidad: 160l");
						CarInfo[idcar][cGas] = 2;
					}
					case 3:
					{
			        	Message(playerid, COLOR_YELLOW, "Motor instalado: Biodiesel, capacidad: 230l");
						CarInfo[idcar][cGas] = 3;
					}
	        	}
	    	}
		    else
			{
				CarInfo[idcar][cGas] = 0;
				Message(playerid, COLOR_YELLOW, "Motor asignado estándar (Sin plomo 95), capacidad: 100 litros");
			}
		}
		case DIALOG_PAINTBALL:
		{
			if(response)
		    {
	    	    switch(listitem)
	        	{
					case 0:
	            	{
	             		SetPosEx(playerid,-1410.72,1591.16,1052.53,0,14,0);
    	         		Bought(playerid, 1000);
        	       		Till(20, 1000);
						ArmarPaintBall(playerid);
						PaintballType[playerid] = 1;
						TotalDM += 1;
	            	}
		            case 1:
					{
					    format(string, sizeof(string), "{41FF2F}• Equipo Verde (%d)\n{FF7617}• Equipo Naranja (%d)", TTeamVerde, TTeamNaranja);
						ShowPlayerDialog(playerid, DIALOG_PAINTBALL_TVT, DIALOG_STYLE_LIST, "Team vs Team", string, "Aceptar", "Cancelar");
					}
					case 2:
		            {
	    	            Pause(playerid);
            	 		SetPosEx(playerid,1975.8000,1619.4677,-11.8929,0,0,0);
               			Bought(playerid, 1000);
               			Till(20, 1000);
						ArmarPaintBall(playerid);
						PaintballType[playerid] = 4;
						TotalPlayer += 1;
	            	}
				}
			}
		}
		case DIALOG_PAINTBALL_TVT:
		{
			if(response)
    		{
        		switch(listitem)
        		{
     				case 0:
	       			{
    	      			SetPosEx(playerid,-1131.2336,1057.7888,1346.4170,0,10,0);
        	     		Bought(playerid, 1000);
        	     		Till(20, 1000);
						ArmarPaintBall(playerid);
						PaintballType[playerid] = 3;
						TTeamVerde += 1;
						SetPlayerColor(playerid, VERDE_ADMIN);
	            	}
	     			case 1:
  		 			{
  	    				SetPosEx(playerid,-973.1844,1061.3037,1345.6699,0,10,0);
          				Bought(playerid, 1000);
          				Till(20, 1000);
						ArmarPaintBall(playerid);
						PaintballType[playerid] = 2;
						TTeamNaranja += 1;
						SetPlayerColor(playerid, ORANGE_ADMIN);
	            	}
				}
			}
		}
		case RENOVEH_15_DIALOG:
		{
		    if(response)
			{
	    		if(!ProxDetectorS(10.0, playerid, TimeCarOffer[playerid])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				format(string, sizeof(string), "* %s saca firma un cheque y se lo da a %s.", PlayerName(playerid), PlayerName(TimeCarOffer[playerid]));
				ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				if(RenoveLlave[playerid] == 1){
			    	format(string, sizeof(string), "* Has renovado tu %s por un periodo de 15 dias, utiliza /v tiempo", CarInfo[PlayerInfo[playerid][pPcarkey]][cName]);
			    	Message(playerid, COLOR_GREEN, string);
			    	format(string, sizeof(string), "* Has renovado el %s de %s y has recibido un cheque por 6000$.", CarInfo[PlayerInfo[playerid][pPcarkey]][cName], PlayerName(playerid));
					Message(TimeCarOffer[playerid], COLOR_GREEN, string);
					CarInfo[PlayerInfo[playerid][pPcarkey]][cVehTime] = gettime() + 1296000;
					PlayerInfo[playerid][pTimeCar] = gettime() + 1296000;
				}
				else if(RenoveLlave[playerid] == 2){
				    format(string, sizeof(string), "* Has renovado tu %s por un periodo de 15 dias, utiliza /v tiempo", CarInfo[PlayerInfo[playerid][pPcarkey2]][cName]);
					Message(playerid, COLOR_GREEN, string);
					format(string, sizeof(string), "* Has renovado el %s de %s y has recibido un cheque por 6000$.", CarInfo[PlayerInfo[playerid][pPcarkey2]][cName], PlayerName(playerid));
					Message(TimeCarOffer[playerid], COLOR_GREEN, string);
			    	CarInfo[PlayerInfo[playerid][pPcarkey2]][cVehTime] = gettime() + 1296000;
					PlayerInfo[playerid][pTimeCar2] = gettime() + 1296000;
				}
				PlayerInfo[playerid][pAccount] -= 6000;
				PlayerInfo[TimeCarOffer[playerid]][pCheques] += 6000;
				TimeCarOffer[playerid] = 999;
				RenoveLlave[playerid] = 0;
			}
			else
			{
  				format(string, sizeof(string), "* %s rechaza una peticion.", PlayerName(playerid));
  				ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
  				format(string, sizeof(string), "* {FFC990}%s {FFFFFF}ha rechazado firmar el contrato de renovacion.", PlayerName(playerid));
  				MessageEx(playerid, TimeCarOffer[playerid], -1, string);
  				TimeCarOffer[playerid] = 999;
  				RenoveLlave[playerid] = 0;
			}
	 	}
	 	case RENOVEH_30_DIALOG:
	 	{
		    if(response)
			{
			    if(!ProxDetectorS(10.0, playerid, TimeCarOffer[playerid])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				format(string, sizeof(string), "* %s saca firma un cheque y se lo da a %s.", PlayerName(playerid), PlayerName(TimeCarOffer[playerid]));
				ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				if(RenoveLlave[playerid] == 1){
			    	format(string, sizeof(string), "* Has renovado tu %s por un periodo de 30 dias, utiliza /v tiempo", CarInfo[PlayerInfo[playerid][pPcarkey]][cName]);
			    	Message(playerid, COLOR_GREEN, string);
			    	format(string, sizeof(string), "* Has renovado el %s de %s y has recibido un cheque por 15000$.", CarInfo[PlayerInfo[playerid][pPcarkey]][cName], PlayerName(playerid));
					Message(TimeCarOffer[playerid], COLOR_GREEN, string);
					CarInfo[PlayerInfo[playerid][pPcarkey]][cVehTime] = gettime() + 2592000;
					PlayerInfo[playerid][pTimeCar] = gettime() + 2592000;
				}
				else if(RenoveLlave[playerid] == 2){
				    format(string, sizeof(string), "* Has renovado tu %s por un periodo de 30 dias, utiliza /v tiempo", CarInfo[PlayerInfo[playerid][pPcarkey2]][cName]);
					Message(playerid, COLOR_GREEN, string);
					format(string, sizeof(string), "* Has renovado el %s de %s y has recibido un cheque por 15000$.", CarInfo[PlayerInfo[playerid][pPcarkey2]][cName], PlayerName(playerid));
					Message(TimeCarOffer[playerid], COLOR_GREEN, string);
			    	CarInfo[PlayerInfo[playerid][pPcarkey2]][cVehTime] = gettime() + 2592000;
					PlayerInfo[playerid][pTimeCar2] = gettime() + 2592000;
				}
				PlayerInfo[playerid][pAccount] -= 15000;
				PlayerInfo[TimeCarOffer[playerid]][pCheques] += 15000;
				TimeCarOffer[playerid] = 999;
				RenoveLlave[playerid] = 0;
			}
			else
			{
  				format(string, sizeof(string), "* %s rechaza una peticion.", PlayerName(playerid));
  				ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
  				format(string, sizeof(string), "* {FFC990}%s {FFFFFF}ha rechazado firmar el contrato de renovacion.", PlayerName(playerid));
  				MessageEx(playerid, TimeCarOffer[playerid], -1, string);
  				TimeCarOffer[playerid] = 999;
  				RenoveLlave[playerid] = 0;
			}
	 	}
	 	case IPOD_MENU:
	 	{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
					case 0:
					{
					    new strcan[2000];
					    new can0[] = "Let her go - Passenger\nGet lucky - Daft Punk\nThrift shop - Macklemore\nJust give me a reason - Pink\nI could be the one - Avicii\n";
					    new can1[] = "Play hard - David Guetta\nHo hey - The Lumineers\nImpossible - James Arthur\nLive it up - Jennifer Lopez\nMore than friends - Inna\nBlurred lines - Robin Thicke\n";
					    new can2[] = "Come & get it - Selena Gomez\nOn top of the world - Imagine Dragons\nThe other side - Jason Derulo\n¡Corre! - Jesse & Joy\nI love it - Icona Pop\n";
					    new can3[] = "Turn on the radio - Xuso Jones\nRight now - Kostrok\nMirrors - Justin Timberlake\nLove me again - John Newman\nCero - Dani Martin\nStay - Rihanna\n";
					    new can4[] = "Quién - Pablo Alborán\nWhen I was your man - Bruno Mars\nNo digas nada -Cali & El Dandee\nUnbreakable - Marien Baker\nVuelvo a verte - Malu\nCamino de rosas - Alejandro Sanz\n";
				    	new can5[] = "Heartbreaker - Auryn\nFunketón - Efecto Pasillo\nWalks like Rihanna - The Wanted\nGitana - El viaje de Elliot\nMe enamoré (Feeling of love) - XRIZ\nTu jardín con enanitos - Melendi\nMondays - Yanela Brooks\n";
					    new can6[] = "Make my day - Auryn\nPretty boy - Edurne\nCon fuego - Soraya\nBoy toy - Angy\nViven - Rasel";
					    format(strcan, sizeof(strcan), "%s%s%s%s%s%s%s", can0,can1,can2,can3,can4,can5,can6);
						ShowPlayerDialog(playerid, IPOD_MP3, DIALOG_STYLE_LIST, "IPOD - Lista de Canciones", strcan, "Escuchar", "Atrás");
					}
		            case 1:
		            {
						ShowPlayerDialog(playerid, Radios, DIALOG_STYLE_LIST,
				"Selecciona Tu Emisora","{ADFF2F}Drumm Bass\n{7B68EE}LaMEGARADIO\nRMassiveDubstep\n{912CEE}ReservaRap\n{CAE1FF}Los40\nReggae\n{FF8000}House",
				"Sintonizar", "Cancelar");
					}
					case 2:
					{
					    StopAudioStreamForPlayer(playerid);
					    Message(playerid, COLOR_GRAD2, "¡Apagaste tu IPOD!");
					    format(string, sizeof(string), "* %s apaga su ipod y lo guarda en su bolsillo.", PlayerName(playerid));
					    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    				}
	 			}
   			}
 		}

		case IPOD_MP3:
		{
		    if(response)
			{
			    switch(listitem)
		    	{

		        	case 0:
		        	{
	                    StopAudioStreamForPlayer(playerid);
    	          		PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Passenger%20%20%20Let%20Her%20Go%20%5BOfficial%20Video%5D.mp3");

					}
					case 1:
					{
					    StopAudioStreamForPlayer(playerid);
    	          		PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Daft%20Punk%20%20%20Get%20Lucky%20%28Official%20Audio%29%20ft%20Pharrell%20Williams%5B1%5D.mp3");

					}
		        	case 2:
		        	{
			            StopAudioStreamForPlayer(playerid);
    	          		PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/MACKLEMORE%20%20RYAN%20LEWIS%20%20%20THRIFT%20SHOP%20FEAT%20WANZ%20%28OFFICIAL%20VIDEO%29.mp3");

        			}
        			case 3:
        			{
	        		    StopAudioStreamForPlayer(playerid);
    	          		PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/P%21nk%20%20%20Just%20Give%20Me%20A%20Reason%20ft%20Nate%20Ruess.mp3");

            	   	}
               		case 4:
               		{
	                    StopAudioStreamForPlayer(playerid);
    	          		PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Avicii%20vs%20Nicky%20Romero%20%20%20I%20Could%20Be%20The%20One%20%28Official%20Music%20Video%29.mp3");

					}
					case 5:
					{
					    StopAudioStreamForPlayer(playerid);
    	          		PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/David%20Guetta%20%20%20Play%20Hard%20%28Official%20Video%29%20ft%20Ne%20Yo%2C%20Akon.mp3");

					}
               		case 6:
               		{
	               	    StopAudioStreamForPlayer(playerid);
    	                PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/The%20Lumineers%20%20%20Ho%20Hey%20%28Official%20Video%29.mp3");

            	   	}
               		case 7:
               		{
	               		StopAudioStreamForPlayer(playerid);
						PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/James%20Arthur%20%20%20Impossible%20%20%20Official%20Single.mp3");

					}
               		case 8:
               		{
	               		StopAudioStreamForPlayer(playerid);
						PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Jennifer%20Lopez%20%20%20Live%20It%20Up%20ft%20Pitbull.mp3");

					}
					case 9:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/INNA%20feat%20Daddy%20Yankee%20%20%20More%20Than%20Friends%20%28Official%20Music%20Video%29.mp3");

            	   	}
                	case 10:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Robin%20Thicke%20%20%20Blurred%20Lines%20ft%20TI%2C%20Pharrell.mp3");

            	   	}
               		case 11:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Selena%20Gomez%20%20%20Come%20%20Get%20It.mp3");

            	   	}
               		case 12:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Imagine%20Dragons%20%20%20On%20Top%20of%20the%20World%20%20%20Lyrics.mp3");

            	   	}
               		case 13:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Jason%20Derulo%20%27The%20Other%20Side%27%20Lyrics.mp3");

            	   	}
               		case 14:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Jesse%20%20Joy%20%20%20Corre%20%20%28Lyric%20Video%29.mp3");

            	   	}
               		case 15:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Icona%20Pop%20%20%20I%20Love%20It%20%28feat%20Charli%20XCX%29%20%5BOFFICIAL%20VIDEO%5D.mp3");

            	   	}
               		case 16:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Xuso%20Jones%20%20%20Turn%20On%20The%20Radio%20%28Lyric%20Video%29.mp3");
        	            
            	   	}
               		case 17:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Kostrok%20%20%20Right%20Now%20%28Official%20Lyric%20Video%29.mp3");

            	   	}
               		case 18:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Justin%20Timberlake%20%20%20Mirrors.mp3");

            	   	}
               		case 19:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/John%20Newman%20%20%20Love%20Me%20Again.mp3");

            	   	}
               		case 20:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Dani%20Martin%20%20%20Cero.mp3");

            	   	}
               		case 21:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Rihanna%20%20%20Stay%20ft%20Mikky%20Ekko.mp3");

            	   	}
               		case 22:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Pablo%20Alboran%20%20%20Qui%C3%A9n.mp3");

            	   	}
               		case 23:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Bruno%20Mars%20%20%20When%20I%20Was%20Your%20Man%20%5BOfficial%20Video%5D.mp3");

               		}
            	   	case 24:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Cali%20Y%20El%20Dandee%20%20%20No%20Digas%20Nada%20%28D%C3%A9j%C3%A0%20vu%29%20%20%20Lyric%20Video.mp3");

            	   	}
               		case 25:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Marien%20Baker%20%20%20Unbreakable%20%28feat%20Shaun%20Frank%29.mp3");

            	   	}
               		case 26:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Malu%20Con%20Pablo%20Alboran%20%20%20Vuelvo%20A%20Verte.mp3");

            	   	}
               		case 27:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Alejandro%20Sanz%20%20%20Camino%20De%20Rosas.mp3");

            	   	}
               		case 28:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/AURYN%20%20Heartbreaker%20%28Lyric%20video%29.mp3");

            	   	}
               		case 29:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Efecto%20pasillo%20%20%20Funket%C3%B3n.mp3");

            	   	}
               		case 30:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/The%20Wanted%20%20%20Walks%20Like%20Rihanna.mp3");

            	   	}
               		case 31:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/El%20Viaje%20De%20Elliot%20%20%20Gitana%20%28Videoclip%20Oficial%29.mp3");

            	   	}
               		case 32:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/XRIZ%20%20%20Me%20Enamor%C3%A9%20%28Feeling%20Of%20Love%29.mp3");

            	   	}
               		case 33:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Melendi%20%20%20Tu%20Jard%C3%ADn%20con%20enanitos.mp3");

            	   	}
               		case 34:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Yanela%20Brooks%20%20%20Mondays%20ft%20Brian%20Cross%20%28Audio%20Oficial%29.mp3");

            	   	}
               		case 35:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Auryn%20%20%20Make%20my%20day.mp3");

            	   	}
               		case 36:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Edurne%20%20%20Pretty%20Boy.mp33");

               		}
            	   	case 37:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Soraya%20%20%20Con%20Fuego%20%28Official%20video%29.mp3");

               		}
            	   	case 38:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Angy%20%20%20Boytoy.mp3");
        	            
            	   	}
               		case 39:
					{
					    StopAudioStreamForPlayer(playerid);
    	     			PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/88698185/canciones/Rasel%20%20%20Viven%20%28feat%20Jadel%29.mp3");

            	   	}
               		
           		}
			} else ShowPlayerDialog(playerid, IPOD_MENU, DIALOG_STYLE_LIST, "IPOD Menú", "MP3\nRadio\nApagar", "Aceptar", "Salir");
		}
		case Radios:
		{
		    if(response)
			{
			    switch(listitem)
		    	{
		        	case 0:
		   			{
			        SendClientMessage(playerid, YELLOW, "Radio DrumBass Sintonizada");
					GameTextForPlayer(playerid,"~w~Radio DrumBass Sintonizada",5000,3);
			        PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/59142770/Emisoras/Drum%26Bass.pls/");
			        }
		        	case 1:
	        	    {
			        SendClientMessage(playerid, YELLOW, "LaMEGARADIO Sintonizada");
			        GameTextForPlayer(playerid,"~Y~LaMEGARADIO Sintonizada",5000,3);
			        PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/59142770/Emisoras/LaMEGARADIO.pls/");

			        }
					case 2:
					{
			        SendClientMessage(playerid, YELLOW, "Radio MassiveDubstep Sintonizada");
			    	GameTextForPlayer(playerid,"~w~Radio MassiveDubstep Sintonizada",5000,3);
			    	PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/59142770/Emisoras/Massive%20Dubstep.pls/");

			        }
		        	case 3:
		        	{
			        SendClientMessage(playerid, YELLOW, "Radio ReservaRap Sintonizada");
			        GameTextForPlayer(playerid,"~w~Radio ReservaRap Sintonizada",5000,3);
			    	PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/59142770/Emisoras/GranReservaRAP.m3u/");

			        }
        			case 4:
        	        {
			        SendClientMessage(playerid, YELLOW, "Radio Los40 Sintonizada");
			        GameTextForPlayer(playerid,"~w~Radio Los40 Sintonizada",5000,3);
			    	PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/59142770/Emisoras/LOS40.pls/");
			        }
               		case 5:
               		{
			        SendClientMessage(playerid, YELLOW, "Radio Reggae Sintonizada");
			        GameTextForPlayer(playerid,"~w~Radio Reggae Sintonizada",5000,3);
			    	PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/59142770/Emisoras/La%20Grosse%20Radio%20Reggae.pls");

			        }
					case 6:
					{
			        SendClientMessage(playerid, YELLOW, "Radio House Sintonizada");
			        GameTextForPlayer(playerid,"~w~Radio House Sintonizada",5000,3);
			    	PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/u/59142770/Emisoras/HouseTime.pls");

			        }
           		}
			} 
		}
		case RECARGA_PHONE:
		{
		    if(response)
		    {
	    	    if(DetectNumber(inputtext))
				{
	                RecNumber[playerid] = strval(inputtext);
					format(string,sizeof(string),"{FFFFFF}¿Confirmas tu numero celular: %d?", RecNumber[playerid]);
					ShowPlayerDialog(playerid, OTECEL_CONFIRM, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL", string, "Confirmar", "Cancelar");
				}
				else { ShowPlayerDialog(playerid, RECARGA_PHONE, DIALOG_STYLE_INPUT, "{018CFE}OTECEL - Operadora", "{FFFFFF}Solo se permite ingresar números, mínimo 4 digitos\nIngrese su numero nuevamente:", "Aceptar", "Cancelar"); }
			}
		}
		case OTECEL_CONFIRM:
		{
		    if(response)
		    {
	    	    if(RecNumber[playerid] == PlayerInfo[playerid][pPnumber])
        		{
		        	ShowPlayerDialog(playerid, OTECEL_PAQUETES, DIALOG_STYLE_LIST, "{018CFE}Paquetes OTECEL", "• 60$ Llamadas - 15 Mensajes\t $100\n• 120$ LLamadas - 30 Mensajes\t $200\n• 60$ LLamadas\t\t\t $60\n• 120$ Llamadas\t\t\t $120\n• 15 Mensajes\t\t\t $45\n• 30 Mensajes\t\t\t $90", "Seleccionar", "Cancelar");
		        	RecNumber[playerid] = 0;
				}
				else { ShowPlayerDialog(playerid, RECARGA_PHONE, DIALOG_STYLE_INPUT, "{018CFE}OTECEL - Operadora", "{FFFFFF}Segun nuestro sistema ese numero esta a nombre\nde otra persona, ingrese nuevamente su número:", "Aceptar", "Cancelar"); }
   			}
		    else { ShowPlayerDialog(playerid, RECARGA_PHONE, DIALOG_STYLE_INPUT, "{018CFE}Operadora de Telefonia Celular OTECEL", "{FFFFFF}Ingresa tu numero celular para realizar la recarga", "Aceptar", "Cancelar"); }
		}
		case OTECEL_PAQUETES:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0: {
		                Till(13, 100);
		                Bought(playerid, 100);
	    	            PlayerInfo[playerid][pMinutes] += 600;
	        			PlayerInfo[playerid][pMTexto] += 15;
	        			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 60$ Llamadas - 15 Mensajes", "Aceptar", "");
					}
					case 1: {
					    Till(13, 200);
					    Bought(playerid, 200);
					    PlayerInfo[playerid][pMinutes] += 1200;
	        			PlayerInfo[playerid][pMTexto] += 30;
	        			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 120$ Llamadas - 30 Mensajes", "Aceptar", "");
					}
					case 2: {
					    Till(13, 60);
						Bought(playerid, 60);
					    PlayerInfo[playerid][pMinutes] += 600;
            			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 60$ Llamadas", "Aceptar", "");
                	}
	                case 3: {
						Till(13, 120);
    	                Bought(playerid, 120);
        	            PlayerInfo[playerid][pMinutes] += 1200;
            			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 120$ Llamadas", "Aceptar", "");
                	}
	                case 4: {
	                    Till(13, 45);
    	                Bought(playerid, 45);
        	            PlayerInfo[playerid][pMTexto] += 15;
	        			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 15 Mensajes", "Aceptar", "");
	        		}
		        	case 5: {
		        	    Till(13, 90);
		        	    Bought(playerid, 90);
	    	    	    PlayerInfo[playerid][pMTexto] += 30;
	        			ShowPlayerDialog(playerid,1419, DIALOG_STYLE_MSGBOX, "{018CFE}OTECEL - Confirmación", "{FFFFFF}Recarga celular realizada: 30 Mensajes", "Aceptar", "");
	        		}
				}
		    }
		}
		case MATRIMONIO_DIALOG:
		{
		    if(response)
		    {
        	    if(!IsPlayerConnected(strval(inputtext))) return Message(playerid, COLOR_GRAD2, "Jugador no conectado");
            	if(!ProxDetectorS(5.0,playerid,strval(inputtext))) return Message(playerid, COLOR_GRAD2, "Estan demasiado lejos.");
            	if(PlayerInfo[strval(inputtext)][pMarried] == 1) return Message(playerid, COLOR_GRAD2, "¡Esa persona ya esta casada!");
            	if(PlayerInfo[strval(inputtext)][pSex] == 1) return Message(playerid, COLOR_GRAD2, "¡Solo se permiten matrimonio entre hombre y mujer!");
            	if(strval(inputtext) == playerid) return Message(playerid, COLOR_GRAD2, "¡No te puedes casar contigo mismo!");
            	Matrimonio[playerid] = strval(inputtext);
            	Matrimonio[Matrimonio[playerid]] = playerid;
	        	format(string, sizeof(string), "Padre Torres dice: %s, ¿aceptas como esposo a %s para amarlo y respetarlo, en la", PlayerName(Matrimonio[playerid]),PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	ProxDetector(20.0, playerid, "Padre Torres dice: salud y en la enfermedad, en la pobreza y en la riqueza hasta que la muerte los separe?" ,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	ShowPlayerDialog(Matrimonio[playerid], MATRIMONIO_CONFIRM, DIALOG_STYLE_MSGBOX,"{018CFE}Iglesia", "{FFFFFF}Por favor selecione su respuesta","SI Acepto","NO Acepto");
         	}
		}
		case MATRIMONIO_CONFIRM:
		{
		    if(response)
		    {
        	    format(string, sizeof(string), "%s dice: Si, acepto.", PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	format(string, sizeof(string), "* %s toma la mano de %s y le pone un anilo.", PlayerName(playerid), PlayerName(Matrimonio[playerid]));
            	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	format(string, sizeof(string), "Padre Torres dice: %s, ¿aceptas como tu esposa a %s para amarla y respetarla, en la", PlayerName(Matrimonio[playerid]),PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	ProxDetector(20.0, playerid, "Padre Torres dice: salud y en la enfermedad, en la pobreza y en la riqueza hasta que la muerte los separe?",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	ShowPlayerDialog(Matrimonio[playerid], MATRIMONIO_CONFIRM2, DIALOG_STYLE_MSGBOX,"{018CFE}Iglesia", "{FFFFFF}Por favor selecione su respuesta","SI Acepto","NO Acepto");
			}
			else
			{
			    format(string, sizeof(string), "%s dice: No, lo siento no me puedo casar.", PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	Matrimonio[Matrimonio[playerid]] = 999;
            	Matrimonio[playerid] = 999;
			}
		}
		case MATRIMONIO_CONFIRM2:
		{
		    if(response)
		    {
	    	    format(string, sizeof(string), "%s dice: Si, acepto.", PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	format(string, sizeof(string), "* %s toma la mano de %s y le pone un anilo.", PlayerName(playerid), PlayerName(Matrimonio[playerid]));
            	ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	format(string, sizeof(string), "* %s y %s firman en un libro.", PlayerName(playerid), PlayerName(Matrimonio[playerid]));
            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	ProxDetector(20.0, playerid, "Padre Torres dice: Por el poder que me concede la Santa Iglesia Catolica, yo los declaro marido y mujer,",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	ProxDetector(20.0, playerid, "Padre Torres dice: Que lo que hoy a unido Dios no lo separe el hombre, puedes besar a la novia.",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	strmid(PlayerInfo[playerid][pMarriedTo], PlayerName(Matrimonio[playerid]), 0, strlen(PlayerName(Matrimonio[playerid])), 64);
            	strmid(PlayerInfo[Matrimonio[playerid]][pMarriedTo], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 64);
            	Bought(playerid, 8000);
            	PlayerInfo[playerid][pMarried] = 1;
            	PlayerInfo[Matrimonio[playerid]][pMarried] = 1;
				Matrimonio[Matrimonio[playerid]] = 999;
            	Matrimonio[playerid] = 999;
     		}
	     	else
    	 	{
        	    format(string, sizeof(string), "%s dice: No, lo siento no me puedo casar.", PlayerName(playerid));
            	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
            	Matrimonio[Matrimonio[playerid]] = 999;
            	Matrimonio[playerid] = 999;
			}
		}
		case DIVORCIO_DIALOG:
		{
		    if(response)
		    {
	    	    Message(playerid, COLOR_GRAD2, "* Ahora debes esperar su respuesta.");
	        	format(string, sizeof(string), "{FFFFFF}%s ha hecho una peticion de divorcio, ¿aceptas firmar el divorcio?", PlayerName(playerid));
	        	ShowPlayerDialog(Divorciar[playerid], DIVORCIO_CONFIRM, DIALOG_STYLE_MSGBOX, "{018CFE}Iglesia - Divorcio", string, "Aceptar", "Cancelar");
     		}
	 	}
	 	case DIVORCIO_CONFIRM:
	 	{
		    if(response)
		    {
	    	    strmid(PlayerInfo[playerid][pMarriedTo], "Nadie", 0, strlen("Nadie"), 64);
            	strmid(PlayerInfo[Divorciar[playerid]][pMarriedTo], "Nadie", 0, strlen("Nadie"), 64);
            	PlayerInfo[playerid][pMarried] = 0;
            	PlayerInfo[Divorciar[playerid]][pMarried] = 0;
            	format(string, sizeof(string), "* Te has divorciado de %s, ahora eres libre", PlayerName(Divorciar[playerid]));
            	Message(playerid, COLOR_GRAD4, string);
	        	format(string, sizeof(string), "* Te has divorciado de %s, ahora eres libre", PlayerName(playerid));
            	Message(Divorciar[playerid], COLOR_GRAD4, string);
            	format(string, sizeof(string), "* %s y %s firman un documento.", PlayerName(playerid), PlayerName(Divorciar[playerid]));
            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	Divorciar[playerid] = 999;
            	Divorciar[Divorciar[playerid]] = 999;
     		}
	     	else
 			{
 			    Message(playerid, COLOR_GRAD2, "* Rechazaste la peticion de divorcio.");
				format(string, sizeof(string), "%s no ha aceptado la peticion de divorcio", PlayerName(playerid));
				Message(Divorciar[playerid], COLOR_GRAD2, string);
				Divorciar[playerid] = 999;
            	Divorciar[Divorciar[playerid]] = 999;
 			}
		}
		case HOUSE_IMPUESTOS:
		{
		    if(response)
		    {
		        if(strlen(inputtext) < 1) return ShowPlayerDialog(playerid, HOUSE_IMPUESTOS, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Por favor ingrese su numero de DNI", "Aceptar", "Cancelar");
		        if(strval(inputtext) != PlayerInfo[playerid][pDNI]) return ShowPlayerDialog(playerid, HOUSE_IMPUESTOS, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Nuestro sistema ha detectado que ninguna propiedad se encuentra\nrelacionada con ese numero de DNI, por favor revise bien.", "Aceptar", "Cancelar");
				HouseInfo[PlayerInfo[playerid][pPhousekey]][hTime] = gettime() + 2592000;
				Message(playerid, COLOR_WHITE, "{FF7617}Casa de Impuestos: {FFFFFF}Ha realizado su pago de impuestos, recuerde acercarse el próximo mes.");
				Bought(playerid, 25000);
				Tax += 25000;
				return 1;
			}
		}
		case COMPRAR_JOYAS:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
						if(CheckMoney(playerid, 40000))
						{
						    Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Anillo de Compromiso valorado en 40000$.");
						    PlayerInfo[playerid][pAnilloCom] += 1;
						    Bought(playerid, 25000);
						    Till(29, 25000);
		                }
		            }
		            case 1:
		            {
		                if(CheckMoney(playerid, 50000))
		                {
		                    Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Anillo de Oro valorado en 50000$.");
		                    PlayerInfo[playerid][pAnilloOro] += 1;
		                    Bought(playerid, 50000);
		                    Till(29, 50000);
                  		}
            		}
            		case 2:
            		{
            		    if(CheckMoney(playerid, 100000))
            		    {
            		        Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Collar de Perlas valorado en 100000$.");
		                    PlayerInfo[playerid][pCollar] += 1;
		                    Bought(playerid, 100000);
		                    Till(29, 100000);
                  		}
            		}
            		case 3:
            		{
            		    if(CheckMoney(playerid, 140000))
            		    {
            		        Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Anillo de de Diamantes valorado en 140000$.");
            		        PlayerInfo[playerid][pAnilloDia] += 1;
            		        Bought(playerid, 140000);
            		        Till(29, 140000);
        		        }
    		        }
    		        case 4:
    		        {
    		            if(CheckMoney(playerid, 80000))
    		            {
    		                Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir una Pulsera de Oro valorada en 80000$.");
            		        PlayerInfo[playerid][pPulsera] += 1;
            		        Bought(playerid, 80000);
            		        Till(29, 80000);
        		        }
					}
					case 5:
					{
					    if(CheckMoney(playerid, 18000))
					    {
					        Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Arete de Diamantes valorado en 18000$.");
					        PlayerInfo[playerid][pAretes] += 1;
					        Bought(playerid, 18000);
					        Till(29, 18000);
	        			}
      				}
      				case 6:
      				{
      				    if(CheckMoney(playerid, 46000))
      				    {
      				        Message(playerid, COLOR_WHITE, "* {FFFF00}Joyeria: {FFFFFF}Acabas de adquirir un Reloj de Oro valorado en 46000$.");
					        PlayerInfo[playerid][pReloj] += 1;
					        Bought(playerid, 46000);
					        Till(29, 46000);
		        		}
					}
				}
			}
		}
		case CARGAR_CAMION:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0:
		            {
	    	            Mercancia[playerid] = 1;
	        	        PlayerIsRuta[playerid] = 1;
	            		SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
					}
					case 1:
					{
					    Mercancia[playerid] = 2;
					    PlayerIsRuta[playerid] = 1;
						SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
      				}
	      			case 2:
    	  			{
      				    Mercancia[playerid] = 3;
      				    PlayerIsRuta[playerid] = 1;
      				    SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
      				}
	      			case 3:
    	  			{
      				    Mercancia[playerid] = 4;
      				    PlayerIsRuta[playerid] = 1;
      				    SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
           			}
	           		case 4:
    	       		{
        	   		    Mercancia[playerid] = 5;
           			    PlayerIsRuta[playerid] = 1;
           			    SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
           			}
           			case 5:
    	       		{
        	   		    Mercancia[playerid] = 6;
           			    PlayerIsRuta[playerid] = 1;
           			    SetPlayerCheckpoint(playerid, 2197.9363,-2659.8430,13.5469, 5.0);
            			Message(playerid, COLOR_WHITE, "¡Dirigete al checkpoint para recoger tu carga!");
           			}
	 			}
			}
			else RemovePlayerFromVehicle(playerid);
 		}
 		case DIALOG_PUERTO:
 		{
	 	    if(response)
 		    {
 	    	    switch(listitem)
 	        	{
 	            	case 0:
 	            	{
	 	                if(CheckMoney(playerid,1000))
			            {
 	    	            	PlayerInfo[playerid][pImplementos] = 1;
 	        	        	Message(playerid, COLOR_GRAD2, "* Has comprado los implementos necesarios para la pesca.");
 	            	    	Bought(playerid, 1000);
 	            	    	Till(15, 1000);
 	                	}
 	            	}
	 	            case 1:
 		            {
						if(CheckMoney(playerid, 100))
						{
						    Till(15, 100);
						    Bought(playerid, 100);
						    PlayerInfo[playerid][pCarnada] += 500;
						    Message(playerid, COLOR_GRAD2, "* Has comprado carnada, te servira para realizar 5 tiros de redes.");
 	                	}
					}
					case 2:
					{
					    if(PlayerInfo[playerid][pPeces] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes nada para vender!");
						new ganado = PlayerInfo[playerid][pPeces]*6;
				    	PlayerInfo[playerid][pCheques] += ganado;
						format(string, sizeof(string), "* Has ganado %d$ vendiendo los peces a Roberto.", ganado);
						Message(playerid, YELLOW, string);
                    	ProxDetector(20.0, playerid, "Roberto dice: Bien aqui esta tu cheque, sigue así y traeme mas cuando puedas.",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                    	PlayerInfo[playerid][pPeces] = 0;
					}
				}
			}
 		}
 		case CASINO_FICHAS:
 		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0: ShowPlayerDialog(playerid, COMPRAR_FICHAS, DIALOG_STYLE_INPUT, "Comprar Fichas", "{FFFFFF}Ingrese el numero de fichas que desea comprar\n\tEl valor de cada ficha es de 1$", "Aceptar", "Cancelar");
		            case 1:
		            {
						if(PlayerInfo[playerid][pFichas] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes fichas para cambiar!");
	        	        Earn(playerid, PlayerInfo[playerid][pFichas]);
	        	        Till(30, -PlayerInfo[playerid][pFichas]);
						format(string, sizeof(string), "* Has recibido un total de %d$ por tus fichas.", PlayerInfo[playerid][pFichas]);
						Message(playerid, COLOR_WHITE, string);
						PlayerInfo[playerid][pFichas] = 0;
					}
				}
			}
		}
		case COMPRAR_FICHAS:
		{
		    if(response)
		    {
				if(strval(inputtext) < 0) return ShowPlayerDialog(playerid, COMPRAR_FICHAS, DIALOG_STYLE_INPUT, "Comprar Fichas", "Ingrese el numero de fichas que desea comprar\nEl valor de cada ficha es de 1$", "Aceptar", "Cancelar");
				Fichas[playerid] = strval(inputtext);
				ShowPlayerDialog(playerid, METODO_FICHAS, DIALOG_STYLE_LIST, "Compra Fichas - Seleccione el metodo de pago", "Efectivo\nCheque", "Aceptar", "Cancelar");
			}
		}
		case MAPA_DIALOG:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0: SetPlayerCheckpoint(playerid, 1496.0590,-1777.1404,13.5469, 3.0); // ayunt
		            case 1: SetPlayerCheckpoint(playerid, 1485.5140,-1552.7058,15.3703, 3.0); // juzgad
	    	        case 2: SetPlayerCheckpoint(playerid, 1545.8611,-1680.0559,13.5612, 3.0); // lspd
	        	    case 3: SetPlayerCheckpoint(playerid, 1627.7813,-2186.0342,13.5469, 3.0); //taller
	        	    case 4: SetPlayerCheckpoint(playerid, 2073.2747,-1914.5770,13.3648, 3.0); // licencieria
		            case 5: SetPlayerCheckpoint(playerid, 2242.7200,-1664.3235,15.4766, 3.0); //binco
	    	        case 6: SetPlayerCheckpoint(playerid, 1318.7915,-899.3480,39.5781, 3.0); // 24-7 vinewood
	        	    case 7: SetPlayerCheckpoint(playerid, 1812.9063,-1883.0615,13.5781, 3.0); // 24-7 unity
	        	    case 8: SetPlayerCheckpoint(playerid, 1351.0753,-1750.7668,13.3648, 3.0); // 24-7 ayunta
		            case 9: SetPlayerCheckpoint(playerid, 1838.6997,-1414.5907,13.5625, 3.0); // lavanderia
	    	        case 10: SetPlayerCheckpoint(playerid, 1569.2629,-1897.6455,13.5608, 3.0); // Joyeria
	        	    case 11: SetPlayerCheckpoint(playerid, 1461.9490,-1025.4996,23.8281, 3.0); // banco
	        	    case 12: SetPlayerCheckpoint(playerid, 558.4728,-1277.1632,17.2482, 3.0); //grooty
		            case 13: SetPlayerCheckpoint(playerid, 1096.6118,-1386.5211,13.7329, 3.0); // cyber
	    	        case 14: SetPlayerCheckpoint(playerid, 1549.1174,-1097.1937,25.0625, 3.0); // biblio
	        	    case 15: SetPlayerCheckpoint(playerid, 1630.4258,-1171.4131,24.0781, 3.0); // bowling
	        	    case 16: SetPlayerCheckpoint(playerid, 2255.6750,-1331.5316,23.9811, 3.0); // iglesia
		            case 17: SetPlayerCheckpoint(playerid, 1020.6985,-1123.0210,23.8680, 3.0); // casino
	   	    	} Message(playerid, COLOR_WHITE, "{FFFFFF}Se marcó la ubicación en el minimapa en forma de checkpoint (punto rojo).");
	    	}
	    }
		case METODO_FICHAS:
		{
		    if(response)
		    {
	    	    switch(listitem)
				{
			    	case 0:
			    	{
				        if(CheckMoney(playerid, Fichas[playerid]))
		                {
	    	                Bought(playerid, Fichas[playerid]);
	    	                Till(30, Fichas[playerid]);
	        	            PlayerInfo[playerid][pFichas] += Fichas[playerid];
							format(string, sizeof(string), "* Has comprado un total de %d fichas por el mismo valor en dolares.", Fichas[playerid]);
							Message(playerid, COLOR_GREEN, string);
							Fichas[playerid] = 0;
						}
					}
					case 1:
					{
					    if(PlayerInfo[playerid][pAccount] > Fichas[playerid])
						{
						    Till(30, Fichas[playerid]);
							PlayerInfo[playerid][pAccount] -= Fichas[playerid];
							PlayerInfo[playerid][pFichas] += Fichas[playerid];
							format(string, sizeof(string), "* Has comprado un total de %d fichas por el mismo valor en dolares.", Fichas[playerid]);
							Message(playerid, COLOR_GREEN, string);
							Fichas[playerid] = 0;
						} else Message(playerid, COLOR_GRAD2, "¡No dispones de esa cantidad en el banco!");
					}
				}
		    }
		}
		case GPS_DIALOG:
		{
	 	    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0: ShowPlayerDialog(playerid, BARES, DIALOG_STYLE_LIST, "{018CFE}GPS - Bares/Discotecas:", "{FFFFFF}Alhambra\nClub VIP\nBar Groove", "Marcar", "Atrás");
		            case 1: ShowPlayerDialog(playerid, EMERGENCIAS, DIALOG_STYLE_LIST, "{018CFE}GPS - Emergencias:", "{FFFFFF}LSMD\nLSPD\nFBI\nSAEM", "Marcar", "Atrás");
		            case 2: ShowPlayerDialog(playerid, NEGOCIOS, DIALOG_STYLE_LIST, "{018CFE}GPS - Negocios:", "{FFFFFF}24/7 Ayuntamiento\n24/7 Unity\n24/7 Vinewood\nPizza Stark\nAmmunation\nBinco\nGimnasio\nVictim", "Marcar", "Atrás");
	    	        case 3: ShowPlayerDialog(playerid, LUGARPUBLICO, DIALOG_STYLE_LIST, "{018CFE}GPS - Lugares Públicos:", "{FFFFFF}Ayuntamiento\nBanco\nGasolinera\nGrotti\nCyber\nCNN\nBiblioteca\nPaintball\nBowling\nIglesia\nCasino", "Marcar", "Atrás");
	        	    case 4: ShowPlayerDialog(playerid, SERVICIOS, DIALOG_STYLE_LIST, "{018CFE}GPS - Servicios:", "{FFFFFF}Mecánicos\nAutoescuela\nTaxistas\nCIA", "Marcar", "Atrás");
				}
		    }
 		}
 		case BARES:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
	            	case 0: SetPlayerCheckpoint(playerid, 1828.7018,-1682.9352,13.5469, 3.0);
		            case 1: SetPlayerCheckpoint(playerid, 1805.9573,-1576.6815,13.4496, 3.0);
		            case 2: SetPlayerCheckpoint(playerid, 2305.5979,-1652.2327,14.4630, 3.0);
        	 	} Message(playerid, COLOR_WHITE, "{018CFE}GPS: {FFFFFF}Ubicacion establecida en el mapa.");
	    	} else ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{018CFE}Control GPS", "{FFFFFF}Bares\nEmergencias\nNegocios\nLugares Públicos\nServicios", "Aceptar", "Salir");
		}
		case EMERGENCIAS:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0: SetPlayerCheckpoint(playerid, 1186.7639,-1324.5430,13.5593, 3.0);
		            case 1: SetPlayerCheckpoint(playerid, 1545.0645,-1675.4355,13.5596, 3.0);
	    	        case 2: SetPlayerCheckpoint(playerid, 912.8531,-992.2309,38.0075, 3.0);
	        	    case 3: SetPlayerCheckpoint(playerid, 2610.6838,-2396.7205,13.6252, 3.0);
         		} Message(playerid, COLOR_WHITE, "{018CFE}GPS: {FFFFFF}Ubicacion establecida en el mapa.");
	    	} else ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{018CFE}Control GPS", "{FFFFFF}Bares\nEmergencias\nNegocios\nLugares Públicos\nServicios", "Aceptar", "Salir");
		}
		case NEGOCIOS:
		{
		    if(response)
		    {
        	    switch(listitem)
				{
	                case 0: SetPlayerCheckpoint(playerid, 1352.7506,-1754.8582,13.3568, 3.0);
    	            case 1: SetPlayerCheckpoint(playerid, 1829.0416,-1843.0101,13.5781, 3.0);
        	        case 2: SetPlayerCheckpoint(playerid, 1315.1741,-900.1744,39.5781, 3.0);
            	    case 3: SetPlayerCheckpoint(playerid, 2101.3071,-1806.8872,13.5547, 3.0);
                	case 4: SetPlayerCheckpoint(playerid, 1363.2135,-1279.6903,13.5469, 3.0);
                	case 5: SetPlayerCheckpoint(playerid, 2245.0457,-1661.8610,15.4690, 3.0);
					case 6: SetPlayerCheckpoint(playerid, 2225.8884,-1724.2968,13.5599, 3.0);
					case 7: SetPlayerCheckpoint(playerid, 454.6484,-1503.0116,30.8653, 3.0);
				} Message(playerid, COLOR_WHITE, "{018CFE}GPS: {FFFFFF}Ubicacion establecida en el mapa.");
	    	} else ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{018CFE}Control GPS", "{FFFFFF}Bares\nEmergencias\nNegocios\nLugares Públicos\nServicios", "Aceptar", "Salir");
		}
		case LUGARPUBLICO:
		{
		    if(response)
		    {
	    	    switch(listitem)
	        	{
		            case 0: SetPlayerCheckpoint(playerid, 1480.0077,-1739.7684,13.5469, 3.0);
		            case 1: SetPlayerCheckpoint(playerid, 305.5959,-1612.1421,33.2421, 3.0);
	    	        case 2: SetPlayerCheckpoint(playerid, 1003.5906,-940.7248,42.1797, 3.0);
	        	    case 3: SetPlayerCheckpoint(playerid, 555.1510,-1260.8953,17.2422, 3.0);
	            	case 4: SetPlayerCheckpoint(playerid, 1094.3595,-1390.4651,13.7299, 3.0);
	            	case 5: SetPlayerCheckpoint(playerid, 776.8192,-1389.5275,13.6205, 3.0);
	            	case 6: SetPlayerCheckpoint(playerid, 1560.0825,-1093.1130,23.6643, 3.0);
	            	case 7: SetPlayerCheckpoint(playerid, 2781.5659,-1814.6296,11.8438, 3.0);
	            	case 8: SetPlayerCheckpoint(playerid, 1631.6582,-1166.1237,24.0781, 3.0);
	            	case 9: SetPlayerCheckpoint(playerid, 2264.9971,-1339.5735,23.9818, 3.0);
	            	case 10: SetPlayerCheckpoint(playerid, 1022.4526,-1122.9113,23.8707, 3.0);
         		} Message(playerid, COLOR_WHITE, "{018CFE}GPS: {FFFFFF}Ubicacion establecida en el mapa.");
	    	} else ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{018CFE}Control GPS", "{FFFFFF}Bares\nEmergencias\nNegocios\nLugares Públicos\nServicios", "Aceptar", "Salir");
		}
		case SERVICIOS:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: SetPlayerCheckpoint(playerid, 1602.6504,-2169.1699,13.6598, 3.0);
				    case 1: SetPlayerCheckpoint(playerid, 2073.0464,-1913.1292,13.5469, 3.0);
				    case 2: SetPlayerCheckpoint(playerid, 1814.0922,-1889.2008,13.4141, 3.0);
				    case 3: SetPlayerCheckpoint(playerid, 2028.8326,-1419.2201,16.9922, 3.0);
				} Message(playerid, COLOR_WHITE, "{018CFE}GPS: {FFFFFF}Ubicacion establecida en el mapa.");
	    	} else ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{018CFE}Control GPS", "{FFFFFF}Bares\nEmergencias\nNegocios\nLugares Públicos\nServicios", "Aceptar", "Salir");
		}
		case DIALOG_ESTADO:
		{
			if(response)
			{
  				switch(listitem)
	        	{
	            	case 0:
	            	{
	                    ShowPlayerDialog(playerid,DIALOG_REG_ESTADO,DIALOG_STYLE_INPUT,"{FFFFFF}Escribe tu estado","{FFFFFF}Como máximo puedes escribir 17 carácteres","Aceptar","Cancelar");
    	         	}
					case 1:
					{
					    if(EstadoON[playerid] == 0)
						{
							Delete3DTextLabel(Estado[playerid]);
							Estado[playerid] = Create3DTextLabel(PlayerInfo[playerid][pEstado], COLOR_ESTADO, 1.0, 1.0, 1.0, 15.0, 0,1);
							Attach3DTextLabelToPlayer(Estado[playerid], playerid, 0.0, 0.0, 0.3);
							EstadoON[playerid] = 1;
							DialogoEstado(playerid);
						}
						else if(EstadoON[playerid] == 1)
						{
							Delete3DTextLabel(Estado[playerid]);
							EstadoON[playerid] = 0;
							DialogoEstado(playerid);
						}
					}
				}
			}
		}
		case DIALOG_REG_ESTADO:
		{
			if(response)
			{
        	    if(!DetectarSPAM(inputtext) && strlen(inputtext) < 18 && strlen(inputtext) > 0 && strfind(inputtext, "=", true) == -1 && strfind(inputtext, "\n", true) == -1)
				{
					strmid(PlayerInfo[playerid][pEstado], inputtext, 0, strlen(inputtext), 18);
					DialogoEstado(playerid);
				}
				else return ShowPlayerDialog(playerid,DIALOG_REG_ESTADO,DIALOG_STYLE_INPUT,"{FFFFFF}Formato Inválido","{FFFFFF}Has insertado un formato inválido. Límite 17 carácteres.\n Ej: Triste","Aceptar","Cancelar");
	        }
    	}
    	case DELE_BUY_SEX:
    	{
    	    if(response)
    	    {
    	        switch(listitem)
    	        {
					case 0:{
                        if(CheckMoney(playerid,150))
		            	{
							ShowPlayerDialog(playerid, DELE_BUY_SEXF, DIALOG_STYLE_LIST, "{DD1111}Tienda Sexual {FFFFFF}- Ropa De Mujer", "Ropa de Sexo 1\nRopa de Sexo 2\nRopa de Sexo 3\nRopa de Sexo 4\nRopa de Sexo 5\nRopa de Sexo 6\nRopa de Sexo 7\nRopa de Sexo 8", "Aceptar", "Salir");
						}
					}
					case 1:{
						if(CheckMoney(playerid,150))
		            	{
							ShowPlayerDialog(playerid, DELE_BUY_SEXM, DIALOG_STYLE_LIST, "{DD1111}Tienda Sexual {FFFFFF}- Ropa De Hombre", "Ropa de Sexo 1\nRopa de Sexo 2\nRopa de Sexo 3\nRopa de Sexo 4", "Aceptar", "Salir");
						}
					}
					case 2:{
					    if(CheckMoney(playerid,350))
					    {
							ShowPlayerDialog(playerid, DELE_BUY_SEXJ, DIALOG_STYLE_LIST, "{DD1111}Tienda Sexual {FFFFFF}- Juguetes De Diversion", "Juguete 1\nJuguete 2\nJuguete 3\nJuguete 4", "Aceptar", "Salir");
						}
					}
				}
			}
		}
    	case DELE_BUY_SEXF:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:	Skin(playerid, 63);
					case 1:	Skin(playerid, 75);
					case 2: Skin(playerid, 85);
         			case 3: Skin(playerid, 87);
            		case 4: Skin(playerid, 152);
		            case 5: Skin(playerid, 178);
		            case 6: Skin(playerid, 256);
		            case 7: Skin(playerid, 257);
            	}
             	ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
	            Message(playerid, COLOR_WHITE, "Has comprado un Traje de Sexo Femenino.");
	            Bought(playerid, 170);
	            Till(23, 170);
	            return 1;
           	}
    	}
    	case DELE_BUY_SEXM:
    	{
    	    if(response)
    	    {
    	        switch(listitem)
    	        {
    	            case 0: Skin(playerid, 18);
	            	case 1: Skin(playerid, 97);
		            case 2: Skin(playerid, 154);
		            case 3: Skin(playerid, 252);
				}
    			ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
       			Message(playerid, COLOR_WHITE, "Has comprado un Traje de Sexo Masculino.");
          		Bought(playerid, 170);
            	Till(23, 170);
	            return 1;
         	}
    	}
    	case DELE_BUY_SEXJ:
    	{
    	    if(response)
    	    {
    	        switch(listitem)
    	        {
    	            case 0: SafeGivePlayerWeapon(playerid, 10, 1);
	            	case 1: SafeGivePlayerWeapon(playerid, 11, 1);
		            case 2: SafeGivePlayerWeapon(playerid, 12, 300);
		            case 3: SafeGivePlayerWeapon(playerid, 13, 300);
				}
    			ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
       			Message(playerid, COLOR_WHITE, "Has comprado un Objeto De Diversion.");
          		Bought(playerid, 350);
            	Till(23, 350);
	            return 1;
         	}
    	}
    	case QUIT_EXTORTION:
    	{
    	    if(response)
    	    {
    	    	strmid(BizzInfo[QuitExtortion[playerid]][bExtortion], "Nadie", 0, strlen("Nadie"), 32);
    	    	format(string, sizeof(string), "Has dejado de ser el extorcionista del negocio de {FF7617}%s", PlayerName(ExtortionID[playerid]));
    	        Message(playerid, COLOR_WHITE, string);
    	        format(string, sizeof(string), "* %s ha aceptado dejar de ser el extorcionista de tu negocio.", PlayerName(playerid));
    	        Message(ExtortionID[playerid], COLOR_GRAD2, string);
				OnBizzTextdrawUpdate(QuitExtortion[playerid]);
				QuitExtortion[playerid] = 999;
				ExtortionID[playerid] = 999;
				UpdateBizz();
    	        return 1;
    	    }
    	    else
    	    {
    	        format(string, sizeof(string), "* %s no ha aceptado dejar de ser el extorcionista de tu negocio.", PlayerName(playerid));
    	        Message(ExtortionID[playerid], COLOR_GRAD2, string);
    	        Message(playerid, COLOR_GRAD2, "* Has rechazado una peticion.");
    	    }
    	}
    	case ELECTRONIC_BUY:
    	{
    	    if(response)
    	    {
    	        switch(listitem)
    	        {
    	            case 0:
    	            {
    	        		if(CheckMoney(playerid,200))
		            	{
		                	new randphone = 100000 + random(899999);
							PlayerInfo[playerid][pPnumber] = randphone;
							format(string, sizeof(string), "Has comprado un nuevo teléfono cuyo número es: %d",PlayerInfo[playerid][pPnumber]);
				            Message(playerid, COLOR_WHITE, string);
							Bought(playerid, 200);
							Till(24, 200);
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    return 1;
						}
					}
					case 1:
					{
					    if(CheckMoney(playerid,220))
						{
						    PlayerInfo[playerid][pIpod] = 1;
				    		ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            	Message(playerid, COLOR_WHITE, "Has comprado un Ipod, usa /ipod");
			            	Bought(playerid, 220);
							Till(24, 220);
			            	return 1;
      					}
  					}
  					case 2:
  					{
  					    if(CheckMoney(playerid,100))
		        	    {
			        	    ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			            	SafeGivePlayerWeapon(playerid, 43, 36);
		            		Message(playerid, COLOR_WHITE, "Has comprado una cámara de fotos.");
			            	Bought(playerid, 100);
			                Till(24, 100);
			            	return 1;
						}
					}
					case 3:
					{
					    if(CheckMoney(playerid,260))
		    	        {
			    	        ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
			        	    PlayerInfo[playerid][pWalkie] = 1;
				            Message(playerid, COLOR_WHITE, "Compraste el Walkie-Talkie - /walkie - /frecuencia - /wt");
				            Bought(playerid, 260);
							Till(24, 260);
				            return 1;
						}
					}
				}
    	    }
    	}
	}
	return 1;
}

function UpdateHouses()
{
    new idx, File: file2, coordsstring[300];
	while (idx < sizeof(HouseInfo))
	{
	    HouseInfo[idx][hWorld] = idx;
	
		format(coordsstring, sizeof(coordsstring), "%d,%s,%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLevel],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hRooms],
		HouseInfo[idx][hRent],
		HouseInfo[idx][hRentabil],
		HouseInfo[idx][hWep],
		HouseInfo[idx][hAmmo],
		HouseInfo[idx][hMats],
		HouseInfo[idx][hDrugs],
		HouseInfo[idx][hSpeed],
		HouseInfo[idx][hEctasy],
		HouseInfo[idx][hRitalin],
		HouseInfo[idx][hHeroina],
		HouseInfo[idx][hMarihuana],
		HouseInfo[idx][hWorld],
		HouseInfo[idx][hTime]);

		if(idx == 0)	file2 = fopen("property.cfg", io_write);
		else			file2 = fopen("property.cfg", io_append);
		
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
}

function UpdateCars()
{
    new idx, File: file2, coordsstring[256];
	idx = VV;
 	while (idx < sizeof(CarInfo))
  	{
		format(coordsstring, sizeof(coordsstring), "%d,%f,%f,%f,%f,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%s,%d,%d,%d,%d\n",
		CarInfo[idx][cModel],
		CarInfo[idx][cLocationx],
		CarInfo[idx][cLocationy],
		CarInfo[idx][cLocationz],
		CarInfo[idx][cAngle],
		CarInfo[idx][cColorOne],
		CarInfo[idx][cColorTwo],
		CarInfo[idx][cOwner],
		CarInfo[idx][cName],
		CarInfo[idx][cValue],
		CarInfo[idx][cOwned],
		CarInfo[idx][cLock],
		CarInfo[idx][cBattery],
		CarInfo[idx][cSpoiler],
		CarInfo[idx][cHood],
		CarInfo[idx][cRoof],
		CarInfo[idx][cSideskirt],
		CarInfo[idx][cNitro],
		CarInfo[idx][cLamps],
		CarInfo[idx][cExhaust],
		CarInfo[idx][cWheel],
		CarInfo[idx][cHydraulics],
		CarInfo[idx][cPaintjob],
		CarInfo[idx][cFrontBumper],
		CarInfo[idx][cRearBumper],
		CarInfo[idx][cVents],
		CarInfo[idx][cEmbargo],
		CarInfo[idx][cMulta],
		CarInfo[idx][cPlate],
		CarInfo[idx][cGas],
		CarInfo[idx][cAlarm],
		CarInfo[idx][cVehTime],
		CarInfo[idx][cGPS]);
		
		if(idx == VV)	file2 = fopen("cars.cfg", io_write);
		else			file2 = fopen("cars.cfg", io_append);
		
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
}

function UpdateBizz()
{
	new idx, File: file2, coordsstring[256];
	while (idx < sizeof(BizzInfo))
	{
		format(coordsstring, sizeof(coordsstring), "%d,%s,%s,%s,%f,%f,%f,%d,%d,%d,%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bName],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntrancex],
		BizzInfo[idx][bEntrancey],
		BizzInfo[idx][bEntrancez],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bTillEx]);

		if(idx == 0)	file2 = fopen("bizz.cfg", io_write);
		else			file2 = fopen("bizz.cfg", io_append);

		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
}

function BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return 1;
}

function ABroadCast(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdminCP] >= level && AdminChat[i] == 0)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

function A_Info(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdminCP] >= 1 && AdminChat[i] == 0)
			{
				SendClientMessage(i, 0xFF9562FF, string);
			}
		}
	}
	return 1;
}

stock OOCOff(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gOoc[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

stock OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gNews[i] == 0)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

stock SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
		    {
                if(RadioOn[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

stock SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
 }
//acciones CiudadRol David
zcmd(rendirse, playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	} return 1;
}
zcmd(borracho, playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT){
		ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);
	} return 1;
}
zcmd(hablar, playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT){
		ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);
	} return 1;
}
zcmd(paja, playerid, params[])
{
	ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);
	return Message(playerid, MORADO_ADMIN, "Para seguir utiliza /irsecortao");
}
zcmd(irsecortao, playerid, pamras[])
{
	return ApplyAnimation(playerid, "PAULNMAC", "wank_out", 4.0, 0, 0, 0, 0, 0);
}
zcmd(arrestado, playerid, params[])
{
	return ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);
}
zcmd(amenazar, playerid, params[])
{
	return ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500);
}
zcmd(superpatada, playerid, params[])
{
	return ApplyAnimation(playerid,"FIGHT_C","FightC_3",4.1,0,1,1,1,1);
}
zcmd(reirse, playerid, params[])
{
	return ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);
}
zcmd(agredido, playerid, params[])
{
	return ApplyAnimation(playerid, "POLICE", "crm_drgbst_01", 4.0, 0, 0, 0, 1, 0);
}
zcmd(herido, playerid, params[])
{
	ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);
	return Message(playerid, MORADO_ADMIN, "Para continuar utiliza /agonizar");
}
zcmd(encender, playerid, params[])
{
	ApplyAnimation(playerid, "SMOKING", "M_smk_in", 4.000000, 0, 0, 1, 1, 0);
	return Message(playerid, MORADO_ADMIN, "Para continuar puedes utilizar /inhalar o /apagar");
}
zcmd(inhalar, playerid, params[])
{
	ApplyAnimation(playerid, "SMOKING", "M_smk_drag", 4.000000, 1, 0, 0, 0, -1);
	return Message(playerid, MORADO_ADMIN, "Para continuar utiliza /apagar");
}
zcmd(asustado, playerid, params[])
{
	return ApplyAnimation(playerid,"PED","handscower",4.1,0,1,1,1,1);
}
zcmd(adolorido, playerid, params[])
{
	return ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
}
zcmd(apagar, playerid, params[])
{
	return ApplyAnimation(playerid, "SMOKING", "M_smk_out", 4.000000, 0, 1, 1, 0, 0);
}
zcmd(vigilar, playerid, params[])
{
	return ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000);
}
zcmd(recostarse, playerid, params[])
{
	ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);
	return Message(playerid, MORADO_ADMIN, "Para ponerte de pie utiliza /pararse");
}
zcmd(pararse, playerid, params[])
{
	return ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_out", 4.0, 0, 0, 0, 0, 0);
}
zcmd(cubrirse, playerid, params[])
{
	return ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);
}
zcmd(fumar1, playerid, params[])
{
	return ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
}
zcmd(fumar2, playerid, params[])
{
	return ApplyAnimation(playerid,"SMOKING","F_smklean_loop", 4.0, 1, 0, 0, 0, 0);
}
zcmd(fumar3, playerid, params[])
{
	return ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop", 4.0, 1, 0, 0, 0, 0);
}
zcmd(vomitar, playerid, params[])
{
	return ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
}
zcmd(cenar, playerid, params[])
{
	return ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.00, 0, 0, 0, 0, 0);
}
zcmd(chao, playerid, params[])
{
	return ApplyAnimation(playerid, "KISSING", "BD_GF_Wave", 3.0, 0, 0, 0, 0, 0);
}
zcmd(palmada, playerid, params[])
{
	return ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
}
zcmd(agonizar, playerid, params[])
{
	return ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);
}
zcmd(levantarse, playerid, params[])
{
	return ApplyAnimation(playerid, "ped", "getup_front", 4.000000, 0, 0, 0, 0, 0);
}
zcmd(rodar, playerid, params[])
{
	ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,0);
	return Message(playerid, MORADO_ADMIN, "Para ponerte de pie utiliza /levantarse");
}
zcmd(traficar, playerid, params[])
{
	return ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
}
zcmd(beso, playerid, params[])
{
	return ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);
}
zcmd(crack, playerid, params[])
{
	return ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 0, 0, 1, 0);
}
zcmd(mear, playerid, params[])
{
	return ApplyAnimation(playerid, "PAULNMAC", "Piss_in", 4.0, 0, 0, 0, 0, 0);
}
zcmd(patada, playerid, params[])
{
	return ApplyAnimation(playerid,"FIGHT_C","FightC_2",4.1,7,5,1,1,1);
}
zcmd(sentarse, playerid, params[])
{
	return ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);
}
zcmd(depie, playerid, params[])
{
	return ApplyAnimation(playerid, "ped", "SEAT_up", 4.000000, 0, 1, 1, 1, 0);
}
zcmd(fokear, playerid, params[])
{
	return ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 );
}
zcmd(siquiero, playerid, params[])
{
	return ApplyAnimation(playerid, "GANGS", "Invite_Yes", 4.0, 0, 0, 0, 0, 0);
}
zcmd(noquiero, playerid, params[])
{
	return ApplyAnimation(playerid, "GANGS", "Invite_No", 4.0, 0, 0, 0, 0, 0);
}
zcmd(comerciar, playerid, params[])
{
	return ApplyAnimation(playerid, "DEALER", "shop_pay", 4.000000, 0, 1, 1, 0, 0);
}
zcmd(piquero, playerid, params[])
{
	return ApplyAnimation(playerid, "DAM_JUMP", "DAM_Launch", 4.0, 0, 1, 1, 1, 1);
}
zcmd(taichi, playerid, params[])
{
	return ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);
}
zcmd(beber, playerid, params[])
{
	return ApplyAnimation(playerid, "BAR", "dnk_stndM_loop", 4.0, 0, 1, 1, 0, 4000);
}
zcmd(boxear, playerid, params[])
{
	return ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);
}
zcmd(fuerza, playerid, params[])
{
	return ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
}
zcmd(pelea, playerid, params[])
{
	ApplyAnimation(playerid, "ped", "FIGHTIDLE", 4.000000, 0, 1, 1, 1, 1);
	return Message(playerid, MORADO_ADMIN, "Para continuar utiliza /boxear");
}
zcmd(recojer, playerid, params[])
{
	ApplyAnimation(playerid, "BSKTBALL", "BBALL_pickup", 4.000000, 0, 1, 1, 1, 1);
	return Message(playerid, MORADO_ADMIN, "Para continuar utiliza /botear");
}
zcmd(botear, playerid, params[])
{
	ApplyAnimation(playerid, "BSKTBALL", "BBALL_walk", 4.000000, 1, 1, 1, 1, 500);
	return Message(playerid, MORADO_ADMIN, "Para continuar utiliza /clavarse o /lanzar");
}
zcmd(clavarse, playerid, params[])
{
	return ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_jump_shot", 4.0, 0, 1, 1, 1, 500);
}
zcmd(lanzar, playerid, params[])
{
	return ApplyAnimation(playerid, "BSKTBALL", "BBALL_Jump_Shot", 4.0, 0, 1, 1, 1, 500);
}
zcmd(hombre, playerid, params[])
{
	return ApplyAnimation(playerid,"PED","WALK_gang1",4.0,1,1,1,1,500);
}
zcmd(mujer, playerid, params[])
{
	return ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,500);
}
zcmd(sanar, playerid, params[])
{
	return ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0);
}
zcmd(llorar, playerid, params[])
{
	return ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,0,0,0,0);
}

/*zcmd(dormir, playerid, params[])
  	{
  	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
        if(GanasDeDormir[playerid] < 1)
	    {
	        SendClientMessage(playerid, COLOR_RED, "No tienes ganas de dormir");
		}
		else
		{
		GanasDeDormir[playerid] = 0;
		SetProgressBarValue(DormirBarra, 100);
		TiempoDormir[playerid] = SetTimer("DespuesDeDormir",3000,false);
        ApplyAnimation(playerid,"INT_HOUSE","BED_In_R",4.1,0,0,0,1,0);
        SendClientMessage(playerid, COLOR_ORANGE, "¡Que bien sienta dormir!");
		} return 1;
  	}*/
zcmd(detener, playerid, params[])
{
	return ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.1,0,0,0,0,0);
}
zcmd(rapear, playerid, params[])
{
	return ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,0,0,0,8000);
}
zcmd(alzar, playerid, params[])
{
	return ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,1,1,1,1);
}
zcmd(cansado, playerid, params[])
{
	return ApplyAnimation(playerid,"PED","WOMAN_runfatold",4.1,7,5,1,1,1);
}
zcmd(bomba, playerid, params[])
{
	return ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 0,0);
}
zcmd(sapiar, playerid, params[])
{
	return ApplyAnimation(playerid,"PED","roadcross_female",4.1,0,0,0,0,0);
}
zcmd(asiento, playerid, params[])
{
	ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
	return Message(playerid, MORADO_ADMIN, "Para ponerte de pie utiliza /depie");
}
zcmd(servirse, playerid, params[])
{
	return ApplyAnimation(playerid,"BAR","Barcustom_get",4.1,0,0,0,0,0);
}
zcmd(servir, playerid, params[])
{
	return ApplyAnimation(playerid,"BAR","Barserve_give",4.1,0,0,0,0,0);
}
zcmd(asiento2, playerid, params[])
{
	ApplyAnimation(playerid,"Attractors","Stepsit_in",4.1,0,0,0,1,0);
	return Message(playerid, MORADO_ADMIN, "Para ponerte de pie utiliza /depie2");
}
zcmd(depie2, playerid, params[])
{
	return ApplyAnimation(playerid,"Attractors","Stepsit_out",4.1,0,0,0,0,0);
}
zcmd(mmm, playerid, params[])
{
	return ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,0,0,0,0);
}
zcmd(saludo, playerid, params[])
{
	return Message(playerid, MORADO_ADMIN, "Utiliza /saludo[1-4]");
}
zcmd(saludo1, playerid, params[])
{
	return ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,0,0,0,0);
}
zcmd(saludo2, playerid, params[])
{
	return ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0);
}
zcmd(saludo3, playerid, params[])
{
	return ApplyAnimation(playerid,"GANGS","hndshkca",4.1,0,0,0,0,0);
}
zcmd(saludo4, playerid, params[])
{
	return ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
}
zcmd(strip, playerid, params[])
{
	return Message(playerid, AMARILLO_ADMIN, "Utiliza /strip[1-20]");
}
zcmd(strip1, playerid, params[])
{
	return ApplyAnimation(playerid,"CAR","flag_drop",4.1,0,1,1,1,1);
}
zcmd(strip2, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","PUN_CASH",4.1,7,5,1,1,1);
}
zcmd(strip3, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","PUN_HOLLER",4.1,7,5,1,1,1);
}
zcmd(strip4, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","PUN_LOOP",4.1,7,5,1,1,1);
}
zcmd(strip5, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","strip_A",4.1,7,5,1,1,1);
}
zcmd(strip6, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","strip_B",4.1,7,5,1,1,1);
}
zcmd(strip7, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","strip_C",4.1,7,5,1,1,1);
}
zcmd(strip8, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","strip_D",4.1,7,5,1,1,1);
}
zcmd(strip9, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","strip_E",4.1,7,5,1,1,1);
}
zcmd(strip10, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","strip_F",4.1,7,5,1,1,1);
}
zcmd(strip11, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","strip_G",4.1,7,5,1,1,1);
}
zcmd(strip12, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","STR_B2A",4.1,0,1,1,1,1);
}
zcmd(strip13, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","strip_E",4.1,7,5,1,1,1);
}
zcmd(strip14, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","STR_B2C",4.000000, 0, 1, 1, 1, 0);
}
zcmd(strip15, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","STR_C1",4.000000, 0, 1, 1, 1, 0);
}
zcmd(strip16, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","STR_C2",4.000000, 0, 1, 1, 1, 0);
}
zcmd(strip17, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","STR_C2B",4.1,7,5,1,1,1);
}
zcmd(strip18, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","STR_Loop_A",4.1,7,5,1,1,1);
}
zcmd(strip19, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","STR_Loop_C",4.1,7,5,1,1,1);
}
zcmd(strip20, playerid, params[])
{
	return ApplyAnimation(playerid,"STRIP","STR_Loop_B",4.1,7,5,1,1,1);
}
zcmd(echarse, playerid, params[])
{
	return ApplyAnimation(playerid,"SUNBATHE","SitnWait_in_W",4.000000, 0, 0, 0, 1, 0);
}
zcmd(asientosexi, playerid, params[])
{
	ApplyAnimation(playerid,"SUNBATHE","ParkSit_W_idleA",4.000000, 0, 1, 1, 1, 0);
	return Message(playerid, MORADO_ADMIN, "Para ponerte de pie utiliza /pararse");
}
zcmd(skate, playerid, params[])
{
	return Message(playerid, AMARILLO_ADMIN, "Utiliza /skate[1-3]");
}
zcmd(skate1, playerid, params[])
{
	return ApplyAnimation(playerid,"SKATE","skate_run",4.0,1,1,1,1,500);
}
zcmd(skate2, playerid, params[])
{
	return ApplyAnimation(playerid,"SKATE","skate_sprint",4.0,1,1,1,1,500);
}
zcmd(skate3, playerid, params[])
{
	return ApplyAnimation(playerid,"SKATE","skate_idle",4.0,1,1,1,1,500);
}
zcmd(danzar, playerid, params[])
{
	return Message(playerid, AMARILLO_ADMIN, "Utiliza /danzar[0-12]");
}
zcmd(danzar0, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","bd_clap",4.1,7,5,1,1,1);
}
zcmd(danzar1, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","bd_clap1",4.1,7,5,1,1,1);
}
zcmd(danzar2, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","dance_loop",4.1,7,5,1,1,1);
}
zcmd(danzar3, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","DAN_Down_A",4.1,7,5,1,1,1);
}
zcmd(danzar4, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","DAN_Left_A",4.1,7,5,1,1,1);
}
zcmd(danzar5, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","DAN_Loop_A",4.1,7,5,1,1,1);
}
zcmd(danzar6, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","DAN_Right_A",4.1,7,5,1,1,1);
}
zcmd(danzar7, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","DAN_Up_A",4.1,7,5,1,1,1);
}
zcmd(danzar8, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","dnce_M_a",4.1,7,5,1,1,1);
}
zcmd(danzar9, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","dnce_M_b",4.1,7,5,1,1,1);
}
zcmd(danzar10, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","dnce_M_c",4.1,7,5,1,1,1);
}
zcmd(danzar11, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","dnce_M_d",4.1,7,5,1,1,1);
}
zcmd(danzar12, playerid, params[])
{
	return ApplyAnimation(playerid,"DANCING","dnce_M_e",4.1,7,5,1,1,1);
}
zcmd(taxi, playerid, params[])
{
	return ApplyAnimation(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);
}
zcmd(seacabo, playerid, params[])
{
	return ApplyAnimation(playerid,"PED","Shove_Partial",4.1,0,1,1,1,1);
}
zcmd(tullio, playerid, params[])
{
	return ApplyAnimation(playerid,"PED","WALK_old",4.0,1,1,1,1,500);
}
zcmd(asco, playerid, params[])
{
	return ApplyAnimation(playerid,"FOOD","EAT_Vomit_SK",4.1,0,1,1,1,1);
}
zcmd(quepa, playerid, params[])
{
	return ApplyAnimation(playerid,"GANGS","hndshkea",4.1,0,1,1,1,1);
}
zcmd(wooo, playerid, params[])
{
	return ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);
}
zcmd(quepasa, playerid, params[])
{
	return ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,1,1,1,1);
}
zcmd(comodo, playerid, params[])
{
	return ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
}
zcmd(p1, playerid, params[])
{
 	return ApplyAnimation(playerid,"Freeweights", "gym_free_B",4.0,1,1,1,1,500);
}
zcmd(bailar, playerid, params[]){
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT){
 		if(!sscanf(params, "d", params[0]))
		{
		    switch(params[0])
		    {
		        case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		        case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		        case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		        default: Message(playerid, AMARILLO_ADMIN, "Utiliza /bailar [1-3]");
      		}
		} else Message(playerid, AMARILLO_ADMIN, "Utiliza /bailar [1-3]");
	}return 1;
}
zcmd(stop, playerid, params[])
{
	ClearAnimations(playerid);
	return 1;
}
zcmd(acciones, playerid, params[])
{
	Message(playerid, ORANGE_ADMIN, "Hermandad Zero RP - Acciones disponibles:");
	Message(playerid, ROJO_ADMIN, "/rendirse /borracho /hablar /paja /irsecortao /arrestado");
	Message(playerid, ROJO_ADMIN, "/amenazar /superpatada /reirse /agredido /herido /encender");
	Message(playerid, ROJO_ADMIN, "/inhablar /asustado /adolorido /apagar /vigilar /recostarse");
	Message(playerid, ROJO_ADMIN, "/pararse /cubrirse /fumar[1-3] /vomitar /cenar /chao /palmada");
	Message(playerid, ROJO_ADMIN, "/agonizar /levantarse /rodar /traficar /beso /crack /mear /p1");
	Message(playerid, ROJO_ADMIN, "/bailar /patada /sentarse /depie /fokear /siquiero /noquiero");
	return Message(playerid, MORADO_ADMIN, "Utiliza /acciones2 para ver mas acciones disponibles.");
}
zcmd(acciones2, playerid, params[])
{
	Message(playerid, ORANGE_ADMIN, "Hermandad Zero RP - Acciones disponibles 2:");
	Message(playerid, ROJO_ADMIN, "/comerciar /piquero /taichi /beber /boxear /fuerza /pelea");
	Message(playerid, ROJO_ADMIN, "/recoger /botear /clavarse /lanzar /hombre /mujer /sanar");
	Message(playerid, ROJO_ADMIN, "/llorar /dormir /detener /rapear /alzar /cansado /bomba");
	Message(playerid, ROJO_ADMIN, "/sapiar /asiento /servirse /servir /asiento2 /depie2 /mmm");
	Message(playerid, ROJO_ADMIN, "/saludo /strip /echarse /asientosexi /skate /danzar /taxi");
	Message(playerid, ROJO_ADMIN, "/seacabo /correr /tullio /asco /quepa /wooo /quepasa /comodo");
	return Message(playerid, MORADO_ADMIN, "Utiliza /sexo para mas animaciones.");
}
zcmd(encuatro1, playerid, params[])
{
ApplyAnimation(playerid,"SNM","SPANKING_IDLEW",4.0, 0, 1, 1, 1, 1);
return 1;
}
zcmd(encuatro2, playerid, params[])
{
ApplyAnimation(playerid, "SNM","SPANKINGW", 4.0, 1, 1, 1, 1, 1);
return 1;
}
zcmd(encuatro3, playerid, params[])
{
ApplyAnimation(playerid, "SNM","SPANKEDP", 4.0, 1, 1, 1, 1, 1);
return 1;
}
zcmd(nalgada, playerid, params[])
{
ApplyAnimation(playerid, "SNM","SPANKINGP", 4.0, 1, 1, 1, 1, 1);
return 1;
}
zcmd(nalgada2, playerid, params[])
{
ApplyAnimation(playerid, "SNM","SPANKEDW", 4.0, 1, 1, 1, 1, 1);
return 1;
}

zcmd(nalgada3, playerid, params[])
{
ApplyAnimation(playerid, "SNM","SPANKING_ENDP", 4.0, 1, 1, 1, 1, 1);
return 1;
}
zcmd(chupamela1, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_P",4.1,0,1,1,1,1);
return 1;
}
zcmd(chupamela2, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_P",4.1,0,1,1,1,1);
return 1;
}
zcmd(chupamela3, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_P",4.1,0,1,1,1,1);
return 1;
}
zcmd(chupamela4, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,1,1,1,1);
return 1;
}
zcmd(chupamela5, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_P",4.1,0,1,1,1,1);
return 1;
}
zcmd(chupamela6, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_P",4.1,0,1,1,1,1);
return 1;
}
zcmd(mamar1, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_W",4.1,0,1,1,1,1);
return 1;
}
zcmd(mamar2, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_W",4.1,0,1,1,1,1);
return 1;
}
zcmd(mamar3, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,1,1,1,1);
return 1;
}
zcmd(mamar4, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_START_W",4.1,0,1,1,1,1);
return 1;
}
zcmd(mamar5, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_W",4.1,0,1,1,1,1);
return 1;
}
zcmd(mamar6, playerid, params[])
{
ApplyAnimation(playerid,"BLOWJOBZ","BJ_STAND_END_W",4.1,0,1,1,1,1);
return 1;
}
zcmd(sexo, playerid, params[])
{
SendClientMessage(playerid, 0xFFFFFFAA, " {FFFFFF}=====================================================");
SendClientMessage(playerid, 0xFFFFFFAA, " {FFFFFF}Animaciones de{00FF00}sexo HermandadZero{00FF00}RP");
SendClientMessage(playerid, 0xFFFFFFAA, " {FFFFFF}/encuatro{00FFFF}[1/3] {FFFFFF}/nalgada{00FFFF}[1/3]");
SendClientMessage(playerid, 0xFFFFFFAA, " {FFFFFF}/chupamela{00FFFF}[1/6] {FFFFFF}/mamar{00FFFF}[1/5]");
SendClientMessage(playerid, 0xFFFFFFAA, " {FFFFFF}=====================================================");
return 1;
}
zcmd(encuatro, playerid, params[])
{
SendClientMessage(playerid, 0xFFFFFFAA, "{FFFFFF}/encuatro{00FFFF}[1/3]");
return 1;
}
zcmd(chupamela, playerid, params[])
{
SendClientMessage(playerid, 0xFFFFFFAA, "{FFFFFF}/chupamela{00FFFF}[1/6]");

return 1;
}
zcmd(mamar, playerid, params[])
{
SendClientMessage(playerid, 0xFFFFFFAA, "{FFFFFF}/mamar{00FFFF}[1/5]");

return 1;
}

	// zcmd:nps/anims ============================================================================================================================
    zcmd(ayudarol, playerid, params[])
	{
	    return ShowPlayerDialog(playerid, AYUDA_DIALOG, DIALOG_STYLE_LIST, "{FF0D00}>{6CF600}Hermandad Zero RP{FFFFF}-{9024D3}Reglas de Rol", " {00FF00}>{FFFFFF}CarJack \n {00FF00}>{FFFFFF}DeathMatch \n {00FF00}>{FFFFFF}MetaGaming \n {00FF00}>{FFFFFF}PowerGaming \n {00FF00}>{FFFFFF}Badly Parked Car \n {00FF00}>{FFFFFF}Bad Driving \n {00FF00}>{FFFFFF}Revenge Kill \n {00FF00}>{FFFFFF}Noob Abuser", "Ver", "Salir");
	}
   	zcmd(reglasadmin, playerid, params[]){
	if(PlayerInfo[playerid][pAdminCP] >= 1){
		new string[820];
		new ver[] = "{2E2EFE}Normas administrativas, importante leerlas:\n\n\t{FFFFFF}- Si un administrador superior te dice que te pongas DUTY, no rechistar.\n\t- Buena ortografía y buena expresión.\n\t- Actividad en el servidor mínima.\n\t- Responsabilidad y ganas de ayudar.\n\t- Dar ejemplo a los usuarios.\n\t- No faltar al respeto ni a un usuario ni a un administrador superior.\n\n";
		new ver2[] = "\t- No pedir a cada 5 minutos permiso para rolear, recuerda que eres admin.\n\t- Tener una mínima actividad mínima en el foro.\n\t- Si estas solo de admin y no hay ningún administrador ON, ponte ONDUTY.\n\t- No hacer ningun tipo de Admin Abuse sobre los usuarios o para tener ventaja ON ROL.\n";
		format(string, sizeof(string),"%s %s",ver,ver2);
        return ShowPlayerDialog(playerid,821,DIALOG_STYLE_MSGBOX, "{2E2EFE}Reglas administrativas", string, "Ok", "");
        } else Message(playerid, COLOR_GRAD2, "¡No eres administrador!");
        return 1;
	}
	zcmd(estilocaminar, playerid, params[])
    {
        if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /estilocaminar <1-13>");
        if(params[0] > 0 && params[0] < 14)
        {
        	PlayerInfo[playerid][pWalk] = params[0];
         	SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
          	Message(playerid, COLOR_GRAD2, "* Estilo de caminar ha sido cambiado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /estilocaminar <1-13>");
		return 1;
    }
	zcmd(apelear, playerid, params[]){
        if(PlayerToPoint(10, playerid, 767.6719,13.6320,1000.7010) || PlayerToPoint(10, playerid, 768.6885,-36.5168,1000.6865)){
	        ShowPlayerDialog(playerid, FSTYLE_DIALOG, DIALOG_STYLE_LIST, " Que le gustaria aprender?", "Me gustaría aprender Knee Head\t 1500$\nMe gustaría aprender Kung Fu\t 1000$\nMe gustaría aprender Boxeo\t 800$", "Sí", "No");
		} else Message(playerid, COLOR_GRAD2, "¡No estas en el GYM!");
		return 1;
	}
	zcmd(burbuja, playerid, params[])
	{    SetPlayerAttachedObject(playerid,0,1276,1,-0.241000,0.056999,0.000000,2.200000,71.799964,-101.999992,0.000000,0.000000,0.051999);
	return 1;
	}
	zcmd(talk, playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
			RequestNPCTalk(playerid,5.0);
		}
		return 1;
    }
	zcmd(contrabando, playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
			RequestNPCTalk(playerid,5.0);
		}
		return 1;
    }
    zcmd(casino, playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
			RequestNPCTalk(playerid,5.0);
		}
		return 1;
    }
    zcmd(clecciones, playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
			RequestNPCTalk(playerid,5.0);
		}
		return 1;
    }
   	zcmd(carmas, playerid, params[])
	{
  if(IsPlayerConnected(playerid))
		{
			RequestNPCTalk(playerid,5.0);
		}
		return 1;
    }
    zcmd(pescadero, playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
			RequestNPCTalk(playerid,5.0);
		}
		return 1;
    }
     zcmd(iglesia, playerid, params[])
	{
		if(IsPlayerConnected(playerid))
		{
			RequestNPCTalk(playerid,5.0);
		}
		return 1;
    }
    zcmd(npcload, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	for(new i = 0; i < 0; i++){
     		new npcname[MAX_PLAYER_NAME];
       		GetPlayerName(i, npcname, sizeof(npcname));
      		RequestNPCLoad(i,npcname);
      		Message(playerid, COLOR_GRAD2, "* Comando Ejecutado");
		}
        return 1;
    }
    zcmd(npcjoin, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	if(npctoggle == 0)
		{
			RequestNPCJoin();
			GlobalMsg(COLOR_WHITE, "SERVIDOR: NPCs Cargados.");
		}
		else
		{
			Message(playerid, COLOR_GREY, " Todos los NPC están cargados, para re-cargarlos use /npckick y despues use este comando.");
		}
        return 1;
    }
	zcmd(npckick, playerid, params[])
    {
		if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	for(new i = 0; i < MAX_PLAYERS; i++)
		{
  			if(IsPlayerNPC(i))
	    	{
				Kick(i);
			}
		}
		GlobalMsg(COLOR_WHITE, "SERVIDOR: NPCs Kickeados.");
		npctoggle = 0;
        return 1;
    }
    zcmd(trajepizza, playerid, params[])
    {
  		if(PlayerInfo[playerid][pJob] != 6) return Message(playerid, COLOR_GRAD2, " Usted no trabaja de Pizzero");
		if(PlayerToPoint(5, playerid, 369.0226,-114.5778,1001.4995)){
  				ShowPlayerDialog(playerid,EQUIPO_PIZZA,DIALOG_STYLE_LIST,">> Equipo {FF0400}Pizza {D6D300}Stack {FFFFFF}<<","Ropa de Trabajo\nRopa Normal","Usar","Salir");
  				return 1;
            }
            return 1;
    }
    zcmd(cfumar, playerid, params[])
    {
        if(cNicotina[playerid] == 1) 					return Message(playerid, COLOR_GRAD2, 		"¡No tienes ganas de fumar!");
    	else if(PlayerInfo[playerid][pCigarettes] == 0) return Message(playerid, COLOR_GRAD2, 		"¡No tienes cigarros!");
	    else if(PlayerInfo[playerid][pLighter] == 0) 	return Message(playerid, COLOR_GRAD2, 		"¡No tienes encendedor!");
	    else if(IsSmoking[playerid] > 0) 				return Message(playerid, COLOR_GRAD2, 		"¡Ya estas fumando!");
	    else
	    {
	        new randsmoke = random(6);
	        if(randsmoke < 5)
	        {
				new string[72];
	            PlayerInfo[playerid][pLighter] -= 1;	PlayerInfo[playerid][pCigarettes] -= 1;
	    		format(string, sizeof(string), "* %s abre su cajetilla y enciende un cigarro.", PlayerName(playerid));
			    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    IsSmoking[playerid] = 80;
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
				Message(playerid, COLOR_WHITE, "(Fumando) Ahora puedes utilizar /dfumar (para dejar de fumar).");
                SmokeTimer[playerid] = SetTimerEx("SmokingCigarette", 1000, true, "i", playerid);
			}
	        else
	        {
	            PlayerInfo[playerid][pLighter] -= 1;
    			Message(playerid, COLOR_GRAD2, "¡Fallaste al encender el cigarro!");
	        }
	    }
	    return 1;
	}
    zcmd(dfumar, playerid, params[]){
        if(IsSmoking[playerid] > 0){
            new string[128];
        	IsSmoking[playerid] = 0;
         	format(string, sizeof(string), "* %s tira el cigarro al suelo y lo pisa.", PlayerName(playerid));
         	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
          	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
          	KillTimer(SmokeTimer[playerid]);
          	ClearAnimations(playerid);
        } else Message(playerid, COLOR_GREY, "¡No está fumando!");
        return 1;
    }
	zcmd(comer, playerid, params[]){
        if(!IsAtBar(playerid)) return Message(playerid, COLOR_GRAD2, "  No estas en un lugar donde beber!");
        if(GetPlayerMoney(playerid) < 0) return Message(playerid, COLOR_FADE2, "Camarero dice: Vete a otro lugar a comer gratis!");
        //PlayerInfo[playerid][pHambre] -= 3;
        //PlayerInfo[playerid][pPeso] += 1;
	    if(IsPlayerConnected(playerid)){
		    ShowPlayerDialog(playerid, BAR_MENU, DIALOG_STYLE_LIST, "Menú del Día", "Platos Combinados & Tapas\nRefrescos & Bebidas & Vinos", "Ver", "Salir");
	    } else Message(playerid, COLOR_GRAD2, " Usted no esta conectado! ");
	    return 1
	}
	zcmd(lockhq, playerid, params[])
	{
	    if(IsPlayerConnected(playerid)){
         	if(Team_Groove(playerid)){
				if(hqlock[GS] == 0) {hqlock[GS] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
				else if(hqlock[GS] == 1) {hqlock[GS] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
			}
			else if(Ballas_pand(playerid)){
		  	    if(hqlock[PIR] == 0) {hqlock[PIR] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
		  	    else if(hqlock[PIR] == 1) {hqlock[PIR] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
			}
			else if(Team_Hermandad(playerid)){
				if(hqlock[LH] == 0) {hqlock[LH] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[LH] == 1) {hqlock[LH] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	else if(Moteros(playerid)){
				if(hqlock[MOT] == 0) {hqlock[MOT] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[MOT] == 1) {hqlock[MOT] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
			}
    		else if(Team_LK(playerid)){
				if(hqlock[LK] == 0) {hqlock[LK] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[LK] == 1) {hqlock[LK] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	else if(Mafia_Italiana(playerid)){
				if(hqlock[ITA] == 0) {hqlock[ITA] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[ITA] == 1) {hqlock[ITA] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	else if(Mafia_Rusa(playerid)){
				if(hqlock[RUS] == 0) {hqlock[RUS] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[RUS] == 1) {hqlock[RUS] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	else if(Hitman(playerid)){
				if(hqlock[HIT] == 0) {hqlock[HIT] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[HIT] == 1) {hqlock[HIT] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	}
		  	else if(Piratas4x4(playerid)){
		  	    if(hqlock[PIR] == 0) {hqlock[PIR] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
		  	    else if(hqlock[PIR] == 1) {hqlock[PIR] = 0; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
	    	}
		  	else if(Mafia_Yakuza(playerid)){
				if(hqlock[YAK] == 0) {hqlock[YAK] = 1; SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Cerrado!"); return 1;}
              	else if(hqlock[YAK] == 1) {hqlock[YAK] = 0;  SaveHQLocks(); Message(playerid, COLOR_GREY, "HQ Abierto!"); return 1;}
		  	} else return Message(playerid, COLOR_GREY, "No tienes las llaves del HQ!");
	    }
	    return 1;
	}
	//zcmd: Buy Vehicle
    zcmd(cvehpremium, playerid, params[]){
 	    if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_RED2, "Necesitas ser premium.");
 	    new newcar = GetPlayerVehicleID(playerid), idcar = GetPlayerVehicleID(playerid);
 	    if(CarInfo[idcar][cOwned] == 1) return Message(playerid, COLOR_RED2, "El vehículo no está en venta.");
  	    if(PlayerInfo[playerid][pCarPremium] != 9999) return Message(playerid, COLOR_RED2, "Ya posees un vehículo.");
        if(!IsAnOwnableCar(newcar)) return Message(playerid, COLOR_RED2, "Este vehículo no está en venta.");
   	    if(GetPlayerMoney(playerid) >= CarInfo[idcar][cValue]){
            ShowPlayerDialog(playerid, IMPORTAR_MOTOR, DIALOG_STYLE_LIST, "Elegir prestaciones", "Motor sin plomo 95\t\tCapacidad: 100l (1$/l)\nMotor sin plomo 98\t\tCapacidad: 120l (1$/l)\nMotor Diesel\t\tCapacidad: 160l (2$/l)\nMotor Biodiesel\t\tCapacidad: 230l (3$/l)", "Instalar", "Salir");
    	    PlayerInfo[playerid][pCarPremium] = idcar;
     	    CarInfo[idcar][cOwned] = 1;
      	    CarInfo[idcar][cBattery] = 5000;
		    strmid(CarInfo[PlayerInfo[playerid][pCarPremium]][cOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 32);
		    Bought(playerid, CarInfo[PlayerInfo[playerid][pCarPremium]][cValue]);
	    	SetVehicleParamsEx(idcar, 0,0,0,0,0,0,0);
		    gEngine[playerid] = 0;
	    	engineOn[idcar] = false;
	    	ClearChatbox(playerid, 10);
	    	Message(playerid, COLOR_GREEN, "Felicidades! Has adquirido este vehículo, utiliza (/v [item])");
	    	strmid(CarInfo[idcar][cPlate], "00000", 0, strlen("00000"), 255);
	    	SetVehicleNumberPlate(idcar, CarInfo[idcar][cPlate]);
	    	UpdateCars();
	    } else Message(playerid, COLOR_RED2, "No tienes dinero suficiente!");
	    return 1;
	}
	zcmd(cvehiculo, playerid, params[]){
 	    if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_RED2, "Debes ser como mínimo nivel 2");
		new newcar = GetPlayerVehicleID(playerid), idcar = GetPlayerVehicleID(playerid);
 	    if(CarInfo[idcar][cOwned] == 1) return Message(playerid, COLOR_RED2, "El vehículo no está en venta.");
 	    if(PlayerInfo[playerid][pPcarkey] != 9999) return Message(playerid, COLOR_RED2, "Ya posees un vehículo.");
        if(!IsAnOwnableCar(newcar)) return Message(playerid, COLOR_RED2, "Este vehículo no está en venta.");
   	    if(GetPlayerMoney(playerid) >= CarInfo[idcar][cValue]){
            ShowPlayerDialog(playerid, IMPORTAR_MOTOR, DIALOG_STYLE_LIST, "Elegir prestaciones", "Motor sin plomo 95\t\tCapacidad: 100l (1$/l)\nMotor sin plomo 98\t\tCapacidad: 120l (1$/l)\nMotor Diesel\t\tCapacidad: 160l (2$/l)\nMotor Biodiesel\t\tCapacidad: 230l (3$/l)", "Instalar", "Salir");
            PlayerInfo[playerid][pPcarkey] = idcar;
            CarInfo[idcar][cVehTime] = gettime() + 1296000;
            PlayerInfo[playerid][pTimeCar] = gettime() + 1296000;
            CarInfo[idcar][cOwned] = 1;
            CarInfo[idcar][cBattery] = 5000;
            strmid(CarInfo[PlayerInfo[playerid][pPcarkey]][cOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 32);
            Bought(playerid, CarInfo[PlayerInfo[playerid][pPcarkey]][cValue]);
            SetVehicleParamsEx(idcar, 0,0,0,0,0,0,0);
            gEngine[playerid] = 0;
            engineOn[idcar] = false;
            ClearChatbox(playerid, 10);
            Message(playerid, COLOR_GREEN, "Felicidades! Has adquirido este vehículo, utiliza (/v [item])");
            Message(playerid, COLOR_GREEN, "IMPORTANTE: {FFFFFF}Utiliza /timevehinfo para mas informacion sobre tu vehículo.");
            strmid(CarInfo[idcar][cPlate], "00000", 0, strlen("00000"), 255);
            SetVehicleNumberPlate(idcar, CarInfo[idcar][cPlate]);
            UpdateCars();
	    } else Message(playerid, COLOR_RED2, "¡No tienes dinero suficiente!");
	    return 1;
	}
	zcmd(cvehiculo2, playerid, params[]){
	    if(PlayerInfo[playerid][pLevel] < 5) return Message(playerid, COLOR_RED2, "Debes ser como mínimo nivel 5");
 	    new newcar = GetPlayerVehicleID(playerid), idcar = GetPlayerVehicleID(playerid);
 	    if(CarInfo[idcar][cOwned] == 1) return Message(playerid, COLOR_RED2, "El vehículo no está en venta.");
 	    if(PlayerInfo[playerid][pPcarkey2] != 9999) return Message(playerid, COLOR_RED2, "Ya posees un vehículo.");
        if(!IsAnOwnableCar(newcar)) return Message(playerid, COLOR_RED2, "Este vehículo no está en venta.");
   	    if(GetPlayerMoney(playerid) >= CarInfo[idcar][cValue]){
            ShowPlayerDialog(playerid, IMPORTAR_MOTOR, DIALOG_STYLE_LIST, "Elegir prestaciones", "Motor sin plomo 95\t\tCapacidad: 100l (1$/l)\nMotor sin plomo 98\t\tCapacidad: 120l (1$/l)\nMotor Diesel\t\tCapacidad: 160l (2$/l)\nMotor Biodiesel\t\tCapacidad: 230l (3$/l)", "Instalar", "Salir");
            PlayerInfo[playerid][pPcarkey2] = idcar;
            CarInfo[idcar][cVehTime] = gettime() + 1296000;
            PlayerInfo[playerid][pTimeCar2] = gettime() + 1296000;
            CarInfo[idcar][cOwned] = 1;
            CarInfo[idcar][cBattery] = 5000;
            strmid(CarInfo[PlayerInfo[playerid][pPcarkey2]][cOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 32);
            Bought(playerid, CarInfo[PlayerInfo[playerid][pPcarkey2]][cValue]);
            SetVehicleParamsEx(idcar, 0,0,0,0,0,0,0);
            gEngine[playerid] = 0;
            engineOn[idcar] = false;
            ClearChatbox(playerid, 10);
            Message(playerid, COLOR_GREEN, "Felicidades! Has adquirido este vehículo, utiliza (/v [item])");
            Message(playerid, COLOR_GREEN, "IMPORTANTE: {FFFFFF}Utiliza /timevehinfo para mas informacion sobre tu vehículo.");
            strmid(CarInfo[idcar][cPlate], "00000", 0, strlen("00000"), 255);
            SetVehicleNumberPlate(idcar, CarInfo[idcar][cPlate]);
            UpdateCars();
	    } else Message(playerid, COLOR_RED2, "No tienes dinero suficiente!");
	    return 1;
	}
	//zcmd: Evento
    new Float:xe, Float:ye, Float:ze;
    zcmd(evento, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(EventoOn != 1){
            EventoOn = 1;
			new string[128];
            GlobalMsg(-1, " {CDE8F0}Atención <<");
            format(string, sizeof(string), "{FFFFFF}El modo evento ha sido activado por {CDE878}%s, {FFFFFF}usa {519760}/participar {FFFFFF}para entrar.", PlayerName(playerid));
            GlobalMsg(-1, string);
            GlobalMsg(-1, "{FFFFFF}Recuerde que al entrar al evento perderá sus armas. Si entra siga las indicaciones de los administradores.");
            GetPlayerPos(playerid,xe,ye,ze);
		}else{
            EventoOn = 0;
            GlobalMsg(-1, "{FFFFFF}El modo evento ha sido {F80F60}desactivado.");
        }
        return 1;
	}
	zcmd(participar, playerid, params[]){
        if(EventoOn == 1){
            SetPlayerPos(playerid,xe,ye,ze);
            SetPlayerArmour(playerid, 100);
            ResetPlayerWeapons(playerid);
            SetHP(playerid, 100);
            GText(playerid, "~g~Entraste al modo evento~n~~w~Sigue las instrucciones del organizador", 7000, 4);
		} else Message(playerid, COLOR_GRAD2, "No está activado el modo evento");
		return 1;
	}
	// zcmd:info ============================================================================================================================
	zcmd(soporte, playerid, params[])
	{
        ClearChatbox(playerid, 8);
	    Message(playerid, -1, "{C8D228}-= {00B39D}Centro de Soporte {FFFFFF}Hermandad Zero RP {C8D228}=-");
	    Message(playerid, -1, "{FFFFFF}- Dudas sobre terminos de juego - {FF0828}/duda");
	    Message(playerid, -1, "{FFFFFF}- Reportar a un jugador por infringir las normas - {46ED8F}/re");
	    return Message(playerid, -1, "{FFFFFF}- ¿Necesistas asistencia? - {00A400}/solicitaradmin");
	}
	zcmd(info, playerid, params[]){
		/*new string[1024];
		format(string, sizeof(string),"%s %s",ver,ver2);
        return ShowPlayerDialog(playerid,512,DIALOG_STYLE_MSGBOX, "{FF231D}Versión del Servidor", string, "Ok", "");*/
        HTTP(playerid, HTTP_GET, "hermandadzero.com/info.txt","","UpdateResponse");
        return 1;
    }
  	zcmd(timevehinfo, playerid, params[]){
  	    new string[800];
  	    new tveh[] = "{FFFFFF}Este servidor cuenta con un sistema de tiempo vehicular diseñado para evitar que existan\nvehiculos de personas que ya no entran al servidor y asi poder tener mas carros en venta\npara aquellos usuarios que son mas activos. Si posees un vehiculo puedes ver el tiempo\n";
		new tveh2[] = "{FFFFFF}restante con el comando /v tiempo siempre y cuando estes en tu vehículo, antes de que el\ntiempo llegue a 0 debes renovarlo buscando un licenciero para que lo haga, el valor de la\n renovacion es depende de los días(15-30), en caso de no hacerlo tu vehículo se vende\n";
		new tveh3[] = "{FFFFFF}automaticamente y deja de ser tuyo(es eliminado de tu cuenta). Recuerda siempre tener en\n cuenta el tiempo de tu vehículo, si lo pierdes no puedes reclamarlo como tuyo.\n\n\t\t\t{FF7617}Atte. Administración de Hermandad Zero RP.";
		format(string, sizeof(string),"%s %s %s",tveh,tveh2,tveh3);
		return ShowPlayerDialog(playerid,12397,DIALOG_STYLE_MSGBOX, "{FF231D}Informacion del Tiempo Vehicular", string, "Ok", "");
	}
	zcmd(servicios, playerid, params[]){
        ClearChatbox(playerid, 10);
	    Message(playerid, -1, " {FFFFFF}* {658EBB}Números de Servicios {FFFFFF}*");
	 	Message(playerid, -1, " {FFFFFF}* Emergencias - {65BD7D}# 911");
	 	Message(playerid, -1, " {FFFFFF}* Mecanicos - {65BD7D}# 555");
	 	Message(playerid, -1, " {FFFFFF}* Pizza Stack - {65BD7D}# 111");
	 	return Message(playerid, -1, " {FFFFFF}* Taxi Cab Company - {65BD7D}# 444");
	}
    zcmd(facciones, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] >= 2012 || PlayerInfo[playerid][pFacciones] == 1){
			Message(playerid, COLOR_BLUE, "= ID'S de Facciones =");
			Message(playerid, -1, "1. LSPD - 2.Piratas4x4 - 3. SAEM - 4. LSMC - 5. Ballas");
			Message(playerid, -1, "7. Mecanicos - 8. Moteros - 9. Groove - 10. La Hermandad");
			Message(playerid, -1, "11. L.Kings - 12. LCN - 13. Yakuza - 14. Rusos - 15. Licencieros");
			Message(playerid, -1, "16. Gobierno - 17. CNN - 19. Traficantes - 23. Hitman - 24. FBI - 25. Corte Judicial" );

		} else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		return 1;
	}
	//Canales
	zcmd(togac, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2013){
            if(!AdminChat[playerid]){
		        AdminChat[playerid] = 1;
		        Message(playerid, COLOR_GRAD2, "- Canal de administración desactivado");
		    }
		    else{
		        AdminChat[playerid] = 0;
		        Message(playerid, COLOR_GRAD2, "- Canal de administración activado");
		    }
        } else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
	zcmd(togpm, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if (!HidePM[playerid]){
			HidePM[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "¡PMs Bloqueados!");
		}
		else if (HidePM[playerid]){
			HidePM[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "¡PMs Habilitados!");
		}
        return 1;
    }
   	zcmd(togooc, playerid, params[]){
		if (!gOoc[playerid]){
			gOoc[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "    Desactivaste el chat de ayuda.");
		}
		else{
			gOoc[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "    Activaste el chat de ayuda.");
		}
		return 1;
	}
 	zcmd(togfam, playerid, params[]){
        if(!gFam[playerid]){
			gFam[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Chat de Facción desactivado.");
		}
		else{
			gFam[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Chat de Facción activado.");
		}
        return 1;
    }
    zcmd(tognews, playerid, params[]){
        if(!gNews[playerid]){
			gNews[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Chat de Radio/Ads desactivado.");
		}
		else{
			gNews[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Chat de Radio/Ads activado.");
		}
        return 1;
    }
	zcmd(togphone, playerid, params[]){
        if (!PhoneOnline[playerid]){
			PhoneOnline[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Teléfono apagado.");
		}
		else{
			PhoneOnline[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Teléfono encendido.");
		}
        return 1;
    }
    zcmd(id, playerid, params[]){
        if(!sscanf(params, "u", params[0])){
            new string[32];
            format(string, sizeof(string), "(%d) - %s",params[0], PlayerName(params[0]));
			Message(playerid, COLOR_GRAD2, string);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /id <NombreJugador>");
        return 1;
    }
    zcmd(clientes, playerid, params[]){
  		if(PlayerInfo[playerid][pJob] != 9) return Message(playerid, COLOR_GRAD2, "¡No eres Taxista!");
		if(TransportDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No estás en servicio!");
		if(!Taxi_Vehicle(GetPlayerVehicleID(playerid))) return Message(playerid, COLOR_GRAD2, "¡No estás en un taxi!");
		TaxiRadar(playerid);
		return 1;
	}
 	zcmd(gpsmeca, playerid, params[]){
        if(!Team_Mecanicos(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres mecánico!");
        if(OnDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No estás en servicio!");
		if(!Mecanico_Vehicle(GetPlayerVehicleID(playerid))) return Message(playerid, COLOR_GRAD2, "¡No estás en un carro de mecanico!");
        if(!sscanf(params, "u", params[0])){
            new Float:X, Float:Y, Float:Z;
			GetPlayerPos(params[0], X,Y,Z);
			SetPlayerCheckpoint(playerid, X,Y,Z, 6);
			Message(playerid, COLOR_YELLOW2, "Posición del jugador marcado en el mapa.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /gpsmeca <Nombre_Jugador>");
        return 1;
    }
    zcmd(removegps, playerid, params[]){
    	if(IsPlayerConnected(playerid)){
			DisablePlayerCheckpoint(playerid);
		}
		return 1;
	}
	zcmd(saltartutorial, playerid, params[]){
	    if(TutTime[playerid] > 0){
	    	TextDrawHideForPlayer(playerid, Film_1);
			TextDrawHideForPlayer(playerid, Film_2);
			TextDrawHideForPlayer(playerid, Tutorial[playerid]);
			SetPlayerCameraPos(playerid,1799.000,-1680.000,23.000);
			SetPlayerCameraLookAt(playerid,1809.000,-1682.000,23.000);
			SetPosEx(playerid, 1800.7739,-1678.1132,14.4939,213.9432,0,0);
	        Message(playerid, -1, "{F20C00}Atención! {FFFFFF}Ahora pasaremos al test de Rol, si usted falla mas de 5 preguntas, volverá a leer el tutorial.")
			ClearChatbox(playerid, 10);
			new tes[] = "{FFFFFF}Es atropellar a alguien con un auto.\nEs MetaPower, es tirarte de un edificio.\nEs decir información OOC en el juego.\nEs MetaGaming, la confunsión de canales IC u OOC.";
			ShowPlayerDialog(playerid, TEST_0, DIALOG_STYLE_LIST, "{4DE868}¿Que significa MG?", tes, "OK", "");
		} else Message(playerid, COLOR_GRAD2, "¡Usted no está en el tutorial!");
		return 1;
	}
	zcmd(registrar, playerid, params[]){
	    if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(!sscanf(params,"u",params[0])){
	        if(IsPlayerConnected(params[0])){
	            if(TutTime[params[0]] > 0){
	                new string[128];
	                ClearChatbox(params[0], 20);
     				TextDrawHideForPlayer(params[0], Film_1);
	       			TextDrawHideForPlayer(params[0], Film_2);
	       			TextDrawHideForPlayer(params[0], Tutorial[params[0]]);
	       			SetCameraBehindPlayer(params[0]);
					new lu[] = "{FFFFFF}Has terminado el tutorial, ahora ya puedes empezar a jugar, recuerda respetar las reglas del servidor.";
					ShowPlayerDialog(params[0], SEL_CITY, DIALOG_STYLE_MSGBOX, "{46FF92}Hermandad Zero RP - Tutorial Finalizado", lu, "Ok", "");
					format(string, sizeof(string), "Has registrado ha %s.", PlayerName(params[0]));
					Message(playerid, COLOR_GRAD4, string);
	            } else Message(playerid, COLOR_GRAD2, "¡El jugador no está en el tutorial!");
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
	    } else Message(playerid, COLOR_GRAD2, "Utilize: /registrar <PlayerID>");
	    return 1;
	}
	zcmd(hidetaxi, playerid, params[]){
	    if(IsPlayerConnected(playerid)){
			TextDrawHideForPlayer(playerid, Taximeter[playerid]);
		}
		return 1;
    }
    zcmd(eject, playerid, params[])
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            new State = GetPlayerState(playerid), string[90];
            if(State!=PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GRAD2, "¡No eres conductor!");
            if(!sscanf(params, "u", params[0]))
            {
                if(IsPlayerConnected(params[0]))
				{
    				if(params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No te puedes echar ati mismo!");
        			if(IsPlayerInAnyVehicle(params[0]))
			        {
						if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(params[0]))
						{
	      					format(string, sizeof(string), "* %s agarra fuertemente a %s y lo expulsa del vehículo.", PlayerName(playerid), PlayerName(params[0]));
					    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    	    RemovePlayerFromVehicle(params[0]);
						} else Message(playerid, COLOR_GRAD2, "El jugador no está en tu vehículo");
					} else Message(playerid, COLOR_GRAD2, "El jugador no está en un vehículo");
				} else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
            } else Message(playerid, COLOR_GRAD2, "Utilize: /eject <ID>");
        } else Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
        return 1;
    }
    //zcmd [Cmd's Houses]
    zcmd(asellhouse, playerid, params[])
    {
        if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_RED, "No posees una propiedad.");
        if(PlayerToPoint(3.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex],HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey],HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez]))
		{
		    new string[128];
			if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				new sell = HouseInfo[PlayerInfo[playerid][pPhousekey]][hValue]+HouseInfo[PlayerInfo[playerid][pPhousekey]][hRentabil];
				Earn(playerid, sell);
				format(string, sizeof(string), "Has vendido tu propiedad. Has recuperado %d$",sell);
				Message(playerid, COLOR_WHITE, string);
				SellHouse(playerid, PlayerInfo[playerid][pPhousekey]);
				PlayerInfo[playerid][pPhousekey] = 9999;
			} else Message(playerid, COLOR_RED, "No posees una propiedad.");
		} else Message(playerid, COLOR_RED, "¡Debes estar cerca de tu casa para venderla!");
        return 1;
    }
    zcmd(rcuarto, playerid, params[])
    {
        for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
			{
   				if(HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRent] > 0)
			    {
			        new string[64];
					if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
     					Message(playerid, COLOR_RED2, "Tú posees una propiedad. No hace falta que rentes una.");
          				return 1;
					}
					if(HouseInfo[h][hRooms] < 1) return Message(playerid, COLOR_RED2, "¡No hay habitaciones disponibles!");
					if(PlayerInfo[playerid][pRent] > 0) return Message(playerid, COLOR_RED2, "¡Ya estás pagando una renta!");
					if(GetPlayerMoney(playerid) >= HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPhousekey] = h;
      					PlayerInfo[playerid][pEntered] = h;
						PlayerInfo[playerid][pRent] = HouseInfo[PlayerInfo[playerid][pPhousekey]][hRent];
						Bought(playerid, HouseInfo[h][hRent]);
						HouseInfo[PlayerInfo[playerid][pPhousekey]][hRentabil] = HouseInfo[PlayerInfo[playerid][pPhousekey]][hRentabil]+HouseInfo[h][hRent];
						Message(playerid, COLOR_WHITE, "Has rentado esta casa. Ahora podrás vivir aquí.");
						format(string, sizeof(string), "Cada PayDay, pagarás %d$ de Renta.", PlayerInfo[playerid][pRent]);
						Message(playerid, COLOR_WHITE, string);
						Message(playerid, COLOR_WHITE, "Utiliza /desrentar para cancelar la renta.");
						HouseInfo[PlayerInfo[playerid][pPhousekey]][hRooms] -= 1;
						OnPropTextdrawUpdate(PlayerInfo[playerid][pPhousekey]);
					} else Message(playerid, COLOR_RED2, "No tienes suficientes fondos para rentar esta casa.");
				} else Message(playerid, COLOR_RED2, "Esta casa no se encuentra disponible para alquilarla.");
			}
		}
        return 1;
    }
    // zcmd:puente
    zcmd(puente, playerid, params[])
	{
	    new string[128], idcar = GetPlayerVehicleID(playerid);
    	if(Ganzuas[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes ganzúas!");
    	if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
    	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GRAD2, "No eres el conductor.");
    	if(gEngine[playerid] == 1 || IsABike(idcar)) { return 1; }
		if(NoBattery(idcar)) return Message(playerid, COLOR_GRAD2, "¡Vehículo sin batería!");
		if(IsAnOwnableCar(idcar)) { if(PlayerInfo[playerid][pPcarkey] == idcar || PlayerInfo[playerid][pPcarkey2] == idcar) { return 1; } }
		if(HireKey[playerid] == idcar) { return 1; }
		
		format(string, sizeof(string), "* %s utiliza unas ganzúas y cruza los cables.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        SetTimerEx("StartingTheVehicle",2500,false,"i",playerid);
		GameTextForPlayer(playerid, "~w~haciendo puente.",2500,3);
		gEngine[playerid] = 1;
		return 1;
	}
 	zcmd(tlc, playerid, params[])
    {
        if(Team_LSPD(playerid))
        {
        	if(pdtrace != 0 || pdtrace_x != 0 || pdtrace_y != 0 || pdtrace_z != 0)
         	{
                Message(playerid, 0xFF8080FF, ">><<>><<>> Estableciendo contacto ... >><<>><<>>");
	            Message(playerid, COLOR_WHITE, "GPS: Contacto establecido, ubicación marcada en el mapa.");
				SetPlayerCheckpoint(playerid,pdtrace_x,pdtrace_y,pdtrace_z,8.0);
	        }
	        else Message(playerid, COLOR_WHITE, "Error en la localizacion de la persona que llama.");
		}
	    else if(Team_SAMUR(playerid))
        {
        	if(emdtrace != 0 || emdtrace_x != 0 || emdtrace_y != 0 || emdtrace_z != 0)
         	{
	            Message(playerid, COLOR_WHITE, "Ultima llamada del lugar marcados en rojo en el mapa");
	            Message(playerid, COLOR_WHITE, "Utiliza: /removegps para remover el checkpoint");
				SetPlayerCheckpoint(playerid,emdtrace_x,emdtrace_y,emdtrace_z,8.0);
	        } else Message(playerid, COLOR_WHITE, "Error al localizar!");
		} else Message(playerid, COLOR_WHITE, "¡No autorizado!");
        return 1;
    }
	zcmd(desalojar, playerid, params[]){
        if(!sscanf(params, "u", params[0])){
            new bouse = PlayerInfo[playerid][pPhousekey], string[64];
			if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0){
			    if(IsPlayerConnected(params[0]) || params[0] == playerid){
			        if(PlayerInfo[params[0]][pPhousekey] == PlayerInfo[playerid][pPhousekey]){
	    				format(string,sizeof(string), "Desalojaste a %s", PlayerName(params[0]));
		    			Message(playerid, COLOR_WHITE, string);
						Message(params[0], COLOR_RED2, "No tienes casa, tu amo canceló la renta.");
						PlayerInfo[params[0]][pPhousekey] = 9999;
						PlayerInfo[params[0]][pRent] = 0;
						HouseInfo[bouse][hRooms] += 1;
						OnPropTextdrawUpdate(bouse);
					} else Message(playerid, COLOR_RED2, "El jugador no te ha alquilado la casa.");
			    } else Message(playerid, COLOR_RED2, "Jugador no conectado.");
			} else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /desalojar <PlayerID>");
        return 1;
    }
	zcmd(desrentar, playerid, params[])
    {
		if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
			Message(playerid, COLOR_RED2, "No puedes desrentar tu propia casa.");
			return 1;
		}

		if(PlayerInfo[playerid][pRent] < 1 || PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_RED2, "¡No has rentado nada!");

		HouseInfo[PlayerInfo[playerid][pPhousekey]][hRooms] += 1;
		OnPropTextdrawUpdate(PlayerInfo[playerid][pPhousekey]);
		PlayerInfo[playerid][pPhousekey] = 9999;
		PlayerInfo[playerid][pRent] = 0;
		Message(playerid, COLOR_WHITE, "Dejaste de rentar una casa. Ahora eres un sin-techo.");
		return 1;
    }
	zcmd(cinfo, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x[64];
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
			    if(PlayerToPoint(3.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
				{
				    if(HouseInfo[h][hOwned] == 0)
				    {
				        Message(playerid, COLOR_GREEN, "- Propiedad en Venta - Información");
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Valor: %d   -   Nivel: %d", HouseInfo[h][hValue],HouseInfo[h][hLevel]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "ID: %d", HouseInfo[h][hWorld]);
				        Message(playerid, COLOR_WHITE, x);
				        Message(playerid, COLOR_YELLOW2, "- Utiliza /comprarcasa, para comprar la casa");
				        return 1;
					}
					if(PlayerInfo[playerid][pPhousekey] == h)
				    {
				        Message(playerid, COLOR_RED, "- Propiedad Privada -");
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Valor: %d   -   Nivel: %d", HouseInfo[h][hValue],HouseInfo[h][hLevel]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones Disponibles: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Armario: (Wep: %d - Ammo: %d)", HouseInfo[h][hWep],HouseInfo[h][hAmmo]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Bloqueada: %d", HouseInfo[h][hLock]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "ID: %d", HouseInfo[h][hWorld]);
				        Message(playerid, COLOR_WHITE, x);
				        return 1;
					}
					if(HouseInfo[h][hRent] > 0 && PlayerInfo[playerid][pPhousekey] != h)
				    {
				        Message(playerid, COLOR_YELLOW, "- Propiedad en Renta - Información");
				        format(x, sizeof(x), "Dueño: %s", HouseInfo[h][hOwner]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Interior ID: %d", HouseInfo[h][hInt]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Habitaciones: %d", HouseInfo[h][hRooms]);
				        Message(playerid, COLOR_WHITE, x);
				        format(x, sizeof(x), "Renta: %d$", HouseInfo[h][hRent]);
				        Message(playerid, COLOR_WHITE, x);
				        Message(playerid, COLOR_YELLOW2, "- Utiliza /rcuarto, para rentar una habitación");
				        return 1;
					} else return Message(playerid, COLOR_GRAD2, "No hay información disponible para esta propiedad!");
				}
			}
		} else Message(playerid, COLOR_GRAD2, "¡Necesitas estar conectado!");
		return 1;
	}
    zcmd(houseid, playerid, params[])
    {
        new string[32];
        for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(1.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
			{
   				format(string, sizeof(string), "Casa ID: %d", h);
			    Message(playerid, COLOR_GRAD2,string);
			    break;
			}
		}
		return 1;
    }
	zcmd(entrar, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0)
					{
						PlayerInfo[playerid][pEntered] = i;
						SetPosEx(playerid, HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz],0,HouseInfo[i][hInt],HouseInfo[i][hWorld]);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~puerta cerrada", 5000, 1);
					}
				}
			}
		}
		return 1;
	}
    zcmd(comprarcasa, playerid, params[])
    {
        for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
			{
			    new string[128];
   				if(HouseInfo[h][hOwned] == 1) return Message(playerid, COLOR_RED2, "¡Esta casa ya tiene dueño!");
				if(PlayerInfo[playerid][pPhousekey] != 9999) return Message(playerid, COLOR_RED2, "¡Ya posees una propiedad!");
				if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
				{
						format(string, sizeof(string), "Esta propiedad requiere que seas nivel %d", HouseInfo[h][hLevel]);
						Message(playerid, COLOR_RED2, string);
						return 1;
				}
				if(GetPlayerMoney(playerid) >= HouseInfo[h][hValue])
				{
					PlayerInfo[playerid][pPhousekey] = h;
					HouseInfo[h][hOwned] = 1;
					HouseInfo[h][hTime] = gettime() + 2592000;
					PlayerInfo[playerid][pEntered] = h;
					strmid(HouseInfo[h][hOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
					Bought(playerid, HouseInfo[h][hValue]);
					SetPosEx(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz],0,HouseInfo[h][hInt],HouseInfo[h][hWorld]);
					Message(playerid, COLOR_WHITE, "Felicidades por comprar esta casa. Utiliza /ayuda casa");
					OnPropTextdrawUpdate(h);
					UpdateHouses();
					return 1;
				}
				else Message(playerid, COLOR_RED2, "No tienes fondos suficientes para comprarte esta propiedad.");
			}
		}
 		return 1;
    }
	zcmd(salir, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
		{
			if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	   		{
                TogglePlayerControllable(playerid, 1);
	        	RemovePlayerFromVehicle(playerid);
	    	}
			else if(NoFuel[playerid] == 1)
			{
			    TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
			}
			else if(PlayerInfo[playerid][pEntered] != -1)
			{
			    new key = PlayerInfo[playerid][pEntered];
			    SetPosEx(playerid, HouseInfo[key][hEntrancex],HouseInfo[key][hEntrancey],HouseInfo[key][hEntrancez],0,0,0);
			}
		}
		return 1;
	}
 	zcmd(houseint, playerid, params[])
	{
 		if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
 		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
   		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /houseint <Casa ID>");
		if(params[0] < 0 || params[0] >= MAX_HOUSES) return Message(playerid, COLOR_GRAD2, "¡ID de casa errónea!");
			PlayerInfo[playerid][pEntered] = HouseInfo[params[0]][hWorld];
			SetPosEx(playerid,HouseInfo[params[0]][hExitx],HouseInfo[params[0]][hExity],HouseInfo[params[0]][hExitz],0,HouseInfo[params[0]][hInt],HouseInfo[params[0]][hWorld]);
			Message(playerid, COLOR_GRAD1, "¡Teleportado!");
			return 1;
	}
 	zcmd(timehouse, playerid, params[])
	{
	    new h = PlayerInfo[playerid][pPhousekey], string[128];
	    if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "No posees una propiedad.");
	    if(!PlayerToPoint(3.0, playerid, HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez])) return Message(playerid, COLOR_GRAD2, "No estas cerca de tu casa.");
	    new
	        TimeHouse = HouseInfo[h][hTime] - gettime(),
            dias = TimeHouse/60/60/24,
			horas = TimeHouse/60/60 - dias*24,
			minutos = TimeHouse/60 - dias*24*60 - horas*60;
   		format(string, sizeof(string), "{FF8000}%d {FFFFFF}Dias, {FF8000}%d {FFFFFF}Horas, {FF8000}%d {FFFFFF}Minutos para pagar impuestos.", dias, horas, minutos);
		Message(playerid, COLOR_WHITE, string);
		return 1;
	}
	zcmd(pagarimpuestos, playerid, params[])
	{
		if(!PlayerToPoint(5.0,playerid,358.3462,186.2765,1008.3828)) return Message(playerid, COLOR_GRAD2, "No estas en la recaudadora de impuestos.");
		if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes una casa.");
		if(CheckMoney(playerid, 25000)){
			ShowPlayerDialog(playerid, HOUSE_IMPUESTOS, DIALOG_STYLE_INPUT, "Casa de Impuestos", "{FFFFFF}Por favor ingrese su numero de DNI", "Aceptar", "Cancelar");
		}
		return 1;
	}
	zcmd(house, playerid, params[])
	{
 		if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
 		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
   		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /house <Casa ID>");
		if(params[0] < 0 || params[0] >= MAX_HOUSES) return Message(playerid, COLOR_GRAD2, "¡ID de casa errónea!");
			SetPlayerPos(playerid,HouseInfo[params[0]][hEntrancex],HouseInfo[params[0]][hEntrancey],HouseInfo[params[0]][hEntrancez]);
			Message(playerid, COLOR_GRAD1, "¡Teleportado!");
			return 1;
	}
	zcmd(houseentrancea, playerid, params[])
	{
   		if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
 		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /houseentrace <Casa ID>");
        if(params[0] < 0 || params[0] >= MAX_HOUSES) return Message(playerid, COLOR_GRAD2, "¡ID de casa errónea!");
			new string[80];
			new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid,X,Y,Z);
		    format(string,sizeof(string),"Entrada de Casa %d movido a %f - %f - %f", params[0],X,Y,Z);
			Message(playerid,COLOR_YELLOW2,string);
			HouseInfo[params[0]][hEntrancex] = X;
			HouseInfo[params[0]][hEntrancey] = Y;
			HouseInfo[params[0]][hEntrancez] = Z;
			OnPropTextdrawUpdate(params[0]);
			UpdateHouses();
			return 1;
	}
	zcmd(houseexita, playerid, params[])
	{
   		if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
 		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /houseexit <Casa ID>");
        if(params[0] < 0 || params[0] >= MAX_HOUSES) return Message(playerid, COLOR_GRAD2, "¡ID de casa errónea!");
			new string[80];
			new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid,X,Y,Z);
		    format(string,sizeof(string),"Interior de Casa %d puesto en %f - %f - %f", params[0],X,Y,Z);
   			Message(playerid,COLOR_YELLOW2,string);
			HouseInfo[params[0]][hExitx] = X;
			HouseInfo[params[0]][hExity] = Y;
			HouseInfo[params[0]][hExitz] = Z;
			HouseInfo[params[0]][hInt] = GetPlayerInterior(playerid);
			UpdateHouses();
			return 1;
	}
 	zcmd(sarma, playerid, params[])
    {
        if(PlayerInfo[playerid][pPhousekey] != 9999)
		{
  			if(PlayerToPoint(20.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitx],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExity],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hWorld])
	    	{
      			if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] != 0)
	        	{
                    SafeGivePlayerWeapon(playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep], HouseInfo[PlayerInfo[playerid][pPhousekey]][hAmmo]);
	            	HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] = 0;
              		HouseInfo[PlayerInfo[playerid][pPhousekey]][hAmmo] = 0;
                	Message(playerid, COLOR_YELLOW, "Sacaste tu arma de tu armario. Utiliza /garma para volverla a guardar.");
	        	}
          		else Message(playerid, COLOR_GRAD2, "¡No tienes un arma en tu armario!");
			}
			else Message(playerid, COLOR_RED2, "¡No estás en tu casa!");
		}
		else Message(playerid, COLOR_RED2, "¡No tienes casa!");
        return 1;
    }
    zcmd(garma, playerid, params[])
    {
        if(PlayerInfo[playerid][pPhousekey] != 9999)
		{
  			if(PlayerToPoint(20.0, playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitx],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExity],HouseInfo[PlayerInfo[playerid][pPhousekey]][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[PlayerInfo[playerid][pPhousekey]][hWorld])
	    	{
      			if(HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] > 0) return Message(playerid, COLOR_RED2, "¡Tu armario está lleno!");

				new gunID = GetPlayerWeapon(playerid);
				new gunAmmo = GetPlayerAmmo(playerid);
				if(gunID != 0 && gunAmmo != 0)
				{
					HouseInfo[PlayerInfo[playerid][pPhousekey]][hWep] = gunID;
					HouseInfo[PlayerInfo[playerid][pPhousekey]][hAmmo] = gunAmmo;
					RemovePlayerWeapon(playerid, gunID);
     				Message(playerid, COLOR_YELLOW, "Guardaste tu arma en tu armario. Utiliza /sarma para removerla.");
      			}
      			else Message(playerid, COLOR_RED2, "¡No tienes arma!");
			}
			else Message(playerid, COLOR_RED2, "¡No estás en tu casa!");
		}
		else Message(playerid, COLOR_RED2, "¡No tienes casa!");
        return 1;
    }
    zcmd(gbodega, playerid, params[])
    {
        new string[128], item[32], houseid = PlayerInfo[playerid][pPhousekey];
	   	if(!sscanf(params,"s[32]d",item,params[1]))
	    {
     		if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "¡No tienes una casa!");
    		if(PlayerToPoint(20.0, playerid, HouseInfo[houseid][hExitx],HouseInfo[houseid][hExity],HouseInfo[houseid][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[houseid][hWorld])
    		{
                if(strcmp(item,"materiales",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pMats])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de materiales!");
					HouseInfo[houseid][hMats] += params[1];
					PlayerInfo[playerid][pMats] -= params[1];
					format(string, sizeof(string), "* Guardaste %d materiales en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"droga",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pDrugs])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de droga!");
					HouseInfo[houseid][hDrugs] += params[1];
					PlayerInfo[playerid][pDrugs] -= params[1];
					format(string, sizeof(string), "* Guardaste %d gramos de droga en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"speed",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pSpeed])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de speed!");
					HouseInfo[houseid][hSpeed] += params[1];
					PlayerInfo[playerid][pSpeed] -= params[1];
					format(string, sizeof(string), "* Guardaste %d speed en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"ectasy",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pEctasy])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ectasy!");
					HouseInfo[houseid][hEctasy] += params[1];
					PlayerInfo[playerid][pEctasy] -= params[1];
					format(string, sizeof(string), "* Guardaste %d ectasy en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"ritalin",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pRitalin])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ritalin!");
					HouseInfo[houseid][hRitalin] += params[1];
					PlayerInfo[playerid][pRitalin] -= params[1];
					format(string, sizeof(string), "* Guardaste %d ritalin en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"heroina",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pHeroina])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de heroina!");
					HouseInfo[houseid][hHeroina] += params[1];
					PlayerInfo[playerid][pHeroina] -= params[1];
					format(string, sizeof(string), "* Guardaste %d heroina en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"marihuana",true) == 0)
                {
					if(params[1] > PlayerInfo[playerid][pMarihuana])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de marihuana!");
					HouseInfo[houseid][hMarihuana] += params[1];
					PlayerInfo[playerid][pMarihuana] -= params[1];
					format(string, sizeof(string), "* Guardaste %d marihuana en tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
  			} else Message(playerid, COLOR_GRAD2, "¡No estás en tu casa!");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /gbodega <materiales, droga, speed, ectasy, ritalin, heroina, marihuana> <Cantidad>");
		return 1;
    }
    zcmd(sbodega, playerid, params[])
    {
        new string[128], item[32], houseid = PlayerInfo[playerid][pPhousekey];
	   	if(!sscanf(params,"s[32]d",item,params[1]))
	    {
     		if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "¡No tienes una casa!");
    		if(PlayerToPoint(20.0, playerid, HouseInfo[houseid][hExitx],HouseInfo[houseid][hExity],HouseInfo[houseid][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[houseid][hWorld])
    		{
                if(strcmp(item,"materiales",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hMats])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de materiales guardados!");
					HouseInfo[houseid][hMats] -= params[1];
					PlayerInfo[playerid][pMats] += params[1];
					format(string, sizeof(string), "* Sacaste %d materiales de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"droga",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hDrugs])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de droga guardada!");
					HouseInfo[houseid][hDrugs] -= params[1];
					PlayerInfo[playerid][pDrugs] += params[1];
					format(string, sizeof(string), "* Sacaste %d gramos de droga de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"speed",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hSpeed])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de speed guardada!");
					HouseInfo[houseid][hSpeed] -= params[1];
					PlayerInfo[playerid][pSpeed] += params[1];
					format(string, sizeof(string), "* Sacaste %d speed de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"ectasy",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hEctasy])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ectasy guardada!");
					HouseInfo[houseid][hEctasy] -= params[1];
					PlayerInfo[playerid][pEctasy] += params[1];
					format(string, sizeof(string), "* Sacaste %d ectasy de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"ritalin",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hRitalin])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ritalin guardada!");
					HouseInfo[houseid][hRitalin] -= params[1];
					PlayerInfo[playerid][pRitalin] += params[1];
					format(string, sizeof(string), "* Sacaste %d ritalin de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"heroina",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hHeroina])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de heroina guardada!");
					HouseInfo[houseid][hHeroina] -= params[1];
					PlayerInfo[playerid][pHeroina] += params[1];
					format(string, sizeof(string), "* Sacaste %d heroina de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
     			else if(strcmp(item,"marihuana",true) == 0)
                {
					if(params[1] > HouseInfo[houseid][hMarihuana])  return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de marihuana guardada!");
					HouseInfo[houseid][hMarihuana] -= params[1];
					PlayerInfo[playerid][pMarihuana] += params[1];
					format(string, sizeof(string), "* Sacaste %d marihuana de tu casa.", params[1]);
                    Message(playerid, COLOR_YELLOW, string);
     			}
  			} else Message(playerid, COLOR_GRAD2, "¡No estás en tu casa!");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /sbodega <materiales, droga, speed, ectasy, ritalin, heroina, marihuana> <Cantidad>");
		return 1;
    }
    zcmd(bodega, playerid, params[])
    {
        new string[128], houseid = PlayerInfo[playerid][pPhousekey];
        if(PlayerInfo[playerid][pPhousekey] == 9999) return Message(playerid, COLOR_GRAD2, "¡Usted no tiene una casa!");
        if(PlayerToPoint(20.0, playerid, HouseInfo[houseid][hExitx],HouseInfo[houseid][hExity],HouseInfo[houseid][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[houseid][hWorld])
        {
            Message(playerid, COLOR_YELLOW, "============================== Inventario =============================");
            format(string, sizeof(string), "Materiales: %d - Drogas: %d - Speed: %d - Ectasy: %d - Ritalin: %d - Heroina: %d - Marihuana: %d", HouseInfo[houseid][hMats],
			HouseInfo[houseid][hDrugs], HouseInfo[houseid][hSpeed], HouseInfo[houseid][hEctasy], HouseInfo[houseid][hRitalin], HouseInfo[houseid][hHeroina], HouseInfo[houseid][hMarihuana]);
            Message(playerid, COLOR_WHITE, string);
            return 1;
   		} else Message(playerid, COLOR_GRAD2, "¡No estás en tu casa!");
   		return 1;
    }
    zcmd(allanarcasa, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
        for(new i = 0; i < sizeof(HouseInfo); i++)
		{
		    new string[128];
		    if(PlayerToPoint(3.0, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
                format(string, sizeof(string), "* %s coje saca un C4, lo activa y lo coloca en la puerta de la casa.", PlayerName(playerid));
  			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  			    ProxDetector(20.0, playerid, "* C4 (( Bip Bip Bip ))", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
				ProxDetector(20.0, playerid, "¡La bomba esta a punto de explotar, cubranse!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
  			    SetTimerEx("TumbarPuerta", 10000, false, "ifff", playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
  			    HouseExplo[playerid] = i;
  			    return 1;
    		}
	 	}
		return 1;
    }
    zcmd(revisarcasa, playerid, params[])
    {
        new string[128];
		if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
        for(new i = 0; i < sizeof(HouseInfo); i++)
		{
            if(PlayerToPoint(20.0,playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]))
  			{
  			    format(string, sizeof(string), "* %s revisa la casa en busca de materiales/drogas.", PlayerName(playerid));
  			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  			    Message(playerid, COLOR_YELLOW, "============================== Inventario =============================");
            	format(string, sizeof(string), "Materiales: %d - Drogas: %d - Speed: %d - Ectasy: %d - Ritalin: %d - Heroina: %d - Marihuana: %d", HouseInfo[i][hMats],
				HouseInfo[i][hDrugs], HouseInfo[i][hSpeed], HouseInfo[i][hEctasy], HouseInfo[i][hRitalin], HouseInfo[i][hHeroina], HouseInfo[i][hMarihuana]);
            	Message(playerid, COLOR_WHITE, string);
            	return 1;
   			}
		}
  		return 1;
    }
    zcmd(incautar, playerid, params[])
    {
        new string[128];
        if(!Team_LSPD(playerid) && !Team_FBI(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
        for(new i = 0; i < sizeof(HouseInfo); i++)
		{
            if(PlayerToPoint(20.0,playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]))
  			{
  			    if(HouseInfo[i][hMats] == 0 && HouseInfo[i][hDrugs] == 0 && HouseInfo[i][hSpeed] == 0 && HouseInfo[i][hEctasy] == 0 && HouseInfo[i][hRitalin] == 0 && HouseInfo[i][hHeroina] == 0 && HouseInfo[i][hMarihuana] == 0) return Message(playerid, COLOR_GRAD2, "¡Esta casa no tiene nada para incautar!");
  			    format(string, sizeof(string), "* %s toma la evidencia y las guarda.", PlayerName(playerid));
  			    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				HouseInfo[i][hMats] = 0;
				HouseInfo[i][hDrugs] = 0;
				HouseInfo[i][hSpeed] = 0;
				HouseInfo[i][hEctasy] = 0;
				HouseInfo[i][hRitalin] = 0;
				HouseInfo[i][hHeroina] = 0;
				HouseInfo[i][hMarihuana] = 0;
                format(string, sizeof(string), "* Central: %s ha incautado drogas/materiales en una casa de Los Santos.", PlayerName(playerid));
    			if(Team_LSPD(playerid)) { SendRadioMessage(1, TEAM_RADIO_COLOR, string); Fondos[LSPD] += 10000; }
    			else if(Team_FBI(playerid)) { SendRadioMessage(24, TEAM_RADIO_COLOR, string); Fondos[FBI] += 10000; }
    			return 1;
   			}
		}
		return 1;
  	}
	zcmd(heal, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new bouse = PlayerInfo[playerid][pPhousekey];
	        if(bouse != 9999)
	        {
		        if(PlayerToPoint(20.0,playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
		        {
		            SetHP(playerid, 100.0);
		            PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
		        }
			}
			else Message(playerid, COLOR_RED2, "No posees una propiedad.");
		}
		else Message(playerid, COLOR_RED2, "! Primero Conectate !");
		return 1;
	}
    zcmd(renta, playerid, params[])
    {
        if(!sscanf(params, "i", params[0]))
        {
            new bouse = PlayerInfo[playerid][pPhousekey], string[64];
			if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				if(params[0] < 0 || params[0] > 1000) return Message(playerid, COLOR_GRAD2, "Valor entre 1 - 1000$; 0 = No rentable");

				HouseInfo[bouse][hRent] = params[0];
				OnPropTextdrawUpdate(bouse);
				format(string, sizeof(string), "Renta de la propiedad: %d", HouseInfo[bouse][hRent]);
				Message(playerid, COLOR_WHITE, string);
			}
			else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /renta <precio>");
        return 1;
    }
    zcmd(abrir, playerid, params[])
    {
        new x = PlayerInfo[playerid][pPhousekey];
        if(PlayerToPoint(3, playerid,HouseInfo[x][hEntrancex], HouseInfo[x][hEntrancey], HouseInfo[x][hEntrancez]))
		{
			if(HouseInfo[x][hLock] == 1)
			{
				HouseInfo[x][hLock] = 0;
				GameTextForPlayer(playerid, "~w~Puerta ~g~Abierta", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			else
			{
				HouseInfo[x][hLock] = 1;
				GameTextForPlayer(playerid, "~w~Puerta ~r~cerrada", 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en la puerta de tu casa!");
        return 1;
    }
    zcmd(cajafuerte, playerid, params[])
    {
        new bouse = PlayerInfo[playerid][pPhousekey], string[64];
		if (bouse != 9999 && strcmp(PlayerName(playerid), HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
		{
		    if(!sscanf(params, "i", params[0]))
		    {
		        if(PlayerToPoint(20.0,playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
			    {
					if (params[0] >  HouseInfo[bouse][hRentabil] || params[0] < 1) return Message(playerid, COLOR_RED2, "No dispones de esa cantidad.");
					else
					{
						GivePlayerMoney(playerid,params[0]);
						HouseInfo[bouse][hRentabil]=HouseInfo[bouse][hRentabil]-params[0];
						format(string, sizeof(string), "Extraiste %d$ de tu caja fuerte. Te quedan: %d$", params[0],HouseInfo[bouse][hRentabil]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
				else Message(playerid, COLOR_RED2, "No estás en tu casa.");
		    }
		    else
			{
				format(string, sizeof(string), "Utilize: /cajafuerte <$> (Tiene %d$ de ganancias)", HouseInfo[bouse][hRentabil]);
				Message(playerid, COLOR_GRAD2, string);
			}
		}
		else Message(playerid, COLOR_RED2, "No posees una propiedad.");
        return 1;
    }
	//zcmd (CMD's Bizzes)
    zcmd(bizz, playerid, params[])
	{
 		if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
 		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
   		if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /bizz <House ID>");
		if(params[0] < 0 || params[0] >= MAX_BIZZ) return Message(playerid, COLOR_GRAD2, "¡ID de negocio errónea!");
			SetPlayerPos(playerid,BizzInfo[params[0]][bEntrancex],BizzInfo[params[0]][bEntrancey],BizzInfo[params[0]][bEntrancez]);
			Message(playerid, COLOR_GRAD2, "¡Teleportado!");
			return 1;
	}
	zcmd(comprarnegocio, playerid, params[])
	{
	    for(new b = 0; b < sizeof(BizzInfo); b++)
		{
		    new string[128];
		    if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
			{
		        if(BizzInfo[b][bOwned] == 1) return Message(playerid, COLOR_RED2, "¡Este negocio ya tiene dueño!");
		        if(PlayerInfo[playerid][pPbizzkey] != 9999) return Message(playerid, COLOR_RED2, "¡Ya posees un negocio!");
		        if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
		        {
		            format(string, sizeof(string), "Este negocio requiere que seas nivel %d", BizzInfo[b][bLevelNeeded]);
					Message(playerid, COLOR_RED2, string);
					return 1;
				}
				if(GetPlayerMoney(playerid) >= BizzInfo[b][bBuyPrice])
				{
					PlayerInfo[playerid][pPbizzkey] = b;
					BizzInfo[b][bOwned] = 1;
					strmid(BizzInfo[b][bOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
					Bought(playerid, BizzInfo[b][bBuyPrice]);
					Message(playerid, COLOR_WHITE, "Felicidades, has adquirido este negocio. Utiliza /ayuda negocio");
					OnBizzTextdrawUpdate(b);
					UpdateBizz();
					return 1;
				} else Message(playerid, COLOR_RED2, "No tienes los fondos necesarios para adquirir este negocio.");
			}
		}
		return 1;
	}
	zcmd(asellbizz, playerid, params[])
	{
	    new string[128], bid = PlayerInfo[playerid][pPbizzkey];
	    if(PlayerInfo[playerid][pPbizzkey] == 9999) return Message(playerid, COLOR_RED2, "No tienes un negocio.");
	    if(PlayerToPoint(3.0, playerid, BizzInfo[bid][bEntrancex],BizzInfo[bid][bEntrancey],BizzInfo[bid][bEntrancez]))
		{
			if(PlayerInfo[playerid][pPbizzkey] != 9999 && strcmp(PlayerName(playerid), BizzInfo[bid][bOwner], true) == 0)
			{
	            new money = BizzInfo[bid][bBuyPrice]+BizzInfo[bid][bTill]+BizzInfo[bid][bTillEx];
				Earn(playerid, money);
				format(string, sizeof(string), "Has vendido tu negocio. Has recuperado %d$",money);
				Message(playerid, COLOR_WHITE, string);
				SellBizz(bid);
				PlayerInfo[playerid][pPbizzkey] = 9999;
			} else Message(playerid, COLOR_RED2, "Este negocio no está a tu nombre.");
		} else Message(playerid, COLOR_RED2, "¡Debes estar cerca de tu negocio para vernderlo!");
	    return 1;
	}
	zcmd(sganancias, playerid, params[])
	{
	    new string[128], bid = PlayerInfo[playerid][pPbizzkey];
	    if(PlayerInfo[playerid][pPbizzkey] == 9999) return Message(playerid, COLOR_RED, "No tienes un negocio.");
	    if(PlayerToPoint(3.0, playerid, BizzInfo[bid][bEntrancex],BizzInfo[bid][bEntrancey],BizzInfo[bid][bEntrancez]))
		{
		    if(!sscanf(params,"d",params[0])){
				if(params[0] < 1 || params[0] > BizzInfo[bid][bTill]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
		    	if(PlayerInfo[playerid][pPbizzkey] != 9999 && strcmp(PlayerName(playerid), BizzInfo[bid][bOwner], true) == 0)
				{
				
			    	Earn(playerid, params[0]);
			    	format(string, sizeof(string), "Has retirado %d$ de la caja fuerte de tu negocio.", params[0]);
			    	Message(playerid, COLOR_GRAD4, string);
	            	BizzInfo[bid][bTill] -= params[0];
	        	} else Message(playerid, COLOR_GRAD4, "Este negocio no está a tu nombre.");
       		} else Message(playerid, COLOR_GRAD2, "Utilize: /sganancias <Cantidad>");
  		} else Message(playerid, COLOR_GRAD4, "¡Debes estar cerca de tu negocio para retirar dinero de la caja!");
		return 1;
  	}
  	zcmd(binfo, playerid, params[])
  	{
  	    new string[128];
  	    for(new b = 0; b < sizeof(BizzInfo); b++)
		{
		    if(PlayerToPoint(3.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
			{
		        if(BizzInfo[b][bOwned] == 0)
                {
		        	Message(playerid, 0xAAAAFFFF, "- Negocio en Venta - Información");
		        	format(string, sizeof(string), "Nombre: %s", BizzInfo[b][bName]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Valor: %d   -   Nivel: %d", BizzInfo[b][bBuyPrice],BizzInfo[b][bLevelNeeded]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Negocio ID: %d", b);
			        Message(playerid, COLOR_WHITE, string);
			        Message(playerid, AMARILLO_ADMIN, "- Utiliza /comprarnegocio, para comprar este negocio.");
			        return 1;
				}
				if(PlayerInfo[playerid][pPbizzkey] == b)
    			{
				    Message(playerid, 0xAAAAFFFF, "- Propiedad Privada -");
        			format(string, sizeof(string), "Nombre: %s", BizzInfo[b][bName]);
		        	Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Valor: %d   -   Nivel: %d", BizzInfo[b][bBuyPrice],BizzInfo[b][bLevelNeeded]);
			        Message(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "Ganancias: %d", BizzInfo[b][bTill]);
			        Message(playerid, COLOR_WHITE, string);
			        return 1;
				} else Message(playerid, COLOR_GRAD2, "No hay información disponible para este negocio.");
			}
		}
		return 1;
	}
	zcmd(extorcion, playerid, params[]){
	    new string[128], bkey = PlayerInfo[playerid][pPbizzkey];
	    if(PlayerInfo[playerid][pPbizzkey] == 9999) return Message(playerid, COLOR_RED2, "¡No tienes un negocio!");
		if(!sscanf(params,"u",params[0])){
		    if(PlayerToPoint(4.0, playerid, BizzInfo[bkey][bEntrancex], BizzInfo[bkey][bEntrancey], BizzInfo[bkey][bEntrancez])){
		        if(IsPlayerConnected(params[0])){
		            if(params[0] != playerid){
		       	 		if(ProxDetectorS(5.0, playerid, params[0])){
							if(strcmp("Nadie", BizzInfo[bkey][bExtortion], true) == 0){
            	    			strmid(BizzInfo[bkey][bExtortion], PlayerName(params[0]), 0, strlen(PlayerName(params[0])), 255);
								format(string, sizeof(string), "Desde ahora {FF4FD4}%s {FFFFFF}será el extorcionista de tu negocio.", PlayerName(params[0]));
								Message(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "%s te ha puesto como extorcionista de su negocio, ahora puedes usar {FF4FD4}/recaudar.", PlayerName(playerid));
								Message(params[0], COLOR_WHITE, string);
								OnBizzTextdrawUpdate(bkey);
								UpdateBizz();
				        	} else Message(playerid, COLOR_GRAD2, "* Tu negocio ya tiene un extorcionista, primero usa /qextorcion.");
                        } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				   	} else Message(playerid, COLOR_GRAD2, "¡No te puedes poner como extorcionista tu mismo!");
  				} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
			} else Message(playerid, COLOR_GRAD2, "¡Debes estar cerca de tu negocio!");
    	} else Message(playerid, COLOR_GRAD2, "Utilize: /extorcion <PlayerID>");
	    return 1;
	}
	zcmd(qextorcion, playerid, params[]){
	    new string[128], bkey = PlayerInfo[playerid][pPbizzkey];
	    if(PlayerInfo[playerid][pPbizzkey] == 9999) return Message(playerid, COLOR_RED2, "¡No tienes un negocio!");
	    if(!sscanf(params,"u",params[0])){
	        if(PlayerToPoint(4.0, playerid, BizzInfo[bkey][bEntrancex], BizzInfo[bkey][bEntrancey], BizzInfo[bkey][bEntrancez])){
	            if(IsPlayerConnected(params[0])){
                    if(params[0] != playerid){
                        if(ProxDetectorS(5.0, playerid, params[0])){
                            if(strcmp(PlayerName(params[0]), BizzInfo[bkey][bExtortion], true) == 0){
                                format(string, sizeof(string), "{FFFFFF}%s ha dedicido quitarte como extorcionista de su negocio.\n\t¿Estás de acuerdo con esta decisión?",PlayerName(playerid));
                                ShowPlayerDialog(params[0], QUIT_EXTORTION, DIALOG_STYLE_MSGBOX, "Confirmacion Negocios", string, "Si", "No");
                                Message(playerid, COLOR_GRAD4, "* La solicitud fue enviada, espera su respuesta.");
                                QuitExtortion[params[0]] = bkey;
								ExtortionID[params[0]] = playerid;
                            } else Message(playerid, COLOR_GRAD2, "* Esa persona no es extorcionista de tu negocio.");
                        } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
                    } else Message(playerid, COLOR_GRAD2, "¡No puedes usar este comando contigo mismo!");
	            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
			} else Message(playerid, COLOR_GRAD2, "¡Debes estar cerca de tu negocio!");
	    } else Message(playerid, COLOR_GRAD2, "Utilize: /qextorcion <PlayerID>");
	    return 1;
	}
	zcmd(recaudar, playerid, params[])
	{
		for(new b = 0; b < sizeof(BizzInfo); b++)
		{
		    if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
			{
	            if(strcmp(PlayerName(playerid), BizzInfo[b][bExtortion], true) == 0){
	                if(BizzInfo[b][bTillEx] > 0){
	                	new string[128];
	                	Earn(playerid, BizzInfo[b][bTillEx]);
						format(string, sizeof(string), "Has recaudado {DC092F}%d$ {FFFFFF}de este negocio del cual eres extorcionista.", BizzInfo[b][bTillEx]);
						Message(playerid, COLOR_WHITE, string);
						BizzInfo[b][bTillEx] = 0;
					} else Message(playerid, COLOR_GRAD2, "* No hay dinero para recaudar.");
				}
			}
		}
		return 1;
	}
    //zcmd [Sell Adm]
    zcmd(venderauto, playerid, params[]){
	    new vehid = GetPlayerVehicleID(playerid);
	    if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
     	if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
       	if(!IsAnOwnableCar(vehid)) return Message(playerid, COLOR_GRAD2, "¡No es un vehículo de venta!");
			new Float:x,Float:y,Float:z,Float:a;
			CarInfo[vehid][cOwned] = 0;
			strmid(CarInfo[vehid][cOwner], "Concesionario", 0, strlen("Concesionario"), 999);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			Message(playerid, COLOR_GRAD2, "¡Has vendido el vehículo!");
			GetVehiclePos(vehid, x, y, z);
			GetVehicleZAngle(vehid, a);
			CarInfo[vehid][cLocationx] = x;
			CarInfo[vehid][cLocationy] = y;
			CarInfo[vehid][cLocationz] = z;
			CarInfo[vehid][cAngle] = a;
			CarInfo[vehid][cBattery] = 0;
			CarInfo[vehid][cGas] = 0;
			CarInfo[vehid][cAlarm] = 0;
			CarInfo[vehid][cVehTime] = 1999999999;
			CarInfo[vehid][cLock] = 0;
			CarInfo[vehid][cSpoiler] = 0;
			CarInfo[vehid][cHood] = 0;
			CarInfo[vehid][cRoof] = 0;
			CarInfo[vehid][cSideskirt] = 0;
			CarInfo[vehid][cNitro] = 0;
			CarInfo[vehid][cLamps] = 0;
			CarInfo[vehid][cExhaust] = 0;
			CarInfo[vehid][cWheel] = 0;
			CarInfo[vehid][cHydraulics] = 0;
			CarInfo[vehid][cPaintjob] = 0;
			CarInfo[vehid][cFrontBumper] = 0;
			CarInfo[vehid][cVents] = 0;
			CarInfo[vehid][cEmbargo] = 0;
			CarInfo[vehid][cMulta] = 0;
			SetVehicleVirtualWorld(vehid, 0);
			strmid(CarInfo[vehid][cPlate], "For Sale", 0, strlen("For Sale"), 999);
			SetVehicleNumberPlate(vehid,CarInfo[vehid][cPlate]);
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
			UpdateCars();
			return 1;
 	}
 	zcmd(vendercasa, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0]))
        {
        	new string[128];
            if(params[0] >= MAX_HOUSES || params[0] < 0) return Message(playerid, COLOR_GRAD2, "ID incorrecto.");
            else{
				SellHouse(playerid, params[0]);
            	format(string, sizeof(string), "Propiedad %d vendida.", params[0]);
				Message(playerid, COLOR_GRAD2, string);
			}
        } else Message(playerid, COLOR_GRAD2, "Utilize: /asellhouse <HouseID>");
        return 1;
    }
    zcmd(vendernegocio, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0]))
        {
        	new string[128];
            if(params[0] >= MAX_BIZZ || params[0] < 0) return Message(playerid, COLOR_GRAD2, "ID incorrecto.");
            else{
				SellBizz(params[0]);
            	format(string, sizeof(string), "Negocio %d vendido.", params[0]);
				Message(playerid, COLOR_GRAD2, string);
			}
        } else Message(playerid, COLOR_GRAD2, "Utilize: /asellbizz <BizzID>");
        return 1;
   	}
    zcmd(hitman, playerid, params[])
    {
        if(!PlayerToPoint(5.0, playerid, 1425.2998,-1291.2107,13.5560)) return Message(playerid, COLOR_GRAD2, "¡No estás en el lugar!");
        if(Hitman(playerid)) return Message(playerid, COLOR_GRAD2, "No puedes contratar siendo un hitman!");
    	if(!sscanf(params, "ud", params[0], params[1]))
    	{
			if(params[1] < 5000 || params[1] > 99999) return Message(playerid, COLOR_GRAD2, "Máx: 99,999$ || Mín: 5000$");
			if(IsPlayerConnected(params[0]))
			{
			    if(Hitman(params[0])) return Message(playerid, COLOR_GRAD2, "¡No puedes exterminar a un hitman!");
				if (PlayerInfo[playerid][pAccount] > params[1])
				if(GetPlayerMoney(playerid) > 5000)
				{
				    new string[128];
					Bought(playerid, params[1]);
					PlayerInfo[params[0]][pHead] += params[1];
					SendRadioMessage(23, TEAM_RADIO_COLOR, "** Atención - Hay un objetivo nuevo! **");
					format(string, sizeof(string), "[Cliente: %s] - [Objectivo: %s] - [Recompensa: %d$]",PlayerName(playerid), PlayerName(params[0]), params[1], PlayerInfo[params[0]][pHead]);
					SendRadioMessage(23, TEAM_RADIO_COLOR, string);
					format(string, sizeof(string), "* ¡%s está ahora en la lista de objetivos con una recompensa de %d!",PlayerName(params[0]), PlayerInfo[params[0]][pHead]);
					Message(playerid, COLOR_WHITE, string);
				}
				else Message(playerid, COLOR_RED2, "Transacción inválida.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
    	}
    	else Message(playerid, COLOR_GRAD2, "Utilize: /hitman <PlayerID> <recompensa>");
        return 1;
    }
	zcmd(disfraz, playerid, params[])
	{
        if(Hitman(playerid)){
	    	if(PlayerToPoint(5, playerid, -282.7598,-2174.3972,28.6580)){
            	ShowPlayerDialog(playerid, DIALOG_HIT, DIALOG_STYLE_INPUT, "> Disfraz <", "{78F700}Escribe el ID del que desees\n{FFFFFF}Skin's libres para hitman's.\nTIP <1 - 299>\n", "Ok", "Salir");
			}
		}
		else Message(playerid, COLOR_GRAD2, " No eres hitman.");
		return 1;
	}
	zcmd(amascara, playerid, params[]){
        if(PlayerInfo[playerid][pMask] == 1) return Message(playerid, COLOR_GRAD2, " Ya tienes una máscara.");
        if(Hitman(playerid)){
	    	if(PlayerToPoint(5, playerid, -282.7598,-2174.3972,28.6580)){
            	Message(playerid, COLOR_LIGHTBLUE, "Cogiste una máscara, /mascara para ponertela.");
            	PlayerInfo[playerid][pMask] = 1;
			}
		}
		else Message(playerid, COLOR_GRAD2, " No eres hitman.");
		return 1;
	}
	zcmd(radio, playerid, params[]){
        if(OnDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No estás en servicio!");
        if(!RadioOn[playerid]){
			RadioOn[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "Prendiste tu radio.");
		}
		else{
			RadioOn[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "Apagaste tu radio.");
		}
        return 1;
    }
    zcmd(dutytaxi, playerid, params[]){
        new string[128];
        if(PlayerInfo[playerid][pJob] == 9){
        	if(TransportDuty[playerid] == 0){
				TransportDuty[playerid] = 1;
				format(string, sizeof(string), "** El taxista %s está en servicio.", PlayerName(playerid));
				OOCNews(COLOR_DUTY, string);
 		    	Message(playerid, COLOR_WHITE, "* Recibirás llamadas, estás de servicio.");
      		}
      		else{
				TransportDuty[playerid] = 0;
 		    	Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no recibirás llamadas.");
     		}
  		}else Message(playerid, COLOR_GRAD2, "¡No eres taxista!");
  		return 1;
	}
 	zcmd(duty, playerid, params[]){
        new string[128];
        if(IsACop(playerid)){
            if(PlayerToPoint(10, playerid,255.3,77.4,1003.6) || PlayerToPoint(12,playerid,761.7038,-382.5090,1003.3300) || PlayerToPoint(10,playerid,246.4590,125.8930,1003.2188) || PlayerToPoint(10,playerid,197.0950,168.6891,1003.0234) || PlayerToPoint(10,playerid,222.6635,186.8341,1003.0313) || PlayerToPoint(10, playerid, 1566.2216,-1672.1409,1723.1050)){
                if(OnDuty[playerid]== 0){
        		    format(string, sizeof(string), "* %s coge su placa y su radio.", PlayerName(playerid));
        		    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		    OnDuty[playerid] = 1;
        		}
        		else{
        		    format(string, sizeof(string), "* %s deja su placa y su radio.", PlayerName(playerid));
        		    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		    ResetPlayerWeapons(playerid);
        		    OnDuty[playerid] = 0;
        		}
            }
            else    Message(playerid, COLOR_GRAD2, "No estás en el lugar adecuado.");
        }
  		else if(Team_SAMUR(playerid)){
            if(OnDuty[playerid]== 0){
   				OnDuty[playerid] = 1;
 		    	Message(playerid, COLOR_WHITE, "* Recibirás llamadas, estás de servicio.");
      		}
      		else{
    			OnDuty[playerid] = 0;
 		    	Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no recibirás llamadas.");
      		}
        }
        else if(IsAnInstructor(playerid)){
            if(OnDuty[playerid]== 0)
      		{
      		    	OnDuty[playerid] = 1;
        		    format(string, sizeof(string), "{00E45B}* Licenciero %s está en servicio {FFFFFF}(Tlf. %d)", PlayerName(playerid), PlayerInfo[playerid][pPnumber]);
                    OOCNews(-1,string);
    		}
      		else{
        		    OnDuty[playerid] = 0;
        		    Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no recibirás llamadas.");
      		}
        }
        else if(Team_Mecanicos(playerid)){
            if(OnDuty[playerid]== 0)
      		{
      		    	OnDuty[playerid] = 1;
        		    format(string, sizeof(string), "{00E45B}* Mecánico %s está en servicio, venga al taller o llame al {FFFFFF}(Tlf. %d)", PlayerName(playerid), PlayerInfo[playerid][pPnumber]);
                    OOCNews(-1,string);
    		}
      		else{
        		    OnDuty[playerid] = 0;
        		    Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no recibirás llamadas.");
      		}
        }
        else if(Gobierno(playerid) || Journalist(playerid) || Hitman(playerid)){
			if(OnDuty[playerid]== 0)
			{
			        OnDuty[playerid] = 1;
					Message(playerid, COLOR_WHITE, "* Estas de servicio, puedes encender tu radio.");
			}
			else{
			        OnDuty[playerid] = 0;
			        Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no puedes usar tu radio.");
   			}
		}
        else if(IsACorteJudicial(playerid)){
			if(OnDuty[playerid]== 0)
			{
			        OnDuty[playerid] = 1;
					Message(playerid, COLOR_WHITE, "* Estas de servicio, puedes encender tu radio.");
			}
			else{
			        OnDuty[playerid] = 0;
			        Message(playerid, COLOR_WHITE, "* Terminaste tu servicio, ya no puedes usar tu radio.");
   			}
		}
      	else Message(playerid, COLOR_GRAD2, "¡No puedes usar este comando!");
        return 1;
    }
    // Walkie Talkie
    zcmd(walkie, playerid, params[]){
        if(!sscanf(params, "s[32]", params[0])){
			if(PlayerInfo[playerid][pWalkie] == 0)    return Message(playerid, COLOR_GRAD2, "No tiene un Walkie Talkie.");
            if(strcmp(params[0],"prender",true) == 0){
			    if(!RadioOn[playerid]){
			    	return RadioOn[playerid] = 1,
			    	PFrecuencia[playerid] = 0,
				    Message(playerid, COLOR_GREEN, "* Walkie-Talkie encendido.");
			    }
				else Message(playerid, COLOR_GRAD2, "* Ya está prendido.");
			}
			else if(strcmp(params[0],"apagar",true) == 0){
			    if(RadioOn[playerid]){
			    	return RadioOn[playerid] = 0,
			    	PFrecuencia[playerid] = 0,
			    	Message(playerid, COLOR_RED, "* Walkie-Talkie fue apagado.");
			    }
				else Message(playerid, COLOR_GRAD2, "* Ya está apagado.");
			}
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /walkie <prender, apagar>");
        return 1;
    }
    zcmd(frecuencia, playerid, params[]){
        if(PlayerInfo[playerid][pWalkie] > 0 && RadioOn[playerid]){
            new string[128];
            if(!sscanf(params, "i", params[0])){
					if(params[0] < 1 || params[0] > 9999)
						return Message(playerid, TEAM_RADIO_COLOR, "* Conéctese a un canal entre '1' y '9999'.");
						PFrecuencia[playerid] = params[0],
						format(string, sizeof string, "* Ahora tu frecuencia es: '%d'.",PFrecuencia[playerid]),
						Message(playerid, COLOR_GREEN, string);
            }
            else Message(playerid, COLOR_GRAD2, "Utilize: /frecuencia <Nro> entre 1 - 9999");
        }
        else Message(playerid, COLOR_GRAD2, "* No tienes una radio con la que hablar / o está apagada.");
        return 1;
    }
    zcmd(wt, playerid, params[])
	{
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!RadioOn[playerid]) return Message(playerid, COLOR_GRAD2, "* Radio apagada. Utilize: '/walkie prender'");
       	if(PFrecuencia[playerid] == 0) return Message(playerid, COLOR_GRAD2, "* No estás en ninguna frecuencia. Utilize: '/frecuencia'");
		if(!sscanf(params, "s[128]", params[0]))
		{
		    new string[128];
			format(string, sizeof string, "* (F#%d) %s: %s", PFrecuencia[playerid], PlayerName(playerid), params[0]);
			RadioMsg(PFrecuencia[playerid], string);
			format(string, sizeof(string), "* (WT) %s: %s", PlayerName(playerid), params[0]);
            ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /wt <Mensaje>");
        return 1;
    }
	zcmd(d, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(RadioOn[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡Tu radio está apagada!");
        if(!sscanf(params, "s[128]", params[0]))
        {
			if(IsACop(playerid) || Team_SAMUR(playerid) || Gobierno(playerid) || IsACorteJudicial(playerid))
			{
			    new string[128];
	    		format(string, sizeof(string), "** %s %s: %s **", PlayerStatInfo[playerid][4], PlayerName(playerid), params[0]);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(16, COLOR_ALLDEPT, string);
				SendRadioMessage(24, COLOR_ALLDEPT, string);
				SendRadioMessage(25, COLOR_ALLDEPT, string);
				format(string, sizeof(string), "* %s habla por su radio.", PlayerName(playerid));
     			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "¡No eres parte de un equipo!");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /d <Texto>");
        return 1;
    }
	zcmd(f, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            if(PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pMember] == 0) 	return Message(playerid, COLOR_GRAD2, "No perteneces a ninguna facción.");
            new string[128];
    		format(string, sizeof(string), "** (( %s %s: %s )) **", PlayerStatInfo[playerid][4], PlayerName(playerid), params[0]);
		    if(PlayerInfo[playerid][pLeader] > 0) 	SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00E5FFDC, string);
	   		else 									SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: (/f)accion <texto>");
        return 1;
    }
    zcmd(r, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!FacRadio(playerid)) return Message(playerid, COLOR_GRAD2, "¡Tu facción no tiene una radio!");
        if(RadioOn[playerid] == 0) return Message(playerid, COLOR_GRAD2, " Tu radio está apagada.");
        if(!sscanf(params, "s[128]", params[0]))
		{
			new string[128];
			format(string, sizeof string, "** %s %s: %s", PlayerStatInfo[playerid][4], PlayerName(playerid), params[0]);
			if(PlayerInfo[playerid][pLeader] > 0) 	SendRadioMessage(PlayerInfo[playerid][pLeader], TEAM_RADIO_COLOR, string);
	   		else 									SendRadioMessage(PlayerInfo[playerid][pMember], TEAM_RADIO_COLOR, string);
	   		format(string, sizeof(string), "* %s habla por su radio.", PlayerName(playerid));
     		ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /r <Texto>");
        return 1;
    }
	zcmd(contratar, playerid, params[])
    {
        if(PlayerInfo[playerid][pLeader] > 0)
    	{
        	if(!sscanf(params, "u", params[0]))
        	{
        	    if(IsPlayerConnected(params[0]))
        	    {
        	        if(ProxDetectorS(8.0, playerid, params[0]))
	            	{
	            	    if(params[0] == playerid) 		return	Message(playerid, COLOR_GRAD2, "¡No puedes invitarte ati mismo!");
	            	    if(Facturing[params[0]] > 0)    return 	Message(playerid, COLOR_GRAD2, "Este jugador está en otra tarea, espera.");
	            	    if(PlayerInfo[params[0]][pMember] > 0 || PlayerInfo[params[0]][pLeader] > 0) return 	Message(playerid, COLOR_GRAD2, "Este jugador ya tiene facción.");

	            	    new string[186];
	            	    switch(PlayerInfo[playerid][pLeader])
	            	    {
						    case 1: 	ReqF_Name[params[0]] = "Policía Local LS";
						    case 2:     ReqF_Name[params[0]] = "Piratas Del Asfalto";
						    case 3: 	ReqF_Name[params[0]] = "San Andreas Ejercito M.";
						    case 4: 	ReqF_Name[params[0]] = "LS Medical Center";
						    case 5:     ReqF_Name[params[0]] = "Ballas"
						    case 6: 	ReqF_Name[params[0]] = "Compañia de Taxi LS";
						    case 7: 	ReqF_Name[params[0]] = "Mecánico Los Santos";
						    case 8: 	ReqF_Name[params[0]] = "Empresa de Investigacion";
						    case 9: 	ReqF_Name[params[0]] = "Groove Street";
						    case 10: 	ReqF_Name[params[0]] = "La Hermandad";
						    case 11:    ReqF_Name[params[0]] = "Latin Kings";
						    case 12:    ReqF_Name[params[0]] = "La Cosa Nostra";
						    case 13:    ReqF_Name[params[0]] = "Yakuza";
						    case 14:    ReqF_Name[params[0]] = "Família Korsakova";
						    case 15:    ReqF_Name[params[0]] = "Compañia de Licencias";
						    case 16:    ReqF_Name[params[0]] = "Gobierno";
						    case 17:    ReqF_Name[params[0]] = "CNN";
						    case 19:    ReqF_Name[params[0]] = "Narcotraficantes";
						    case 23:    ReqF_Name[params[0]] = "Hitman Agency";
						    case 24:    ReqF_Name[params[0]] = "FBI";
						    case 25:    ReqF_Name[params[0]] = "Corte Judicial";
						}
						ReqF_Faction[params[0]] = PlayerInfo[playerid][pLeader];
 						Facturing[params[0]] = 1;
						format(string, sizeof(string), "\t\t----- OFERTA DE TRABAJO -----\n\n\t%s te ofrece contrato a la facción %s\n\t¿ Quieres aceptarlo y pertenecer a esta facción ?", PlayerName(playerid), ReqF_Name[params[0]]);
						ShowPlayerDialog(params[0], REQF_ACCEPT, DIALOG_STYLE_MSGBOX, "Contrato de Trabajo", string, "Aceptar", "Rechazar");
	            	}
	            	else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        	    }
        	    else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        	}
        	else Message(playerid, COLOR_GRAD2, "Utilize: /contratar <PlayerID>");
		 }
		 else Message(playerid, COLOR_GRAD2, "Usted no es lider de facción.");
        return 1;
	}
	zcmd(despedir, playerid, params[])
    {
        if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "Usted no es lider de facción.");
		if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /despedir <PlayerID>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        if(PlayerInfo[playerid][pLeader] == PlayerInfo[params[0]][pMember])
		{
			new string[80];
			format(string, sizeof(string), "  Tu líder %s te ha despedido", PlayerName(playerid));
			Message(params[0], COLOR_RED2, "--- [ Contrato de Trabajo Terminado ] --");
			Message(params[0], COLOR_WHITE, string);
			format(string, sizeof(string), "  Despediste a %s", PlayerName(params[0]));
			Message(playerid, COLOR_WHITE, string);
			PlayerInfo[params[0]][pMember] = 0;
			PlayerInfo[params[0]][pRank] = 0;
			UpdatePlayerStat(params[0]);
			SetPlayerSkin(params[0], 299);
		} else Message(playerid, COLOR_GRAD2, "El jugador no pertenece a tu facción.");
        return 1;
    }
    zcmd(recibirstats, playerid, params[]){
		if(PlayerInfo[playerid][pLevel] != 1) return SendClientMessage(playerid, -1, "Este comando es solo para nuevos usuarios.");
			PlayerInfo[playerid][pLevel] = 2;
			PlayerInfo[playerid][pAccount] = 12000;
			SendClientMessage(playerid, -1, "{575A64}Hermandad Zero RP: ¡Bienvenido! acabas de recibir LVL: 2 y se a añadido 12.000 $ a tu cuenta bancaria. ");
	return 1;
	}
	zcmd(giverank, playerid, params[])
    {
        if(!sscanf(params, "ui", params[0], params[1]))
		{
            if(params[1] > 8 || params[1] < 0) { SendClientMessage(playerid, COLOR_GREY, " No hay rango tan alto!"); return 1; }
		    if(PlayerInfo[playerid][pLeader] == 0) return Message(playerid, COLOR_GRAD2, "No eres líder de facción.");
		    if(IsPlayerConnected(params[0]))
		    {
		        if(PlayerInfo[params[0]][pLeader] > 0) return Message(playerid, COLOR_GRAD2, "¡No puedes asignar rango a un líder!");
          		if(PlayerInfo[playerid][pLeader] == PlayerInfo[params[0]][pMember])
            	{
            	    new string[128];
            	    PlayerInfo[params[0]][pRank] = params[1];
            	    UpdatePlayerStat(params[0]);
            	    format(string, sizeof(string), "Líder %s asignó rango %d al miembro %s", PlayerName(playerid), PlayerInfo[params[0]][pRank], PlayerName(params[0]));
					Message(params[0], COLOR_LIGHTBLUE, string);
					Message(playerid, COLOR_LIGHTBLUE, string);
            	}
            	else Message(playerid, COLOR_GRAD2, "¡Este miembro no es de tu facción!");
		    }
		    else Message(playerid, COLOR_GREY, "Jugado desconectado.");
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /giverank <PlayerID> <Rango>");
        return 1;
    }
	zcmd(equipo, playerid, params[]){
        if(Team_LSPD(playerid)){
	    	if(PlayerToPoint(10, playerid, 761.7038,-382.5090,1003.3300)){
            	new eq[] = "Cadete\nAgente\nMotorista\nAntidisturbio\nInspector\nPolicía Científica\nTraje de Comisario\nChaleco + Salud\nPistola + Porra\nRopa Normal";
            	ShowPlayerDialog(playerid,EQUIPO_DIALOG,DIALOG_STYLE_LIST,">> Equipo Policía <<",eq,"Equipar","Cancelar");
			}
		}
		if(Team_FBI(playerid)){
	    	if(PlayerToPoint(5, playerid, 222.3244,186.7450,1003.0313)){
            	new eq[] = "Equipo FBI\nEquipo FBI Misiones\nCriminalista\nEncubierto 1\nEncubierto 2\nEncubierto 3\nChaleco + Salud\nRopa Normal";
            	ShowPlayerDialog(playerid,EQUIPO_FBI,DIALOG_STYLE_LIST,">> Equipo FBI <<",eq,"Equipar","Cancelar");
			}
		}
        if(Team_NG(playerid)){
	    	if(PlayerToPoint(20, playerid, 258.3126,2028.1844,-6.7623) || PlayerToPoint(5.0, playerid, 243.0874,2030.2115,-6.7553)){
            	new eq1[] = "Entrenamiento\nSoldado\nFrancotirador\nUS Army Liviana\nUS Army Pesada\nNormal\nChaleco+Salud";
            	ShowPlayerDialog(playerid,EQUIPO_NG,DIALOG_STYLE_LIST,">> Equipo SAEM <<",eq1,"Equipar","Cancelar");
			}
		}
		else if(Team_SAMUR(playerid)){
			if(PlayerToPoint(5, playerid, -2639.9487,535.6438,51.6134)){
			    new eq[] = "Traje Doctor\nTraje Médico Blanco\nTraje Médico Azul\nTraje Médico Verde\nIndumentario Normal";
			    ShowPlayerDialog(playerid,EQUIPO_DIALOG4,DIALOG_STYLE_LIST,">> Equipo SAMUR <<",eq,"Equipar","Cancelar");
			}
		}
        else if(Team_Mecanicos(playerid)){
			if(PlayerToPoint(5, playerid, 1615.2629,-2160.2664,13.6281))
			{   new mec[] = "Ayudante\nMecanico\nIngeniero\nDirector\nRopa Normal";
			    ShowPlayerDialog(playerid,EQUIPO_MECANICO,DIALOG_STYLE_LIST,">> Equipo Mecánico <<",mec,"Equipar","Cancelar");
   			}
		}
		else if(Gobierno(playerid)){
		    if(PlayerToPoint(5, playerid, 366.6122,158.6483,1008.3828)){
		        new gob[] = "Equipo Guardaespaldas\nRopa Normal";
		        ShowPlayerDialog(playerid,EQUIPO_GOBIERNO,DIALOG_STYLE_LIST,">> Equipo Gobierno <<",gob,"Equipar","Cancelar");
      		}
		}
        else if(Hitman(playerid)){
            if(PlayerToPoint(5, playerid, -282.7598,-2174.3972,28.6580)){
                new hit[] = "Pistol SD + Cuchillo\nSniper + Cuchillo\nD. Eagle + Cuchillo\nDejar Armas";
                ShowPlayerDialog(playerid,EQUIPO_HITMAN,DIALOG_STYLE_LIST,">> Equipo Hitman <<",hit,"Equipar","Cancelar");
            }
        }
         else if(Team_CorteJudicial(playerid)){
            if(PlayerToPoint(5, playerid, 1425.7179,-1460.4479,1616.3573)){
                new gob[] = "Abogado\nFiscal\nJuez\nJuez Supremo";
                ShowPlayerDialog(playerid,EQUIPO_CORTEJUDICIAL,DIALOG_STYLE_LIST,">> Equipo Corte Judicial <<",gob,"Equipar","Cancelar");
            }
        }
        else if(PlayerInfo[playerid][pJob] == 9){
            if(PlayerToPoint(5, playerid, -1825.4268,137.4265,18.9315)){
                new eq[] = "Traje I\nTraje II\nTraje III\nIndumentario Normal";
                ShowPlayerDialog(playerid,EQUIPO_DIALOG5,DIALOG_STYLE_LIST,">> Equipo Taxi <<",eq,"Equipar","Cancelar");
            }
        }
	    return 1;
	}
	zcmd(moneda, playerid, params[])
	{
	    new coin = random(2)+1, string[90], coinname[10];
	    if(coin == 1) 	coinname = "cara";
	    else 			coinname = "cruz";
	    format(string, sizeof(string), "*** %s lanza una moneda al aire y cae %s.", PlayerName(playerid), coinname);
	    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    return 1;
	}
	zcmd(ven, playerid, params[])
	{
	    if(IsPlayerInAnyVehicle(playerid))
		{
			new string[128];
            if(VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
	        {
		       VehicleWindows[GetPlayerVehicleID(playerid)] = 1;
		       format(string, sizeof(string), "* %s baja la ventana.", PlayerName(playerid));
		       ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       return 1;
	        }
            else if(VehicleWindows[GetPlayerVehicleID(playerid)] == 1)
	        {
		       VehicleWindows[GetPlayerVehicleID(playerid)] = 0;
		       format(string, sizeof(string), "* %s sube la ventanilla.", PlayerName(playerid));
		       ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		       return 1;
	        }
	    }
	    else Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
        return 1;
	}
    zcmd(limpiar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 0 && IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "ui", params[0], params[1]))
        {
            if(IsPlayerConnected(params[0]))
		  	{
		  	    new string[128];
				switch(params[1])
				{
				    case 0:
				    {
				        strmid(PlayerInfo[params[0]][pAntecedente1], "None", 0, strlen("None"), 64);
           				strmid(PlayerInfo[params[0]][pAntecedente2], "None", 0, strlen("None"), 64);
              			strmid(PlayerInfo[params[0]][pAntecedente3], "None", 0, strlen("None"), 64);
                		PlayerInfo[params[0]][pBusqueda] = 0;
                 		SetPlayerWantedLevel(params[0], 0);
                  		format(string, sizeof(string), "* %s limpió los antecedentes y la búsqueda de %s", PlayerName(playerid), PlayerName(params[0]));
                   		Message(playerid, COLOR_GREEN, string);
                    	Message(params[0], COLOR_GREEN, string);
				    }
				    case 1:
				    {
				        if(strcmp("None", PlayerInfo[params[0]][pAntecedente1], true) == 0) return Message(playerid, COLOR_GRAD2, "Slot#1 Sin antecedentes!");
            			else
               			{
                 			strmid(PlayerInfo[params[0]][pAntecedente1], "None", 0, strlen("None"), 64);
                   			format(string, sizeof(string), "* %s limpió el antecedente 1º de %s", PlayerName(playerid), PlayerName(params[0]));
                     		Message(playerid, COLOR_GREEN, string);
                      		Message(params[0], COLOR_GREEN, string);
                  		}
				    }
				    case 2:
				    {
				        if(strcmp("None", PlayerInfo[params[0]][pAntecedente2], true) == 0) return Message(playerid, COLOR_GRAD2, "Slot#2 Sin antecedentes!");
            			else
               			{
                 			strmid(PlayerInfo[params[0]][pAntecedente2], "None", 0, strlen("None"), 64);
                   			format(string, sizeof(string), "* %s limpió el antecedente 2º de %s", PlayerName(playerid), PlayerName(params[0]));
                     		Message(playerid, COLOR_GREEN, string);
                      		Message(params[0], COLOR_GREEN, string);
                  		}
				    }
				    case 3:
				    {
				        if(strcmp("None", PlayerInfo[params[0]][pAntecedente3], true) == 0) return Message(playerid, COLOR_GRAD2, "Slot#3 Sin antecedentes!");
            			else
               			{
                 			strmid(PlayerInfo[params[0]][pAntecedente3], "None", 0, strlen("None"), 64);
                   			format(string, sizeof(string), "* %s limpió el antecedente 3º de %s", PlayerName(playerid), PlayerName(params[0]));
                     		Message(playerid, COLOR_GREEN, string);
                      		Message(params[0], COLOR_GREEN, string);
                  		}
				    }
				    case 4:
				    {
				        PlayerInfo[params[0]][pBusqueda] = 0;
           				SetPlayerWantedLevel(playerid, 0);
              			format(string, sizeof(string), "* %s canceló el nivel de búsqueda de %s", PlayerName(playerid), PlayerName(params[0]));
                		Message(playerid, COLOR_GREEN, string);
                 		Message(params[0], COLOR_GREEN, string);
				    }
				}
		  	}
		  	else Message(playerid, COLOR_GRAD2, "Error de ID - Jugador OffLine.");
        }
        else
        {
			ClearChatbox(playerid, 5);
            Message(playerid, COLOR_GRAD2, "Utilize: /limpiar <ID> <item> 0 [Todos] 1 [Antecedente] 2 [Antecedente] 3 [Antecedente] 4 [N. Busqueda]");
        }
        return 1;
    }
	zcmd(ant, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 0) return  Message(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "us[64]", params[0], params[1]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if(StringOther(playerid, params[1]) == 1)
            	{
	                if (IsACop(params[0])) return Message(playerid, COLOR_GRAD2, "No puedes acusar a un policía.");
	                if(strcmp("None", PlayerInfo[params[0]][pAntecedente1], true) == 0 || strcmp("None", PlayerInfo[params[0]][pAntecedente2], true) == 0 || strcmp("None", PlayerInfo[params[0]][pAntecedente3], true) == 0)
	    			{
							if(strcmp("None", PlayerInfo[params[0]][pAntecedente1], true) == 0)  	strmid(PlayerInfo[params[0]][pAntecedente1], params[1], 0, strlen(params[1]), 64);
							else if(strcmp("None", PlayerInfo[params[0]][pAntecedente2], true) == 0) strmid(PlayerInfo[params[0]][pAntecedente2], params[1], 0, strlen(params[1]), 64);
							else if(strcmp("None", PlayerInfo[params[0]][pAntecedente3], true) == 0) strmid(PlayerInfo[params[0]][pAntecedente3], params[1], 0, strlen(params[1]), 64);

							new string[128];
							Message(playerid, COLOR_RED,  "_________| Antecedentes Policiales |_________");
							Message(params[0], COLOR_RED, "_________| Antecedentes Policiales |_________");
			    			format(string, sizeof(string), "- %s", PlayerInfo[params[0]][pAntecedente1]);    	Message(playerid, COLOR_YELLOW, string);    Message(params[0], COLOR_YELLOW, string);
						    format(string, sizeof(string), "- %s", PlayerInfo[params[0]][pAntecedente2]);    	Message(playerid, COLOR_YELLOW, string);    Message(params[0], COLOR_YELLOW, string);
						    format(string, sizeof(string), "- %s", PlayerInfo[params[0]][pAntecedente3]);   	Message(playerid, COLOR_YELLOW, string);    Message(params[0], COLOR_YELLOW, string);
						    Message(playerid, COLOR_RED,  "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
							Message(params[0], COLOR_RED, "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
						    format(string, sizeof(string), "* El oficial %s escribe en el historial de %s", PlayerName(playerid), PlayerName(params[0]));
						    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else Message(playerid, COLOR_GRAD2, "Ha alcanzado el límite de Antecedentes");
				}
				else Message(playerid, COLOR_GRAD2, "* Has utilizado carácteres no permitidos.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /ant <PlayerID> <Antecedente>");
        return 1;
    }
	zcmd(expediente, playerid, params[])
	{
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡Primero conectate!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /expediente <PlayerID>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		if(ProxDetectorS(8.0, playerid, params[0]))
		{
		    new string[64];
			Message(params[0], COLOR_GREEN,"______-= Expediente policial =-_______");
            format(string, sizeof(string),"  Nombre: %s", PlayerName(playerid));
            Message(params[0], COLOR_WHITE,string);
			Message(params[0], COLOR_YELLOW2,"  Antecedentes:");
            format(string, sizeof(string), "  - %s", PlayerInfo[playerid][pAntecedente1]);
            Message(params[0], WANTED_COLOR, string);
            format(string, sizeof(string), "  - %s", PlayerInfo[playerid][pAntecedente2]);
   			Message(params[0], WANTED_COLOR, string);
            format(string, sizeof(string), "  - %s", PlayerInfo[playerid][pAntecedente3]);
            Message(params[0], WANTED_COLOR, string);
            Message(params[0], COLOR_GREEN,"_______________________________________");
            format(string, sizeof(string), "* %s le muestra a %s su expediente.", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else Message(playerid, COLOR_GRAD2, "Jugador está lejos de ti.");
		return 1;
	}
   	zcmd(nokear, playerid, params[])
	{
	    if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /nokear <ID>");
        if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, "Usted debe ser mayor al nivel 2.");
		if(KnockedDown[playerid] == 0 || IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0]))
		{
			if(ProxDetectorS(3.0, playerid, params[0]))
			{
				new rands = random(2)+1, string[128];
				format(string, sizeof(string), "* %s agarra una piedra.", PlayerName(playerid));
            	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
            	KnockedDown[playerid] = 100;

            	if(rands == 1)
				{
					ApplyAnimation(params[0], "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
					SetTimerEx("ClearKnock", 60000, false, "i", params[0]);
					SetTimerEx("ClearKnock", 60000, false, "i", playerid);
					KnockedDown[params[0]] = 1;
                    format(string, sizeof(string), "* %s intenta noquear a %s con la piedra y lo consige.", PlayerName(playerid), PlayerName(params[0]));
					ProxDetector(3.0, playerid, string, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
					format(string, sizeof(string), "* %s queda inconsciente.", PlayerName(params[0]));
            		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					format(string, sizeof(string), "* %s intenta noquear a %s con la piedra y le da muy suave.", PlayerName(playerid), PlayerName(params[0]));
					ProxDetector(3.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
				}
			}
			else Message(playerid, COLOR_GRAD2, "El jugador está muy lejos de usted.");
		}
		else Message(playerid, COLOR_GRAD2, "Usted no puede utilizar este comando ahora.");
		return 1;
	}
	//SAEM
 	zcmd(misil, playerid, params[])
	{
	    new Float:M_X, Float:M_Y, Float:M_Z, Float:radius;
	    if(Team_NG(playerid))
	    {
	        if(Misile_Launcher < 3)
	        {
	            new string[128];
		        if(PlayerToPoint(1.0,playerid,2634.9543,-2351.2449,30.5923))
		        {
			        if(!sscanf(params, "fffiii",M_X,M_Y,M_Z,radius,params[1],params[2]))
			        {
			            if(PlayerInfo[playerid][pRank] > 3)
			            {
			                if(radius > 100 || radius < 0) return Message(playerid, COLOR_GRAD2, "Radio máximo 100");
			                if(params[1] > 13  || params[1] < 0) return Message(playerid, COLOR_GRAD2, "Tipo explosión 0-13");
			                if(params[2] > 60  || params[2] < 0) return Message(playerid, COLOR_GRAD2, "Tiempo máximo 60 segundos");
			            	SetTimerEx("MissileLaunchEx", params[2]*1000, false, "fffii", M_X,M_Y,M_Z,radius,params[1]);
							Misile_Launcher ++;
							SendRadioMessage(3, TEAM_RADIO_COLOR, "** AVISO DE LANZAMIENTO DE MISIL **");
                            format(string, sizeof(string), "* Lanzamiento de misil en %d segundos, destino: %0.2f - %0.2f - %0.2f, radio: %d",
                            params[2],M_X,M_Y,M_Z,radius,params[1]);
                            SendRadioMessage(3, TEAM_RADIO_COLOR, string);
						}
						else Message(playerid, COLOR_GRAD2, "Necesitas ser mayor de rango 3.");
			        }
			        else Message(playerid, COLOR_GRAD2, "Utilize: /misil <coordenada X> <coordenada Y> <coordenada Z> <radio> <tipo> <tiempo>");
				}
				else if(PlayerToPoint(1.0,playerid,2752.9141,-2351.3301,31.0923))
				{
				    if(!sscanf(params, "id",params[0], params[1]))
			        {
			            if(PlayerInfo[playerid][pRank] > 3)
			            {
			                if(params[0] > VEH || params[0] < 0) return Message(playerid, COLOR_GRAD2, "Vehículo incorrecto.");
			                if(params[1] > 60  || params[1] < 0) return Message(playerid, COLOR_GRAD2, "Tiempo máximo 60 segundos");
			                SetTimerEx("MissileLaunch", params[1]*1000, false, "i", params[0]);
			                Misile_Launcher ++;
							SendRadioMessage(3, TEAM_RADIO_COLOR, "** AVISO DE LANZAMIENTO DE MISIL **");
                            format(string, sizeof(string), "* Lanzamiento de misil en %d segundos, objetivo vehículo %d.", params[1], params[0]);
                            SendRadioMessage(3, TEAM_RADIO_COLOR, string);
			            }
			            else Message(playerid, COLOR_GRAD2, "Necesitas ser mayor de rango 3.");
			        }
			        else Message(playerid, COLOR_GRAD2, "Utilize: /misil <vehículo> <tiempo>");
				}
				else Message(playerid, COLOR_GRAD2, "No estás en ningún lanzamisiles.");
			}
			else Message(playerid, COLOR_GRAD2, "Aún no han detonado los otros misiles.");
	    }
	    else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    return 1;
 	}
    zcmd(arrestar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(!sscanf(params, "uiii", params[0], params[1], params[2], params[3]))
        {
            if(PlayerToPoint(4.0, playerid, 780.4319,-360.8171,994.2100)) //LSPD
            {
                if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GREY, "¡Jugador muy lejos!");
                if(params[1] < 0 || params[1] > 60) return Message(playerid, COLOR_GREY, "El máximo de minutos es 60.");
                if(params[2] < 0 || params[2] > 120000) return Message(playerid, COLOR_GREY, "El máximo de precio es 120,000$");
                if(params[3] < 0 || params[3] > 9999999) return Message(playerid, COLOR_GREY, "Máximo fianza: 9,999,999$ (Sin fianza)");

                new wantedlevel = GetPlayerWantedLevel(params[0]), string[128];
          		if(wantedlevel < 1) return SendClientMessage(playerid, COLOR_GREY, "¡Este jugador no tiene nivel de búsqueda!");

				SetPlayerWantedLevel(params[0], 0);
				GameTextForPlayer(params[0], "ENCARCELADO", 5000, 5);
				Bought(params[0], params[2]);
				Fondos[LSPD] += params[2];
				ResetPlayerWeapons(params[0]);
				PlayerInfo[params[0]][pJailTime] = params[1] * 60;
				PlayerInfo[params[0]][pJailed] = 3;
				format(string, sizeof(string), "{FFFFFF}Noticias {EE0000}SA {00B546}CNN+{FFFFFF} \"Sospechoso {FF9900}%s {FFFFFF}ha sido arrestado por %d años\"",PlayerName(params[0]), params[1]);
				GlobalMsg(-1, string);
				format(string, sizeof(string), "[ Sospechoso %s encarcelado por %d minutos, multa %d$, fianza %d$ - Oficial: %s ]", PlayerName(params[0]),params[1],params[2],params[3],PlayerName(playerid));
				MessageEx(playerid, params[0], COLOR_WHITE, string);
				if(GetPlayerInterior(playerid) == 3 || GetPlayerInterior(params[0]) == 3)
				{
				    PlayerInfo[params[0]][pJailed] = 3;
					new cellran = random(3);
					switch(cellran)
					{
						case 0: SetPosEx(params[0], 197.5159,174.6245,1003.0234,3.1802,3,0);
						case 1: SetPosEx(params[0], 193.3041,175.5405,1003.0234,355.6601,3,0);
						case 2: SetPosEx(params[0], 198.3940,161.4172,1003.0300,176.7217,3,0);
					}
				}
				else Message(playerid, COLOR_GRAD2, "No estás en las celdas.");
				return 1;
            }
            if(PlayerToPoint(4.0, playerid, 200.7091,168.4553,1003.0234)) //FBI
            {
                if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GREY, "¡Jugador muy lejos!");
                if(params[1] < 0 || params[1] > 60) return Message(playerid, COLOR_GREY, "El máximo de minutos es 60.");
                if(params[2] < 0 || params[2] > 120000) return Message(playerid, COLOR_GREY, "El máximo de precio es 120,000$");
                if(params[3] < 0 || params[3] > 9999999) return Message(playerid, COLOR_GREY, "Máximo fianza: 9,999,999$ (Sin fianza)");

                new wantedlevel = GetPlayerWantedLevel(params[0]), string[128];
          		if(wantedlevel < 1) return SendClientMessage(playerid, COLOR_GREY, "¡Este jugador no tiene nivel de búsqueda!");

				SetPlayerWantedLevel(params[0], 0);
				GameTextForPlayer(params[0], "ENCARCELADO", 5000, 5);
				Bought(params[0], params[2]);
				Fondos[FBI] += params[2];
				ResetPlayerWeapons(params[0]);
				PlayerInfo[params[0]][pJailTime] = params[1] * 60;
				PlayerInfo[params[0]][pJailed] = 4;
				format(string, sizeof(string), "{FFFFFF}Noticias {EE0000}SA {00B546}CNN+{FFFFFF} \"Sospechoso {FF9900}%s {FFFFFF}ha sido arrestado por %d años\"",PlayerName(params[0]), params[1]);
				GlobalMsg(-1, string);
				format(string, sizeof(string), "[ Sospechoso %s encarcelado por %d minutos, multa %d$, fianza %d$ - Oficial: %s ]", PlayerName(params[0]),params[1],params[2],params[3],PlayerName(playerid));
				MessageEx(playerid, params[0], COLOR_WHITE, string);
				return 1;
            }
            if(PlayerToPoint(4.0, playerid, 625.9482,854.0344,-90.2031)) //SAEM
            {
                if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GREY, "¡Jugador muy lejos!");
                if(params[1] < 0 || params[1] > 60) return Message(playerid, COLOR_GREY, "El máximo de minutos es 60.");
                if(params[2] < 0 || params[2] > 120000) return Message(playerid, COLOR_GREY, "El máximo de precio es 120,000$");
                if(params[3] < 0 || params[3] > 9999999) return Message(playerid, COLOR_GREY, "Máximo fianza: 9,999,999$ (Sin fianza)");

                new wantedlevel = GetPlayerWantedLevel(params[0]), string[128];
          		if(wantedlevel < 1) return SendClientMessage(playerid, COLOR_GREY, "¡Este jugador no tiene nivel de búsqueda!");

				SetPlayerWantedLevel(params[0], 0);
				GameTextForPlayer(params[0], "ENCARCELADO", 5000, 5);
				Bought(params[0], params[2]);
				Fondos[SAEM] += params[2];
				ResetPlayerWeapons(params[0]);
				PlayerInfo[params[0]][pJailTime] = params[1] * 60;
				PlayerInfo[params[0]][pJailed] = 5;
				format(string, sizeof(string), "{FFFFFF}Noticias {EE0000}SA {00B546}CNN+{FFFFFF} \"Sospechoso {FF9900}%s {FFFFFF}ha sido arrestado por %d años\"",PlayerName(params[0]), params[1]);
				GlobalMsg(-1, string);
				format(string, sizeof(string), "[ Sospechoso %s encarcelado por %d minutos, multa %d$, fianza %d$ - Oficial: %s ]", PlayerName(params[0]),params[1],params[2],params[3],PlayerName(playerid));
				MessageEx(playerid, params[0], COLOR_WHITE, string);
				return 1;
            }
        } else Message(playerid, COLOR_GRAD2, "Utilize: /arrestar <PlayerID> <Minutos> <Multa$> <Fianza$>");
        return 1;
    }
 //----------------Pinchos-------------------------------------------//
zcmd(pstrips, playerid, params[])
	{
	    if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
	    if(OnDuty[playerid] == 0 && IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
	    new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
        GetPlayerPos(playerid, plocx, plocy, plocz);
        GetPlayerFacingAngle(playerid,ploca);
        CreateStrip(plocx,plocy,plocz,ploca);
		{
		GameTextForPlayer(playerid,"~r~Banda de clavos ~w~puesto!",3000,1);
  			}
	    return 1;
	}
	zcmd(qstrips, playerid, params[])
	{
	    if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
     	if(OnDuty[playerid] == 0 && IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        DeleteClosestStrip(playerid);
        GameTextForPlayer(playerid,"~r~Banda de clavos ~w~eliminada!",3000,1);
	    return 1;
	}
	zcmd(astrips, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        DeleteAllStrip();
        GameTextForPlayer(playerid,"~r~Banda de clavos ~w~eliminadas!",3000,1);
	    return 1;
	}
    zcmd(su, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 0 && IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "us[64]", params[0], params[1]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if (IsACop(params[0])) return Message(playerid, COLOR_GRAD2, "No puedes acusar a un policía.");
                if (PlayerInfo[params[0]][pBusqueda] == 6)
				{
					ClearChatbox(playerid, 5);
					Message(playerid, WANTED_COLOR, "Este jugador ha alcanzado el nivel de búsqueda máximo");
	    			return Message(playerid, WANTED_COLOR, "Nivel de búsqueda: 6/6");
				}
				else
				{
    				if(PlayerInfo[params[0]][pBusqueda] < 1)
				    {
        				SendRadioMessage(1, TEAM_RADIO_COLOR, "** Central: se ha encontrado un nuevo sospechoso, para más información miren sus ordenadores.")
				    }
				    new string[64];
				    ClearChatbox(playerid, 10);
    				PlayerInfo[params[0]][pBusqueda] ++;
    				format(string, sizeof(string), "** Acusaste a %s: %s", PlayerName(params[0]), params[1])
				    Message(playerid, WANTED_COLOR, string);
			    	format(string, sizeof(string), "Nivel de búsqueda: %d/6", PlayerInfo[params[0]][pBusqueda])
				    Message(playerid, WANTED_COLOR, string);
				    SetPlayerWantedLevel(params[0], PlayerInfo[params[0]][pBusqueda]);
				}
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: (/su)spect <PlayerID> <crimen>");
        return 1;
    }
    zcmd(retener, playerid, params[]){
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
		if(!sscanf(params, "u", params[0])){
            if (ProxDetectorS(8.0, playerid, params[0])){
                if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "ID invalida.");
		        new string[64];
			    TogglePlayerControllable(params[0], 0);
			    Freezed[params[0]] = 1;
			    format(string, sizeof(string), "",PlayerName(playerid), PlayerName(params[0]));
		        Message(params[0], COLOR_RED2, string);
			    return A_Info(string);
             } else Message(playerid, COLOR_GREY, "El jugador está muy lejos.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /retener <PlayerID>");
        return 1;
    }
  zcmd(soltar, playerid, params[])
      {
          if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
		  if(!sscanf(params, "u", params[0]))
		  {
              if (ProxDetectorS(8.0, playerid, params[0])){
			      if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "ID invalida.");
		          new string[64];
			      TogglePlayerControllable(params[0], 1);
			      Freezed[params[0]] = 0;
			      format(string, sizeof(string), "",PlayerName(playerid), PlayerName(params[0]));
			      Message(params[0], COLOR_RED2, string);
			      return A_Info(string);
			   } else Message(playerid, COLOR_GREY, "El jugador está muy lejos.");
		  } else Message(playerid, COLOR_GRAD2, "Utilize: /soltar <PlayerID>");
          return 1;
    }
    zcmd(camaras, playerid, params[])
	{
	if(!IsACop(playerid) && !Team_NG(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
    if (PlayerToPoint(8, playerid,1579.9940,-1634.2922,13.5626))
    	{
        ShowPlayerDialog(playerid, CAMARAS_LSPD, DIALOG_STYLE_LIST, "¿Que camara Deseas Ver?","\nCamara 1\nCamara 2\nCamara 3\nCamara 4\nCamara 5\nDejar camara", "Ver", "Salir");
		}
		return 1;
	}
    zcmd(esposar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(!sscanf(params, "u", params[0]))
        {
            if (params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No puedes esposarte ati mismo!");
            if (ProxDetectorS(8.0, playerid, params[0]))
			{
				new string[128];
				if(PlayerCuffed[params[0]] == 0)
				{
					format(string, sizeof(string), "* Oficial %s esposa al sospechoso %s", PlayerName(playerid), PlayerName(params[0]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(params[0], "~r~ESPOSADO", 2500, 3);
					PlayerCuffed[params[0]] = 1;
                    SetPlayerSpecialAction(params[0], 24);
					return 1;
				}
				else
				{
				    format(string, sizeof(string), "* Oficial %s desesposa a %s", PlayerName(playerid), PlayerName(params[0]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(params[0], "~g~LIBRE", 2500, 3);
					PlayerCuffed[params[0]] = 0;
					SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
					return 1;
				}
			} else Message(playerid, COLOR_GREY, "El jugador está muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /esposar <PlayerID>");
        return 1;
    }
    zcmd(sospechosos, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 1)
        {
            if(!sscanf(params, "i", params[0]))
            {
                if(params[0] < 1 || params[0] > 6) return Message(playerid, COLOR_GRAD2, "Utilize: /sospechosos < Nivel Búsqueda: 1-6 >");
                new string[64];
                ClearChatbox(playerid, 10);
                Message(playerid, WANTED_COLOR, "> Sospechosos más buscados <");
				for(new i=0; i < MAX_PLAYERS; i++)
				{
					if(params[0] == 1 && PlayerInfo[i][pBusqueda] == 1){ 		 format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 1", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					else if(params[0] == 2 && PlayerInfo[i][pBusqueda] == 2){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 2", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					else if(params[0] == 3 && PlayerInfo[i][pBusqueda] == 3){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 3", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					else if(params[0] == 4 && PlayerInfo[i][pBusqueda] == 4){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 4", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					else if(params[0] == 5 && PlayerInfo[i][pBusqueda] == 5){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 5", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
					else if(params[0] == 6 && PlayerInfo[i][pBusqueda] == 6){    format(string, sizeof(string), "  Nombre: %s <> Búsqueda: 6", PlayerName(i)); Message(playerid, WANTED_COLOR, string);}
				}
            } else Message(playerid, COLOR_GRAD2, "Utilize: /sospechosos < Nivel Búsqueda: 1-6 >");
        } else Message(playerid, COLOR_GRAD2, "¡No estas OnDuty!");
        return 1;
    }
    zcmd(bk, playerid, params[]){
        if(RequestingBackup[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Ya tienes un pedido de ayuda.");
        if(IsACop(playerid)){
            new Float:px,Float:py,Float:pz,string[128]; GetPlayerPos(playerid, px, py, pz);
            RequestingBackup[playerid] = 1;
			if(Team_LSPD(playerid)){
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", PlayerName(playerid));
			    SendRadioMessage(1, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++){
					if(IsPlayerConnected(i)){
						if(Team_LSPD(i)){
						    if(OnDuty[i]== 1){
								SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
								if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
							}
						}
					}
				}
			}
            else if(Team_NG(playerid)){
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", PlayerName(playerid));
			    SendRadioMessage(3, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++){
					if(IsPlayerConnected(i)){
						if(Team_NG(i)){
						    if(OnDuty[i]== 1){
								SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
								if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
							}
						}
					}
				}
			}
			else if(Team_FBI(playerid)){
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", PlayerName(playerid));
			    SendRadioMessage(24, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++){
					if(IsPlayerConnected(i)){
						if(Team_FBI(i)){
						    if(OnDuty[i]== 1){
								SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
								if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
							}
						}
					}
				}
			}
			SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
        } else Message(playerid, COLOR_WHITE, "¡No autorizado!");
        return 1;
    }
    zcmd(bkc, playerid, params[]){
		if(IsACop(playerid)) BackupClear(playerid, 0);
        else Message(playerid, COLOR_WHITE, "¡No autorizado!");
        return 1;
	}
    zcmd(ta, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        new string[128];
        if(Tazer[playerid] == 0){
	        format(string, sizeof(string), "* %s carga su tazer", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerAttachedObject(playerid, 0, 18642, 6, 0.070212, 0.017647, 0.065603, 0.000000, 185.632217, 264.085418, 1.000000, 1.000000, 1.000000 );
			Att_Obj_Slot_0[playerid] = "Tazer";
			Tazer[playerid] = 1;
		}
		else{
		    format(string, sizeof(string), "* %s guarda su tazer", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Tazer[playerid] = 0;
			RemoveHand(playerid);
		}
        return 1;
    }
    zcmd(bar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(OnDuty[playerid] == 0 && IsACop(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "i", params[0]))
        {
            new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
        	GetPlayerPos(playerid, plocx, plocy, plocz);
	        GetPlayerFacingAngle(playerid,ploca);
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            switch(params[0])
            {
                case 1: CreateRoadblock(1459,plocx,plocy,plocz,ploca);
                case 2: CreateRoadblock(978,plocx,plocy,plocz+0.6,ploca);
                case 3: CreateRoadblock(981,plocx,plocy,plocz+0.9,ploca+180);
                case 4: CreateRoadblock(1238,plocx,plocy,plocz+0.2,ploca);
                case 5: CreateRoadblock(1425,plocx,plocy,plocz+0.3,ploca);
                case 6: CreateRoadblock(3265,plocx,plocy,plocz-0.5,ploca);
                case 7: CreateRoadblock(3091,plocx,plocy,plocz+0.5,ploca+180);
                default: Message(playerid, COLOR_GRAD2, "Utilize: (/bar)rera <ID:1-7>");
            }
            GameTextForPlayer(playerid,"~r~barrera ~w~puesta!",3000,1);
        }
        else
		{
            Message(playerid, COLOR_GRAD2, "Utilize: (/bar)rera <ID>");
            Message(playerid, COLOR_GRAD2, "IDs: 1. Pequeña | 2. Mediana | 3. Grande");
            Message(playerid, COLOR_GRAD2, "IDs: 4. Cono | 5. Desvío | 6. Prohibido | 7.Cierre");
            Message(playerid, COLOR_GRAD2, "Utiliza: /qb para quitar la barrera más cercana");
		}
        return 1;
    }
    zcmd(qb, playerid, params[])
    {
        if(IsACop(playerid) || PlayerInfo[playerid][pAdminCP] > 3)
     	{
        	DeleteClosestRoadblock(playerid);
	        GameTextForPlayer(playerid,"~r~barrera ~w~eliminada!",3000,1);
		}
        return 1;
    }
    zcmd(qbs, playerid, params[])
	{
	    if(IsACop(playerid)  || PlayerInfo[playerid][pAdminCP] >= 3)
     	{
			if(PlayerInfo[playerid][pRank] >= 6 || PlayerInfo[playerid][pAdminCP] >= 3)
			{
        		DeleteAllRoadblocks(playerid);
	        	return GameTextForPlayer(playerid,"~w~barreras ~r~eliminadas",3000,1);
			}
		}
	    return 1;
	}
    zcmd(multar, playerid, params[])
    {
        if(!Team_LSPD(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
        if(OnDuty[playerid] == 0 && !Team_NG(playerid)) return  SendClientMessage(playerid, COLOR_GREY, "¡No estas OnDuty!");
        if(!sscanf(params, "uis[64]", params[0], params[1], params[2]))
        {
            if(params[1] < 0 || params[1] > 6000) return Message(playerid, COLOR_GREY, "El máximo de multa son 6000$");
            if(IsPlayerConnected(params[0]))
			{
			    if(Facturing[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Este jugador ya tiene una petición pendiente");
			    if(!ProxDetectorS(8.0,playerid,params[0])) return Message(playerid, COLOR_GRAD2, "Muy lejos de el jugador.");
			    new string[128];
			    if(GetPlayerMoney(params[0]) < params[1])
				{
    				format(string, sizeof(string), "* El infractor no tiene %d$ para pagar la multa.", params[1]);
					return Message(playerid, COLOR_GRAD2, string);
				}
				else
				{
				    ClearChatbox(playerid, 10);
				    Message(params[0], -1, "  {1A5FFF}Estado de San Andreas");
				    format(string, sizeof(string), "  {89CBC1}Demandante: {FFFFFF}%s", PlayerName(playerid));
					Message(params[0], -1, string);
					format(string, sizeof(string), "  {89CBC1}Infracción: {FFFFFF}%s", params[2]);
					Message(params[0], -1, string);
					format(string, sizeof(string), "  {FF1700}Multa: {FFFFFF}%d$", params[1]);
					Message(params[0], -1, string);
					Message(playerid, COLOR_WHITE, "* Espere la respuesta del sujeto");
					Message(params[0], COLOR_WHITE, "Lo han multado. Utilize [/aceptar multa ó /cancelar multa] para pagar la multa.");
					TicketOffer[params[0]] = playerid;
					TicketMoney[params[0]] = params[1];
					Facturing[params[0]] = 1;
				}
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /multar <ID> <precio> <razón>");
        return 1;
    }
    zcmd(darjuicio, playerid, params[])
    {
        if(!IsACorteJudicial(playerid)) return Message(playerid, COLOR_GRAD2, "No eres Juez.");
        if(!sscanf(params, "uis[64]", params[0], params[1], params[2]))
        {
        if(params[1] < 0 || params[1] > 6000) return Message(playerid, COLOR_GREY, "El máximo de multa son 6000$");
            if(IsPlayerConnected(params[0]))
			{
			    if(Facturing[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Este jugador ya tiene una petición pendiente");
			    if(!ProxDetectorS(8.0,playerid,params[0])) return Message(playerid, COLOR_GRAD2, "Muy lejos de el jugador.");
			    new string[128];
			    if(GetPlayerMoney(params[0]) < params[1])
				{
    				format(string, sizeof(string), "* El sujeto no tiene %d$ para pagar la multa.", params[1]);
					return Message(playerid, COLOR_GRAD2, string);
				}
				else
				{
				    ClearChatbox(playerid, 10);
				    Message(params[0], -1, "  {1A5FFF} Corte Judicial de San Andreas");
				    format(string, sizeof(string), "  {89CBC1}Juez: {FFFFFF}%s", PlayerName(playerid));
					Message(params[0], -1, string);
					format(string, sizeof(string), "  {89CBC1}Razón: {FFFFFF}%s", params[2]);
					Message(params[0], -1, string);
					format(string, sizeof(string), "  {FF1700}Precio: {FFFFFF}%d$", params[1]);
					Message(params[0], -1, string);
					Message(playerid, COLOR_WHITE, "* Espere la respuesta del sujeto");
					Message(params[0], COLOR_WHITE, "Lo han citado a un Juicio. Utilize [/aceptar juicio] para aceptar el Juicio.");
					CorteJudicial[params[0]] = playerid;
					Facturing[params[0]] = 1;
				}
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /darjuicio <ID> <Precio> <Razón>");
        return 1;
    }
    zcmd(darlicencia, playerid, params[0])
    {
        if(!Team_LSPD(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
        if(!sscanf(params, "u", params[0])){
			if(IsPlayerConnected(params[0])){
			    if(ProxDetectorS(5.0,playerid, params[0])){
			    	new string[164];
			    	PlayerInfo[params[0]][pGunLic] = 1;
			    	format(string, sizeof(string), "* %s le da una licencia de arma a %s", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    Message(playerid, COLOR_YELLOW, "* Has obtenido la licencia de armas.");
              	} else Message(playerid, COLOR_GRAD2, "Jugador demasiado lejos.");
       		} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
 		} else Message(playerid, COLOR_GRAD2, "Utilize: /darlicencia <PlayerID>");
 		return 1;
    }
    zcmd(m, playerid, params[])
    {
        if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /m <texto>");
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!")
		if(Team_SAMUR(playerid) || IsACop(playerid))
        {
			new string[128];
			format(string, sizeof(string), "(Megáfono) %s: %s",PlayerName(playerid), params[0]);
			ProxDetector(60.0, playerid, string,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE);
        } else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
    zcmd(aceptar, playerid, params[])
	{
        if(!sscanf(params,"s[64]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"telefono",true) == 0)
            {
                if(NumBuy[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un número!");
                if(NumPrice[playerid] > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "¡No tienes suficiente dinero!");
                format(string, sizeof(string), "* %s compra un número de teléfono", PlayerName(playerid));
                ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
                PlayerInfo[playerid][pPnumber] = NumBuy[playerid];
                Earn(NumSeller[playerid], NumPrice[playerid]);
                Bought(playerid, NumPrice[playerid]);
                NumBuy[playerid] = 0;
                NumPrice[playerid] = 0;
                NumSeller[playerid] = 0;
                Facturing[playerid] = 0;
            }
			else if(strcmp(params[0],"multa",true) == 0)
			{
			    if(TicketOffer[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie te multado!");
			    format(string, sizeof(string), "* %s paga una multa.", PlayerName(playerid));
   				ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
   				format(string, sizeof(string), " {FFC990}%s {FFFFFF}pagó una multa de {3E9EEA}%d$.", PlayerName(playerid), TicketMoney[playerid]);
				MessageEx(playerid, TicketOffer[playerid], -1, string);
   				Bought(playerid, TicketMoney[playerid]);
   				Earn(TicketOffer[playerid], TicketMoney[playerid]);
   				TicketOffer[playerid] = 999;
				TicketMoney[playerid] = 0;
				Facturing[playerid] = 0;
			}
			else if(strcmp(params[0],"juicio",true) == 0)
			{
			    if(CorteJudicial[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie te a citado a un juicio!");
			    format(string, sizeof(string), "* %s acepta un juicio.", PlayerName(playerid));
   				ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
   				format(string, sizeof(string), " {FFC990}%s {FFFFFF}Acepto el Juicio", PlayerName(playerid));
				MessageEx(playerid, CorteJudicial[playerid], -1, string);
				Bought(playerid, TicketMoney[playerid]);
   				Earn(CorteJudicial[playerid], TicketMoney[playerid]);
   				CorteJudicial[playerid] = 999;
   				TicketMoney[playerid] = 0;
				Facturing[playerid] = 0;
			}
			else if(strcmp(params[0],"saludo",true) == 0)
			{
			    if(Saludo_ID[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un saludo!");
				format(string, sizeof string, "* %s acepta el saludo de %s.", PlayerName(playerid), PlayerName(Saludo_ID[playerid]));
			    ProxDetector(20.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			    ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
			    ApplyAnimation(Saludo_ID[playerid],"GANGS","hndshkfa_swt",4.1,0,0,0,0,0);
			    Saludo_ID[playerid] = 999;
			}
			else if(strcmp(params[0],"proteccion",true) == 0)
			{
 			if(Guardes_Oferta[playerid] < 998)
 			{
 			if(GetPlayerMoney(playerid) > Guardes_Precio[playerid])
				{
				format(string, sizeof(string), "* Has aceptado la protección del guardespaldas %s por $%d.",PlayerName(Guardes_Oferta[playerid]),Guardes_Precio[playerid]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "* %s Ha aceptado tu protección por $%d, se han añadido a su payday.",PlayerName(playerid),Guardes_Precio[playerid]);
				SendClientMessage(Guardes_Oferta[playerid], COLOR_WHITE, string);
    			MoneyGiveToPlayer(Guardes_Oferta[playerid], Guardes_Precio[playerid]);
    			Bought(playerid, -Guardes_Precio[playerid]);
				Guardes_Oferta[playerid] = 999;
				Guardes_Precio[playerid] = 0;
				format(string, sizeof(string), "* %s acepta el contrato del guardespaldas", PlayerName(playerid), PlayerName(Guardes_Oferta[playerid]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  				return 1;
  					}
					else
					{
						Reparar_Oferta[playerid] = 999;
						Reparar_Precio[playerid] = 0;
						format(string, sizeof(string), "* %s Ha rechazado tu protección porque no posee el dinero.",PlayerName(playerid));
						SendClientMessage(Guardes_Oferta[playerid], COLOR_WHITE, string);
						SendClientMessage(playerid, COLOR_GREY, "No tienes el dinero para pagar la protección.");
						return 1;
						}
					} else SendClientMessage(playerid, COLOR_GREY, "Nadie te ha ofrecido protección!.");
			}
			else if(strcmp(params[0],"regalo",true) == 0)
			{
			    if(Regalo_ID[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un regalo!");
				switch(Regalo_ITEM[playerid])
				{
				    case 1:{
				        PlayerInfo[playerid][pAnilloCom] += 1;
				        PlayerInfo[Regalo_ID[playerid]][pAnilloCom] -= 1;
				        Message(playerid, COLOR_GRAD4, "* Has recibido un anillo de compromiso.");
        			}
        			case 2:{
        			    PlayerInfo[playerid][pAnilloOro] += 1;
        			    PlayerInfo[Regalo_ID[playerid]][pAnilloOro] -= 1;
        			    Message(playerid, COLOR_GRAD4, "* Has recibido un anillo de oro.");
    			    }
    			    case 3:{
						PlayerInfo[playerid][pCollar] += 1;
						PlayerInfo[Regalo_ID[playerid]][pCollar] -= 1;
						Message(playerid, COLOR_GRAD4, "* Has recibido un collar de perlas.");
					}
					case 4:{
					    PlayerInfo[playerid][pAnilloDia] += 1;
					    PlayerInfo[Regalo_ID[playerid]][pAnilloDia] -= 1;
					    Message(playerid, COLOR_GRAD4, "* Has recibido un anillo de diamantes.");
	    			}
	    			case 5:{
	    			    PlayerInfo[playerid][pPulsera] += 1;
	    			    PlayerInfo[Regalo_ID[playerid]][pPulsera] -= 1;
	    			    Message(playerid, COLOR_GRAD4, "* Has recibido una pulsera de oro.");
 			    	}
 			    	case 6:{
 			    	    PlayerInfo[playerid][pAretes] += 1;
 			    	    PlayerInfo[Regalo_ID[playerid]][pAretes] -= 1;
 			    	    Message(playerid, COLOR_GRAD4, "* Has recibido un conjunto de aretes de oro.");
    	    		}
    	    		case 7:{
    	    		    PlayerInfo[playerid][pReloj] += 1;
    	    		    PlayerInfo[Regalo_ID[playerid]][pReloj] -= 1;
    	    		    Message(playerid, COLOR_GRAD4, "* Has recibido un reloj de oro puro.");
					}
				}
				format(string, sizeof string, "* %s le da un regalo a %s.",PlayerName(Regalo_ID[playerid]), PlayerName(playerid));
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Regalo_Offer[Regalo_ID[playerid]] = 0;
				Regalo_ID[playerid] = 999;
				Regalo_ITEM[playerid] = 0;
			}
		}
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /aceptar <item>");
            Message(playerid, COLOR_GRAD2, "Items: telefono, multa, saludo, regalo");
        }
        return 1;
    }
    zcmd(cancelar, playerid, params[])
    {
        if(!sscanf(params,"s[64]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"telefono",true) == 0)
            {
			    if(NumBuy[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un número!");
                format(string, sizeof(string), "* %s cancela la compra del número de teléfono", PlayerName(playerid));
                ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
                NumBuy[playerid] = 0;
                NumPrice[playerid] = 0;
                NumSeller[playerid] = 0;
                Facturing[playerid] = 0;
			}
			else if(strcmp(params[0],"taxi",true) == 0)
		    {
                if(TaxiCalled[playerid] > 0)
                {
     				switch(TaxiCalled[playerid])
					{
						case 1: { TaxiSlot1 = 999; SlotZone1 = "Sin Localizar"; SlotCity1 = "No"; TiempoSlot1 = 0; }
						case 2: { TaxiSlot2 = 999; SlotZone2 = "Sin Localizar"; SlotCity2 = "No"; TiempoSlot2 = 0; }
						case 3: { TaxiSlot3 = 999; SlotZone3 = "Sin Localizar"; SlotCity3 = "No"; TiempoSlot3 = 0; }
						case 4: { TaxiSlot4 = 999; SlotZone4 = "Sin Localizar"; SlotCity4 = "No"; TiempoSlot4 = 0; }
						case 5: { TaxiSlot5 = 999; SlotZone5 = "Sin Localizar"; SlotCity5 = "No"; TiempoSlot5 = 0; }
						case 6: { TaxiSlot6 = 999; SlotZone6 = "Sin Localizar"; SlotCity6 = "No"; TiempoSlot6 = 0; }
						case 7: { TaxiSlot7 = 999; SlotZone7 = "Sin Localizar"; SlotCity7 = "No"; TiempoSlot7 = 0; }
						case 8: { TaxiSlot8 = 999; SlotZone8 = "Sin Localizar"; SlotCity8 = "No"; TiempoSlot8 = 0; }
					}
			    	Message(playerid, -1, "{FFFFFF}* Has cancelado el servicio de {FFEC1C}taxi.");
			    	format(string, sizeof(string), "Central: %s canceló el servicio de taxi.", PlayerName(playerid));
                	SendJobMessage(9, TEAM_BLUE_COLOR, string);
                	TaxiCalled[playerid] = 0;
       			}
       			else
       			{
       				Message(playerid, COLOR_GRAD2, "¡No has pedido un taxi!");
       				return 1;
 				}
		    }
		    else if(strcmp(params[0],"multa",true) == 0)
		    {
			    if(TicketOffer[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie te multado!");
                format(string, sizeof(string), "* %s se niega a pagar una multa.", PlayerName(playerid));
                ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
                format(string, sizeof(string), "* {FFC990}%s {FFFFFF}canceló el pago de una multa de {3E9EEA}%d$.", PlayerName(playerid), TicketMoney[playerid]);
                Message(playerid, -1, string);
                Message(TicketOffer[playerid], -1, string);
                TicketOffer[playerid] = 999;
                TicketMoney[playerid] = 0;
			    Facturing[playerid] = 0;
			}
			else if(strcmp(params[0],"saludo",true) == 0)
			{
			    if(Saludo_ID[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie ha ofrecido saludarte!");
			    MessageEx(Saludo_ID[playerid], playerid, COLOR_GRAD2, "* El saludo ha sido cancelado.");
			    Saludo_ID[playerid] = 999;
			}
			else if(strcmp(params[0],"regalo",true) == 0)
			{
			    if(Regalo_ID[playerid] == 999) return Message(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un regalo!");
			    MessageEx(Regalo_ID[playerid], playerid, COLOR_GRAD2, "* El regalo ha sido rechazado.");
			    Regalo_Offer[Regalo_ID[playerid]] = 0;
			    Regalo_ID[playerid] = 999;
				Regalo_ITEM[playerid] = 0;
   			}
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /cancelar <item>");
            Message(playerid, COLOR_GRAD2, "Items: telefono, multa, taxi, saludo");
        }
        return 1;
    }
    zcmd(dni, playerid, params[])
    {
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /dni <PlayerID>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        if(AntiAbusos[params[0]] == 1) return Message(playerid, COLOR_GRAD2, "No puedes usar esto con un admin duty.");
        if(ProxDetectorS(8.0, playerid, params[0]))
        {
	        new string[90];
	        ShowDNI(playerid, params[0]);
	        format(string, sizeof(string), "* %s le muestra su DNI a %s.", PlayerName(playerid), PlayerName(params[0]));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
		return 1;
    }
    zcmd(dnifalso, playerid, params[])
    {
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /dnifalso <PlayerID>");
        if(!IsPlayerConnected(params[0]))  return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        if(PlayerInfo[playerid][pDNIFalse] == 0)    return Message(playerid, COLOR_GRAD2, "No posees un DNI falso.");
        if(ProxDetectorS(8.0, playerid, params[0]))
        {
            new string[90];
            ShowDNIFalse(playerid, params[0]);
            format(string, sizeof(string), "* %s le muestra su DNI a %s.", PlayerName(playerid), PlayerName(params[0]));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        return 1;
    }
    zcmd(quitardnifalso, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /quitardni <PlayerID>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        if(PlayerInfo[params[0]][pDNIFalse] != 0)
        {
            new string[128];
	        PlayerInfo[params[0]][pDNIFalse] = 0;
    	    strmid(PlayerInfo[params[0]][pDNIName], "Ninguno", 0, strlen("Ninguno"), 12);
            format(string, sizeof(string), "* Le has quitado el DNI Falso a %s.", PlayerName(params[0]));
            Message(playerid, COLOR_GRAD2, string);
        } else Message(playerid, COLOR_GRAD2, "Esa persona no tiene un DNI Falso.");
        return 1;
 }
    zcmd(encontrar, playerid, params[])
    {
        if(PlayerInfo[playerid][pJob] != 12) return Message(playerid, COLOR_GRAD2, " Usted no trabaja de Detective");
        if(UsedFind[playerid] > 1) return Message(playerid, TEAM_RADIO_COLOR, "** Información: El Satélite está ocupado, pruebe de aquí unos segundos");
		if(!sscanf(params, "u", params[0]))
		{
		    if(IsPlayerConnected(params[0]))
			{
                new string[128];
			    new sat = random(30), luck = random(20), reuse_time = (sat+luck)*2;
			    Message(playerid, TEAM_RADIO_COLOR, "<< ... Estableciendo conexión ... >>");
			    format(string, sizeof(string), "Conectado con Satélite #%d Cobertura(%d)", sat,luck);
			    Message(playerid, COLOR_WHITE,string);
			    format(string, sizeof(string), "Persona a buscar: %s", PlayerName(params[0]));
			    Message(playerid, COLOR_WHITE,string);
				if(luck > 10 && PlayerInfo[params[0]][pSex] == 1) 		Message(playerid, COLOR_WHITE,"Sexo: Masculino");
				if(luck > 10 && PlayerInfo[params[0]][pSex] == 2) 		Message(playerid, COLOR_WHITE,"Sexo: Femenino");
				if(luck > 17 && PlayerInfo[params[0]][pPnumber] != 0)	format(string, sizeof(string), "Teléfono: %d", PlayerInfo[params[0]][pPnumber]); Message(playerid, COLOR_WHITE,string);
    			Message(playerid, TEAM_RADIO_COLOR, "_____________________________________");
       			UsedFind[playerid] = reuse_time;
				WhoFind[playerid] = params[0];
				format(string, sizeof(string), "La información se marcara en el mapa en: %d segundos.", sat+luck);
    			Message(playerid, COLOR_YELLOW,string);
    			format(string, sizeof(string), "El satélite volverá a estar disponible en: %d segundos.", UsedFind[playerid]);
    			Message(playerid, COLOR_YELLOW,string);
    			SetTimerEx("Detective_FindPerson", sat+luck*1000, false, "i", playerid);
			} else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /encontrar <PlayerID>");
        return 1;
    }
    zcmd(localizar, playerid, params[])
    {
        if(!Hitman(playerid)) return Message(playerid, COLOR_GRAD2, "¡No perteneces a esta organización!");
        if(UsedFind[playerid] > 1) return Message(playerid, TEAM_RADIO_COLOR, "** Información: El Satélite está ocupado, pruebe de aquí unos segundos");
		if(!sscanf(params, "u", params[0]))
		{
		    if(IsPlayerConnected(params[0]))
			{
                new string[128];
			    new sat = random(30), luck = random(20), reuse_time = (sat+luck)*2;
			    Message(playerid, TEAM_RADIO_COLOR, "<< ... Estableciendo conexión ... >>");
			    format(string, sizeof(string), "Conectado con Satélite #%d Cobertura(%d)", sat,luck);
			    Message(playerid, COLOR_WHITE,string);
			    format(string, sizeof(string), "Persona a buscar: %s", PlayerName(params[0]));
			    Message(playerid, COLOR_WHITE,string);
				if(luck > 10 && PlayerInfo[params[0]][pSex] == 1) 		Message(playerid, COLOR_WHITE,"Sexo: Masculino");
				if(luck > 10 && PlayerInfo[params[0]][pSex] == 2) 		Message(playerid, COLOR_WHITE,"Sexo: Femenino");
				if(luck > 13 && IsPlayerInAnyVehicle(params[0])) 		Message(playerid, COLOR_WHITE,"Estado: En Automóvil");
				if(luck > 17 && PlayerInfo[params[0]][pPnumber] != 0)	format(string, sizeof(string), "Teléfono: %d", PlayerInfo[params[0]][pPnumber]); Message(playerid, COLOR_WHITE,string);
    			Message(playerid, TEAM_RADIO_COLOR, "_____________________________________");
       			UsedFind[playerid] = reuse_time;
				WhoFind[playerid] = params[0];
				format(string, sizeof(string), "La información se marcara en el mapa en: %d segundos.", sat+luck);
    			Message(playerid, COLOR_YELLOW,string);
    			format(string, sizeof(string), "El satélite volverá a estar disponible en: %d segundos.", UsedFind[playerid]);
    			Message(playerid, COLOR_YELLOW,string);
    			SetTimerEx("Detective_FindPerson", sat+luck*1000, false, "i", playerid);
			} else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /localizar <PlayerID>");
        return 1;
    }
    zcmd(encontrarveh, playerid, params[])  // agregar comando para negocio
    {
        if(!Hitman(playerid)) return Message(playerid, COLOR_GRAD2, "No perteneces a esta organización!");
        if(UsedFind[playerid] > 1) return Message(playerid, TEAM_RADIO_COLOR, "** Información: El Satélite está ocupado, pruebe de aquí unos segundos");
		if(!sscanf(params, "i", params[0]))
		{
            new string[128];
		    if(params[0] < 0 || params[0] > VEH) return Message(playerid, COLOR_GRAD2, "Error ID.");
		    new sat = random(30), luck = random(20), reuse_time = (sat+luck)*2;
		    Message(playerid, TEAM_RADIO_COLOR, "<< ... Estableciendo conexión ... >>");
		    format(string, sizeof(string), "Conectado con Satélite #%d Cobertura(%d)", sat,luck);
		    Message(playerid, COLOR_WHITE,string);
		    format(string, sizeof(string), "ID Vehículo: %d",params[0]);
		    Message(playerid, COLOR_WHITE,string);
			if(luck > 13)
			{
   				format(string, sizeof(string), "Modelo Vehículo: %s", GetVehicleFriendlyName(params[0]));
		    	Message(playerid, COLOR_WHITE,string);
			}
   			Message(playerid, TEAM_RADIO_COLOR, "_____________________________________");
			UsedFind[playerid] = reuse_time;
			WhoFind[playerid] = params[0];
			format(string, sizeof(string), "La información se marcara en el mapa en: %d segundos.", sat+luck);
	   		Message(playerid, COLOR_YELLOW,string);
	   		format(string, sizeof(string), "El satélite volverá a estar disponible en: %d segundos.", UsedFind[playerid]);
	   		Message(playerid, COLOR_YELLOW,string);
	   		SetTimerEx("Detective_FindCar", sat+luck*1000, false, "i", playerid);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /encontrar <vehículo>");
        return 1;
    }
    zcmd(papeles, playerid, params[])
    {
        if(PlayerInfo[playerid][pPcarkey] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes vehículo.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V_Documents(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /papeles <PlayerID>");
        return 1;
    }
    zcmd(papeles2, playerid, params[])
    {
        if(PlayerInfo[playerid][pPcarkey2] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes vehículo.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V_Documents2(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /papeles2 <PlayerID>");
        return 1;
    }
    zcmd(papeles3, playerid, params[])
    {
        if(PlayerInfo[playerid][pCarPremium] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes vehículo premium.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V2_Documents(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /papeles3 <PlayerID>");
        return 1;
    }
    zcmd(papeles4, playerid, params[])
    {
        if(PlayerInfo[playerid][pCarPremium2] == 9999) return Message(playerid, COLOR_GRAD2, "No tienes vehículo premium.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            if(ProxDetectorS(8.0, playerid, params[0]))
        	{
	            new string[100];
	            V3_Documents(playerid, params[0]);
	            format(string, sizeof(string), "* %s le muestra a %s los documentos del vehículo.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /papeles4 <PlayerID>");
        return 1;
    }
	// zcmd:admin ============================================================================================================================
    zcmd(conse, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(GetPlayerState(playerid) == 2) {
			return SetVehiclePos(GetPlayerVehicleID(playerid), 552.4600,-1275.2721,17.2482);
		}
		else {
			SetPosEx(playerid, 552.4600,-1275.2721,17.2482, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(healcar, playerid, params[])
    {
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0]))
		{
		    return SetVehicleHealth(GetPlayerVehicleID(playerid), params[0] * 10);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /healcar <HP>");
        return 1;
    }
	zcmd(aengineon, playerid, params[]){
		if(PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
  		new engine,lights,alarm,doors,bonnet,boot,objective;
    	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	    engineOn[GetPlayerVehicleID(playerid)] = true;
		return SetVehicleParamsEx(GetPlayerVehicleID(playerid),1,lights,alarm,doors,bonnet,boot,objective);
	}
	zcmd(carstat, playerid, params[])
	{
	    new string[64], idcar = GetPlayerVehicleID(playerid);
	    if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
		format(string, sizeof(string), "Modelo: %s - Dueño: %s(Owned:%d) - ID: %d", CarInfo[idcar][cName],CarInfo[idcar][cOwner],CarInfo[idcar][cOwned],idcar);
		return Message(playerid, COLOR_GRAD2, string);
	}
	zcmd(searchcar, playerid, params[])
	{
	    new string[128];
	    if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(!sscanf(params,"s[32]",params[0])){
            if(strfind(params[0], "_" , true) != -1) return Message(playerid, COLOR_GRAD2, "Ejemplo de Uso: /searchcar Emely Socola");
			for(new c = 258; c < MAX_VEHICLES; c++)
			{
                if(strcmp(params[0], CarInfo[c][cOwner], true) == 0)
                {
					format(string, sizeof(string), "Vehículo Encontrado | ID: %d | Modelo: %s", c, CarInfo[c][cName]);
					Message(playerid, COLOR_GRAD2, string);
				}
			}
		} else Message(playerid, COLOR_GRAD2, "Utilize: /searchcar <Nombre Jugador>");
		return 1;
	}
    zcmd(changeit, playerid, params[]){
	    new idcar = GetPlayerVehicleID(playerid),Float:x,Float:y,Float:z,Float:a;
		if(PlayerInfo[playerid][pAdminCP] >= 6 || Team_Mecanicos(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
			if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "¡No es un vehículo de venta!");
			GetVehiclePos(idcar, x, y, z);
			GetVehicleZAngle(idcar, a);
			CarInfo[idcar][cLocationx] = x;
			CarInfo[idcar][cLocationy] = y;
			CarInfo[idcar][cLocationz] = z;
			CarInfo[idcar][cAngle] = a;
			Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora el vehículo aparecerá aqui!");
		} else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		return 1;
 	}
    zcmd(pagar, playerid, params[])
    {
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(!sscanf(params, "ui", params[0], params[1])){
            if(params[1] > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "No posees esa cantidad.");
            if(params[1] < 1 || params[1] > 1000000) return Message(playerid, COLOR_GRAD2, "Máx: 1000000$");
            if(IsPlayerConnected(params[0])){
                if(ProxDetectorS(5.0, playerid, params[0])){
                    new string[128];
					Bought(playerid, params[1]);
					Earn(params[0], params[1]);
					format(string, sizeof(string), "* %s saca su billetera y paga %d$ a %s", PlayerName(playerid), params[1], PlayerName(params[0]));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                } else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /pagar <PlayerID> <Cantidad>");
        return 1;
    }
    zcmd(llenar, playerid, params[])
    {
        if(GetPlayerMoney(playerid) < 1) return Message(playerid, COLOR_GRAD2, "No tienes dinero!");
        if(Refueling[playerid] > -1) return Message(playerid, COLOR_GRAD2, "Ya está llenando el vehículo!");
        if(IsAtGasStation(playerid))
		{
  			if(Gas[GetPlayerVehicleID(playerid)] < 230)
	    	{
      			return ShowPlayerDialog(playerid,GASOLINA_DIALOG,DIALOG_STYLE_LIST,"Gasolinera - Tipo de gasolina","Sin Plomo 95\nSin Plomo 98\nGasoil\nBiodiesel","Comprar","Atras");
			}
			else GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~Vehiculo LLenado",2000,3);
		}
		else Message(playerid,COLOR_GREY,"¡No estás en una estación de gasolina!");
        return 1;
    }
    zcmd(pcu, playerid, params[]){
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehiculo!");
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
			SetTimerEx("MM_Exam", 3000, false, "i", playerid);
			Message(playerid, -1, "* {4C9CB6}Prendiendo PCU del Vehiculo.");
		} else Message(playerid, COLOR_GREY, "No eres el conductor.");
		return 1;
	}
	zcmd(gps, playerid, params[])
	{
	    new idcar = GetPlayerVehicleID(playerid)
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehiculo!");
        if(FacJobsCar(idcar)) { }
		if(IsAnOwnableCar(idcar)) { if(CarInfo[idcar][cGPS] == 0) return Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene un GPS!"); }
		ShowPlayerDialog(playerid, GPS_DIALOG, DIALOG_STYLE_LIST, "{018CFE}Control GPS", "{FFFFFF}Bares\nEmergencias\nNegocios\nLugares Públicos\nServicios", "Aceptar", "Salir");
		return 1;
 	}
   	zcmd(mapa, playerid, params[])
	{
 		if(!IsAtMap(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estas delante de un mapa!");
		ShowPlayerDialog(playerid, MAPA_DIALOG, DIALOG_STYLE_LIST, "{018CFE}Puntos de interes", "{FFFFFF}Ayuntamiento\nJuzgados\nComisaria\nTaller\nLicencieria\nBinco\n24-7 Vinewood\n24-7 Unity\n24-7\nLavanderia\nJoyeria\nBanco\nGrotti\nCyber\nBiblioteca\nBowling\nIglesia\nCasino", "Aceptar", "Salir");
		return 1;
 	}
    zcmd(v, playerid, params[])
    {
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[128], idcar = GetPlayerVehicleID(playerid), keycar = PlayerInfo[playerid][pPcarkey], keycar2 = PlayerInfo[playerid][pPcarkey2];
            new engine,lights,alarm,doors,bonnet,boot,objective, Float:x, Float:y, Float:z, Float:a;
            GetVehicleParamsEx(idcar, engine,lights,alarm,doors,bonnet,boot,objective);
            if(strcmp(params[0],"motor",true) == 0)
                {
                    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
                    if(gEngine[playerid] == 1) { return 1; }
                                if(NoBattery(idcar)) return Message(playerid, COLOR_GRAD2, "¡Vehículo sin batería!");
                                if(engineOn[idcar] == 0)
                                {
                                    if(IsABike(idcar)) { return 1; }
                                        if(Hire_Vehicle(idcar) && HireKey[playerid] != idcar) { return 1; }
                                        if(IsAnOwnableCar(idcar)) { if(PlayerInfo[playerid][pPcarkey] == idcar || PlayerInfo[playerid][pPcarkey2] == idcar || PlayerInfo[playerid][pCarPremium] == idcar || PlayerInfo[playerid][pCarPremium2] == idcar) { } else { return 1; } }

                                new Float:health;
                                        GetVehicleHealth(idcar, health);
                                        if (health > 300)
                        {
                                                format(string, sizeof(string), "* %s gira la llave del vehículo.", PlayerName(playerid));
                                                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            SetTimerEx("StartingTheVehicle",2500,false,"i",playerid);
                                                GameTextForPlayer(playerid, "~w~Encendiendo motor",2500,3);
                                                gEngine[playerid] = 1;
                                                return 1;
                                                }
                                                else {
                                                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                                SetVehicleParamsEx(idcar,0,lights,alarm,doors,bonnet,boot,objective);
                                                engineOn[idcar] = false;
                                                gEngine[playerid] = 0;
                                        TogglePlayerControllable(playerid, 0);
                        SendClientMessage(playerid, COLOR_YELLOW, "No puedes encender el vehiculo debido al daño, llama a un mecanico");
                        return 1;
                                                }

                                }
                                else if(engineOn[idcar] == 1)
                                {
                                    if(IsABike(idcar)) { return 1; }
                                        if(Hire_Vehicle(idcar) && HireKey[playerid] != idcar) { return 1; }
                                        if(IsAnOwnableCar(idcar)) { if(PlayerInfo[playerid][pPcarkey] == idcar || PlayerInfo[playerid][pPcarkey2] == idcar || PlayerInfo[playerid][pCarPremium] == idcar || PlayerInfo[playerid][pCarPremium2] == idcar) { } else { return 1; } }

                                        format(string, sizeof(string), "* %s apaga el motor del vehículo.", PlayerName(playerid));
                                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                        SetVehicleParamsEx(idcar,0,lights,alarm,doors,bonnet,boot,objective);
                                        engineOn[idcar] = false;
                                        gEngine[playerid] = 0;
                                        return 1;
                                }
                }
                else if(strcmp(params[0],"luces",true) == 0)
                        {
                    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
                    if(LightsOn[idcar] == 0)
                    {
                        SetVehicleParamsEx(idcar,engine,1,alarm,doors,bonnet,boot,objective);
                        LightsOn[idcar] = 1;
                    }
                    else if(LightsOn[idcar] == 1)
                    {
                    SetVehicleParamsEx(idcar,engine,0,alarm,doors,bonnet,boot,objective);
                    LightsOn[idcar] = 0;
                    }
                    return 1;
                }
                else if(strcmp(params[0],"capo",true) == 0)
                {
                    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
                    if(IsABike(idcar) || IsATrain(idcar) || IsAPizzabike(idcar) || IsASweeper(idcar) || IsAPlane(idcar)) { return 1; }
                    if(BonnetOpen[idcar] == 0)
                    {
                        SetVehicleParamsEx(idcar,engine,lights,alarm,doors,1,boot,objective);
                        BonnetOpen[idcar] = 1;
                    }
                    else if(BonnetOpen[idcar] == 1)
                    {
                    SetVehicleParamsEx(idcar,engine,lights,alarm,doors,0,boot,objective);
                    BonnetOpen[idcar] = 0;
                    }
                return 1;
                }
                else if(strcmp(params[0],"maletero",true) == 0)
                {
                    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
                    if(IsABike(idcar) || IsATrain(idcar) || IsAPizzabike(idcar) || IsASweeper(idcar) || IsAPlane(idcar)) { return 1; }
                    if(BootOpen[idcar] == 0)
                    {
                        SetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,1,objective);
                        BootOpen[idcar] = 1;
                    }
                    else if(BootOpen[idcar] == 1)
                    {
                    SetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,0,objective);
                    BootOpen[idcar] = 0;
                    }
                    return 1;
                }
                else if(strcmp(params[0],"estacionar",true) == 0)
                {
                    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
                                if(IsAnOwnableCar(idcar))
                                {
                                    if(PlayerInfo[playerid][pPcarkey] == 9999) return Message(playerid, COLOR_GRAD2, "Usted no tiene un coche.");
                                        if(idcar == PlayerInfo[playerid][pPcarkey])
                                        {
                                                GetVehiclePos(idcar, x, y, z);
                                                GetVehicleZAngle(idcar, a);
                                                CarInfo[idcar][cLocationx] = x;
                                                CarInfo[idcar][cLocationy] = y;
                                                CarInfo[idcar][cLocationz] = z;
                                                CarInfo[idcar][cAngle] = a;
                                                Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora el vehículo aparecerá aqui!");
                                        }
                                        else return Message(playerid, COLOR_GREY, "¡No estás en tu vehículo!");
                                }
                }
                else if(strcmp(params[0],"estacionar2",true) == 0)
                {
                    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
                                if(IsAnOwnableCar(idcar))
                                {
                                    if(PlayerInfo[playerid][pPcarkey2] == 9999) return Message(playerid, COLOR_GRAD2, "Usted no tiene un coche.");
                                        if(idcar == PlayerInfo[playerid][pPcarkey2])
                                        {
                                                GetVehiclePos(idcar, x, y, z);
                                                GetVehicleZAngle(idcar, a);
                                                CarInfo[idcar][cLocationx] = x;
                                                CarInfo[idcar][cLocationy] = y;
                                                CarInfo[idcar][cLocationz] = z;
                                                CarInfo[idcar][cAngle] = a;
                                                Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora el vehículo aparecerá aqui!");
                                        }
                                        else return Message(playerid, COLOR_GREY, "¡No estás en tu vehículo!");
                                }
                }
                else if(strcmp(params[0],"estacionar3",true) == 0)
                {
                    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
                        if(IsAnOwnableCar(idcar))
                        {
                            if(PlayerInfo[playerid][pCarPremium] == 9999) return Message(playerid, COLOR_GREY, "Usted no tiene un coche premium.");
                                        if(idcar == PlayerInfo[playerid][pCarPremium])
                            {
                                                GetVehiclePos(idcar, x, y, z);
                                                GetVehicleZAngle(idcar, a);
                                                CarInfo[idcar][cLocationx] = x;
                                                CarInfo[idcar][cLocationy] = y;
                                                CarInfo[idcar][cLocationz] = z;
                                                CarInfo[idcar][cAngle] = a;
                                                Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora su vehículo premium aparecerá aqui!");
                                        }
                                        else return Message(playerid, COLOR_GREY, "No estás en tu vehículo!");
                                }
                }
                else if(strcmp(params[0],"estacionar4",true) == 0)
                {
                    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GREY, "No eres el conductor.");
                        if(IsAnOwnableCar(idcar))
                        {
                            if(PlayerInfo[playerid][pCarPremium2] == 9999) return Message(playerid, COLOR_GREY, "Usted no tiene un coche premium.");
                                        if(idcar == PlayerInfo[playerid][pCarPremium2])
                            {
                                                GetVehiclePos(idcar, x, y, z);
                                                GetVehicleZAngle(idcar, a);
                                                CarInfo[idcar][cLocationx] = x;
                                                CarInfo[idcar][cLocationy] = y;
                                                CarInfo[idcar][cLocationz] = z;
                                                CarInfo[idcar][cAngle] = a;
                                                Message(playerid, COLOR_GRAD2, "Nuevas coordenadas guardadas. ¡Ahora su vehículo premium aparecerá aqui!");
                                        }
                                        else return Message(playerid, COLOR_GREY, "No estás en tu vehículo!");
                                }
                }
                else if(strcmp(params[0],"seguro",true) == 0)
                {
                if(PlayerInfo[playerid][pPcarkey] != 9999)
                {
                    GetVehiclePos(keycar, x, y, z);
                    if(PlayerToPoint(20.0,playerid, x, y, z))
                    {
                                if(CarInfo[keycar][cLock] == 1)
                        {
                                                        SetVehicleParamsEx(keycar,engine,lights,alarm,0,bonnet,boot,objective);
                                                        GameTextForPlayer(playerid, "~w~vehiculo ~g~abierto", 3000, 3);
                                                        CarInfo[keycar][cLock] = 0;
                                                        ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
                                                        format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), CarInfo[keycar][cName]);
                                                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                                        return 1;
                                                }
                                                else if(CarInfo[keycar][cLock] == 0)
                                                {
                                                SetVehicleParamsEx(keycar,engine,lights,alarm,1,bonnet,boot,objective);
                                                        GameTextForPlayer(playerid, "~w~vehiculo ~r~cerrado", 3000, 3);
                                                        CarInfo[keycar][cLock] = 1;
                                                        ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
                                                        format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), CarInfo[keycar][cName]);
                                                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                                        return 1;
                                                }
                                        } else return Message(playerid, COLOR_GREY, "¡No hay señal!");
                }
                                else return Message(playerid, COLOR_GREY, "Usted no tiene un vehículo.");
                }
                else if(strcmp(params[0],"seguro2",true) == 0)
                {
                if(PlayerInfo[playerid][pPcarkey2] != 9999)
                {
                    GetVehiclePos(keycar2, x, y, z);
                    if(PlayerToPoint(20.0,playerid, x, y, z))
                    {
                                if(CarInfo[keycar2][cLock] == 1)
                        {
                                                        SetVehicleParamsEx(keycar2,engine,lights,alarm,0,bonnet,boot,objective);
                                                        GameTextForPlayer(playerid, "~w~vehiculo ~g~abierto", 3000, 3);
                                                        CarInfo[keycar2][cLock] = 0;
                                                        ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
                                                        format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), CarInfo[keycar2][cName]);
                                                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                                        return 1;
                                                }
                                                else if(CarInfo[keycar2][cLock] == 0)
                                                {
                                                SetVehicleParamsEx(keycar2,engine,lights,alarm,1,bonnet,boot,objective);
                                                        GameTextForPlayer(playerid, "~w~vehiculo ~r~cerrado", 3000, 3);
                                                        CarInfo[keycar2][cLock] = 1;
                                                        ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
                                                        format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), CarInfo[keycar2][cName]);
                                                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                                        return 1;
                                                }
                                        } else return Message(playerid, COLOR_GREY, "¡No hay señal!");
                }
                                else return Message(playerid, COLOR_GREY, "Usted no tiene un vehículo.");
                }
                else if(strcmp(params[0],"seguro3",true) == 0)
                {
                    new keycar3 = PlayerInfo[playerid][pCarPremium];
                                if(PlayerInfo[playerid][pCarPremium] != 9999)
                    {
                                        GetVehiclePos(keycar3, x, y, z);
                        if(PlayerToPoint(20.0,playerid, x, y, z))
                        {
                                if(CarInfo[keycar3][cLock] == 1)
                                {
                                        SetVehicleParamsEx(keycar3,engine,lights,alarm,0,bonnet,boot,objective);
                                        GameTextForPlayer(playerid, "~w~vehiculo ~g~abierto", 3000, 3);
                                        CarInfo[keycar3][cLock] = 0;
                                        ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
                                format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), CarInfo[keycar3][cName]);
                                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                return 1;
                                                }
                                                else if(CarInfo[keycar3][cLock] == 0)
                                                {
                                                SetVehicleParamsEx(keycar3,engine,lights,alarm,1,bonnet,boot,objective);
                                                        GameTextForPlayer(playerid, "~w~vehiculo ~r~cerrado", 3000, 3);
                                                        CarInfo[keycar3][cLock] = 1;
                                                        ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
                                                        format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), CarInfo[keycar3][cName]);
                                                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                                        return 1;
                                                }
                                        } else return Message(playerid, COLOR_GREY, "¡No hay señal!");
                }
                else return Message(playerid, COLOR_GREY, "Usted no tiene un vehículo.");
                }
                else if(strcmp(params[0],"seguro4",true) == 0)
                {
                    new keycar4 = PlayerInfo[playerid][pCarPremium2];
                                if(PlayerInfo[playerid][pCarPremium2] != 9999)
                    {
                                        GetVehiclePos(keycar4, x, y, z);
                        if(PlayerToPoint(20.0,playerid, x, y, z))
                        {
                                if(CarInfo[keycar4][cLock] == 1)
                                {
                                        SetVehicleParamsEx(keycar4,engine,lights,alarm,0,bonnet,boot,objective);
                                        GameTextForPlayer(playerid, "~w~vehiculo ~g~abierto", 3000, 3);
                                        CarInfo[keycar4][cLock] = 0;
                                        ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Abierto) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
                                format(string, sizeof(string), "* %s abre su %s.", PlayerName(playerid), CarInfo[keycar4][cName]);
                                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                return 1;
                                                }
                                                else if(CarInfo[keycar4][cLock] == 0)
                                                {
                                                SetVehicleParamsEx(keycar4,engine,lights,alarm,1,bonnet,boot,objective);
                                                        GameTextForPlayer(playerid, "~w~vehiculo ~r~cerrado", 3000, 3);
                                                        CarInfo[keycar4][cLock] = 1;
                                                        ProxDetector(30.0, playerid, "* ¡Bip Bip!  (Vehículo Cerrado) *", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
                                                        format(string, sizeof(string), "* %s cierra con seguro su %s.", PlayerName(playerid), CarInfo[keycar4][cName]);
                                                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                                        return 1;
                                                }
                                        } else return Message(playerid, COLOR_GREY, "¡No hay señal!");
                }
                else return Message(playerid, COLOR_GREY, "Usted no tiene un vehículo.");
                }
                else if(strcmp(params[0],"tiempo",true) == 0)
                {
                                new
                                TiempoVeh = CarInfo[idcar][cVehTime] - gettime(),
                                dias = TiempoVeh/60/60/24,
                                horas = TiempoVeh/60/60 - dias*24,
                                minutos = TiempoVeh/60 - dias*24*60 - horas*60;
                if(PlayerInfo[playerid][pPcarkey] == 9999 && PlayerInfo[playerid][pPcarkey2] == 9999) return Message(playerid, COLOR_GRAD2,"¡No tienes vehículo!");
                if(idcar != PlayerInfo[playerid][pPcarkey] && idcar != PlayerInfo[playerid][pPcarkey2]) return Message(playerid, COLOR_GRAD2,"¡No estás en tu vehículo!");
                            format(string, sizeof(string), "{FF8000}%d {FFFFFF}Dias, {FF8000}%d {FFFFFF}Horas, {FF8000}%d {FFFFFF}Minutos de vigencia vehicular.", dias, horas, minutos);
                                return Message(playerid, COLOR_WHITE, string);
                        }
                else if(strcmp(params[0],"vender",true) == 0)
                {
                    if(IsAtDealership(playerid))
                    {
                        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey])
                        {
                            if(PlayerInfo[playerid][pPcarkey] == 9999) return Message(playerid, COLOR_GRAD2,"¡No tienes vehículo!");
                            new ownvehkey;
                            if(idcar == PlayerInfo[playerid][pPcarkey]) ownvehkey = PlayerInfo[playerid][pPcarkey];
                            else return Message(playerid, COLOR_GRAD2,"¡No estás en tu vehículo!");
                            if(strcmp(PlayerName(playerid), CarInfo[ownvehkey][cOwner], true) == 0)
                            {
                                new carsellprice = CarInfo[ownvehkey][cValue] / 4 * 3;
                                CarInfo[ownvehkey][cOwned] = 0;
                                strmid(CarInfo[ownvehkey][cOwner], "Concesionario", 0, strlen("Concesionario"), 999);
                                        strmid(CarInfo[ownvehkey][cName], GetVehicleFriendlyName(ownvehkey), 0, strlen(GetVehicleFriendlyName(ownvehkey)), 999);
                            strmid(CarInfo[ownvehkey][cPlate], "For Sale", 0, strlen("For Sale"), 9999);
                            SetVehicleNumberPlate(ownvehkey,CarInfo[ownvehkey][cPlate]);
                                                        Earn(playerid, carsellprice);
                            if(PlayerToPoint(30.0,playerid,544.5143,-1280.5714,17.2482))    Till(6, carsellprice/3);
                                                        if(PlayerToPoint(30.0,playerid,1045.3408,-905.2751,42.6273))    Till(7, carsellprice/3);
                                                if(PlayerToPoint(50.0,playerid,2152.0850,-1150.7964,24.1398))   Till(8, carsellprice/3);
                                                if(PlayerToPoint(20.0,playerid,633.4413,-1950.7174,1.6708))     Till(15, carsellprice/3);
                                format(string, sizeof(string), "* Has vendido tu vehículo por %d$", carsellprice);
                                Message(playerid, COLOR_GREEN, string);
                                GetVehiclePos(ownvehkey, x, y, z);
                                GetVehicleZAngle(ownvehkey, a);
                                CarInfo[ownvehkey][cLocationx] = x;
                                CarInfo[ownvehkey][cLocationy] = y;
                                CarInfo[ownvehkey][cLocationz] = z;
                                CarInfo[ownvehkey][cAngle] = a;
                            CarInfo[ownvehkey][cBattery] = 0;
                            CarInfo[ownvehkey][cGas] = 0;
                            CarInfo[ownvehkey][cAlarm] = 0;
                            CarInfo[ownvehkey][cVehTime] = 1999999999;
                            CarInfo[ownvehkey][cLock] = 0;
                            CarInfo[ownvehkey][cSpoiler] = 0;
                            CarInfo[ownvehkey][cHood] = 0;
                            CarInfo[ownvehkey][cRoof] = 0;
                            CarInfo[ownvehkey][cSideskirt] = 0;
                            CarInfo[ownvehkey][cNitro] = 0;
                            CarInfo[ownvehkey][cLamps] = 0;
                            CarInfo[ownvehkey][cExhaust] = 0;
                            CarInfo[ownvehkey][cWheel] = 0;
                            CarInfo[ownvehkey][cHydraulics] = 0;
                            CarInfo[ownvehkey][cPaintjob] = 0;
                            CarInfo[ownvehkey][cFrontBumper] = 0;
                            CarInfo[ownvehkey][cVents] = 0;
                            CarInfo[ownvehkey][cEmbargo] = 0;
                            CarInfo[ownvehkey][cMulta] = 0;
                            CarInfo[ownvehkey][cGPS] = 0;
                                PlayerInfo[playerid][pPcarkey] = 9999;
                                PlayerInfo[playerid][pTimeCar] = 0;
                                RemovePlayerFromVehicle(playerid);
                                RespawnVehicle(idcar);
                                TogglePlayerControllable(playerid, 1);
                                UpdateCars();
                                return 1;
                            } else return Message(playerid, COLOR_GRAD2,"Este vehículo no está a tu nombre!");
                        } else return Message(playerid, COLOR_GREY, "  Usted tiene que sentarse en su propio coche para venderlo! ");
                    } else return Message(playerid, COLOR_GREY, "¡No estás en un concesionario!");
                        }
                        else if(strcmp(params[0],"vender2",true) == 0)
                {
                    if(IsAtDealership(playerid))
                    {
                        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2])
                        {
                            if(PlayerInfo[playerid][pPcarkey2] == 9999) return Message(playerid, COLOR_GRAD2,"¡No tienes vehículo!");
                            new ownvehkey2;
                            if(idcar == PlayerInfo[playerid][pPcarkey2]) ownvehkey2 = PlayerInfo[playerid][pPcarkey2];
                            else return Message(playerid, COLOR_GRAD2,"¡No estás en tu vehículo!");
                            if(strcmp(PlayerName(playerid), CarInfo[ownvehkey2][cOwner], true) == 0)
                            {
                                new carsellprice = CarInfo[ownvehkey2][cValue] / 4 * 3;
                                CarInfo[ownvehkey2][cOwned] = 0;
                                strmid(CarInfo[ownvehkey2][cOwner], "Concesionario", 0, strlen("Concesionario"), 999);
                                        strmid(CarInfo[ownvehkey2][cName], GetVehicleFriendlyName(ownvehkey2), 0, strlen(GetVehicleFriendlyName(ownvehkey2)), 999);
                            strmid(CarInfo[ownvehkey2][cPlate], "For Sale", 0, strlen("For Sale"), 9999);
                            SetVehicleNumberPlate(ownvehkey2,CarInfo[ownvehkey2][cPlate]);
                                                        Earn(playerid, carsellprice);
                                                        if(PlayerToPoint(30.0,playerid,544.5143,-1280.5714,17.2482))    Till(6, carsellprice/3);
                                                        if(PlayerToPoint(30.0,playerid,1045.3408,-905.2751,42.6273))    Till(7, carsellprice/3);
                                                if(PlayerToPoint(50.0,playerid,2152.0850,-1150.7964,24.1398))   Till(8, carsellprice/3);
                                                if(PlayerToPoint(20.0,playerid,633.4413,-1950.7174,1.6708))     Till(15, carsellprice/3);
                                format(string, sizeof(string), "* Has vendido tu vehículo por %d$", carsellprice);
                                Message(playerid, COLOR_GREEN, string);
                                GetVehiclePos(ownvehkey2, x, y, z);
                                GetVehicleZAngle(ownvehkey2, a);
                                CarInfo[ownvehkey2][cLocationx] = x;
                                CarInfo[ownvehkey2][cLocationy] = y;
                                CarInfo[ownvehkey2][cLocationz] = z;
                                CarInfo[ownvehkey2][cAngle] = a;
                            CarInfo[ownvehkey2][cBattery] = 0;
                            CarInfo[ownvehkey2][cGas] = 0;
                            CarInfo[ownvehkey2][cAlarm] = 0;
                            CarInfo[ownvehkey2][cVehTime] = 1999999999;
                            CarInfo[ownvehkey2][cLock] = 0;
                            CarInfo[ownvehkey2][cSpoiler] = 0;
                            CarInfo[ownvehkey2][cHood] = 0;
                            CarInfo[ownvehkey2][cRoof] = 0;
                            CarInfo[ownvehkey2][cSideskirt] = 0;
                            CarInfo[ownvehkey2][cNitro] = 0;
                            CarInfo[ownvehkey2][cLamps] = 0;
                            CarInfo[ownvehkey2][cExhaust] = 0;
                            CarInfo[ownvehkey2][cWheel] = 0;
                            CarInfo[ownvehkey2][cHydraulics] = 0;
                            CarInfo[ownvehkey2][cPaintjob] = 0;
                            CarInfo[ownvehkey2][cFrontBumper] = 0;
                            CarInfo[ownvehkey2][cVents] = 0;
                            CarInfo[ownvehkey2][cEmbargo] = 0;
                            CarInfo[ownvehkey2][cMulta] = 0;
                            CarInfo[ownvehkey2][cGPS] = 0;
                                PlayerInfo[playerid][pPcarkey2] = 9999;
                                PlayerInfo[playerid][pTimeCar2] = 0;
                                RemovePlayerFromVehicle(playerid);
                                RespawnVehicle(idcar);
                                TogglePlayerControllable(playerid, 1);
                                UpdateCars();
                                return 1;
                            } else return Message(playerid, COLOR_GRAD2,"Este vehículo no está a tu nombre!");
                        } else return Message(playerid, COLOR_GREY, "  Usted tiene que sentarse en su propio coche para venderlo! ");
                    } else return Message(playerid, COLOR_GREY, "¡No estás en un concesionario!");
                        }
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /v <Item>");
            Message(playerid, COLOR_GRAD2, "Item: motor(2), luces(2), capo(2), maletero(2), seguro(2), vender(2), estacionar(2), tiempo, seguroveh");
        }
        return 1;
    }
	zcmd(venderveh, playerid, params[])
	{
	    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey])
	    {
            new ownvehkey, idcar = GetPlayerVehicleID(playerid);
	        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { ownvehkey = PlayerInfo[playerid][pPcarkey]; }
			if(strcmp(PlayerName(playerid), CarInfo[ownvehkey][cOwner], true) == 0)
	        {
				if(!sscanf(params, "ud", params[0],params[1]))
				{
				    if(IsPlayerConnected(params[0]))
				    {
				        if(PlayerInfo[params[0]][pLevel] > 1)
				        {
				            if(ProxDetectorS(8.0, playerid, params[0]))
				            {
					            if(GetPlayerMoney(params[0]) >= params[1])
					            {
									if(PlayerInfo[params[0]][pPcarkey] == 9999)
									{
										OwnableCarOffer[params[0]] = playerid;
										OwnableCarID[params[0]] = idcar;
										OwnableCarPrice[params[0]] = params[1];
    									Petition_ID[params[0]] = 3;
						        	    Facturing[params[0]] = 1;
										new string[128];
										format(string, sizeof(string), "Ofreciste a %s tu vehículo por %d$", PlayerName(params[0]), OwnableCarPrice[params[0]]);
						        		SendClientMessage(playerid, COLOR_WHITE, string);
						        		format(string, sizeof(string), "\t\t-- Compra de Vehículo --\t\t\n\t* %s te ofrece su %s a %d$, ¿acepta?", PlayerName(playerid), CarInfo[PlayerInfo[playerid][pPcarkey]][cName], OwnableCarPrice[params[0]]);
						        		SendRequest(params[0],  string);
									} else Message(playerid, COLOR_GRAD2, "El jugador ya tiene 1 vehículo.");
								} else Message(playerid, COLOR_GRAD2, "El jugador no tiene fondos suficientes.");
							} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				        } else Message(playerid, COLOR_GRAD2, "El jugador necesita ser nivel 2 mínimo.");
				    } else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
				} else Message(playerid, COLOR_GRAD2, "Utilize: /venderveh <PlayerID> <Cantidad>");
	        } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    return 1;
 	}
 	zcmd(venderveh2, playerid, params[])
	{
	    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2])
	    {
            new ownvehkey2, idcar = GetPlayerVehicleID(playerid);
	        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { ownvehkey2 = PlayerInfo[playerid][pPcarkey2]; }
			if(strcmp(PlayerName(playerid), CarInfo[ownvehkey2][cOwner], true) == 0)
	        {
				if(!sscanf(params, "ud", params[0],params[1]))
				{
				    if(IsPlayerConnected(params[0]))
				    {
				        if(PlayerInfo[params[0]][pLevel] > 4)
				        {
				            if(ProxDetectorS(8.0, playerid, params[0]))
				            {
				                if(GetPlayerMoney(params[0]) >= params[1])
					            {
									if(PlayerInfo[params[0]][pPcarkey2] == 9999)
									{
										OwnableCarOffer[params[0]] = playerid;
										OwnableCarID[params[0]] = idcar;
										OwnableCarPrice[params[0]] = params[1];
    									Petition_ID[params[0]] = 4;
						        	    Facturing[params[0]] = 1;
										new string[128];
										format(string, sizeof(string), "Ofreciste a %s tu vehículo por %d$", PlayerName(params[0]), OwnableCarPrice[params[0]]);
						        		SendClientMessage(playerid, COLOR_WHITE, string);
						        		format(string, sizeof(string), "\t\t-- Compra de Vehículo --\t\t\n\t* %s te ofrece su %s a %d$, ¿acepta?", PlayerName(playerid), GetVehicleFriendlyName(CarInfo[PlayerInfo[playerid][pPcarkey]][cName]), OwnableCarPrice[params[0]]);
						        		SendRequest(params[0],  string);
									} else Message(playerid, COLOR_GRAD2, "El jugador ya tiene 1 vehículo en su 2do slot.");
								} else Message(playerid, COLOR_GRAD2, "El jugador no tiene fondos suficientes.");
							} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				        } else Message(playerid, COLOR_GRAD2, "El jugador necesita ser nivel 5 mínimo.");
				    } else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
				} else Message(playerid, COLOR_GRAD2, "Utilize: /venderveh2 <PlayerID> <Cantidad>");
	        } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    return 1;
 	}
    zcmd(desrentarveh, playerid, params[])
    {
        if(HireKey[playerid] == 9999) return Message(playerid, COLOR_GRAD2, "No has rentado ningún vehículo!");
  			SetVehicleToRespawn(HireKey[playerid]);
  			Earn(playerid, 100);
		    SetVehicleParamsEx(HireKey[playerid],0,0,0,0,0,0,0);
			engineOn[HireKey[playerid]] = false;
  			HireKey[playerid] = 9999;
  			switch(HireKey[playerid]){
	    		case 35..38,125..147:  Till(14, -100);
			    case 252..257: Till(15, -100);
  			}
        return 1;
    }
    zcmd(desveh, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
        SetVehicleToRespawn(HireKey[playerid]);
        SetVehicleParamsEx(HireKey[playerid],0,0,0,0,0,0,0);
		engineOn[HireKey[playerid]] = false;
		HireKey[playerid] = 9999;
		return 1;
    }
	zcmd(subirnivel, playerid, params[]){
	    if(PlayerInfo[playerid][pLevel] >= 0){
			new nxtlevel = PlayerInfo[playerid][pLevel]+1, expamount = nxtlevel*levelexp, infostring[128];
			if(PlayerInfo[playerid][pExp] < expamount){
				format(infostring, 128, "Necesitas %d/%d puntos de respeto para subir de nivel.",expamount,PlayerInfo[playerid][pExp]);
				Message(playerid, COLOR_GRAD1, infostring);
			}
			else{
				format(infostring, sizeof(infostring), "~w~Felicidades!! ~n~~n~Ahora eres nivel ~g~%d", nxtlevel);
				GameTextForPlayer(playerid, infostring, 5000, 3);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				PlayerInfo[playerid][pLevel]++;
				PlayerInfo[playerid][pExp] = 0;
			}
		}
	    return 1;
 	}
    zcmd(revisar, playerid, params[]){
		if(!sscanf(params, "u", params[0])){
            if(IsPlayerConnected(params[0]) && ProxDetectorS(8.0,playerid,params[0])){
				new wh_q,sweapon,sammo,drugs,string[128];
    			for (new i=0; i<9; i++){
       				GetPlayerWeaponData(params[0], i, sweapon, sammo);
			        if(sweapon != 0 && sammo != 0)  wh_q ++;
			    }
       			if(wh_q > 0) Message(playerid, COLOR_GRAD2, "El sujeto va armado.");
		        else 		Message(playerid, COLOR_GRAD2, "El sujeto no porta armas.");

		        if(PlayerInfo[params[0]][pSpeed] > 0)    drugs++;
		        if(PlayerInfo[params[0]][pEctasy] > 0)   drugs++;
		        if(PlayerInfo[params[0]][pRitalin] > 0)  drugs++;
		        if(PlayerInfo[params[0]][pHeroina] > 0)  drugs++;
		        if(PlayerInfo[params[0]][pMarihuana] > 0)  drugs++;

		        if(drugs > 0) Message(playerid, COLOR_GRAD2, "El sujeto contiene drogas.");
		        else 		Message(playerid, COLOR_GRAD2, "El sujeto no porta drogas.");

		        if(PlayerInfo[params[0]][pMats] > 0) Message(playerid, COLOR_GRAD2, "El sujeto porta material armamentístico.");
		        else 		Message(playerid, COLOR_GRAD2, "El sujeto no porta material armamentístico.");

				format(string, sizeof(string), "* %s revisa a %s en busca de objetos.", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado o muy lejos.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /revisar <PlayerID>");
        return 1;
    }
   	zcmd(cinturon, playerid, params[]){
        if(IsPlayerInAnyVehicle(playerid)){
   			if(!BikeModel(playerid)){
			    new string[90];
   				if(UsingBelt[playerid] == 0){
       				format(string, sizeof(string), "* %s se abrocha el cinturón.", PlayerName(playerid));
			        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			        UsingBelt[playerid] = 1;
				}
				else{
    				format(string, sizeof(string), "* %s se desabrocha el cinturón.", PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        	UsingBelt[playerid] = 0;
				}
			}
		} else Message(playerid, COLOR_GRAD2, "No estás en un vehículo.");
        return 1;
    }
    zcmd(vercinturon, playerid, params[]){
        if(!Team_LSPD(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres policía!");
        if(!sscanf(params, "u", params[0])){
            if(!IsPlayerConnected(params[0])) 				return Message(playerid, COLOR_GREY, "Jugador desconectado.");
            if(!IsPlayerInAnyVehicle(params[0]))            return Message(playerid, COLOR_GREY, "El jugador no está en un vehículo.");
            if(!ProxDetectorS(5.0, playerid, params[0]))    return Message(playerid, COLOR_GREY, "Jugador muy lejos.");
            new string[90];
            if(UsingBelt[params[0]] == 1){
   				format(string, sizeof(string), "* %s tiene el cinturón abrochado.",PlayerName(params[0]));
				Message(playerid, COLOR_GREEN, string);
			}
			else{
   				format(string, sizeof(string), "* %s no tiene el cinturón abrochado.",PlayerName(params[0]));
			    Message(playerid, COLOR_RED, string);
			}
	 		format(string, sizeof(string), "* %s revisa el cinturón de %s", PlayerName(playerid), PlayerName(params[0]));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /vercinturon <PlayerID>");
        return 1;
    }
    zcmd(revisarcarga, playerid, params[])
    {
        if(!IsACop(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No perteneces a un cuerpo de justicia!");
        if(!sscanf(params, "u", params[0])){
        	if(!IsPlayerConnected(params[0])) 				return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        	if(!ProxDetectorS(5.0, playerid, params[0]))    return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        	new string[100], Carga[25]
        	switch(Mercancia[params[0]])
        	{
        	    case 0: Carga = "Nada";
            	case 1: Carga = "Prendas de Vestir";
            	case 2: Carga = "Comida y Accesorios";
            	case 3: Carga = "Medicamentos";
            	case 4: Carga = "Materiales Legales";
            	case 5: Carga = "Materiales Ilegales";
            	case 6: Carga = "Detergentes"
        	}
        	if(PlayerIsRuta[params[0]] == 3) format(string, sizeof(string), "* El camión de %s esta vacio.",PlayerName(params[0]));
			else format(string, sizeof(string), "* El camión de %s va cargado con %s.",PlayerName(params[0]), Carga);
			Message(playerid, COLOR_GREEN, string);
        	format(string, sizeof(string), "* %s revisa el camión de %s", PlayerName(playerid), PlayerName(params[0]));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /revisarcarga <PlayerID>");
		return 1;
    }
    zcmd(quitarcarga, playerid, params[])
    {
        if(!Team_LSPD(playerid) && !Team_NG(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No perteneces a un cuerpo de justicia!");
        if(!sscanf(params, "u", params[0])){
            if(!IsPlayerConnected(params[0])) 				return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        	if(!ProxDetectorS(5.0, playerid, params[0]))    return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        	if(Mercancia[params[0]] == 0 || PlayerIsRuta[params[0]] == 3)   return Message(playerid, COLOR_GRAD2, "El jugador no tiene ninguna carga.");
            new string[100];
            format(string, sizeof(string), "* %s incauta la mercancia del camión de %s", PlayerName(playerid), PlayerName(params[0]));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Message(playerid, COLOR_GRAD2, "* Tu faccion ha ganado {FF4564}2000$ {FFFFFF}gracias a la carga incautada.");
            Message(params[0], COLOR_GRAD2, "* Han incautado la mercancia que debias entregar.");
            if(Team_LSPD(playerid)) Fondos[LSPD] += 2000;
            if(Team_NG(playerid))   Fondos[SAEM] += 2000;
			SetVehicleToRespawn(Camion[params[0]]);
            Camion[params[0]] = 9999;
       		Mercancia[params[0]] = 0;
       		PlayerIsRuta[params[0]] = 0;
       		PlayerCargando[params[0]] = 0;
       		PlayerDescargando[params[0]] = 0;
       		DisablePlayerCheckpoint(params[0]);
 		} else Message(playerid, COLOR_GRAD2, "Utilize: /quitarcarga <PlayerID>");
 		return 1;
    }
    zcmd(remolcar, playerid, params[])
	{
	    if(!Team_LSPD(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres policia!");
        Remolcar(playerid);
        return 1;
	}
    zcmd(hits, playerid, params[])
    {
        if(Hitman(playerid)) SearchHit(playerid);
		else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
    zcmd(quitar, playerid, params[])
    {
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No puedes hacer esto!");
        new item[32], string[128];
        if(!sscanf(params, "s[32]u", item, params[1]))
        {
            if(!IsPlayerConnected(params[1]))               return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(strcmp(item,"lconduccion",true) == 0)
			{
			    PlayerInfo[params[1]][pCarLic] = 0;
			    format(string, sizeof(string), "* Oficial %s quita la licencia de conducción a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"lvuelo",true) == 0)
			{
			    PlayerInfo[params[1]][pFlyLic] = 0;
			    format(string, sizeof(string), "* Oficial %s quita la licencia de vuelo a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"larma",true) == 0)
			{
			    PlayerInfo[params[1]][pGunLic] = 0;
		        format(string, sizeof(string), "* Oficial %s quita la licencia de armas a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"drogas",true) == 0)
			{
                PlayerInfo[params[1]][pHeroina] = 0;
                PlayerInfo[params[1]][pMarihuana] = 0;
                PlayerInfo[params[1]][pRitalin] = 0;
                PlayerInfo[params[1]][pEctasy] = 0;
                PlayerInfo[params[1]][pSpeed] = 0;
			    format(string, sizeof(string), "* Oficial %s quita las drogas a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"materiales",true) == 0)
			{
                PlayerInfo[params[1]][pMats] = 0;
			    format(string, sizeof(string), "* Oficial %s quita los materiales a %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"telefono",true) == 0)
			{
                PlayerInfo[params[1]][pPnumber] = 0;
			    format(string, sizeof(string), "* Oficial %s quita el teléfono %s.", PlayerName(playerid), PlayerName(params[1]));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"armas",true) == 0)
			{
			    ResetPlayerWeapons(params[1]);
       			format(string, sizeof(string), "* Oficial %s le quita las armas a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else Message(playerid, COLOR_GRAD2, "Item incorrecto.");
		}
		else
		{
		    Message(playerid, COLOR_GRAD2, "Utilize: /quitar <item> <PlayerID>");
		    Message(playerid, COLOR_GRAD2, "Items: lconduccion, lvuelo, larma, drogas, materiales, telefono, armas");
		}
        return 1;
	}
    zcmd(drag, playerid, params[])
    {
        new carid = GetPlayerVehicleID(playerid);
        if(!IsACop(playerid)) return Message(playerid, COLOR_GRAD2, "No eres policía.");
        if(!LSPD_IsACopCar(carid) && !SAEM_Vehicle(carid) && !FBI_Vehicle(carid)) return Message(playerid, COLOR_GREY, "¡No estás en una patrulla!");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
    		{
    		    if(!ProxDetectorS(8.0,playerid,params[0])) return Message(playerid, COLOR_GREY, "¡Demasiado lejos!");
    		    new Float:x, Float:y, Float:z, string[128];
          		GetPlayerPos(params[0],x,y,z);
          		PutPlayerInVehicle(params[0],GetPlayerVehicleID(playerid),1);
          		format(string, sizeof(string), "Oficial %s sube forzosamente a %s a la patrulla", PlayerName(playerid), PlayerName(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
    		}
    		else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /drag <PlayerID>");
        return 1;
    }
    zcmd(getip, playerid, params[])
    {
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GREY, "¡No autorizado!");
        if(!sscanf(params, "u", params[0]))
        {
            new ip[20], string[64];
            GetPlayerIp(params[0],ip,sizeof(ip));
            format(string, sizeof(string), "* Player: %s IP: %s", PlayerName(params[0]), ip);
            Message(playerid, COLOR_GRAD2, string);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /getip <PlayerID>");
        return 1;
    }
    zcmd(unbanip, playerid, params[])
    {
    	if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[90];
            format(string,sizeof(string),"unbanip %s",params[0]);
            SendRconCommand(string);
			SendRconCommand("reloadbans");
			format(string, sizeof(string), "IP desbaneada por %s (%s)", PlayerName(playerid), params[0]);
			A_Info(string);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /unbanip <IP>");
        return 1;
    }
   	zcmd(unban, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "s[32]", params[0])){
        	if(strfind(params[0], "_" , true) != -1){
        		new string3[64], string[128];
    			format(string3,sizeof(string3),"users/%s.ini",params[0]);
    			if(INI_Exist(string3)){
    				new INI:ini = INI_Open(string3);
   					INI_WriteInt(ini, "Locked", 0);
   					INI_WriteInt(ini, "Advertencias", 0);
   					INI_Close(ini);
   					format(string, sizeof(string), "%s desbaneó a %s",PlayerName(playerid), params[0]);
   					A_Info(string);
   				} else Message(playerid, COLOR_GRAD2, "¡Esa cuenta no existe!");
			} else Message(playerid, COLOR_GRAD2, "Ejemplo de Uso: /unban Juan_Perez");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /unban <Nombre_Jugador>");
    	return 1;
   	}
    zcmd(fly, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] >= 1){
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py+15, pz+5);
				}
				if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-30, py, pz+5);
				}
				if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py-15, pz+5);
				}
				if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py-30, pz+5);
				}
				if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py-15, pz+5);
				}
				if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+30, py, pz+5);
				}
				if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
		} else Message(playerid, COLOR_GRAD1, "¡No autorizado!");
        return 1;
    }
   	zcmd(cuenta, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid);
			}
		}
		return 1;
	}
		
	zcmd(changepass, playerid, params[])
	{
		new string[128];
  		if(sscanf(params, "s[128]", params[0])) return Message(playerid,COLOR_GRAD2, "Utiliza: /changepass <contraseña>");
   		strmid(PlayerInfo[playerid][pKey], params[0], 0, strlen(params[0]), 24);
		format(string, sizeof(string), "Nueva Contraseña: %s", params[0]);
		Message(playerid, COLOR_GRAD1, string);
		OnPlayerUpdateTime(playerid);
		return 1;
	}
	zcmd(gob, playerid, params[])
	{
		new string[128], prank[64];
	    if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /gob <Texto>");
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
    	if(PlayerInfo[playerid][pLeader] == 1)
		{
 			format(string, sizeof(string), "[LSPD] Comisario %s: %s", PlayerName(playerid), params[0]);
			GlobalMsg(0x00ACFFFF, string);
		}
  		else if(PlayerInfo[playerid][pLeader] == 3)
   		{
    		format(string, sizeof(string), "[GNSA] Coronel %s: %s", PlayerName(playerid), params[0]);
	    	GlobalMsg(0x00ACFFFF, string);
		}
		else if(Gobierno(playerid))
		{
			switch(PlayerInfo[playerid][pRank])
  			{
				case 5:     prank = "Presidente";
				case 4:     prank = "Vice-Presidente";
				case 3:     prank = "Alcalde de LS";
      		}
			if(PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
			format(string, sizeof(string), "[GOBIERNO] %s %s: %s", prank, PlayerName(playerid), params[0]);
			GlobalMsg(0x00ACFFFF, string);
		}
		else if(PlayerInfo[playerid][pLeader] == 24)
		{
			format(string, sizeof(string), "[FBI] Director %s: %s", PlayerName(playerid), params[0]);
			GlobalMsg(0x00ACFFFF, string);
		}
		else if(PlayerInfo[playerid][pLeader] == 25)
		{
			format(string, sizeof(string), "[Corte Judicial] Juez %s: %s", PlayerName(playerid), params[0]);
			GlobalMsg(0x00ACFFFF, string);
		}
		
		else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		return 1;
	}
 	zcmd(impuesto, playerid, params[])
	{
	    if(Presidente(playerid))
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if(params[0] < 0 || params[0] > 600) return Message(playerid, COLOR_GRAD2, "Valor entre 1 - 600");

	            new string[90];
	            TaxValue = params[0];
				SaveStuff();
				format(string, sizeof(string), "* [GOBIERNO] El impuesto por ciudano se ha establecido en %d$.", TaxValue);
				GlobalMsg(0x00ACFFFF, string);

	        }
	        else Message(playerid, COLOR_GRAD2, "Utilize: /impuesto <cantidad>");
	    }
	    else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    return 1;
 	}
 	zcmd(fondoestado, playerid, params[])
	{
	    new string[90];
	    if(Presidente(playerid))
	    {
	        if(!sscanf(params, "i", params[0]))
	        {
	            if (params[0] > Tax || params[0] < 1) return Message(playerid, COLOR_GRAD2, "Cantidad erróena.");

				PlayerInfo[playerid][pAccount] += params[0];    Tax -= params[0];

				format(string, sizeof(string), "Extraiste %d$ de los fondos del estado (%d$)", params[0],Tax);
				Message(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "Los fondos extraídos pasaron a tu cuenta bancaria (%d$)", PlayerInfo[playerid][pAccount]);
				Message(playerid, COLOR_YELLOW2, string);
				SaveStuff();
	        }
	        else
	        {
	            Message(playerid, COLOR_GRAD2, "Utilize: /fondoestado <cantidad>");
	            format(string, 90, "* Hay %d de fondos.", Tax);
	            Message(playerid, COLOR_GRAD2, string);
	        }
		}
		else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		return 1;
	}
	zcmd(altavoz, playerid, params[])
	{
        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GRAD2, "Usted no tiene un telefono.");
        if(Mobile[playerid] == 255) return Message(playerid, COLOR_GREY, "Usted no esta en una llamada telefonica.");
        if(IsPlayerConnected(playerid))
        {
			if(Speaker[playerid] == 0)
			{
				Message(playerid, COLOR_YELLOW2, "* Beep * El altavoz esta conectado.");
				Speaker[playerid] = 1;
				return 1;
			}
			if(Speaker[playerid] == 1)
			{
				Message(playerid, COLOR_YELLOW2, "* Beep * El altavoz se a desconectado.");
				Speaker[playerid] = 0;
				return 1;
			}
		}
		return 1;
	}
    zcmd(miranda, playerid, params[])
    {
        if(IsACop(playerid))
        {
            new string[128];
	        format(string, sizeof(string),"* %s lee los 'Derechos Miranda'",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        format(string, sizeof(string),"%s dice: Tienes derecho a guardar silencio, todo lo que diga puede usarse en su contra.",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: Tiene derecho a un abogado, si no puede pagar uno, se le asignará uno a costas del Estado.",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: Tiene derecho a una llamada por teléfono.",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: ¿De acuerdo señor?",PlayerName(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        }
        return 1;
    }
    zcmd(timbre, playerid, params[])
    {
        for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
			    new string[76];
   				format(string, sizeof(string), "* %s toca el timbre.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ProxDetector(30.0, playerid, "Diiing Doooong ... Diiing Doooong", COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				for(new p = 0; p < MAX_PLAYERS; p++)
				{
				    if(PlayerToPoint(30, p, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				    {
    					ProxDetector(30.0, p, "Diiing Doooong ... Diiing Doooong", COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
    				}
				}
			}
		}
		return 1;
    }
	zcmd(robar, playerid, params[])
    {
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(Pandilleros(playerid)  || Ballas_pand(playerid) || PlayerInfo[playerid][pJob] == 5)
		{
		    if(!sscanf(params, "s[32]", params[0]))
		    {
		        new string[128];
		        if(strcmp(params[0],"persona",true) == 0)
		        {
		            if(PlayerInfo[playerid][pRob] > 4) return Message(playerid, COLOR_GRAD2, "¡Ya has robado 5 veces, espera al próximo PayDay!");
		            new victim = GetClosestPlayer(playerid);
		            if(ProxDetectorS(2.0,playerid, victim))
		            {
                        if(GetPlayerWeapon(victim) == 41)
		    			{
	        				format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y falla", PlayerName(playerid), PlayerName(victim));
							ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
       						format(string, sizeof(string), "* %s le rocía la cara con un spray anti-ladrones a %s.", PlayerName(victim), PlayerName(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							PlayerInfo[playerid][pRob] += 1;
							Message(victim, COLOR_YELLOW2, "-> ¡Evitaste que te robaran!");
					    }
					    new rob = random(2);
					    if(rob == 1)
					    {
	        				PlayerInfo[victim][pPnumber] = 0;
					        format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y lo logra", PlayerName(playerid) ,PlayerName(victim));
							ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
       						format(string, sizeof(string), "* %s se acerca hacia %s y le roba su teléfono.", PlayerName(playerid) ,PlayerName(victim));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Message(victim, COLOR_YELLOW2, "-> ¡Te han robado el teléfono!");
							Message(playerid, COLOR_YELLOW2, "-> ¡Has robado un teléfono! Véndelo en el NPC");
							PlayerInfo[playerid][pRob] += 1;
							TelfRob[playerid] += 1;
						}
						else
						{
      						format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y falla", PlayerName(playerid), PlayerName(victim));
							ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
       						format(string, sizeof(string), "* %s se da cuenta y le da un golpe de puño a %s.", PlayerName(victim), PlayerName(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Message(victim, COLOR_GREEN, "-> Has evitado que te roben!");
							Message(playerid, COLOR_YELLOW, "Te han pillado! Menudo ostión te has llevado! Corre!");
							PlayerInfo[playerid][pRob] += 1;
						}
		            }
		        }
		        else if(strcmp(params[0],"24-7",true) == 0)
		        {
		            if(!IsAt247(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en el 24/7!");
		            if(PlayerInfo[playerid][pRob] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya robaste, espera al próximo PayDay!");
		            else
		            {
		            	new robmoney = random(1000);
			            Earn(playerid, robmoney);
						ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 4000); // Rob
						PlayerInfo[playerid][pRob] += 1;
						format(string, sizeof(string), "* %s amenaza con un arma al vendedor", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            }
				}
                else if(strcmp(params[0],"pizzeria",true) == 0)
		        {
		            if(PlayerToPoint(10.0,playerid,375.2100,-118.8084,1001.4995))
		            if(PlayerInfo[playerid][pRob] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya robaste, espera al próximo PayDay!");
		            else
		            {
		            	new robmoney = random(1000);
			            Earn(playerid, robmoney);
						ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 4000); 
						PlayerInfo[playerid][pRob] += 1;
						format(string, sizeof(string), "* %s amenaza con un arma al vendedor", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            }
				}
                else if(strcmp(params[0],"bar",true) == 0)
		        {
		          if(PlayerToPoint(10.0,playerid,496.6479,-76.0379,998.7578))
		            if(PlayerInfo[playerid][pRob] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya robaste, espera al próximo PayDay!");
		            else
		            {
		            	new robmoney = random(1000);
			            Earn(playerid, robmoney);
						ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 4000);
						PlayerInfo[playerid][pRob] += 1;
						format(string, sizeof(string), "* %s amenaza con un arma al vendedor", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            }
				}
                else if(strcmp(params[0],"binco",true) == 0)
		        {
		          if(PlayerToPoint(10.0,playerid,207.6917,-100.3481,1005.2578))
		            if(PlayerInfo[playerid][pRob] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya robaste, espera al próximo PayDay!");
		            else
		            {
		            	new robmoney = random(1000);
			            Earn(playerid, robmoney);
						ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 4000);
						PlayerInfo[playerid][pRob] += 1;
						format(string, sizeof(string), "* %s amenaza con un arma al vendedor", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            }
				}
		        else if(strcmp(params[0],"propiedad",true) == 0)
		        {
		            if(PickLock[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes con que forzar la cerradura!");
		            if(PlayerInfo[playerid][pRob] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya robaste, espera al próximo PayDay!");
		            for(new i = 0; i < sizeof(HouseInfo); i++)
					{
						if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
						{
						    new Float:cx,Float:cy,Float:cz;
							GetPlayerPos(playerid, cx, cy, cz);
						    new luck = random(8)
							if(luck == 3 || luck == 7)
							{
							    format(string, sizeof(string), "* %s fuerza la cerradura de la casa, entra y roba todo lo que puede.", PlayerName(playerid));
					      		ProxDetector(8.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					      		new cash = random(6000);
								PlayerInfo[playerid][pRob] = 1;
								SendRadioMessage(1, TEAM_BLUE_COLOR, "** Central: Atención se ha producido un robo en una casa de LS, acudan lo antes posible!");
								for(new x = 0; x < MAX_PLAYERS; x++)
								{
									if(IsPlayerConnected(x))
									{
					    				if(Team_LSPD(playerid))
									    {
													SetPlayerCheckpoint(x, cx, cy, cz, 3.0);
										}
									}
								}
						        Earn(playerid, cash);
				  				ProxDetector(30.0, playerid, "* Piiiiiiiiiiiiiiii Piiiiiiiiiiiiiiiii (( Alarma Sonando ))", COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				 	            return 1;
							}
							else
							{
							    format(string, sizeof(string), "* %s rompe su alambre al intentar forzar la cerradura.", PlayerName(playerid));
					      		ProxDetector(8.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					      		SendClientMessage(playerid, COLOR_YELLOW2, "Fallaste al abrir la casa ...");
					      		PlayerInfo[playerid][pRob] = 1;
					      		return 1;
							}
						}
						else Message(playerid, COLOR_GRAD2, "¡No estás cerca de una casa!");
					}
		        }
		    }
		    else Message(playerid, COLOR_GRAD2, "Utilize: /robar <24-7> <Persona> <Propiedad> <Bar> <Pizzeria> <Binco>");
		}
		return 1;
	}
	zcmd(robarbanco, playerid, params[])
	{
	    if(PlayerInfo[playerid][pLeader] < 1) return Message(playerid, COLOR_GRAD2, "¡No eres lider de una faccion!");
        if(PlayerToPoint(10.0,playerid,373.2491,-1614.2692,39.3599) || PlayerToPoint(10.0,playerid,2396.8611,2492.6538,-19.0217))
		{
			if(PlayerInfo[playerid][pLeader] == 2 && RPirata <= gettime())
			{
			    RobarBanco(playerid);
	        	RPirata = gettime() + 172800;
      		}
	    	else if(PlayerInfo[playerid][pLeader] == 9 && RGroove <= gettime())
	    	{
	        	RobarBanco(playerid);
	        	RGroove = gettime() + 172800;
     		}
	    	else if(PlayerInfo[playerid][pLeader] == 10 && RHerman <= gettime())
	    	{
	        	RobarBanco(playerid);
	        	RHerman = gettime() + 172800;
     		}
     		else if(PlayerInfo[playerid][pLeader] == 11 && RLKings <= gettime())
     		{
	        	RobarBanco(playerid);
	        	RLKings = gettime() + 172800;
			}
			else if(PlayerInfo[playerid][pLeader] == 12 && RLCN <= gettime())
			{
		    	RobarBanco(playerid);
		    	RLCN = gettime() + 172800;
			}
			else if(PlayerInfo[playerid][pLeader] == 13 && RYakuza <= gettime())
			{
		    	RobarBanco(playerid);
		    	RYakuza = gettime() + 172800;
			}
			else if(PlayerInfo[playerid][pLeader] == 14 && RRusos <= gettime())
			{
		    	RobarBanco(playerid);
		    	RRusos = gettime() + 172800;
  			}
  			else if(PlayerInfo[playerid][pLeader] == 5 && RBallas <= gettime())
			{
		    	RobarBanco(playerid);
		    	RBallas = gettime() + 172800;
  			}
    		else Message(playerid, COLOR_GRAD2, "¡No eres lider de una faccion ilegal o aun no puedes usar este comando, usa /timerob!");
   		} else Message(playerid, COLOR_GRAD2, "¡No estás en el banco!");
		return 1;
	}
	zcmd(timerob, playerid, params[])
	{
	    new string[128], facrob;
	    if(PlayerInfo[playerid][pLeader] < 1) return Message(playerid, COLOR_GRAD2, "¡No eres lider de una faccion ilegal!");
        switch(PlayerInfo[playerid][pLeader])
        {
            case 2:     facrob = RPirata;
            case 9:     facrob = RGroove;
            case 5:     facrob = RBallas;
            case 10:    facrob = RHerman;
            case 11:    facrob = RLKings;
            case 12:    facrob = RLCN;
            case 13:    facrob = RYakuza;
            case 14:    facrob = RRusos;
            default:    facrob = 9999;
       	}
		if(facrob == 9999) return Message(playerid, COLOR_GRAD2, "¡No eres lider de una faccion ilegal!");
		if(facrob == 0) return Message(playerid, COLOR_GRAD2, "* Tu faccion ya puede realizar un robo.");
		new TiempoRob = facrob - gettime(),
  		dias = TiempoRob/60/60/24,
		horas = TiempoRob/60/60 - dias*24,
		minutos = TiempoRob/60 - dias*24*60 - horas*60;
		format(string, sizeof(string), "* Faltan %d dias, %d horas, %d minutos para poder realizar un robo al banco.", dias, horas, minutos);
		Message(playerid, COLOR_GRAD4, string);
		return 1;
	}
    zcmd(ayuda, playerid, params[])
    {
        if(!sscanf(params, "s[32]", params[0]))
        {
            if		(strcmp(params[0],	"faccion",	true) == 0)   				Ayuda(playerid, 0);
            else if	(strcmp(params[0],	"chat",		true) == 0)   				Ayuda(playerid, 1);
            else if	(strcmp(params[0],	"general",		true) == 0)   			Ayuda(playerid, 2);
            else if	(strcmp(params[0],	"lider",		true) == 0)   			Ayuda(playerid, 3);
            else if	(strcmp(params[0],	"trabajo",		true) == 0)   			Ayuda(playerid, 4);
            else if	(strcmp(params[0],	"telefono",		true) == 0)   			Ayuda(playerid, 5);
            else if	(strcmp(params[0],	"casa",		true) == 0)   				Ayuda(playerid, 6);
            else if	(strcmp(params[0],	"vehiculo",		true) == 0)   			Ayuda(playerid, 7);
            else if	(strcmp(params[0],	"banco",		true) == 0)   			Ayuda(playerid, 8);
            else if	(strcmp(params[0],	"premium",		true) == 0)   			Ayuda(playerid, 9);
            else if (strcmp(params[0],  "negocio",      true) == 0)             Ayuda(playerid, 10);
        }
        else
		{
            Message(playerid, COLOR_GRAD2, "Utilize: /ayuda <nombre>");
   			Message(playerid, COLOR_GRAD2, "General, Chat, Casa, Lider, Faccion, Trabajo, Banco, Teléfono, Premium, Vehiculo, Negocio");
		}
        return 1;
    }
	zcmd(darlider, playerid, params[])
	{
        new ftext[30], string[128];
        if(PlayerInfo[playerid][pAdminCP] < 2012 && PlayerInfo[playerid][pFacciones] != 1) 	return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(sscanf(params, "ui", params[0], params[1])) 		return Message(playerid, COLOR_GRAD2, "Utilize: /darlider <PlayerID> <Facción>");
  		if(params[1] < 0 || params[1] > MAX_FACTION) 		return Message(playerid, COLOR_GREY, "ID facción incorrecto.");
    	if(!IsPlayerConnected(params[0]))                   return Message(playerid, COLOR_GREY, "Jugado desconectado.");
     	switch(params[1])
      	{
       		case 0: 	{PlayerInfo[params[0]][pChar] = 299; PlayerInfo[params[0]][pRank] = 0; ftext = "Ninguna"; }
         	case 1: 	{PlayerInfo[params[0]][pChar] = 283; PlayerInfo[params[0]][pRank] = 8; ftext = "Policía Local LS"; }
         	case 2:     {PlayerInfo[params[0]][pChar] = 217; PlayerInfo[params[0]][pRank] = 6; ftext = "Piratas Del Asfalto"; }
           	case 3: 	{PlayerInfo[params[0]][pChar] = 287; PlayerInfo[params[0]][pRank] = 8; ftext = "SAEM"; }
           	case 4: 	{PlayerInfo[params[0]][pChar] = 228; PlayerInfo[params[0]][pRank] = 6; ftext = "Medical Center LS"; }
           	case 5:     {PlayerInfo[params[0]][pChar] = 104; 	 PlayerInfo[params[0]][pRank] = 6; ftext = "Ballas";}
            case 7:     {PlayerInfo[params[0]][pChar] = 268; PlayerInfo[params[0]][pRank] = 6; ftext = "Mecanicos LS"; }
            case 8:     {PlayerInfo[params[0]][pChar] = 247; PlayerInfo[params[0]][pRank] = 6; ftext = "Moteros"; }
            case 9:     {PlayerInfo[params[0]][pChar] = 270; PlayerInfo[params[0]][pRank] = 6; ftext = "Groove"; }
            case 10:    {PlayerInfo[params[0]][pChar] = 292; PlayerInfo[params[0]][pRank] = 6; ftext = "La Hermanadad"; }
            case 11:    {PlayerInfo[params[0]][pChar] = 110; PlayerInfo[params[0]][pRank] = 6; ftext = "Latin Kings"; }
            case 12:    {PlayerInfo[params[0]][pChar] = 113; PlayerInfo[params[0]][pRank] = 7; ftext = "LCN"; }
            case 13:    {PlayerInfo[params[0]][pChar] = 294; PlayerInfo[params[0]][pRank] = 6; ftext = "Yakuza"; }
            case 14:    {PlayerInfo[params[0]][pChar] = 290; PlayerInfo[params[0]][pRank] = 7; ftext = "Familia Korsakova"; }
            case 15:    {PlayerInfo[params[0]][pRank] = 6; ftext = "Licencieros"; }
            case 16:    {PlayerInfo[params[0]][pChar] = 295; PlayerInfo[params[0]][pRank] = 5; ftext = "Gobierno"; }
            case 17:    {PlayerInfo[params[0]][pRank] = 6; ftext = "Radio-Television"; }
            case 19:    {PlayerInfo[params[0]][pRank] = 6; ftext = "Traficantes"; }
            case 23:    {PlayerInfo[params[0]][pChar] = 176; PlayerInfo[params[0]][pRank] = 6; ftext = "Hitman"; }
            case 24:    {PlayerInfo[params[0]][pChar] = 286; PlayerInfo[params[0]][pRank] = 6; ftext = "FBI"; }
            case 25:    {PlayerInfo[params[0]][pChar] = 187; PlayerInfo[params[0]][pRank] = 4; ftext = "Corte Judicial"; }
           
            default:    return Message(playerid, COLOR_GRAD2, "¡Escogiste un item incorrecto!");
       	}
       	PlayerInfo[params[0]][pMember] = 0;
       	PlayerInfo[params[0]][pLeader] = params[1];
       	SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);
       	UpdatePlayerStat(params[0]);
       	format(string, sizeof(string), "Administrador %s asignó el líder de la facción %s a %s.", PlayerName(playerid), ftext, PlayerName(params[0]));
       	MessageEx(playerid, params[0], 0x6ADFFFFF, string);
		return 1;
    }
        zcmd(ad, playerid, params[]){
		ClearChatbox(playerid, 20);
        Message(playerid, 0x2641FEAA, "|===========================Anuncios===========================");
		Message(playerid, 0x33CCFFAA, "|Utiliza: {0600B4} /AdCompras||/AdVentas||/AdTrabajos||/AdEventos||/AdPro");
        Message(playerid, 0x33CCFFAA, "|Compras:         [Anuncio][ComprasLS]                    ");
 	    Message(playerid, 0x33CCFFAA, "|Ventas:         [Anuncio][VentasLS]                     ");
        Message(playerid, 0x33CCFFAA, "|Trabajos:         [Anuncio][TrabajosLS]                   ");
        Message(playerid, 0x33CCFFAA, "|Eventos:         [Anuncio][EventosLS]                    ");
        Message(playerid, 0x33CCFFAA, "|Pro:         [Anuncio]                               ");
        Message(playerid, 0x2641FEAA, "|===========================Anuncios===========================");
		return Message(playerid, COLOR_GRAD2,"");
	}
   	zcmd(adcompras, playerid, params[])
	{
	    if(!sscanf(params, "s[220]", params[0]))
	    {
            #define AD_PRICE 25
            if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	        if(PlayerInfo[playerid][pLevel] < 3) return Message(playerid, COLOR_GREY, "Debes ser mínimo nivel 3.");
	        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GREY, "No tienes teléfono, cómpra uno en la tienda electronica");
	        new string[220];
	        if(adds > 0)
	        {
	        	format(string, sizeof(string), "* Tienes que esperar un minuto entre anuncio y anuncio. Prueba de aquí %d segundos.",  adds);
	        	Message(playerid, COLOR_GRAD2, string);
	        	return 1;
	        }
	        if(CheckMoney(playerid, AD_PRICE))
	        {
	            format(string, sizeof(string), "{13FF00}[Anuncio][ComprasLS] {B1FF8C}%s (Contacto: {FFFFFF}%d{B1FF8C})",  params[0], PlayerInfo[playerid][pPnumber]);
	            OOCNews(-1,string);
	            //AntiSPAM(playerid, string);
	            Bought(playerid, AD_PRICE);
	            format(string, sizeof(string), "Anunciante: %s (%d)", PlayerName(playerid), playerid);
	            ABroadCast(COLOR_WHITE,string,1);
	            adds = 60;
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /AdCompras <anuncio>");
        return 1;
	}
	   	zcmd(adventas, playerid, params[])
	{
	    if(!sscanf(params, "s[220]", params[0]))
	    {
            #define AD_PRICE 25
            if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	        if(PlayerInfo[playerid][pLevel] < 3) return Message(playerid, COLOR_GREY, "Debes ser mínimo nivel 3.");
	        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GREY, "No tienes teléfono, cómpra uno en la tienda electronica");
	        new string[220];
	        if(adds > 0)
	        {
	        	format(string, sizeof(string), "* Tienes que esperar un minuto entre anuncio y anuncio. Prueba de aquí %d segundos.",  adds);
	        	Message(playerid, COLOR_GRAD2, string);
	        	return 1;
	        }
	        if(CheckMoney(playerid, AD_PRICE))
	        {
	            format(string, sizeof(string), "{13FF00}[Anuncio][VentasLS] {B1FF8C}%s (Contacto: {FFFFFF}%d{B1FF8C})",  params[0], PlayerInfo[playerid][pPnumber]);
	            OOCNews(-1,string);
	            //AntiSPAM(playerid, string);
	            Bought(playerid, AD_PRICE);
	            format(string, sizeof(string), "Anunciante: %s (%d)", PlayerName(playerid), playerid);
	            ABroadCast(COLOR_WHITE,string,1);
	            adds = 60;
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /AdVentas <anuncio>");
        return 1;
	}
		   	zcmd(adtrabajos, playerid, params[])
	{
	    if(!sscanf(params, "s[220]", params[0]))
	    {
            #define AD_PRICE 25
            if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	        if(PlayerInfo[playerid][pLevel] < 3) return Message(playerid, COLOR_GREY, "Debes ser mínimo nivel 3.");
	        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GREY, "No tienes teléfono, cómpra uno en la tienda electronica");
	        new string[220];
	        if(adds > 0)
	        {
	        	format(string, sizeof(string), "* Tienes que esperar un minuto entre anuncio y anuncio. Prueba de aquí %d segundos.",  adds);
	        	Message(playerid, COLOR_GRAD2, string);
	        	return 1;
	        }
	        if(CheckMoney(playerid, AD_PRICE))
	        {
	            format(string, sizeof(string), "{13FF00}[Anuncio][TrabajosLS] {B1FF8C}%s (Contacto: {FFFFFF}%d{B1FF8C})",  params[0], PlayerInfo[playerid][pPnumber]);
	            OOCNews(-1,string);
	          //  AntiSPAM(playerid, string);
	            Bought(playerid, AD_PRICE);
	            format(string, sizeof(string), "Anunciante: %s (%d)", PlayerName(playerid), playerid);
	            ABroadCast(COLOR_WHITE,string,1);
	            adds = 60;
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /AdTrabajos <anuncio>");
        return 1;
	}
	zcmd(adeventos, playerid, params[])
	{
	    if(!sscanf(params, "s[220]", params[0]))
	    {
            #define AD_PRICE 25
            if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	        if(PlayerInfo[playerid][pLevel] < 3) return Message(playerid, COLOR_GREY, "Debes ser mínimo nivel 3.");
	        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GREY, "No tienes teléfono, cómpra uno en la tienda electronica");
	        new string[220];
	        if(adds > 0)
	        {
	        	format(string, sizeof(string), "* Tienes que esperar un minuto entre anuncio y anuncio. Prueba de aquí %d segundos.",  adds);
	        	Message(playerid, COLOR_GRAD2, string);
	        	return 1;
	        }
	        if(CheckMoney(playerid, AD_PRICE))
	        {
	            format(string, sizeof(string), "{13FF00}[Anuncio][EventosLS] {B1FF8C}%s (Contacto: {FFFFFF}%d{B1FF8C})",  params[0], PlayerInfo[playerid][pPnumber]);
	            OOCNews(-1,string);
	            //AntiSPAM(playerid, string);
	            Bought(playerid, AD_PRICE);
	            format(string, sizeof(string), "Anunciante: %s (%d)", PlayerName(playerid), playerid);
	            ABroadCast(COLOR_WHITE,string,1);
	            adds = 60;
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /AdEventos <anuncio>");
        return 1;
	}
		zcmd(adpro, playerid, params[])
	{
	    if(!sscanf(params, "s[220]", params[0]))
	    {
            #define AD_PRICE 25
            if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	        if(PlayerInfo[playerid][pLevel] < 3) return Message(playerid, COLOR_GREY, "Debes ser mínimo nivel 3.");
	        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GREY, "No tienes teléfono, cómpra uno en la tienda electronica");
	        new string[220];
	        if(adds > 0)
	        {
	        	format(string, sizeof(string), "* Tienes que esperar un minuto entre anuncio y anuncio. Prueba de aquí %d segundos.",  adds);
	        	Message(playerid, COLOR_GRAD2, string);
	        	return 1;
	        }
	        if(CheckMoney(playerid, AD_PRICE))
	        {
	            format(string, sizeof(string), "{13FF00}[Anuncio] {B1FF8C}%s (Contacto: {FFFFFF}%d{B1FF8C})",  params[0], PlayerInfo[playerid][pPnumber]);
	            OOCNews(-1,string);
	            //AntiSPAM(playerid, string);
	            Bought(playerid, AD_PRICE);
	            format(string, sizeof(string), "Anunciante: %s (%d)", PlayerName(playerid), playerid);
	            ABroadCast(COLOR_WHITE,string,1);
	            adds = 60;
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /AdPro <anuncio>");
        return 1;
	}
	/*zcmd(ad, playerid, params[])
	{
	    if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, "¡Necesitas ser mínimo nivel 2!");
	    if(!sscanf(params, "s[128]", params[0]))
	    {
            #define AD_PRICE 25
            if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GREY, "No tienes teléfono, cómpra uno en el 24/7.");
	        new string[180];
	        if(adds > 0)
	        {
	        	format(string, sizeof(string), "* Tienes que esperar un minuto entre anuncio y anuncio. Prueba de aquí a %d segundos.",  adds);
	        	Message(playerid, COLOR_GRAD2, string);
	        	return 1;
	        }
	        if(CheckMoney(playerid, AD_PRICE))
	        {
	            format(string, sizeof(string), "{13FF00}[Anuncio] {B1FF8C}%s (Contacto: {FFFFFF}%d{B1FF8C})",  params[0], PlayerInfo[playerid][pPnumber]);
	            OOCNews(-1,string);
	            Bought(playerid, AD_PRICE);
	            Fondos[CNN] += AD_PRICE;
	            format(string, sizeof(string), "Anunciante: %s (%d)", PlayerName(playerid), playerid);
	            ABroadCast(COLOR_WHITE,string,1);
	            adds = 60;
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /ad <Anuncio>");
        return 1;
	}*/
	zcmd(rr, playerid, params[])
	{
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /rr <PlayerID>");
     	if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no está conectado.");
     	if(PlayerNeedsHelp[params[0]] == 1)
     	{
      		new string[128];
        	format(string, sizeof(string), "{FFFFFF}AdmWarning: {3F96CB}%s {FFFFFF}ha rechazado el reporte de [ID:%d] {FF0000}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
         	ABroadCast(-1, string, 1);
          	format(string, sizeof(string), "{80FF00}*HZ-RP*: {FFFFFF}Administrador {FF0000}%s [ID:%d] {FFFFFF}ha rechazado su reporte.", PlayerName(playerid), playerid);
           	Message(params[0], -1, string);
            PlayerNeedsHelp[params[0]] = 0;
        }
        else Message(playerid, COLOR_GREY, "El jugador no ha enviado ningún reporte.");
		return 1;
    }
    zcmd(ar,playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /ar <PlayerID>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no está conectado.");
		if(PlayerNeedsHelp[params[0]] == 1)
 		{
   			new string[128];
			format(string, sizeof(string), "{FFFFFF}AdmWarning: {80FF00}%s {FFFFFF}ha aceptado el reporte de [ID:%d] {FF0000}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
			ABroadCast(-1, string, 1);
			format(string, sizeof(string), "{80FF00}*HZ-RP*: {FFFFFF}Administrador {FF0000}%s [ID:%d] {FFFFFF}ha aceptado tu reporte porfavor espere.", PlayerName(playerid), playerid);
			Message(params[0], -1, string);
			PlayerNeedsHelp[params[0]] = 0;
		}
		else Message(playerid, COLOR_GREY, "El jugador no ha enviado ningún reporte.");
        return 1;
    }
    zcmd(aduda, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /aduda <id>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GREY, "Jugador no está conectado.");
		if(PlayerDuda[params[0]] == 1){
		    new string[128];
 	        format(string, sizeof(string), "{FFFFFF}AdmWarning: {B3D972}%s {FFFFFF}aceptó la duda de [ID:%d] {B39CC8}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
		    ABroadCast(-1, string, 1);
		    format(string, sizeof(string), "{FFFFFF}* {B39CC8}%s {FFFFFF}le va a responder, para hablar con el administrador use /w {B3D972}%d.", PlayerName(playerid), playerid);
		    Message(params[0], -1, string);
		    PlayerDuda[params[0]] = 0;
		}else Message(playerid, COLOR_GRAD2, "El jugador no ha enviado una duda.");
        return 1;
    }
    zcmd(rduda, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /rduda <id>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GREY, "Jugador no está conectado.");
		if(PlayerDuda[params[0]] == 1){
		    new string[128];
 	        format(string, sizeof(string), "{FFFFFF}AdmWarning: {B3D972}%s {FFFFFF}rechazo la duda de [ID:%d] {B39CC8}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
		    ABroadCast(-1, string, 1);
		    format(string, sizeof(string), "{FFFFFF}* {B39CC8}%s {FFFFFF}ha {FF0000}rechazado {FFFFFF}su duda por mal uso de /duda o otra razon conveniente.", PlayerName(playerid), playerid);
		    Message(params[0], -1, string);
		    PlayerDuda[params[0]] = 0;
		}else Message(playerid, COLOR_GRAD2, "El jugador no ha enviado una duda.");
        return 1;
    }
    zcmd(wtf, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 6) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /rduda <id>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GREY, "Jugador no está conectado.");
		if(PlayerDuda[params[0]] == 1){
		    new string[128];
 	        format(string, sizeof(string), "{FFFFFF}AdmWarning: {B3D972}%s {FFFFFF}wtfqueo la duda de [ID:%d] {B39CC8}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
		    ABroadCast(-1, string, 1);
		    format(string, sizeof(string), "{FFFFFF}* {B39CC8}%s {FFFFFF} ¿What the fuck? Expliquese mejor en el /duda, tiene un minuto para reformularla.", PlayerName(playerid), playerid);
		    Message(params[0], -1, string);
		    PlayerDuda[params[0]] = 0;
		}else Message(playerid, COLOR_GRAD2, "El jugador no ha enviado una duda.");
        return 1;
    }
    zcmd(tomarpizza, playerid, params[])
    {
        if(PlayerToPoint(5.0,playerid,379.1396,-114.2661,1001.4922))
        {
            if (PlayerInfo[playerid][pJob] != 6)
		    {
            Message(playerid, COLOR_GRAD2, "Usted no es un repartidor de Pizza.");
		    return 1;
    	    }
    	    if (sPizza[playerid] == 0)
    	    {
    	    Message(playerid, COLOR_WHITE, "Usted ha cogido 5 pizzas, espere a un pedido.");
    	    sPizza[playerid] = 5;
    	    }
    	}
    	return 1;
	}
	zcmd(cpizza, playerid, params[])
	{
		if (bPizza[playerid] != 1) return Message(playerid, COLOR_GRAD2, "   Usted no tiene una pizza, antes llame al 111.");
		new string[64];
  		SetHP(playerid, 100);
  		format(string, sizeof(string), "* %s coge su pizza y se la come.", PlayerName(playerid));
  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  		bPizza[playerid] = 0;
		return 1;
	}
	zcmd(comprarhotdog, playerid, params[])
	{
	    if(!IsAtHotdog(playerid)) return Message(playerid, COLOR_GRAD2, "  No estas en un lugar adecuado!");
	    if(Hotdog[playerid] >= 5) return Message(playerid, COLOR_GRAD2, "¡No puedes tener mas de 5 hotdogs!");
	    if(CheckMoney(playerid,5)){
	        new string[86];
			Bought(playerid, 5);
            format(string, sizeof(string), "* %s compra un hotdog.", PlayerName(playerid));
  			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            Message(playerid, COLOR_WHITE, "* Has comprado un hotdog, utiliza {FF4564}/chotdog {FFFFFF}para comértelo.");
			Hotdog[playerid] += 1;
		}
	    return 1;
	}
	zcmd(chotdog, playerid, params[])
	{
	    if(Hotdog[playerid] == 0) return Message(playerid, COLOR_GRAD2, "Usted no tiene un hotdog para comer.");
        new string[64], Float:Health;
        GetPlayerHealth(playerid, Health);
  		SetHP(playerid, Health+25);
  		format(string, sizeof(string), "* %s coge un hotdog y se lo come.", PlayerName(playerid));
  		ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  		//PlayerInfo[playerid][pHambre] -= 3;
  		//PlayerInfo[playerid][pPeso] += 1;
  		Hotdog[playerid] -= 1;
	    return 1;
	}
	zcmd(darhotdog, playerid, params[])
	{
	    new string[128];
	    if(Hotdog[playerid] == 0) return Message(playerid, COLOR_GRAD2, "No tienes un hotdog para dar.");
	    if(!sscanf(params,"u",params[0])){
	    if(ProxDetectorS(8.0, playerid, params[0])){
	        if(Hotdog[params[0]] < 5){
                format(string, sizeof(string), "* %s le da un hotdog a %s", PlayerName(playerid), PlayerName(params[0]));
  				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                Message(playerid, COLOR_WHITE, "* Te han dado un hotdog, utiliza {FF4564}/chotdog {FFFFFF}para comértelo.");
                Hotdog[playerid] -= 1;
				Hotdog[params[0]] += 1;
			} else Message(playerid, COLOR_GRAD2, "¡Esa persona tiene muchos hotdogs!");
		} else Message(playerid, COLOR_GRAD2, "¡Esta persona esta muy lejos!");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /darhotdog <PlayerID>");
	    return 1;
	}
	zcmd(comprarentrada, playerid, params[])
	{
        if(PlayerInfo[playerid][pDonateT] == 1) return Message(playerid,COLOR_GRAD2, "Usted es premium, no necesita comprar entrada.");
        if(ComproBoleto[playerid] == 1) return Message(playerid,COLOR_GRAD2, "Usted ya tiene una entrada.");
		if(!PlayerToPoint(8.0,playerid,1790.3563,-1591.3485,13.4936)) return Message(playerid, COLOR_GRAD2, "Usted no está en la boleteria.");
        if(GetPlayerMoney(playerid) > 5000)
		{
			Bought(playerid, 5000);
			Till(1, 5000);
			ComproBoleto[playerid] = 1;
			Message(playerid, -1, "Compraste la entrada al club {E4C65A}VIP, {FFFFFF}Ahora puedes entrar al club.");
		}
		return 1;
	}
 	zcmd(centradacine, playerid, params[])
	{
        if(PlayerInfo[playerid][pDonateT] == 1) return Message(playerid,COLOR_GRAD2, "Usted es premium, no necesita comprar entrada.");
        if(ComproCine[playerid] == 1) return Message(playerid,COLOR_GRAD2, "Usted ya tiene una entrada.");
		if(!PlayerToPoint(8.0,playerid,1350.3633,-1677.4314,1694.2446)) return Message(playerid, COLOR_GRAD2, "Usted no está en la taquilla.");
        if(GetPlayerMoney(playerid) > 50)
		{
			Bought(playerid, 50);
			ComproCine[playerid] = 1;
			Message(playerid, -1, "Compraste la entrada al cine{E4C65A}, {FFFFFF}Ahora puedes entrar a la sala.");
		}
		return 1;
	}
    zcmd(vpizza, playerid, params[])
    {
        if (PlayerInfo[playerid][pJob] != 6) return Message(playerid,COLOR_GRAD2, "Usted no es Pizzero.");
        if (sscanf(params, "u", params[0])) return Message(playerid,COLOR_GRAD2, "Utiliza: /vpizza <PlayerID>");
        if (sPizza[playerid] >= 1)
        {
            if (ProxDetectorS(8.0, playerid, params[0]))
            {
				new string[256]
       			format(string, sizeof(string), "* Ha entregado una pizza a %s", PlayerName(params[0]));
       			Message(playerid, COLOR_WHITE, string);
       			format(string, sizeof(string), "{A4D9EB}* Repartidor de Pizza %s le ha dado una pizza. {FF4564}/cpizza", PlayerName(playerid));
       			Message(params[0], -1, string);
       			format(string, sizeof(string), "* %s toma la pizza y se lo da a %s", PlayerName(playerid), PlayerName(params[0]));
       			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
       			bPizza[params[0]] = 1;
       			sPizza[playerid] -= 1;
            } else Message(playerid, COLOR_GRAD2, "El jugador no esta cerca.");
		} else Message(playerid, COLOR_GRAD2, "* No tienes una pizza, ve a la cocina.");
		return 1;
	}
	zcmd(aceptarpizza, playerid, params[])
	{
        if(PlayerInfo[playerid][pJob] != 6) return Message(playerid,COLOR_GRAD2, "Usted no es Pizzero.");
        if(PizzaCallTime[playerid] > 0) return Message(playerid,COLOR_GRAD2, "Usted ya acepto un pedido de pizza, espere 90 seg para aceptar otro!");
        if(PizzaCall < 999)
        {
            new string[128];
            new Float:X, Float:Y, Float:Z;
            format(string, sizeof(string), "{FFFFFF}Central: {EE844C}%s {FFFFFF}acepto el pedido de {EE844C}%s{FFFFFF}, esperen otros pedidos.",PlayerName(playerid), PlayerName(PizzaCall));
            SendJobMessage(6, -1, string);
            Message(playerid, COLOR_WHITE, "* Tiene 90 segundos para llegar al destino!");
            format(string, sizeof(string), "{FFFFFF} Pizzero {EE844C}%s {FFFFFF}ha aceptado su pedido, espere en su posición actual.",PlayerName(playerid));
            Message(PizzaCall, -1, string);
            GetPlayerPos(PizzaCall, X, Y, Z);
            SetPlayerCheckpoint(playerid, X, Y, Z, 5);
            GText(playerid, "~w~CheckPoint~n~~r~Marcado", 5000, 1);
            PizzaCallTime[playerid] = 1;
            PizzaCall = 999;
		}
        else
			Message(playerid, COLOR_GRAD2, "* Nadie a echo un pedido de pizza.");
			return 1;
	}
	zcmd(colgar, playerid, params[])
    {
        StopCall(playerid);
        return 1;
    }
    zcmd(contestar, playerid, params[])
    {
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				Message(playerid, COLOR_GRAD2, "* Usted ya esta en una llamada...");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
					    new string[64];
						Mobile[playerid] = i;
						Message(i,  COLOR_GRAD2, "Contestaron la llamada.");
						format(string, sizeof(string), "* %s contesta su teléfono.", PlayerName(playerid));
						SetPlayerAttachedObject(playerid, 0, 18866, 6, 0.03999, 0.00999, 0.00000, -90.00000, 0.00000, 180.00000);
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}

				}
			}
		}
        return 1;
    }
    //zcmd - Bank
    zcmd(balance, playerid, params[])
	{
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
        if(IsAtATM(playerid) || IsAtBank(playerid))
	    {
            new string[64];
			format(string, sizeof(string), "- Tienes %d$ en tu cuenta bancaria.",PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		} else Message(playerid, COLOR_GREY, "¡No estás en un cajero!");
		return 1;
	}
    zcmd(evaluar, playerid, params[])
    {
        if(!IsAnInstructor(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres instructor!");
        if(!sscanf(params, "u", params[0]))
        {
            if(!IsPlayerConnected(params[0]))            return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(8.0, playerid, params[0])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(IsPractising[params[0]] == 0)
            {
                new string[128];
				format(string, sizeof(string), "El examen práctico ha comenzado. Evaluador: %s - Alumno: %s", PlayerName(playerid), PlayerName(params[0]));
				Message(playerid,0xEEBE1AFF,string);
				Message(params[0],0xEEBE1AFF,string);
				IsPractising[params[0]] = 1;
			}
			else
   			{
				MessageEx(playerid,params[0],0xEEBE1AFF,"Examen finalizado.");
				IsPractising[params[0]] = 0;
			}
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /evaluar <PlayerID>");
        return 1;
    }
    zcmd(licencias, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
			{
   				if(ProxDetectorS(5.0, playerid, params[0]))
			    {
					new string[64];
					ClearChatbox(params[0], 10);
					format(string, sizeof(string), "|__ Licencias de %s __|", PlayerName(playerid));
					Message(params[0], COLOR_WHITE, string);
					if(PlayerInfo[playerid][pCarLic] > 0)   Message(params[0], COLOR_GRAD2, " Licencia de conducción");
					if(PlayerInfo[playerid][pFlyLic] > 0)   Message(params[0], COLOR_GRAD2, " Licencia de vuelo");
					if(PlayerInfo[playerid][pBoatLic] > 0)  Message(params[0], COLOR_GRAD2, " Licencia de navegación");
					if(PlayerInfo[playerid][pGunLic] > 0)   Message(params[0], COLOR_GRAD2, " Licencia de armas");
					format(string, sizeof(string), "* %s muestra sus licencias a %s.", PlayerName(playerid), PlayerName(params[0]));
					ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    }
			    else Message(playerid, COLOR_GRAD2, "Muy lejos del jugador.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /licencias <PlayerID>");
        return 1;
    }
    zcmd(licencia, playerid, params[])
    {
        new string[128], item[64];
        if(!IsAnInstructor(playerid)) return Message(playerid, COLOR_GRAD2, "No eres licenciero.");
        if(!sscanf(params, "us[64]", params[0], item))
        {
			if(IsPlayerConnected(params[0]))
			{
				if(ProxDetectorS(5.0, playerid, params[0]))
				{
    				if(strcmp(item,"conduccion",true) == 0)
        			{
           				format(string, sizeof(string), "* Diste la licencia de %s a %s", item, PlayerName(params[0]));
			        	Message(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Licenciero %s te dió la licencia de %s.", PlayerName(playerid), item);
				        Message(params[0], COLOR_LIGHTBLUE, string);
				        PlayerInfo[params[0]][pCarLic] = 1;
				        return 1;
			        }
				    if(strcmp(item,"aviacion",true) == 0)
				    {
        				format(string, sizeof(string), "* Diste la licencia de %s a %s", item, PlayerName(params[0]));
				        Message(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Licenciero %s te dió la licencia de %s.", PlayerName(playerid), item);
				        Message(params[0], COLOR_LIGHTBLUE, string);
				        PlayerInfo[params[0]][pFlyLic] = 1;
				        return 1;
				    }
				    if(strcmp(item,"navegacion",true) == 0)
				    {
        				format(string, sizeof(string), "* Diste la licencia de %s a %s", item, PlayerName(params[0]));
				        Message(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Licenciero %s te dió la licencia de %s.", PlayerName(playerid), item);
				        Message(params[0], COLOR_LIGHTBLUE, string);
				        PlayerInfo[params[0]][pBoatLic] = 1;
				        return 1;
				    }
        			else Message(playerid, COLOR_GRAD2, "Nombre incorrecto.");
    			}
			    else Message(playerid, COLOR_GRAD2, "Muy lejos del comprador.");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /licencia <PlayerID> <Licencia>");
    		Message(playerid, COLOR_GRAD2, "Licencias: conduccion, aviacion, navegacion");
        }
        return 1;
    }
	zcmd(renovarvehiculo, playerid, params[])
   	{
		new string[128];
		if(!IsAnInstructor(playerid)) return Message(playerid, COLOR_GRAD2, "No eres licenciero.");
		if(sscanf(params, "uii", params[0],params[1],params[2])) return Message(playerid, COLOR_GRAD2, "Utilize: /renovarvehiculo <PlayerID> <Llave 1-2> <Días 15-30>");
		if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		if(params[1] == 1 && PlayerInfo[params[0]][pPcarkey] == 9999) return Message(playerid, COLOR_GRAD2, "¡El jugador no posee un auto en su primer slot!");
		if(params[1] == 2 && PlayerInfo[params[0]][pPcarkey2] == 9999) return Message(playerid, COLOR_GRAD2, "¡El jugador no posee un auto en su segundo slot!");
		if(ProxDetectorS(5.0, playerid, params[0]))
		{
		    RenoveLlave[params[0]] = params[1];
			switch(params[2])
			{
				case 15:
				{
				    if(PlayerInfo[params[0]][pAccount] >= 6000)
        			{
						TimeCarOffer[params[0]] = playerid;
						if(RenoveLlave[params[0]] == 1){
						    format(string, sizeof(string), "* Ofreciste a %s renovar su %s, espera su respuesta.", PlayerName(params[0]), CarInfo[PlayerInfo[params[0]][pPcarkey]][cName]);
						    Message(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "Licenciero %s te ofrece renovar tu %s por 6000$ (15 días)\n\t\tPresiona aceptar para firmar el contrato", PlayerName(params[0]), CarInfo[PlayerInfo[params[0]][pPcarkey]][cName]);
						    ShowPlayerDialog(params[0], RENOVEH_15_DIALOG, DIALOG_STYLE_MSGBOX, "Contrato de Renovacion Vehicular", string, "Aceptar", "Rechazar");
		    			}
		    			else if(RenoveLlave[params[0]] == 2){
		    			    format(string, sizeof(string), "* Ofreciste a %s renovar su %s, espera su respuesta.", PlayerName(params[0]), CarInfo[PlayerInfo[params[0]][pPcarkey2]][cName]);
						    Message(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "Licenciero %s te ofrece renovar tu %s por 6000$ (15 días)\n\t\tPresiona aceptar para firmar el contrato", PlayerName(params[0]), CarInfo[PlayerInfo[params[0]][pPcarkey2]][cName]);
						    ShowPlayerDialog(params[0], RENOVEH_15_DIALOG, DIALOG_STYLE_MSGBOX, "Contrato de Renovacion Vehicular", string, "Aceptar", "Rechazar");
						}
					} else Message(playerid, COLOR_GRAD2, "El jugador no tiene fondos suficientes.");
				}
				case 30:
				{
				    if(PlayerInfo[params[0]][pAccount] >= 15000)
        			{
        			    TimeCarOffer[params[0]] = playerid;
						if(RenoveLlave[params[0]] == 1){
						    format(string, sizeof(string), "* Ofreciste a %s renovar su %s, espera su respuesta.", PlayerName(params[0]), CarInfo[PlayerInfo[params[0]][pPcarkey]][cName]);
						    Message(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "Licenciero %s te ofrece renovar tu %s por 15000$ (30 días)\n\t\tPresiona aceptar para firmar el contrato", PlayerName(params[0]), CarInfo[PlayerInfo[params[0]][pPcarkey]][cName]);
						    ShowPlayerDialog(params[0], RENOVEH_30_DIALOG, DIALOG_STYLE_MSGBOX, "Contrato de Renovacion Vehicular", string, "Aceptar", "Rechazar");
		    			}
		    			else if(RenoveLlave[params[0]] == 2){
		    			    format(string, sizeof(string), "* Ofreciste a %s renovar su %s, espera su respuesta.", PlayerName(params[0]), CarInfo[PlayerInfo[params[0]][pPcarkey2]][cName]);
						    Message(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "Licenciero %s te ofrece renovar tu %s por 15000$ (30 días)\n\t\tPresiona aceptar para firmar el contrato", PlayerName(params[0]), CarInfo[PlayerInfo[params[0]][pPcarkey2]][cName]);
						    ShowPlayerDialog(params[0], RENOVEH_30_DIALOG, DIALOG_STYLE_MSGBOX, "Contrato de Renovacion Vehicular", string, "Aceptar", "Rechazar");
						}
					} else Message(playerid, COLOR_GRAD2, "El jugador no tiene fondos suficientes.");
				}
				default: Message(playerid,  COLOR_GRAD2, "Tiempo Incorrecto: Debes seleccionar entre 15 o 30 dias.");
			}
		}
		return 1;
	}
    zcmd(noticias, playerid, params[])
    {
        if(Journalist(playerid))
		{
		    if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No tienes rango suficiente!");
		    new car = GetVehicleModel(GetPlayerVehicleID(playerid));
		    if(PlayerInfo[playerid][pRank] == 3)
		    {
      			if(car == 488 || car == 582)
	    		{
       				if(TalkingLive[playerid] == 0)
		    		{
        				TalkingLive[playerid] = 1;
				        Message(playerid, COLOR_WHITE, "Has entrado en antena, estás hablando para todo San Andreas");
				        Message(playerid, COLOR_WHITE, "Recuerda que solo puedes hablar en un vehículo CNN con ese rango.");
					}
					else
	    			{
        				TalkingLive[playerid] = 0;
				        Message(playerid, COLOR_WHITE, "Estás fuera de antena.");
					}
    			}
		    	else Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo CNN!");
	    	}
		    else
		    {
		    	if(TalkingLive[playerid] == 0)
			    {
       				TalkingLive[playerid] = 1;
			        Message(playerid, COLOR_WHITE, "Has entrado en antena, estás hablando para todo San Andreas");
				}
				else
    			{
       				TalkingLive[playerid] = 0;
			        Message(playerid, COLOR_WHITE, "Estás fuera de antena.");
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "No eres reportero.");
        return 1;
    }
    zcmd(entrevista, playerid, params[])
    {
        if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No tienes rango suficiente!");
        if(!Journalist(playerid)) 			return Message(playerid, COLOR_GRAD2, "No eres reportero.");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
            {
                new string[128];
                if(TalkingLive[params[0]] == 0)
                {
                    if(ProxDetectorS(5.0, playerid, params[0]))
					{
					    if(Facturing[params[0]] == 1) return Message(playerid, COLOR_GRAD2, "Este jugador está ocupado, espere.");
					    if(params[0] == playerid) { SendClientMessage(playerid, COLOR_GREY, "No puedes entrevistarte ati mismo!"); return 1; }
						format(string, sizeof(string), "* Ofreciste a %s una entrevista", PlayerName(params[0]));
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s te ofrece ser entrevistado.", PlayerName(playerid));
						SendRequest(params[0], string);
						Petition_ID[params[0]] = 1;
						LiveOffer[params[0]] = playerid;
						Facturing[params[0]] = 1;
						Interview = 1;
						Interviewer = PlayerName(playerid);
					}
					else return Message(playerid, COLOR_GREY, "El jugador está muy lejos!");
                }
                else
                {
                    TalkingLive[params[0]] = 0;
                    format(string, sizeof(string), "* %s anuló la entrevista a %s", PlayerName(playerid), PlayerName(params[0]));
					Message(params[0], COLOR_WHITE, string);
                }
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /entrevista <PlayerID>");
        return 1;
    }
    zcmd(centrevista, playerid, params[])
    {
        if(PlayerInfo[playerid][pRank] < 3) return Message(playerid, COLOR_GRAD2, "¡No tienes rango suficiente!");
        if(Journalist(playerid))
		{
		    new string[80];
			Message(playerid, COLOR_WHITE, "Cancelaste la entrevista.");
  			for(new i = 0; i != MAX_PLAYERS; i++ )
	    	{
				if(TalkingLive[i] > 0)
				{
				    format(string, sizeof(string), "** Entrevistado %s salió de la entrevista.", PlayerName(i));
			    	Message(i, COLOR_WHITE, string);
				    TalkingLive[i] = 0;
				}
	    	}
		}
		else	Message(playerid, COLOR_GRAD2, "No eres reportero.");
        return 1;
    }
	zcmd(desbug, playerid, params[])
	{
        if(IsPlayerConnected(playerid))
        {
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid, 0);
		    Message(playerid, -1, " {98CDFF}Su problema fue solucionado {FFFFFF}correctamente. {FFA4CB}[Desbug]");
		}
		else Message(playerid, COLOR_GRAD2, " Usted no esta logeado.");
        return 1;
	}
	zcmd(desbugcam, playerid, params[])
	{
	    SetCameraBehindPlayer(playerid);
	    return 1;
	}
	zcmd(cseguro, playerid, params[])
	{
	    if(PlayerInfo[playerid][pSeguro] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya tienes seguro del hospital!");
        if(CheckMoney(playerid,1000))
        {
            if(PlayerToPoint(2.0,playerid,-2659.7708,506.9668,48.0847))
            {
                PlayerInfo[playerid][pSeguro] = 1;
                Bought(playerid, 1000);
                Fondos[SAMUR] += 1000;
                Message(playerid, -1, "{FF393E}Hospital: {FFFFFF}Adquiriste el seguro médico de Los Santos.");
                Message(playerid, -1, "{FF393E}Hospital: {FFFFFF}Ahora cuando tengas un accidente te atenderemos en este hospital.");
			}
        }
        return 1;
	}
    zcmd(placa, playerid, params[])
    {
        new string[90];
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
			{
			    if(!ProxDetectorS(8.0,playerid,params[0])) return Message(playerid, COLOR_GRAD2, "Muy lejos de el jugador.");
			    if(Team_LSPD(playerid))
				{
				    ClearChatbox(params[0], 7);
    				Message(params[0], COLOR_LIGHTBLUE, "-- Los Santos Police Departament --");
				    format(string, sizeof(string), "Nombre: %s - Rango: %s", PlayerName(playerid), PlayerStatInfo[playerid][4]);
				    Message(params[0], COLOR_WHITE, string);
				    format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else if(Team_NG(playerid))
				{
				    ClearChatbox(params[0], 7);
    				Message(params[0], COLOR_GREEN, "-- San Andreas Ejercito Militar --");
					format(string, sizeof(string), "Nombre: %s - Rango: %s", PlayerName(playerid), PlayerStatInfo[playerid][4]);
				    Message(params[0], COLOR_WHITE, string);
				    format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                }
				else if(Team_FBI(playerid))
				{
				    ClearChatbox(params[0], 7);
				    Message(params[0], COLOR_LIGHTBLUE, "-- Federal Bureau of Investigation --");
					format(string, sizeof(string), "Nombre: %s - Rango: %s", PlayerName(playerid), PlayerStatInfo[playerid][4]);
					Message(params[0], COLOR_WHITE, string);
				    format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else  Message(playerid, COLOR_GRAD2, "¡No tienes una placa!");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /placa <PlayerID>");
        return 1;
    }
    zcmd(credencial, playerid, params[]){
		if(!IsAnInstructor(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres licenciero!");
		if(!sscanf(params,"u",params[0])){
		    if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GRAD2, "Muy lejos del jugador.");
            new string[128];
			ClearChatbox(params[0], 7);
			Message(params[0], COLOR_YELLOW, "-- Centro de Licencias --");
			format(string, sizeof(string), "Nombre: %s - Rango: %s", PlayerName(playerid), PlayerStatInfo[playerid][4]);
			Message(params[0], COLOR_WHITE, string);
   			format(string, sizeof(string), "* %s le enseña la placa a %s", PlayerName(playerid), PlayerName(params[0]));
	    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  		} else Message(playerid, COLOR_GRAD2, "Utilize: /credencia <PlayerID>");
  		return 1;
	}
 	zcmd(seguro, playerid, params[]){
 		new string[90];
 		if(PlayerInfo[playerid][pSeguro] == 0) return Message(playerid, COLOR_GRAD2, "No tienes un seguro medico.");
        if(!sscanf(params, "u", params[0]))
        {
            if(!ProxDetectorS(8.0, playerid, params[0])) return Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
      		Message(params[0], COLOR_GREEN, "__ Tarjeta de Seguro __");
        	format(string, sizeof(string), "   {FF231E}Nombre: {FFFFFF}%s", PlayerName(playerid));
        	Message(params[0], -1, string);
        	format(string, sizeof(string), "   {FF231E}Clinica: {FFFFFF}Los Santos Medical Center");
	        Message(params[0], -1, string);
         	format(string, sizeof(string), "* %s le muestra su tarjeta de seguro a %s.", PlayerName(playerid), PlayerName(params[0]));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /seguro <PlayerID>");
        return 1;
    }
    zcmd(re, playerid, params[])
    {
        if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
        if(JustReported[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Espere 2 Minutos para enviar otro reporte!");
		if(sscanf(params, "us[64]", params[0], params[1])) return Message(playerid, COLOR_GRAD2, "* Use: (/re)portar <playerid> <Razón>");
		if(IsPlayerConnected(params[0]))
        {
            new string[128];
			format(string, sizeof(string), "{FA4E60}Reporte: [ID:%d]%s, Reporta a: [ID:%d]%s", playerid, PlayerName(playerid), params[0], PlayerName(params[0]));
			ABroadCast(-1, string, 1);
			format(string, sizeof(string), "{FA4E60}Razon: %s", params[1]);
			ABroadCast(-1, string, 1);
			Message(playerid, 0x009D4FFF, "Tu reporte fue enviado con exito a los Administradores y sera procesado!");
			JustReported[playerid] = 2;
			PlayerNeedsHelp[playerid] = 1;
			SetTimerEx("ReportReset", 120000, false, "i", playerid);
        } else Message(playerid, COLOR_GRAD2, " Ese jugador está desconectado.");
        return 1;
    }
	zcmd(duda, playerid, params[])
    {
        if(PlayerInfo[playerid][pBanDuda] != 0) return Message(playerid, COLOR_GRAD2, "¡No puedes utilizar este comando, estas baneado del sistema de dudas!");
        if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /duda <Pregunta>");
        if((!nod) && duda[playerid] == 0)
        {
            new string[128];
            duda[playerid] = 1;
            PlayerDuda[playerid] = 1;
			format(string, sizeof(string), "Pregunta de %s : %s (ID:%d) {FFF613}[/aduda] [/rduda] [/wtf]", PlayerName(playerid), params[0], playerid);
			ABroadCast(COLOR_ASKQ,string,1);
			Message(playerid, -1, "{FFF613}Pregunta enviada. Espere 1 minuto para volver a mandar otra duda.");
			SetTimerEx("EnableQuest", 60000, false, "i", playerid);
        } else Message(playerid, COLOR_GRAD2, "* Canal de duda desactivado o ya envio una duda, espere 1 Minuto.");
        return 1;
    }
    zcmd(solicitaradmin, playerid, params[])
    {
        if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
        if((!nod) && duda[playerid] == 0)
        {
            duda[playerid] = 1;
            SetTimerEx("EnableQuest", 60000, false, "i", playerid);
			new so[] = "{77F84B}>>{FFFFFF}Ayudante\n{DF2019}>>{FFFFFF}Moderador\n{7BAEFC}>>{FFFFFF}Administrador\n{D19B8D}>>{FFFFFF}Técnico"
			ShowPlayerDialog(playerid, DIALOG_SO, DIALOG_STYLE_LIST," {BAEC4B}> {FFFFFF}Panel de ayuda.", so, "Solicitar", "Cerrar");
		} else Message(playerid, COLOR_GRAD2, "* Espere 1 minuto para volver a usar este comando.");
        return 1;
    }
    zcmd(as, playerid, params[])
	{
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /as <id>");
	    if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no está conectado.");
    	if(PlayerSol[params[0]] == 1)
    	{
	    	new string[128];
 	    	format(string, sizeof(string), "{FFFFFF}AdmWarning: {B3D972}%s {FFFFFF}aceptó la solicitud de [ID:%d] {B39CC8}%s.", PlayerName(playerid), params[0], PlayerName(params[0]));
  	    	ABroadCast(-1, string, 1);
   	    	format(string, sizeof(string), "{FFFFFF}* Administrador {B39CC8}%s {FFFFFF}ha aceptado su solicitud {B3D972}/w %d, {FFFFFF}espere un momento.", PlayerName(playerid), playerid);
    	    Message(params[0], -1, string);
    	    PlayerSol[params[0]] = 0;
    	} else Message(playerid, COLOR_GRAD2, "El jugador no ha echo una solicitud.");
        return 1;
    }
    zcmd(respawngeneral, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 6) Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        else
        RespawnVehicles();
        return 1;
    }
	zcmd(sp, playerid, params[])
	{
		if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(sscanf(params, "u", params[0])) return Message(playerid,COLOR_GRAD2, "Utilize: /specplayer <PlayerID>");
		if(!IsPlayerConnected(params[0])) return Message(playerid,COLOR_GRAD2,"Jugador no conectado");
			if (!IsPlayerInAnyVehicle(params[0]))
			{
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectatePlayer(playerid, params[0]);
				SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
				return 1;
			}
			else
			{
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectateVehicle(playerid, GetPlayerVehicleID(params[0]));
				SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
				return 1;
			}
	}
	zcmd(spoff, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
 		TogglePlayerSpectating(playerid, 0);
        return SetTimerEx("PonerColor", 500, false, "i", playerid);
	}
	zcmd(darmoney, playerid, params[])
	{
	if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
		        if(PlayerInfo[playerid][pAdminCP] >= 2012)
		        {
		            new string[128], year, month,day;    getdate(year, month, day);
		            GivePlayerMoney(params[0], params[1]);
					format(string, 128, "Administrador %s ha dado %d$ a %s", PlayerName(playerid),params[1],PlayerName(params[0]));
				 	return A_Info(string);
		        } else SendClientMessage(playerid, COLOR_GRAD2, "¡No autorizado!");
		    } else SendClientMessage(playerid,  COLOR_GRAD2, "ID Inválida");
		} else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /givemoney [PlayerID] [$]");
		return 1;
	}
	zcmd(fijarmoney, playerid, params[])
    {
    	if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
		        if(PlayerInfo[playerid][pAdminCP] >= 2012)
		        {
		            new string[128], year, month,day;    getdate(year, month, day);
		            ResetPlayerMoney(params[0]);
		            GivePlayerMoney(params[0], params[1]);
					format(string, 128, "Administrador %s ha fijado el dinero de %s a %d$ ", PlayerName(playerid),PlayerName(params[0]),params[1]);
				 	return A_Info(string);
		        }
		        else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		    }
		    else Message(playerid,  COLOR_GRAD2, "ID Inválida");
		}
		else Message(playerid, COLOR_GRAD2, "Utiliza: /money <PlayerID> <$>");
        return 1;
    }
    zcmd(sethp, playerid, params[])
        {
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
		        if(PlayerInfo[playerid][pAdminCP] >= 2)
		        {
		            new string[80];
		            SetHP(params[0],params[1]);
					format(string, 80, "Administrador %s ha establecido a %s %dHP", PlayerName(playerid),PlayerName(params[0]),params[1]);
				 	return A_Info(string);
		        } else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		    } else Message(playerid,  COLOR_GRAD2, "¡ID Inválida!");
		} else Message(playerid, COLOR_GRAD2, "Utiliza: /sethp <PlayerID> <HP>");
        return 1;
    }
    zcmd(setarmor, playerid, params[])
    {
   	if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "ui", params[0], params[1]))
		{
		    if(params[0] != INVALID_PLAYER_ID)
		    {
		        if(PlayerInfo[playerid][pAdminCP] >= 2)
		        {
		            new string[80];
		            SetPlayerArmour(params[0],params[1]);
					format(string, 80, "Administrador %s ha establecido a %s %d de chaleco", PlayerName(playerid),PlayerName(params[0]),params[1]);
				 	return A_Info(string);
		        } else SendClientMessage(playerid, COLOR_GRAD2, "¡No autorizado!");
		    } else SendClientMessage(playerid,  COLOR_GRAD2, "ID Inválida");
		} else SendClientMessage(playerid, COLOR_GRAD2, "Utiliza: /setarmor <PlayerID> <armor>");
        return 1;
    }
	zcmd(forcepayday, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        PayDay();
        return 1;
    }
    zcmd(loteria, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 6) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        else
        {
			new string[128];
            format(string, sizeof(string), "{2F99B5}Noticias de la Loteria: {FFFFFF}Hemos empesado la elección de la loteria.");
	        OOCOff(COLOR_WHITE, string);
	        new rand = random(51);
	        if(rand == 0) { rand += 1; }
	        Lotto(rand);
		}
        return 1;
    }
    zcmd(setpayday, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "i", params[0]))
        {
            new string[32];
            PayDayLeft = params[0];
            format(string, sizeof(string), "PayDay left: %d minutes", PayDayLeft);
            Message(playerid, COLOR_GRAD2, string);
        }   else Message(playerid, COLOR_GRAD2, "Utiliza: /setpayday <MinutesLeft>");
        return 1;
    }
    zcmd(payday, playerid, params[])
    {
        new string[64];
        format(string, sizeof(string), "* Faltan %d minutos para obtener el PayDay",PayDayLeft);
        return Message(playerid, COLOR_GRAD2, string);
    }
    // Inicio Comandos Especiales by KrozT
    zcmd(lavar, playerid, params[])
	{
		if(IsPlayerInRangeOfPoint(playerid, 5, 1911.1886,-1784.2952,13.0801))
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
		    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
   				{
			        for(new x = 0; x < sizeof(unwashable); x++)
			        {
			            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == unwashable[x][0])
			            {
			            	SendClientMessage(playerid, 0xAA3333AA, "No puedes lavar este auto");
			            	return 1;
						}
					}
        			if(GetPlayerMoney(playerid) > 4)
			        {
		        		if(usingcarwash == -1)
         				{
         				    GivePlayerMoney(playerid, -5);
         				    usingcarwash = playerid;
   				    		Update3DTextLabelText(entrancetext, 0xB0171FFF, "Alguien está lavando el auto, espera a tu turno.");
							for(new i = 0; i < MAX_PLAYERS; i++)
							{
								if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
								{
    								TogglePlayerControllable(i, 0);
								    SetPlayerCameraPos(i,1907.8804,-1790.0590,15);
    								SetPlayerCameraLookAt(i,1911.0471,-1781.6868,13.3828);
								}
								if(GetPlayerSurfingVehicleID(i) == GetPlayerVehicleID(playerid))
								{
    								SetPlayerPos(i,1906.9204,-1786.0435,13.5469);
    								SetPlayerFacingAngle(i, 270);
								}
							}
     						SetVehiclePos(GetPlayerVehicleID(playerid), 1911.1886, -1784.2952, 13.0801);
         					SetVehicleZAngle(GetPlayerVehicleID(playerid), 0);
            				MoveObject(entrancegate, 1911.21130371, -1780.68151855, 10.50000000, 1);
		            		SetTimerEx("Autocruise",3500,0,"ii",playerid, 1);
						}
						else
						{
			    			SendClientMessage(playerid, 0xAA3333AA, "Alguien está lavando el auto, espera a tu turno.");
						}
					}
 					else
    				{
   						SendClientMessage(playerid, 0xAA3333AA, "No tienes suficiente dinero");
        			}
				}
				else
				{
					SendClientMessage(playerid, 0xAA3333AA, "No eres el dueño de este vehiculo");
  				}
		    }
		    else
		    {
		    	SendClientMessage(playerid, 0xAA3333AA, "No estás en un auto");
			}
		}
		else
		{
			SendClientMessage(playerid, 0xAA3333AA, "No estás en la entrada del lavado de autos");
		}
		return 1;
	}
    zcmd(setstat, playerid, params[])
    {
        if(IsPlayerConnected(playerid))
	    {
	    if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
	        if(PlayerInfo[playerid][pAdminCP] >= 2012)
            {
	            if(!sscanf(params, "uii", params[0],params[1],params[2]))
	            {
	                new string[128];
	                if(IsPlayerConnected(params[0]))
	    			{
			    	    if(params[0] != INVALID_PLAYER_ID)
			    	    {
			    	        switch (params[1])
							{
								case 1:
								{
									PlayerInfo[params[0]][pLevel] = params[2];
									UpdatePlayerStat(params[0]);
									format(string, sizeof(string), "Admin %s ha establecido nivel %d a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 2:
								{
									PlayerInfo[params[0]][pAccount] = params[2];
									format(string, sizeof(string), "Admin %s ha establecido %d$ en la cuenta bancaria de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 3:
								{
									PlayerInfo[params[0]][pPnumber] = params[2];
									format(string, sizeof(string), "Teléfono: #%d", params[2]);
									Message(playerid, COLOR_GRAD2, string);
								}
								case 4:
								{
									PlayerInfo[params[0]][pExp] = params[2];
									format(string, sizeof(string), "Admin %s ha establecido en %d los puntos de respeto de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 5:
								{
								    PlayerInfo[params[0]][pWalk] = params[2];
								    format(string, sizeof(string), "Estilo andar: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerWalkingStyle(params[0], PlayerInfo[params[0]][pWalk]);
								}
								case 6:
								{
									PlayerInfo[params[0]][pPhousekey] = params[2];
									format(string, sizeof(string), "Casa: %d", params[2]);
									Message(playerid, COLOR_GRAD2, string);
								}
								case 7:
								{
								    PlayerInfo[params[0]][pJob] = params[2];
								    UpdatePlayerStat(params[0]);
								    format(string, sizeof(string), "Trabajo: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								}
								case 8:
								{
									switch(params[2])
									{
										case 9999:
										{
										    PlayerInfo[params[0]][pTimeCar] = 0;
											PlayerInfo[params[0]][pPcarkey] = 9999;
							    			Message(playerid, COLOR_GRAD2, "Vehículo: 9999");
				    					}
				    					default:
				    					{
				    					    PlayerInfo[params[0]][pTimeCar] = CarInfo[params[2]][cVehTime];
				    						PlayerInfo[params[0]][pPcarkey] = params[2];
						    				format(string, sizeof(string), "Vehículo: %d", params[2]);
							    			Message(playerid, COLOR_GRAD2, string);
						    			}
				    				}
								}
								case 9:
								{
									switch(params[2])
									{
										case 9999:
										{
										    PlayerInfo[params[0]][pTimeCar2] = 0;
											PlayerInfo[params[0]][pPcarkey2] = 9999;
							    			Message(playerid, COLOR_GRAD2, "Vehículo2: 9999");
				    					}
				    					default:
				    					{
				    					    PlayerInfo[params[0]][pTimeCar2] = CarInfo[params[2]][cVehTime];
				    						PlayerInfo[params[0]][pPcarkey2] = params[2];
						    				format(string, sizeof(string), "Vehículo2: %d", params[2]);
							    			Message(playerid, COLOR_GRAD2, string);
						    			}
				    				}
								}
								case 10:
								{
                                    PlayerInfo[params[0]][pCarPremium] = params[2];
                                    format(string, sizeof(string), "Admin %s ha establecido el Auto Premium %d a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
                                }
								case 11:
								{
								    PlayerInfo[params[0]][pAge] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d la edad de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 12:
								{
								    PlayerInfo[params[0]][pDEagle] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de Deagle de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								}
								case 13:
								{
								    PlayerInfo[params[0]][pShotgun] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de Shotgun de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								}
								case 14:
								{
								    PlayerInfo[params[0]][pMP5] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de MP5 de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								}
								case 15:
								{
								    PlayerInfo[params[0]][pAK47] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de AK47 de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								}
								case 16:
								{
								    PlayerInfo[params[0]][pM4] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de M4 de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								}
								case 17:
								{
								    PlayerInfo[params[0]][pSniper] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d el nivel de Sniper de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								    SetPlayerStats(params[0]);
								}
								case 18:
								{
								    PlayerInfo[params[0]][pSex] = params[2];
								    format(string, sizeof(string), "Sexo: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    UpdatePlayerStat(playerid);
				    			}
								case 19:
								{
								    PlayerDrunk[playerid] = params[2];
								    format(string, sizeof(string), "Drunk: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								    SetPlayerStats(params[0]);
								}
								case 20:
								{
								    PlayerInfo[playerid][pRent] = params[2];
								    format(string, sizeof(string), "Renta: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								}
								case 21:
								{
								    PlayerInfo[params[0]][pFStyle] = params[2];
								    format(string, sizeof(string), "Tipo Lucha: %d", params[2]);
								    Message(playerid, COLOR_GRAD2, string);
								}
								case 22:
								{
								    PlayerInfo[params[0]][pMats] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d materiales a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 23:
								{
								    PlayerInfo[params[0]][pDrugs] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de drogas a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 24:
								{
								    PlayerInfo[params[0]][pSpeed] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de speed a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 25:
								{
								    PlayerInfo[params[0]][pEctasy] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de estasis a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 26:
								{
								    PlayerInfo[params[0]][pRitalin] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de ritalin a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 27:
								{
								    PlayerInfo[params[0]][pHeroina] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de heroina a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 28:
								{
								    PlayerInfo[params[0]][pMarihuana] = params[2];
								    format(string, sizeof(string), "Admin %s ha dado %d gramos de marihuana a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 29:
								{
								    PlayerInfo[params[0]][pAdvertencias] = params[2];
								    format(string, sizeof(string), "Admin %s ha establecido en %d las advertencias de %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
								}
								case 30:
								{
								    PlayerInfo[params[0]][pPbizzkey] = params[2];
								    format(string, sizeof(string), "Negocio: %d", params[2]);
									Message(playerid, COLOR_GRAD2, string);
								}
								case 31:
								{
                                    PlayerInfo[params[0]][pCarPremium2] = params[2];
                                    format(string, sizeof(string), "Admin %s ha establecido el Auto Premium2 %d a %s", PlayerName(playerid), params[2], PlayerName(params[0]));
									A_Info(string);
                                }
								default: Message(playerid, COLOR_GRAD2, "¡Código inválido!");
							} 
						}
					}
					else Message(playerid, COLOR_GRAD2, "¡ID Inválida!");
	            }
	            else
	            {
	                Message(playerid, COLOR_GRAD1, "Utiliza: /setstat <PlayerID> <código> <x>");
					Message(playerid, COLOR_GRAD4, "|1.Nivel - 2.Cuenta Bancaria - 3.Teléfono - 4.PuntosRespeto 5.Estilo");
					Message(playerid, COLOR_GRAD4, "|6.Casa - 7.Trabajo - 8.Vehículo - 9. Vehículo2 - 10.AutoPremium - 11.Edad");
					Message(playerid, COLOR_GRAD4, "|12.Deagle - 13.Shotgun - 14.MP5 - 15.ak47 - 16.M4 - 17.Sniper - 18.Sexo");
					Message(playerid, COLOR_GRAD4, "|19.Drunk - 20.Rent - 21.Lucha - 22.Materiales - 23.Drogas - 24.Speed");
					return Message(playerid, COLOR_GRAD4, "|25.Extasis - 26.Ritalin - 27.Heroina - 28.Marihuana - 29.Advertencias - 30.Negocio - 31.Autopremium2");
	            }
	        } else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    }
        return 1;
    }
    zcmd(setstuff, playerid, params[])
    {
   	if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
  		if(PlayerInfo[playerid][pAdminCP] >= 2012)
    	{
  			if(!sscanf(params, "ii", params[0], params[1]))
    		{
    		    new string[128];
				switch(params[0])
				{
				    case 1:
				    {
				        Jackpot = params[1];
				        format(string, sizeof(string), "Admin %s ha establecido el Jackpot en %d", PlayerName(playerid), params[1]);
						A_Info(string);
						SaveStuff();
					}
					case 2:
					{
					    Tax = params[1];
                        format(string, sizeof(string), "Admin %s ha establecido el Fondo del Estado en %d$", PlayerName(playerid), params[1]);
						A_Info(string);
						SaveStuff();
					}
					case 3:
					{
					    TaxValue = params[1];
                        format(string, sizeof(string), "Admin %s ha establecido el Impuesto en %d$", PlayerName(playerid), params[1]);
						A_Info(string);
						SaveStuff();
					}
					case 4:
					{
					    Blood = params[1];
					    format(string, sizeof(string), "Admin %s ha establecido la sangre disponible en %d", PlayerName(playerid), params[1]);
						A_Info(string);
						SaveStuff();
					}
					default: Message(playerid, COLOR_GRAD2, "¡Código inválido!");
				}
			}
			else
			{
   				Message(playerid, COLOR_GRAD2, "Utiliza: /setstuff <Item> <Cantidad>");
			    Message(playerid, COLOR_GRAD2, "1.Jackpot - 2.Fondos - 3.Impuestos - 4.Sangre");
			}
		} else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		return 1;
	}
   	zcmd(setname, playerid, params[])
  	{
		new string[128];
		if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "No estás conectado");
		if(PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(sscanf(params, "us[128]", params[0], params[1])) return Message(playerid, COLOR_GRAD2, "Utilize: /setname <PlayerID> <Nuevo_Nombre>");
		if(params[0] != INVALID_PLAYER_ID)
		{
  			format(string, sizeof(string), "%s ha cambiado el nombre de %s a %s.",PlayerName(playerid),PlayerName(params[0]), params[1]);
			A_Info(string);
			Message(params[0], COLOR_RED2, string);
			SetPlayerName(params[0], params[1]);
		} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		return 1;
	}
   	zcmd(edit, playerid, params[]){
		new string[128], idcar = GetPlayerVehicleID(playerid), item[32];
		if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "s[64]i", item, params[1])){
            for(new i = 0; i < sizeof(HouseInfo); i++){
        	    if(PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])){
        	        if(params[1] > 0){
                        if(strcmp(item,"nivel",true) == 0){
                    	    HouseInfo[i][hLevel] = params[1];
                        }
                        else if(strcmp(item,"precio",true) == 0){
                            HouseInfo[i][hValue] =  params[1];
                        }
                        else if(strcmp(item,"cuartos",true) == 0){
                            HouseInfo[i][hRooms] =  params[1];
                        }
                        OnPropTextdrawUpdate(i);
        	        	format(string, sizeof(string), "CasaID: %d | Item: %s | Valor: %d", i, item, params[1]);
        	        	Message(playerid, COLOR_GRAD2, string);
        	        }
        	    }
            }
            for(new b = 0; b < sizeof(BizzInfo); b++){
                if(PlayerToPoint(3, playerid,BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez])){
                    if(params[1] > 0){
                        if(strcmp(item,"nivel",true) == 0){
                            BizzInfo[b][bLevelNeeded] = params[1];
                        }
                        else if(strcmp(item,"precio",true) == 0){
                            BizzInfo[b][bBuyPrice] = params[1];
                        }
                        else if(strcmp(item,"ganancias",true) == 0){
                            BizzInfo[b][bTill] = params[1];
                        }
                        OnBizzTextdrawUpdate(b);
        	        	format(string, sizeof(string), "NegocioID: %d | Item: %s | Valor: %d", b, item, params[1]);
        	        	Message(playerid, COLOR_GRAD2, string);
      	        	}
  	        	}
            }
            if(IsPlayerInAnyVehicle(playerid))
			{
                if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "¡No es un vehículo de venta!");
       	        if(params[1] >= 0){
                	if(strcmp(item,"precio",true) == 0){
            	    	CarInfo[idcar][cValue] = params[1];
                 	}
					else if(strcmp(item,"venta",true) == 0){
						CarInfo[idcar][cOwned] = params[1];
					}
					else if(strcmp(item,"seguro",true) == 0){
						CarInfo[idcar][cLock] = params[1];
					}
					else if(strcmp(item,"multa",true) == 0){
						CarInfo[idcar][cMulta] = params[1];
					}
					else if(strcmp(item,"embargos",true) == 0){
						CarInfo[idcar][cEmbargo] = params[1];
					}
   					format(string, sizeof(string), "CarID: %d | Item: %s | Valor: %d", idcar, item, params[1]);
		    		Message(playerid, COLOR_GRAD2, string);
	    		}
  	    	}
	    }
		else{
			Message(playerid, COLOR_GRAD2, "Utilize: /edit <Item> <Valor>");
			Message(playerid, COLOR_GRAD3, "Items Casas: Nivel, Precio, Cuartos");
			Message(playerid, COLOR_GRAD3, "Items Negocios: Nivel, Precio, Ganancias");
		 	Message(playerid, COLOR_GRAD3, "Items Vehículos: Precio, Venta, Seguro, Multa, Embargos");
 	 	}
		return 1;
	}
   	zcmd(editcar, playerid, params[]){
    	new string[128], idcar = GetPlayerVehicleID(playerid);
		if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
  		if(!IsAnOwnableCar(idcar)) return Message(playerid, COLOR_GRAD2, "¡No es un vehículo de venta!");
        if(!sscanf(params, "s[32]", params[0]))
		{
		    if(strfind(params[0], "_" , true) != -1) return Message(playerid, COLOR_GRAD2, "Ejemplo de Uso: /editcar Angie Torres");
			strmid(CarInfo[idcar][cOwner], params[0], 0, strlen(params[0]), 32);
			format(string, sizeof(string), "CarID: %d | Nuevo Dueño: %s", idcar, params[0]);
  			Message(playerid, COLOR_GRAD2, string);
  			return 1;
		} else return Message(playerid, COLOR_GRAD2, "Utilize: /editcar <Nuevo Dueño>");
   	}
   	zcmd(bizzname, playerid, params[]){
   	    new string[128];
		if(PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		for(new b = 0; b < sizeof(BizzInfo); b++){
		    if(PlayerToPoint(3.0, playerid, BizzInfo[b][bEntrancex], BizzInfo[b][bEntrancey], BizzInfo[b][bEntrancez]))
		    {
				if(!sscanf(params,"s[32]",params[0]))
				{
					strmid(BizzInfo[b][bName], params[0], 0, strlen(params[0]), 255);
					format(string, sizeof(string), "NegocioID: %d | Nuevo Nombre: %s", b, params[0]);
					Message(playerid, COLOR_GRAD2, string);
					OnBizzTextdrawUpdate(b);
				} else Message(playerid, COLOR_GRAD2, "Utilize: /bizzname <Nuevo Nombre>");
			}
   	    }
   	    return 1;
   	}
    zcmd(check,playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(!sscanf(params, "u", params[0])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    ShowStats(playerid,params[0]);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /check <ID>");
        return 1;
    }
    zcmd(verdinero, playerid, params[]){
		new string[128];
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /checkmoney <PlayerID>");
        format(string, sizeof(string), "%s - En Mano: %d", PlayerName(params[0]), GetPlayerMoney(params[0]));
        Message(playerid, COLOR_GRAD2, string);
		return 1;
	}
    zcmd(verjail, playerid, params[]){
		new string[80];
    	if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    	if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
    	if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /checkjail <PlayerID>");
        format(string, sizeof(string), "%s - %d segundos restantes", PlayerName(params[0]), PlayerInfo[params[0]][pJailTime]);
        Message(playerid, COLOR_GRAD2, string);
        return 1;
 	}
    zcmd(setint, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(!sscanf(params, "ud", params[0],params[1])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
		    SetPlayerInterior(params[0], params[1]);
		    format(string, sizeof(string), "- Interior de %s es ahora %d", PlayerName(params[0]), params[1]);   Message(playerid, COLOR_GRAD2, string);
			return Message(params[0], COLOR_GRAD2, string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /setint <PlayerID> <Interior>");
        return 1;
    }
    zcmd(setvw, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(!sscanf(params, "ud", params[0],params[1])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
		    SetPlayerVirtualWorld(params[0], params[1]);
		    format(string, sizeof(string), "- VirtualWorld de %s es ahora %d", PlayerName(params[0]), params[1]);   Message(playerid, COLOR_GRAD2, string);
			return Message(params[0], COLOR_GRAD2, string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /setvw <PlayerID> <VirtualWorld>");
        return 1;
    }
    zcmd(silenciar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(!sscanf(params, "u", params[0])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
		    if(Muted[params[0]] == 0){
   				Muted[params[0]] = 1;
			    format(string, sizeof(string), "Admin %s ha silenciado al jugador %s",PlayerName(playerid), PlayerName(params[0]));
				Message(params[0],COLOR_RED2,string);
				return A_Info(string);
			}
			else{
				Muted[params[0]] = 0;
				format(string, sizeof(string), "Admin %s ha desilenciado al jugador %s",PlayerName(playerid), PlayerName(params[0]));
				Message(params[0],COLOR_RED2,string);
				return A_Info(string);
			}
		} else Message(playerid, COLOR_GRAD2, "Utilize: /silenciar <PlayerID>");
        return 1;
    }
    zcmd(congelar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(!sscanf(params, "u", params[0])){
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
			TogglePlayerControllable(params[0], 0);
			Freezed[params[0]] = 1;
			format(string, sizeof(string), "%s ha congelado a %s",PlayerName(playerid), PlayerName(params[0]));
			Message(params[0], COLOR_RED2, string);
			return A_Info(string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /congelar <PlayerID>");
        return 1;
    }
    zcmd(descongelar, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(!sscanf(params, "u", params[0]))
		{
		    if(params[0] == INVALID_PLAYER_ID) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    new string[64];
			TogglePlayerControllable(params[0], 1);
			Freezed[params[0]] = 0;
			format(string, sizeof(string), "%s ha descongelado a %s",PlayerName(playerid), PlayerName(params[0]));
			Message(params[0], COLOR_RED2, string);
			return A_Info(string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /descongelar <PlayerID>");
        return 1;
    }
    zcmd(rtc, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        RespawnVehicle(GetPlayerVehicleID(playerid));
        RemovePlayerFromVehicle(playerid);
        return TogglePlayerControllable(playerid, 1);
    }
    zcmd(rtcar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "i", params[0])){
            RespawnVehicle(params[0]);
            new string[64]
            format(string, sizeof(string), "{B1AAB2}Respawneaste el auto [%d]", params[0]); Message(playerid, -1, string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /rtcar <VehicleID>");
		return 1;
    }
   	zcmd(carid, playerid, params[]){
		if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		for(new i; i != MAX_VEHICLES; i++)
		{
			new Float:x,Float:y,Float:z;
 			GetVehiclePos(i, x, y, z);
    		if(PlayerToPoint(3.0,playerid, x, y, z))
	    	{
	   			new string[64];
				format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Carid:~r~%d", i);
				GameTextForPlayer(playerid, string, 3000, 3);
				break;
			}
		}return 1;
	}
	zcmd(setvwcar, playerid, params[]){
	    if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
	    if(!sscanf(params, "id", params[0], params[1])){
			SetVehicleVirtualWorld(params[0], params[1]);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /setvwcar <VehicleID> <VirtualWorld>");
		return 1;
	}
	zcmd(rac, playerid, params[]){
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡Primero Conectate!");
	    if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
	    if(PlayerInfo[playerid][pAdminCP] >= 4){
			new bool:unwanted[CAR_AMOUNT];
			for(new player=0; player<MAX_PLAYERS; player++){
            	if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new car = 1; car <= VV; car++)
			{
				if(!unwanted[car]) SetVehicleToRespawn(car);
				SetVehicleParamsEx(car,0,0,0,0,0,0,0);
				engineOn[car] = false;
			}
			new string[128]
			format(string, sizeof(string), "Respawn general realizado por %s.", PlayerName(playerid));
			BroadCast(COLOR_GREEN,string);
        } else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		return 1;
		}
 	zcmd(rsinuso, playerid, params[])
			{
				if(PlayerInfo[playerid][pAdminCP] < 4)return Message(playerid, COLOR_GRAD2, "¡No puedes utilizar este comando!");
				if(AntiAbusos[playerid] == 0){
        		SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
				else
					{
					GlobalMsg(COLOR_GREEN, "* Todos los vehículos sin uso fueron respawneados.");
					if(PlayerInfo[playerid][pAdminCP] > 3) //cambienlo por su variable de admin
				{
				new bool:unwanted[VEH];
				Loop(i, MAX_PLAYERS)
				{
			if(IsPlayerConnected(i))
				{
					if(IsPlayerInAnyVehicle(i)) unwanted[GetPlayerVehicleID(i)] = true;
					}
				}
					Loop(car, MAX_VEHICLES)
				{
					if(!unwanted[car]) RespawnVehicle(car);
						}
					}
				}
			return 1;
	}
    zcmd(ir, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "u", params[0])){
		    if(params[0] != INVALID_PLAYER_ID){
		        new Float:p_x,Float:p_y,Float:p_z;
		        GetPlayerPos(params[0], p_x,p_y,p_z);
		        new interior = GetPlayerInterior(params[0]);
          		SetPosEx(playerid, p_x,p_y,p_z,0,interior,0);
          		return Message(playerid, COLOR_GRAD3, "¡Teleportado!");
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /ir <PlayerID>");
        return 1;
    }
    zcmd(activar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!ActiveTeleport[playerid]){
        	ActiveTeleport[playerid] = 1;
        	Message(playerid, COLOR_GRAD2, "¡Teleport Activado!");
		}
		else if(ActiveTeleport[playerid]){
		    ActiveTeleport[playerid] = 0;
		    Message(playerid, COLOR_GRAD2, "¡Teleport Desactivado!");
  		}
		return 1;
 	}
    zcmd(traer, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "u", params[0])){
		    if(params[0] != INVALID_PLAYER_ID){
		        new Float:p_x,Float:p_y,Float:p_z;
		        GetPlayerPos(playerid, p_x,p_y,p_z);
		        new interior = GetPlayerInterior(playerid);
          		SetPosEx(params[0], p_x,p_y,p_z,0,interior,0);
          		return Message(params[0], COLOR_WHITE, "¡Teleportado!");
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /traer <PlayerID>");
        return 1;
    }
    zcmd(verarmas, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "u", params[0])){
		    if(params[0] != INVALID_PLAYER_ID){
		        new x,xweapon, xbalas, string[80],NombreArma[24];
			    format(string, sizeof(string), "Armas de %s:", PlayerName(params[0])); Message(playerid, COLOR_GRAD1, string);

				for (new slot=0; slot<14; slot++){
				    GetPlayerWeaponData(params[0], slot, xweapon, xbalas);
				    if(xweapon != 0)
					{
                        GetWeaponName(xweapon,NombreArma,sizeof(NombreArma));
				        format(string, sizeof(string), "%s Balas: [%d]",NombreArma, xbalas);
				        x++;
				        Message(playerid, COLOR_GRAD1, string);
				        if(x >= 5)
						    {
								SendClientMessage(playerid, COLOR_GRAD1, string);
								x = 0;
								format(string, sizeof(string), "");
							} else format(string, sizeof(string), "%s,  ", string);
						}
					}
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		    return 1;
		} else Message(playerid, COLOR_GRAD2, "Utilize: /checkwep <PlayerID>");
        return 1;
    }
    zcmd(alimpiar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        CleanScreen();
        new string[48];
		format(string, sizeof(string), "Limpieza de chat por %s.", PlayerName(playerid));
		return GlobalMsg(COLOR_GREEN,string);
    }
    zcmd(bigears, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if (!BigEar[playerid]){
            BigEar[playerid] = 1;
			return Message(playerid, COLOR_GRAD2, "BigEars Mode On");
		}
		else{
			BigEar[playerid] = 0;
			return Message(playerid, COLOR_GRAD2, "BigEars Mode Off");
		}
    }
    zcmd(slap, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "u", params[0])){
			new Float:slx, Float:sly, Float:slz, string[52];
			if(params[0] != INVALID_PLAYER_ID){
			    GetPlayerPos(params[0], slx, sly, slz);
				SetPlayerPos(params[0], slx, sly, slz+5);
				PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
				format(string, sizeof(string), "%s golpeó a %s",PlayerName(playerid),PlayerName(params[0]));
				A_Info(string);
				return Message(params[0], COLOR_RED2, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /slap <PlayerID>");
        return 1;
    }
    zcmd(setskin, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "ui", params[0], params[1])){
		    if(params[0] != INVALID_PLAYER_ID){
			    if(params[1] > 299 || params[1] < 0) return Message(playerid, COLOR_GREY, "Skin ID incorrecto (0-299)");
			    new string[64];
			    PlayerInfo[params[0]][pChar] = params[1];
			    SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);
			    format(string, sizeof(string), "* %s cambió la skin de %s", PlayerName(playerid), PlayerName(params[0]));
				MessageEx(playerid, params[0], COLOR_WHITE, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /setskin <PlayerID> <SkinID>");
        return 1;
    }
    zcmd(vehslap, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "ui", params[0], params[1])){
		    if(params[0] != INVALID_PLAYER_ID){
			    new Float:slx, Float:sly, Float:slz, string[64];
			    GetVehiclePos(GetPlayerVehicleID(params[0]), slx, sly, slz);
				SetVehiclePos(GetPlayerVehicleID(params[0]), slx, sly, slz+params[1]);
				PlayerPlaySound(params[0], 1130, slx, sly, slz+params[1]);
				format(string, sizeof(string), "%s golpeó el vehículo de %s", PlayerName(playerid), PlayerName(params[0])); A_Info(string);
				return Message(params[0], COLOR_RED2, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /vehslap <PlayerID> <Altitud>");
        return 1;
    }
    zcmd(irmarca, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		}
		else
		{
			SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		}
		return Message(playerid, COLOR_GRAD1, "¡Teleportado!");
    }
    zcmd(marcar, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		return Message(playerid, COLOR_GRAD1, "¡Posición guardada!");
    }
    zcmd(getcar, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "i", params[0]))
		{
	        new Float:plocx,Float:plocy,Float:plocz;
			GetPlayerPos(playerid, plocx, plocy, plocz);
			return SetVehiclePos(params[0],plocx,plocy+4, plocz);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /traercar <VehicleID>");
		return 1;
    }
        zcmd(cambiarmiskin, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "ui", params[0], params[1])){
		    if(params[0] != INVALID_PLAYER_ID){
			    if(params[1] > 299 || params[1] < 0) return Message(playerid, COLOR_GREY, "Skin ID incorrecto (0-299)");
			    new string[64];
			    PlayerInfo[params[0]][pChar] = params[1];
			    SetPlayerSkin(params[0], PlayerInfo[params[0]][pChar]);
			    format(string, sizeof(string), "* %s cambió la skin de %s", PlayerName(playerid), PlayerName(params[0]));
				MessageEx(playerid, params[0], COLOR_WHITE, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /setskin <PlayerID> <SkinID>");
        return 1;
    }
    zcmd(traercarro, playerid, params[])
    {
        if(PlayerInfo[playerid][pDonateT] == 1){
			new Float:posx,Float:posy,Float:posz;
			GetPlayerPos(playerid, posx, posy, posz);
			return SetVehiclePos(PlayerInfo[playerid][pCarPremium],posx,posy+4,posz);
		} else Message(playerid, COLOR_GRAD2, "No eres premium.");
        return 1;
	}
     zcmd(traercarro2, playerid, params[])
    {
        if(PlayerInfo[playerid][pDonateT] == 1){
			new Float:posx,Float:posy,Float:posz;
			GetPlayerPos(playerid, posx, posy, posz);
			return SetVehiclePos(PlayerInfo[playerid][pCarPremium2],posx,posy+4,posz);
		} else Message(playerid, COLOR_GRAD2, "No eres premium.");
        return 1;
	}
    zcmd(gotocar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 3) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "i", params[0])){
	        new Float:cwx2,Float:cwy2,Float:cwz2;
			GetVehiclePos(params[0], cwx2, cwy2, cwz2);
			return SetPlayerPos(playerid, cwx2, cwy2, cwz2);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /ircar <VehicleID>");
		return 1;
    }
    zcmd(fixveh, playerid, params[]){
    	if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(PlayerInfo[playerid][pAdminCP] > 4)
        {
            if(!IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
            SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
    		RepairVehicle(GetPlayerVehicleID(playerid));
    		Message(playerid, COLOR_GRAD2, "¡Vehículo fixeado!");
		} else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		return 1;
	}
	zcmd(fixpremium, playerid, params[]){
        if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GRAD2, "No eres premium,compralo");
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo!");
        SetVehicleHealth(GetPlayerVehicleID(playerid), 500.0);
    	RepairVehicle(GetPlayerVehicleID(playerid));
		return Message(playerid, COLOR_GREY, "Vehículo reparado.");
	}
 	zcmd(explode, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "u", params[0])){
		    new string[64];
		    new Float:boomx, Float:boomy, Float:boomz;
			GetPlayerPos(params[0],boomx, boomy, boomz);
			CreateExplosion(boomx, boomy , boomz, 7, 10);
		    format(string, sizeof(string), "%s fue explotado por %s",PlayerName(params[0]),PlayerName(playerid)); A_Info(string);
			return Message(params[0], COLOR_RED2, string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /explode <ID>");
        return 1;
    }
    zcmd(mascara, playerid, params[]){
        new string[90];
        if(PlayerInfo[playerid][pMask] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes máscara!");
        if(Maskuse[playerid] == 0){
            Loop(i, MAX_PLAYERS){
   		    	if(IsPlayerConnected(i)){
		   			ShowPlayerNameTagForPlayer(i, playerid, 0);
				}
			}
			Maskuse[playerid] = 1;
      		format(string, sizeof(string), "* %s se pone una máscara.", PlayerName(playerid));
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        else{
            Loop(i, MAX_PLAYERS){
   		    	if(IsPlayerConnected(i)){
		   			ShowPlayerNameTagForPlayer(i, playerid, 1);
				}
			}
			Maskuse[playerid] = 0;
      		format(string, sizeof(string), "* %s se quita la máscara de su rostro.", PlayerName(playerid));
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        return 1;
    }
    zcmd(weather, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 6) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "i", params[0])){
		    new string[64];
		    SetWeather(params[0]);
		    DefaultWeather = params[0];
		    format(string, 64, "%s cambió el clima global a el ID %d", PlayerName(playerid),params[0]);
			return A_Info(string);

		} else Message(playerid, COLOR_GRAD2, "Utilize: /weatherall <WeatherID>");
        return 1;
    }
    zcmd(tod, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 6) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "i", params[0])){
			new string[48];
		    SetWorldTime(params[0]);
		    format(string, 256, "%s cambió la hora a %d", PlayerName(playerid), params[0]);
			return A_Info(string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /tod <Time> No usar este comando sin razón.");
        return 1;
    }
    zcmd(givegun, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "uii", params[0],params[1],params[2])){
		    if(params[1] < 1 || params[1] > 46) return Message(playerid, COLOR_GRAD2, "Error ID. (1-46)");
		    if(params[2] > 9999) return Message(playerid, COLOR_GRAD2, "Error Ammo. (Máx: 9999)");
		    new string[128];
		    SafeGivePlayerWeapon(params[0], params[1], params[2]);
			format(string, 128, "Administrador %s dió a %s Arma: %d Balas: %d", PlayerName(playerid), PlayerName(params[0]),params[1],params[2]);
			return A_Info(string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /givegun <PlayerID> <WeaponID> <Ammo>");
        return 1;
    }
    zcmd(teleports, playerid, params[]){
    if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
    if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
       	Message(playerid, 0xFF6464FF, "-= Teleports =-");
       	Message(playerid, COLOR_GRAD2, "/ls /sf /lv /conse /conse2 /conse3 /mandarls /hospital /banco /taller");
	    return 1;
    }
    zcmd(ah, playerid, params[]){
    	if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(Admin(1,playerid)){
		    Message(playerid, 0x00FF00FF, "-= Comandos Nivel 1 =-");
			Message(playerid, COLOR_GRAD2, "/check /setint /setvw  /silenciar /kick /jail /verarmas /enmascarados /advertir /kickname");
			Message(playerid, COLOR_GRAD2, "/verdinero /specplayer /specoff /congelar /descongelar /kickafk /verjail /teleports /astrips");
		}
		if(Admin(2,playerid)){
		    Message(playerid, 0x93FF93FF, "-= Comandos Nivel 2 =-");
			Message(playerid, COLOR_GRAD2, "/alimpiar /desarmar /rtc /slap /setskin /rtcar /carid /sethp /setarmor");
		}
		if(Admin(3,playerid)){
		    Message(playerid, 0xFFA579FF, "-= Comandos Nivel 3 =-");
			Message(playerid, COLOR_GRAD2, "/marcar /irmarca /getcar /gotocar /qb /qbs /bigears /desveh /setvwcar");
		}
		if(Admin(4,playerid)){
		    Message(playerid, 0xFF8040FF, "-= Comandos Nivel 4 =-");
			Message(playerid, COLOR_GRAD2, "/vehslap /rac /ban /banduda /unbanduda /rsinuso /entercar /aengineon /aooc /quitardnifalso");
		}
		if(Admin(5,playerid)){
		    Message(playerid, 0xFFA579FF, "-= Comandos Nivel 5 =-");
			Message(playerid, COLOR_GRAD2, "/explode /fuelcars /givegun /fixveh /conse /healcar /getip /carsno");
		}
		if(Admin(6,playerid)){
			Message(playerid, 0xFF8040FF, "-= Comandos Nivel 6 =-");
			Message(playerid, COLOR_GRAD2, "/rcn /noduda /weather /tod /richs /loteria /changeit /respawngeneral");
		}
		if(Admin(2012,playerid)){
			Message(playerid, 0xFF4A4AFF, "-= Comandos Nivel 2012 =-");
			Message(playerid, COLOR_GRAD2, "/setstat /venderauto /asellhouse /asellbizz /darmoney /setstuff /editcar");
			Message(playerid, COLOR_GRAD2, "/unban /unbanip /house /houseint /evento /bizz /fijarmoney /liberar /darlider");
		}
		if(Admin(2013,playerid)){
            Message(playerid, 0xFF4A4AFF, "-= Comandos Nivel 2013 =-");
            Message(playerid, COLOR_GRAD2, "/daradmin /darhelp /noac /noooc /forcepayday /setpayday /searchcar /edit /mps");
        }
        if(Admin(2014,playerid)){
            Message(playerid, 0xFF4A4AFF, "-= Comandos Dueño - Técnico =-");
            Message(playerid, COLOR_GRAD2, "/editadmin /banoff /bizzname /hacermodfacc /darvip /update /setname /cuentaoff");
            Message(playerid, COLOR_GRAD2, "Solo Técnicos: /npcjoin /npckick /npcload /houseentrance /houseexit");
        }
        return 1;
    }
    zcmd(ban, playerid, params[]){
		if(PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GREY, "¡No autorizado!");
		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
		if(DetectarSPAM(params[1])) return AccionSPAM(playerid, params[1]);
        if(!sscanf(params, "us[64]", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
                new string[228];
                if(PlayerInfo[params[0]][pAdminCP] == 2014){
          			format(string, sizeof(string), "ATENCIÓN: %s intentó banear a %s", PlayerName(playerid), PlayerName(params[0]));
	            	A_Info(string);
		            return 1;
		        }
		        else{
		            if(IsPlayerNPC(params[0])) return Message(playerid, COLOR_GRAD2, "No puedes banear a un NPC.");
		            else{
		                new year, month,day;    getdate(year, month, day);
						format(string, sizeof(string), "%s ha baneado a %s, razón: %s (%d/%d/%d)", PlayerName(playerid), PlayerName(params[0]), params[1],day,month,year);
						Message(params[0], COLOR_RED2, string);
						A_Info(string);
						BanLog(string);
						PlayerInfo[params[0]][pLocked] = 8;
						Message(params[0], COLOR_WHITE, "-----> Atención <------");
						Message(params[0], COLOR_GRAD2, "Fuiste baneado, toma una ScreenShot ahora mismo oprimiendo F8 asi podras apelar tu desban via foro,");
						Message(params[0], COLOR_GRAD2, "o contacta con un administrador via msn. Si eres culpable, aceptalo y escarmienta.");
						Ban(params[0]);
		            }
		        }
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /ban <PlayerID> <Razón>");
        return 1;
    }
   	zcmd(banoff, playerid, params[]){
   	    if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
   	    if(!sscanf(params, "s[32]", params[0])){
            if(strfind(params[0], "_" , true) != -1){
		   		new string3[64], string[128];
    			format(string3,sizeof(string3),"users/%s.ini",params[0]);
    			if(INI_Exist(string3)){
    				new INI:ini = INI_Open(string3);
					INI_WriteInt(ini, "Locked", 8);
  					INI_Close(ini);
      				format(string, sizeof(string), "%s le ha metido ban a %s",PlayerName(playerid), params[0]);
    				A_Info(string);
   				} else Message(playerid, COLOR_GRAD2, "¡Esa cuenta no existe!");
			} else Message(playerid, COLOR_GRAD2, "Ejemplo de Uso: /banoff Juan_Perez")
		} else Message(playerid, COLOR_GRAD2, "Utilize: /banoff <Nombre_Jugador>");
    	return 1;
   	}
    zcmd(banduda, playerid, params[]){
		if (PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GREY, "¡No autorizado!");
		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "us[64]", params[0], params[1])){
           if(IsPlayerConnected(params[0])){
                new string[128];
                format(string, sizeof(string), "%s ha baneado del sistema de ayuda a %s, razón: %s", PlayerName(playerid), PlayerName(params[0]), params[1]);
                A_Info(string);
                PlayerInfo[params[0]][pBanDuda] = 1;
                Message(params[0], COLOR_WHITE, "  Atención<------");
                Message(params[0], COLOR_GRAD2, "*Usted ha sido bloqueado de usar el sistema de ayuda - Contacte con un Administrador.");
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /banduda <PlayerID> <Razón>");
        return 1;
    }
    zcmd(unbanduda, playerid, params[]){
		if (PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GREY, "¡No autorizado!");
		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "u", params[0])){
            if(IsPlayerConnected(params[0])){
                new string[128];
		        format(string, sizeof(string), "%s ha desbaneado del sistema de ayuda a %s", PlayerName(playerid), PlayerName(params[0]));
				A_Info(string);
                PlayerInfo[params[0]][pBanDuda] = 0;
				Message(params[0], -1, "{00DC84}------>{FFFFFF}Atención{00DC84}<------");
				Message(params[0], COLOR_GRAD2, "*Usted ha sido desbloqueado de usar el sistema de ayuda.");
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /unbanduda <PlayerID>");
        return 1;
    }
    zcmd(advertir, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params,"us[128]", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];
                PlayerInfo[params[0]][pAdvertencias] += 1;
				format(string, sizeof(string), "%s ha dado una advertencia a %s, razón: %s", PlayerName(playerid),PlayerName(params[0]),params[1]);
                Message(params[0], COLOR_RED2, string);
				A_Info(string);
		        BanLog(string);
				if(PlayerInfo[params[0]][pAdvertencias] >= 3)
				{
				    PlayerInfo[params[0]][pLocked] = 8;
				    format(string, sizeof(string), "%s fue baneado automaticamente por tener mas de 2 advertencias", PlayerName(params[0]));
				    A_Info(string);
					Message(params[0], COLOR_WHITE, "-----> Atención <------");
					Message(params[0], COLOR_GRAD2, "Fuiste baneado automaticamente del servidor por acumular mas de 2 advertencias, toma una ScreenShot");
					Message(params[0], COLOR_GRAD2, "ahora mismo oprimiendo F8 asi podras apelar tu desban via foro o contacta con un administrador via msn.");
					Ban(params[0]);
				}
				else
				{
					Message(params[0], COLOR_WHITE, "* Has recibido una advertencia y has sido kikeado, cuando llegues a 3 advertencias seras baneado.");
					Kick(params[0]);
				}
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /advertir <PlayerID> <Razon>");
		return 1;
    }
    zcmd(advertencia, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params,"us[164]", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
                new string[164];
                if(PlayerInfo[params[0]][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡Ese jugador no pertenece al staff!");
                PlayerInfo[params[0]][pAdminAdver] += 1;
				format(string, sizeof(string), "%s ha dado una advertencia administrativa a %s, razón: %s", PlayerName(playerid),PlayerName(params[0]),params[1]);
				A_Info(string);
				if(PlayerInfo[params[0]][pAdminAdver] >= 3)
				{
				    PlayerInfo[params[0]][pAdminCP] = 0;
				    format(string, sizeof(string), "%s fue expulsado automaticamente del staff por acumular 3 advertencias", PlayerName(params[0]));
                    Message(params[0], COLOR_RED2, string);
					A_Info(string);
					PlayerInfo[params[0]][pAdminAdver] = 0;
				}
				else{
				    format(string, sizeof(string), "* Has recibido una advertencia administrativa por parte de %s", PlayerName(playerid));
				    Message(params[0], COLOR_WHITE, string);
				}
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /advertencia <AdminID> <Razon>");
		return 1;
    }
    zcmd(checkadver, playerid, params[0])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "u",params[0])){
			if(IsPlayerConnected(params[0])){
				new string[128];
			    if(PlayerInfo[params[0]][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡Ese usuario no pertenece al staff!");
				format(string, sizeof(string), "Administrador: %s   -   Advertencias: %d", PlayerName(params[0]), PlayerInfo[params[0]][pAdminAdver]);
				Message(playerid, COLOR_GRAD4, string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /checkadver <PlayerID>");
        return 1;
    }
    zcmd(editadver, playerid, params[0])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "ud", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];
                PlayerInfo[params[0]][pAdminAdver] = params[1];
                format(string, sizeof(string), "%s ha establecido en %d las advertencias administrativas de %s", PlayerName(playerid),params[1],PlayerName(params[0]));
				A_Info(string);
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /editadver <PlayerID> <Advertencias>");
        return 1;
    }
    zcmd(noduda, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 6) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if (!nod){
			nod = 1;
			GlobalMsg(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -");
			GlobalMsg(COLOR_RED,"  *** Canal de Dudas Desactivado ***  ");
			return GlobalMsg(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -");
		}
		else{
			nod = 0;
			GlobalMsg(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -");
			GlobalMsg(COLOR_GREEN,"  *** Canal de Dudas Activado (/duda) ***   ");
			GlobalMsg(COLOR_NEWS,"  ... No Flood & No Spam ... ");
			return GlobalMsg(COLOR_YELLOW2,"  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -");
		}
    }
   zcmd(scripteron, playerid, params[])	{
	new string_ocupado[100];
 	if(PlayerInfo[playerid][pAdminCP] > 0){
	if(Scripter_Ocupado[playerid] == 0){
		Scripter_Ocupado[playerid] = 1;
		AntiAbusos[playerid] = 1;
		SetPlayerColor(playerid,ROJO_ADMIN);
		format(string_ocupado, sizeof(string_ocupado), "{FFFFFF}[ADM]{006FFF} El Scripter %s [ID:%d]{FFFFFF} está revisando el servidor.", PlayerName(playerid), playerid);
		SendClientMessageToAll(-1, string_ocupado);
		return 1;
		}
		else
		{
			Scripter_Ocupado[playerid] = 0;
			AntiAbusos[playerid] = 0;
			format(string_ocupado, sizeof(string_ocupado), "{FFFFFF}[ADM]{BF0000} El Scripter %s [ID:%d]{FFFFFF} terminó de revisar el servidor.", PlayerName(playerid), playerid);
			SendClientMessageToAll(-1, string_ocupado);
			return 1;
			}
		} else SendClientMessage(playerid, COLOR_GRAD2,"No estás autorizado para usar esto.");
		return 1;
	}
    zcmd(don, playerid, params[]){
		if (PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!")
  		AntiAbusos[playerid] = 1;
		Message(playerid, COLOR_GRAD2, "Ahora ya podras usar todos los comandos administrativos");
   		return 1;
     }


    zcmd(adminduty, playerid, params[]){
		if (PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!")
		new string[64];
		if(AdminDuty[playerid] == 0){
		{
           ShowPlayerDialog(playerid,CREDITOS,DIALOG_STYLE_MSGBOX,"{006FFF}Sistema Anti AA","\n\
			{FFFFFF}Sistema anti AA Recuerde revisar el /reglasadmin\n\
			{006FFF}Saludos - Encargados de Staff","Aceptar","");
				}
				AdminDuty[playerid] = 1; HidePM[playerid] = 0;
				SetPlayerArmour(playerid, 999);	SetHP(playerid, 100);
				AntiAbusos[playerid] = 1; AdminChat[playerid] = 0;
    			if(PlayerInfo[playerid][pAdminCP] == 1)
				{
					SetPlayerColor(playerid, ROSADO_ADMIN);
				}
				if(PlayerInfo[playerid][pAdminCP] == 2)
				{
					SetPlayerColor(playerid,CELESTE_ADMIN);
				}
				if(PlayerInfo[playerid][pAdminCP] == 3)
				{
					SetPlayerColor(playerid,AMARILLO_ADMIN);
				}
				if(PlayerInfo[playerid][pAdminCP] == 4)
				{
					SetPlayerColor(playerid,MORADO_ADMIN);
				}
				if(PlayerInfo[playerid][pAdminCP] == 5)
				{
					SetPlayerColor(playerid,MORADO_ADMIN);
				}
				if(PlayerInfo[playerid][pAdminCP] == 6)
				{
					SetPlayerColor(playerid,VERDE_ADMIN);
				}
				if(PlayerInfo[playerid][pAdminCP] == 2012)
				{
					SetPlayerColor(playerid,COLOR_ORANGE);
				}
				if(PlayerInfo[playerid][pAdminCP] == 2013)
				{
					SetPlayerColor(playerid,ROJO_ADMIN);
				}
				if(PlayerInfo[playerid][pAdminCP] == 2014)
				{
					SetPlayerColor(playerid,ROJO_ADMIN);
						}
						format(string, sizeof(string), "{FFFFFF}[ADM] {006FFF}%s está conectado. (/w %d)", PlayerName(playerid), playerid); BroadCast(0xFFFFA4FF,string);
						return 1;
					}
				else
				{
				AdminDuty[playerid] = 0;    HidePM[playerid] = 1;
				AntiAbusos[playerid] = 0;   AdminChat[playerid] = 1;
			    SetPlayerColor(playerid, COLOR_GRAD1);
				format(string, sizeof(string), "{FFFFFF}[ADM]{BF0000} %s está fuera de servicio.", PlayerName(playerid), playerid); BroadCast(0xBF0000FF,string);
				return 1;
			}
	}
    zcmd(administradores, playerid, params[]){
       	Message(playerid, 0xFF6464FF, "|___ Hermandad Zero RolePlay ___|");
       	Message(playerid, COLOR_GRAD2, "La lista de Administradores de Hermandad Zero RolePlay no se da a conocer por asuntos internos del servidor.");
       	Message(playerid, COLOR_GRAD2, "Use /duda para comunicarse con ellos y espere que le respondan.");
       	Message(playerid, COLOR_GRAD2, "Use /re para reportar un jugador y espere que un administrador le responda");
	    return 1;
     }
    zcmd(staff, playerid, params[]){
    if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GREY, "¡Use el comando /admins!");
        Message(playerid, COLOR_GREEN, "| Staff |");
		for(new i = 0; i < MAX_PLAYERS; i++){
		    if(IsPlayerConnected(i)){
		        if(PlayerInfo[i][pAdminCP] >= 1 && PlayerInfo[i][pAdminCP] < 2015){
      				new string[128],admtext[24];
      				switch(PlayerInfo[i][pAdminCP]){
      				    case 1:		admtext = "Ayudante";
      				    case 2:     admtext = "Moderador";
      				    case 3:     admtext = "Admin Junior";
      				    case 4:     admtext = "Administrador";
      				    case 5:     admtext = "Admin Superior";
      				    case 6:     admtext = "Admin Lider";
      				    case 2012:  admtext = "Administrador G.";
      				    case 2013:  admtext = "Administrador D.";
      				    case 2014:  admtext = "Dueño";
  				    }
					format(string, sizeof(string),"  %s - %s", admtext, PlayerName(i));
					Message(playerid, 0xC0C0C0FF, string);
				}
			}
		}
    	return 1;
    }
    zcmd(admins, playerid, params[]){
        Message(playerid, COLOR_GREEN, "| Staff de Hermandad zero RP |");
		for(new i = 0; i < MAX_PLAYERS; i++){
		    if(IsPlayerConnected(i)){
		        if(PlayerInfo[i][pAdminCP] >= 1 && PlayerInfo[i][pAdminCP] <= 2013){
      			new string[128],admtext[24];
				if(PlayerInfo[i][pAdminCP] == 2013) { admtext = "Encargado de Staff"; }
	        	else if(PlayerInfo[i][pAdminCP] == 2012) { admtext = "Administrador General"; }
				else if(PlayerInfo[i][pAdminCP] == 6) { admtext = "Administrador Lider"; }
				else if(PlayerInfo[i][pAdminCP] == 5)	{ admtext = "Administrador Superior"; }
				else if(PlayerInfo[i][pAdminCP] == 4)	{ admtext = "Administrador"; }
				else if(PlayerInfo[i][pAdminCP] == 3)	{ admtext = "Admin Junior"; }
				else if(PlayerInfo[i][pAdminCP] == 2)	{ admtext = "Moderador"; }
				else if(PlayerInfo[i][pAdminCP] == 1)	{ admtext = "Ayudante"; }
				if(AdminDuty[i] == 0){
					format(string, sizeof(string),"  %s - %s", admtext, PlayerName(i));
					Message(playerid, COLOR_WHITE, string);
				}
				else{
					format(string, sizeof(string),"(En servicio) %s - %s [%d]", admtext, PlayerName(i), i);
					Message(playerid, TEAM_VAGOS_COLOR, string);
				}
			}
		}
	}
    return 1;
    }
    zcmd(helpers, playerid, params[]){
	   	Message(playerid, COLOR_GREEN, "| Helpers |");
		for(new i = 0; i < MAX_PLAYERS; i++){
		    if(IsPlayerConnected(i)){
		        if(PlayerInfo[i][pHelper] == 1){
					new string[128];
					format(string, sizeof(string),"  %s", PlayerName(i));
					Message(playerid, 0xC0C0C0FF, string);
				}
			}
		}
    	return 1;
    }
    zcmd(usersvip, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		Message(playerid, COLOR_GREEN, "| Users Premium |");
		for(new i = 0; i < MAX_PLAYERS; i++){
			if(IsPlayerConnected(i)){
			    if(PlayerInfo[i][pDonateT] == 1){
					new string[128];
			        format(string, sizeof(string), " %s", PlayerName(i));
			        Message(playerid, 0xC0C0C0FF, string);
       			}
			}
        }
		return 1;
	}
    zcmd(noac, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        new string[80];
        if (!noac){
			noac = 1;
			format(string, sizeof(string), "[ADMIN CHAT BLOQUEADO Por %s] ",PlayerName(playerid));
			return A_Info(string);
		}
		else{
			noac = 0;
			format(string, sizeof(string), "[ADMIN CHAT DESBLOQUEADO Por %s]",PlayerName(playerid));
			return A_Info(string);
		}
    }
    zcmd(a, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if((noac) && PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid,COLOR_GRAD2,"¡Este canal está desactivado!");
        if(!sscanf(params, "s[128]", params[0])){
            new string[128], arank[64];
            switch(PlayerInfo[playerid][pAdminCP])
            {
				case 1:     arank = "Ayudante";
				case 2:     arank = "Moderador";
				case 3:     arank = "Admin Junior";
				case 4:     arank = "Administrador";
				case 5:     arank = "Admin Superior";
				case 6:     arank = "Admin Lider";
				case 2012:	arank = "Admin General";
                case 2013,2014: arank = "Admin Dueño";
                default: 	arank = "???";
            }
            format(string, sizeof(string), "%s %s: %s", arank, PlayerName(playerid), params[0]);
            if(PlayerInfo[playerid][pAdminCP] > 0 && PlayerInfo[playerid][pAdminCP] < 2012) ABroadCast(0x00A5F4FF, string,1);
			else if(PlayerInfo[playerid][pAdminCP] > 2011 && PlayerInfo[playerid][pAdminCP] <2015) ABroadCast(0xEA7A0BFF, string,1);
			else Message(playerid, -1, "{FFFFFF}* No admin {3F96CB}rank{FFFFFF}! (???)");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /a <Texto>");
        return 1;
    }
    zcmd(update, playerid, params[])
    {
        if (PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        SaveAccounts();		SaveAllGuns();
		SaveStuff();        SaveGlobal()
		Message(playerid, COLOR_GREEN, "* Cuentas actualizadas.");
        return 1;
    }
    zcmd(dar, playerid, params[])
    {
        new string[128], item[32];
        if(!sscanf(params, "s[32]u", item, params[1]))
        {
            if(!IsPlayerConnected(params[1]))               return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(strcmp(item,"arma",true) == 0)
			{
			    new gunID = GetPlayerWeapon(playerid), gunAmmo = GetPlayerAmmo(playerid);
            	if(gunID != 0 && gunAmmo != 0)
			    {
			        RemovePlayerWeapon(playerid, gunID);
       				SafeGivePlayerWeapon(params[1], gunID, gunAmmo);
			        format(string, sizeof(string), "* %s le da un arma a %s.", PlayerName(playerid), PlayerName(params[1]));
			        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    } else Message(playerid, COLOR_GRAD2, "¡No tienes arma a dar!");
			}
			else if(strcmp(item,"chaleco",true) == 0)
			{
                new Float:xC,Float:xD;
   				GetPlayerArmour(playerid, xC);
		    	GetPlayerArmour(params[1], xD);
				if(xC > 0)
    			{
       				if(xC > xD)
			        {
           				format(string, sizeof(string), "* %s le da su chaleco antibalas a %s", PlayerName(playerid), PlayerName(params[1]));
		        		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			        	SetPlayerArmour(playerid, 0);
			        	SetPlayerArmour(params[1], xC);
			        } else Message(playerid, COLOR_GRAD2, "¡El jugador tiene una cantidad de chaleco superior al tuyo!");
				} else Message(playerid, COLOR_GRAD2, "No tienes chaleco para dar.");
			} else Message(playerid, COLOR_GRAD2, "Item incorrecto.");
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /dar <Item> <PlayerID>");
            Message(playerid, COLOR_GRAD2, "Items: arma, chaleco");
        }
        return 1;
    }
    zcmd(pasar, playerid, params[])
    {
        new string[128], item[32];
        if(!sscanf(params, "s[32]ui", item, params[1],params[2]))
        {
            if(!IsPlayerConnected(params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(strcmp(item,"materiales",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pMats]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de materiales!");
                format(string, sizeof(string), "* %s le da materiales a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
       			PlayerInfo[params[1]][pMats] += params[2];
       			PlayerInfo[playerid][pMats] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d materiales. Ahora tienes %d", params[2], PlayerInfo[params[1]][pMats]);
	        	Message(params[1], COLOR_YELLOW, string);
            }
            if(strcmp(item,"drogas",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pDrugs]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de drogas!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[params[1]][pDrugs] += params[2];
       			PlayerInfo[playerid][pDrugs] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d drogas. Ahora tienes %d", params[2], PlayerInfo[params[1]][pDrugs]);
	        	Message(params[1], COLOR_YELLOW, string);
            }
            if(strcmp(item,"speed",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pSpeed]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de speed!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[params[1]][pSpeed] += params[2];
       			PlayerInfo[playerid][pSpeed] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d de speed. Ahora tienes %d", params[2], PlayerInfo[params[1]][pSpeed]);
	        	Message(params[1], COLOR_YELLOW, string);
            }
            if(strcmp(item,"ectasy",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pEctasy]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ectasy!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[params[1]][pEctasy] += params[2];
       			PlayerInfo[playerid][pEctasy] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d de ectasy. Ahora tienes %d", params[2], PlayerInfo[params[1]][pEctasy]);
	        	Message(params[1], COLOR_YELLOW, string);
            }
            if(strcmp(item,"ritalin",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pRitalin]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de ritalin!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[params[1]][pRitalin] += params[2];
       			PlayerInfo[playerid][pRitalin] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d de ritalin. Ahora tienes %d", params[2], PlayerInfo[params[1]][pRitalin]);
	        	Message(params[1], COLOR_YELLOW, string);
            }
            if(strcmp(item,"heroina",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pHeroina]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de heroina!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[params[1]][pHeroina] += params[2];
       			PlayerInfo[playerid][pHeroina] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d de heroina. Ahora tienes %d", params[2], PlayerInfo[params[1]][pHeroina]);
	        	Message(params[1], COLOR_YELLOW, string);
            }
            if(strcmp(item,"marihuana",true) == 0)
            {
                if(params[2] > PlayerInfo[playerid][pMarihuana]) return Message(playerid, COLOR_GRAD2, "¡No tienes esa cantidad de marihuana!");
                format(string, sizeof(string), "* %s le da algo a %s.", PlayerName(playerid), PlayerName(params[1]));
       			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                PlayerInfo[params[1]][pMarihuana] += params[2];
       			PlayerInfo[playerid][pMarihuana] -= params[2];
       			format(string, sizeof(string), "* Has recibido %d de marihuana. Ahora tienes %d", params[2], PlayerInfo[params[1]][pMarihuana]);
	        	Message(params[1], COLOR_YELLOW, string);
            }
        } else {
            Message(playerid, COLOR_GRAD2, "Utilize: /pasar <Item> <PlayerID> <Cantidad>");
            Message(playerid, COLOR_GRAD2, "Items: materiales, drogas, speed, ectasy, ritalin, heroina, marihuana");
        }
        return 1;
    }
    zcmd(daradmin, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "ui", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
                new string[128];
                
    			PlayerInfo[params[0]][pAdminCP] = params[1];
    			if(params[1] >= 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
			    if(params[1] == 0) { PlayerInfo[params[0]][pAdminAdver] = 0; PlayerInfo[playerid][pFacciones] = 0; }
		    	format(string, sizeof(string), "{40D3FF}%s lo ha asignado administrador nivel %d", PlayerName(playerid), params[1]);
			    Message(params[0], -1, string);
			    format(string, sizeof(string), "%s ha asignado administrador nivel %d a %s", PlayerName(playerid), params[1], PlayerName(params[0]));
			    A_Info(string);
            } else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /daradminael <ID> <Nivel>");
        return 1;
    }
    zcmd(hacermodfacc, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(!sscanf(params, "ui", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
            	new string[128];
                switch(params[1])
                {
                    case 0:
                    {
            			PlayerInfo[params[0]][pFacciones] = 0;
            			format(string, sizeof(string), "{40D3FF}%s le ha quitado el puesto de Encargado de Facciones", PlayerName(playerid));
    					Message(params[0], -1, string);
		    			format(string, sizeof(string), "%s le ha quitado el puesto de Encargado de Facciones a %s", PlayerName(playerid), PlayerName(params[0]));
		    			A_Info(string);
	    			}
	    			case 1:
	    			{
	    			    PlayerInfo[params[0]][pFacciones] = 1;
            			format(string, sizeof(string), "{40D3FF}%s lo ha asignado Encargado de Facciones", PlayerName(playerid));
    					Message(params[0], -1, string);
		    			format(string, sizeof(string), "%s ha asignado Encargado de Facciones a %s", PlayerName(playerid), PlayerName(params[0]));
		    			A_Info(string);
	    			}
	    			default: Message(playerid, COLOR_GRAD2, "¡El nivel debe ser entre 0 y 1!");
 				}
		    } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
    	} else Message(playerid, COLOR_GRAD2, "Utilize: /darfacciones <ID> <Nivel>");
    	return 1;
    }
    zcmd(editadmin, playerid, params[]){
		new string3[64], string[128], name[32];
   	    if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
   	    if(!sscanf(params, "s[32]i", name, params[1])){
			format(string3,sizeof(string3),"users/%s.ini",name);
			if(INI_Exist(string3)){
				new	INI:ini = INI_Open(string3);
				INI_WriteInt(ini, "AdminCP", params[1]);
				INI_Close(ini);
				format(string, sizeof(string), "%s ha puesto en %d el nivel admin de %s",PlayerName(playerid), params[1], name);
				A_Info(string);
			} else Message(playerid, COLOR_GRAD2, "¡Esa cuenta no existe!");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /editadmin <Nombre_Jugador> <Nivel>");
    	return 1;
   	}
    /*zcmd(hacerdon, playerid, params[]){
		if(IsPlayerAdmin(playerid)){
       		if(!sscanf(params, "ui", params[0], params[1])){
      			if(IsPlayerConnected(params[0])){
     				new string[128];
					PlayerInfo[params[0]][pAdminCP] = params[1];
					format(string, sizeof(string), "{40D3FF}%s lo ha asignado administrador nivel %d", PlayerName(playerid), params[1]);
					Message(params[0], -1, string);
 					format(string, sizeof(string), "Has asignado administrador nivel %d a %s", params[1], PlayerName(params[0]));
   					Message(playerid, 0xFF9562FF, string);
  				} else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
			} else Message(playerid, COLOR_GRAD2, "Utilize: /somonosotro <ID> <Nivel>");
		} else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    } */
    zcmd(darvip, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GREY, "¡No autorizado!");
        if(!sscanf(params, "ui", params[0], params[1])){
            if(IsPlayerConnected(params[0])){
           		new string[128];
             	PlayerInfo[params[0]][pDonateT] = params[1];
              	format(string, sizeof(string), "{40D3FF}%s, su sistema premium está en {FFFFFF}[%d]", PlayerName(playerid), params[1]);
               	Message(params[0], -1, string);
               	format(string, sizeof(string), "%s puso sistema premium a %s a [%d] ", PlayerName(playerid), PlayerName(params[0]), params[1]);
                A_Info(string);
                UpdatePlayerStat(playerid);
            } else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /darvip <ID> <0 - 1> [0 = No / 1 = Si]");
        return 1;
    }
    zcmd(color, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");{
        	ShowPlayerDialog(playerid, COLOR_ADM, DIALOG_STYLE_LIST, " {00ABFF}Seleccione su color", " {FF0005}>{FFFFFF}Rojo\n {00FF00}>{FFFFFF}Verde\n {FFFF00}>{FFFFFF}Amarillo\n {FFFFC2}>{FFFFFF}Crema\n {FFA1FF}>{FFFFFF}Rosado\n {3CB9FF}>{FFFFFF}Celeste\n {9A03DA}>{FFFFFF}Morado\n {FF6631}>{FFFFFF}Naranja\n {FFFFFF}>Blanco\n {000000}>{ffffff}Negro", "Ok", "Salir");
        }
		return 1;
    }
    zcmd(kick, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(DetectarSPAM(params[1])) return AccionSPAM(playerid, params[1]);
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "us[180]", params[0], params[1])){
            if(params[0] != INVALID_PLAYER_ID){
                new string[180];
                if(IsPlayerNPC(params[0])) return Message(playerid, COLOR_GRAD2, "¡No puedes kikear a un NPC!");
                if(PlayerInfo[params[0]][pAdminCP] == 2014)
        		{
          			format(string, sizeof(string), "ATENCIÓN: %s intentó kickear a %s", PlayerName(playerid),PlayerName(params[0]));
	            	return A_Info(string);
		        }
		        format(string, sizeof(string), "%s ha kickeado a %s, razón: %s", PlayerName(playerid),PlayerName(params[0]),params[1]);
		        A_Info(string);
				Message(params[0], COLOR_RED2, string);
				Kick(params[0]);
				return 1;
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /kick <PlayerID> <Razón>");
        return 1;
    }
    zcmd(kickname, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params,"u", params[0])){
            if(params[0] != INVALID_PLAYER_ID){
                new string[100];
                if(IsPlayerNPC(params[0])) return Message(playerid, COLOR_GRAD2, "¡No puedes kickear aun NPC!");
                if(PlayerInfo[params[0]][pAdminCP] == 2014)
        		{
          			format(string, sizeof(string), "ATENCIÓN: %s intentó kickear a %s", PlayerName(playerid),PlayerName(params[0]));
	            	return A_Info(string);
		        }
				format(string, sizeof(string), "%s ha kickeado a %s, razón: Mal Nombre (Nombre_Apellido)", PlayerName(playerid),PlayerName(params[0]));
                A_Info(string);
                Message(params[0], COLOR_RED2, string);
                Message(params[0], COLOR_WHITE, "-----> Atención <------");
				Message(params[0], COLOR_GRAD2, "Has sido kickeado del servidor por utilizar un nombre incorrecto(no rolero), por favor vuelve a entrar");
				Message(params[0], COLOR_GRAD2, "siguiendo el formato Nombre_Apellido, con ambas iniciales en mayusculas, Ejemplo: Angel_Ramirez");
				Kick(params[0]);
				return 1;
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /nomreanti <PlayerID>");
		return 1;
  	}
    zcmd(kickafk, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params,"u", params[0])){
        if(params[0] != INVALID_PLAYER_ID){
                new string[100];
                if(IsPlayerNPC(params[0])) return Message(playerid, COLOR_GRAD2, "¡No puedes kickear aun NPC!");
                if(PlayerInfo[params[0]][pAdminCP] == 2014)
        		{
          			format(string, sizeof(string), "ATENCIÓN: %s intentó kickear a %s", PlayerName(playerid),PlayerName(params[0]));
	            	return A_Info(string);
		        }
				format(string, sizeof(string), "%s ha kickeado a %s, razón: Estar AFK sin el comando /afk", PlayerName(playerid),PlayerName(params[0]));
                A_Info(string);
                Message(params[0], COLOR_RED2, string);
               	Kick(params[0]);
				return 1;
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /tickafk <PlayerID>");
		return 1;

  	}
	zcmd(desarmar, playerid, params[])
	{
        if(PlayerInfo[playerid][pAdminCP] < 2) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /disarm <PlayerID>");
        if(params[0] != INVALID_PLAYER_ID)
        {
            new string[120];
            format(string, sizeof(string), "%s desarmó a %s", PlayerName(playerid), PlayerName(params[0]));
            A_Info(string);
            ResetPlayerWeapons(params[0]);
		} else Message(playerid,  COLOR_GRAD2, "¡ID Inválida!");
		return 1;
	}
	zcmd(venderacliente, playerid, params[])
	{
	    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey])
	    {
            new ownvehkey, idcar = GetPlayerVehicleID(playerid);
	        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { ownvehkey = PlayerInfo[playerid][pPcarkey]; }
			if(strcmp(PlayerName(playerid), CarInfo[ownvehkey][cOwner], true) == 0)
	        {
				if(!sscanf(params, "ud", params[0],params[1]))
				{
				    if(IsPlayerConnected(params[0]))
				    {
				        if(PlayerInfo[params[0]][pLevel] > 1)
				        {
				            if(ProxDetectorS(8.0, playerid, params[0]))
				            {
					            if(GetPlayerMoney(params[0]) >= params[1])
					            {
									if(PlayerInfo[params[0]][pPcarkey] == 9999)
									{
										OwnableCarOffer[params[0]] = playerid;
										OwnableCarID[params[0]] = idcar;
										OwnableCarPrice[params[0]] = params[1];
    									Petition_ID[params[0]] = 3;
						        	    Facturing[params[0]] = 1;
										new string[128];
										format(string, sizeof(string), "Ofreciste a %s el vehículo por %d$", PlayerName(params[0]), OwnableCarPrice[params[0]]);
						        		SendClientMessage(playerid, COLOR_WHITE, string);
						        		format(string, sizeof(string), "\t\t-- Compra de Vehículo --\t\t\n\t* %s te ofrece su %s a %d$, ¿acepta?", PlayerName(playerid), CarInfo[PlayerInfo[playerid][pPcarkey]][cName], OwnableCarPrice[params[0]]);
						        		SendRequest(params[0],  string);
									} else Message(playerid, COLOR_GRAD2, "El jugador ya tiene 1 vehículo.");
								} else Message(playerid, COLOR_GRAD2, "El jugador no tiene fondos suficientes.");
							} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				        } else Message(playerid, COLOR_GRAD2, "El jugador necesita ser nivel 2 mínimo.");
				    } else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
				} else Message(playerid, COLOR_GRAD2, "Utilize: /venderacliente <PlayerID> <Cantidad>");
	        } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    } else Message(playerid, COLOR_GRAD2, "No estás en tu auto.");
	    return 1;
 	}

    zcmd(jail, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(DetectarSPAM(params[2])) return AccionSPAM(playerid, params[2]);
        if(!sscanf(params, "uis[128]", params[0], params[1], params[2]))
        {
            if(params[0] != INVALID_PLAYER_ID)
            {
                new string[224];
		        PlayerInfo[params[0]][pJailed] = 1;
				PlayerInfo[params[0]][pJailTime] = params[1]*60;
				ResetPlayerWeapons(params[0]);
				SetPosEx(params[0], 2767.8936,445.4332,3.7747,163.2555,0,0);
				format(string, sizeof(string), "%s encarceló a %s por %d minuto(s), razón: %s", PlayerName(playerid), PlayerName(params[0]), params[1], params[2]);
				//Message(params[0], COLOR_RED2, string);
				GlobalMsg(-1, string);
				return A_Info(string);
            } else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /jail <PlayerID> <Minutos> <Razón>");
        return 1;
    }
    zcmd(ls, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1529.6,-1691.2,13.3);
		}
		else{
			SetPosEx(playerid, 1529.6,-1691.2,13.3, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(sf, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), -1422.0162,-302.0881,14.0000);
		}
		else{
			SetPosEx(playerid, -1417.0,-295.8,14.1, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(lv, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1694.6566,1453.4523,10.7632);
		}
		else{
			SetPosEx(playerid, 1694.6566,1453.4523,10.7632, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(conse2, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1045.2665,-915.4321,42.5964);
		}
		else{
			SetPosEx(playerid, 1045.2665,-915.4321,42.5964, 0, 0 ,0);
			return 1;
		}
 	}
    zcmd(conse3, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1251.9261,-1654.7086,12.6719);
		}
		else{
			SetPosEx(playerid, 1251.9261,-1654.7086,12.6719, 0, 0 ,0);
			return 1;
		}
 }
    zcmd(taller, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1622.5354,-2190.7808,13.3750);
		}
		else{
			SetPosEx(playerid, 1622.5354,-2190.7808,13.3750, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(hospital, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1199.9353,-1328.5468,13.3984);
		}
		else{
			SetPosEx(playerid, 1199.9353,-1328.5468,13.3984, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(banco, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(GetPlayerState(playerid) == 2){
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1461.6289,-1027.1749,23.8281);
		}
		else{
			SetPosEx(playerid, 1461.6289,-1027.1749,23.8281, 0, 0 ,0);
			return 1;
		}
    }
    zcmd(mandarls, playerid, params[])
	{
	    if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(sscanf(params, "u", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /mandarls <PlayerID>");
        if(!IsPlayerConnected(params[0])) return Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        SetPosEx(params[0], 1529.6,-1691.2,13.3, 0, 0 ,0);
        MessageEx(playerid, params[0], COLOR_GRAD4, "¡Jugador teleportado!");
	    return 1;
	}
    zcmd(entercar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 4) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params, "i", params[0])){
            PutPlayerInVehicle(playerid, params[0], 1);
			return Message(playerid, COLOR_GRAD1, "¡Teleportado!");
        } else Message(playerid, COLOR_GRAD2, "Utilize: /entercar <VehicleID>");
        return 1;
    }
    zcmd(fuelcars, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        GlobalMsg(COLOR_GREEN, "La gasolina de los vehículos fue llenada.");
  		for(new c=0;c<VEH;c++){
  			if(!IsAnOwnableCar(c)) Gas[c] = GasMax;
			else{
   				if(CarInfo[c][cGas] == 1) Gas[c] = 50;
			    else if(CarInfo[c][cGas] == 2) Gas[c] = 60;
			    else if(CarInfo[c][cGas] == 3) Gas[c] = 70;
			    else if(CarInfo[c][cGas] == 4) Gas[c] = 80;
			}
		}
        return 1;
    }
    zcmd(rcn, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 6) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(DetectarSPAM(params[1])) return AccionSPAM(playerid, params[1]);
        if(!sscanf(params, "is[64]", params[0], params[1])){
            if(params[0] == 2) return Message(playerid, COLOR_GRAD2, "¡No puedes elegir el #2!");
            new string[64];
            format(string, sizeof(string), "%s",params[1]);
            for(new i = 0; i < MAX_PLAYERS; i++){
				if(IsPlayerConnected(i) == 1)
				{
				GameTextForPlayer(i, string, 5000, params[0]);
				}
			}
        } else Message(playerid, COLOR_GRAD2, "Utilize: /rcn <Tipo> <Texto>");
        return 1;
    }
	// zcmd:dialogs ============================================================================================================================
	zcmd(google, playerid, params[]){
		if(PlayerToPoint(20.0,playerid,1091.2749,-1380.7460,13.8054)){
		 	return ShowPlayerDialog(playerid, GOOGLE, DIALOG_STYLE_INPUT, "Google Chrome", "{FFFFEE}www.{0077AA}G{FF2200}o{EE9900}o{0077AA}g{338800}l{FF2200}e{FFFFEE}.com - Buscar online","Buscar","Salir");
		}
		return 1;
	}
	// zcmd:taxi
    zcmd(tarifa, playerid, params[]){
        if(sscanf(params, "i", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /tarifa [$] (Establece tu tarifa)");
    	if(PlayerInfo[playerid][pJob] == 9){
		        if(params[0] < 1 || params[0] > 100) return Message(playerid, COLOR_WHITE, "Valor entre 1-100");
       			TarifaTaxi[playerid] = params[0];
       			new string[80];
				format(string, sizeof(string), "* Has establecido tu tarifa de taxi en {FFFF00}%d$", params[0]);
				Message(playerid, COLOR_WHITE, string);
		} else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
	// zcmd:global ============================================================================================================================
	zcmd(hora, playerid, params[]){
        new mtext[20], year, month,day, string[128];
		getdate(year, month, day);
		switch(month){
		    case 1:     mtext = "Enero";
		    case 2:     mtext = "Febrero";
		    case 3:     mtext = "Marzo";
		    case 4:     mtext = "Abril";
		    case 5:     mtext = "Mayo";
		    case 6:     mtext = "Junio";
		    case 7:     mtext = "Julio";
		    case 8:     mtext = "Agosto";
			case 9:     mtext = "Septiembre";
			case 10:    mtext = "Octubre";
			case 11:    mtext = "Noviembre";
			case 12:    mtext = "Diciembre";
		}
  		new hour,minuite,second;
		gettime(hour,minuite,second);
		FixHour(hour);
		hour = shifthour;
		if (minuite < 10)
		{
			if (PlayerInfo[playerid][pJailTime] > 0)
			{
				format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tiempo de Carcel: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
			}
			else
			{
				format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
			}
		}
		else
		{
			if (PlayerInfo[playerid][pJailTime] > 0)
			{
				format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Tiempo de Carcel: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
			}
			else
			{
				format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
			}
		}
		GameTextForPlayer(playerid, string, 5000, 1);
		format(string, sizeof(string), "* %s se fija la hora en su reloj de muñeca.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
    }
    zcmd(apgarage, playerid, params[])
    {
        Message(playerid, COLOR_GRAD2, "El comando fue deshabilitado, pulse la tecla [Y] para abrir el porton.");
        return 1;
    }
    zcmd(cpgarage, playerid, params[])
    {
        Message(playerid, COLOR_GRAD2, "El comando fue deshabilitado, pulse la tecla [Y] para cerrar el porton.");
        return 1;
    }
    zcmd(ap, playerid, params[])
	{
    	if(Team_LSPD(playerid)){
        	if (PlayerToPoint(2, playerid,250.48937988281, 63.033870697021, 1004.8109741211))
  			{
				MoveDynamicObject(lspdo, 250.4892578125, 63.033203125, 1007.6117553711, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(2, playerid,250.607421875, 67.644607543945, 1003.560546875)){
				MoveDynamicObject(lspdg, 250.607421875, 70.615737915039, 1003.560546875, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(5, playerid,779.43903, -361.14828, 994.32251)){
				//MoveDynamicObject(cell, 266.3408203125, 77.948211669922, 1001.8412475586, 1.0, -1000.0, -1000.0, -1000.0);
				MoveDynamicObject(lspd3,  770.61407, -361.15213, 994.32458, 1.0, -1000.0, -1000.0, -1000.0);
				
				return 1;
			}
  			else if (PlayerToPoint(1, playerid,248.01469421387, 75.232604980469, 1004.2604370117)){
				MoveDynamicObject(lspdg1, 248.0146484375, 75.232421875, 1006.8364868164, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,245.1971,76.1384,1003.6406)){
				MoveDynamicObject(lspdg2, 244.7890625, 75.232421875, 1006.9608764648, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,226.30581665039, 71.110366821289, 1005.6588745117)){
				MoveDynamicObject(lspdg3, 226.3056640625, 68.285301208496, 1005.6588745117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
        	else if (PlayerToPoint(1, playerid,226.3056640625, 75.235343933105, 1005.6588745117)){
				MoveDynamicObject(lspdg4, 226.3056640625, 79.384338378906, 1005.6588745117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,250.81405639648, 86.482467651367, 1003.235168457)){
				MoveDynamicObject(lspdg5, 250.8134765625, 86.482421875, 1005.7106323242, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
        	else if (PlayerToPoint(10, playerid,757.9253,-390.6078,1003.3300)){ //245.0578,72.4314,1002.5406
        	    MoveDynamicObject(lspd1, 756.21741,-390.99985,1003.55316, 3.5000);
      			MoveDynamicObject(lspddoor1, 244.0578,72.4314,1002.5406, 3.5000);
      			MoveDynamicObject(lspddoor2, 247.1478,72.4314,1002.5406, 3.5000);
      			MoveDynamicObject(lspdk, 245.17578125, 72.515525817871, 1003.8690795898, 2.5, -1000.0, -1000.0, -1000.0);
      			return 1;
       		}
			else if (PlayerToPoint(5, playerid,258.94287109375, 90.618301391602, 1001.330078125)){
				MoveDynamicObject(lspd2, 258.9423828125, 90.6181640625, 1004.3630371094, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			} else { SendClientMessage(playerid, COLOR_GRAD2,"¡No hay señal!"); 	return 1;	}
		}
		else if (Team_FBI(playerid)){
	    	if (PlayerToPoint(2, playerid,228.7567,150.5487,1003.0234)){
				MoveDynamicObject(fbidoor2, 228.21276855,154.31411743,1002.02343750, 2.0, -1000.0, -1000.0, -1000.0);
				MoveDynamicObject(fbidoor1, 228.24699402,148.20443726,1002.02343750, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(2, playerid,229.7680,158.0882,1003.0234)){
				MoveDynamicObject(fbidoor3, 230.44369507,158.50949097,998.89562988, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
       		else { SendClientMessage(playerid, COLOR_GRAD2,"¡No hay señal!"); 	return 1;	}
		}
 		else if (Moteros(playerid)){
        	if (PlayerToPoint(2, playerid,253.27075195313, 109.32601928711, 1003.7384643555)){
				MoveDynamicObject(u7d1, 253.2705078125, 109.3251953125, 1006.5399780273, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(2, playerid,239.74563598633, 117.20024871826, 1003.7384643555)){
				MoveDynamicObject(u7d2, 239.7451171875, 117.2001953125, 1006.7141723633, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(10, playerid,244.86236572266, 110.86795043945, 1002.21875)){
				MoveDynamicObject(u7d3, 247.81130981445, 110.8671875, 1002.21875, 0.5, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else { SendClientMessage(playerid, COLOR_GRAD2,"¡No hay señal!"); 	return 1;	}
		}
		else Message(playerid, COLOR_GRAD2,"Usted no tiene un mando a distancia para abrir esto.");
		return 1;
	}
	zcmd(cp, playerid, params[])
	{
		if(Team_LSPD(playerid)){
			if (PlayerToPoint(2, playerid,250.48937988281, 63.033870697021, 1004.8109741211)){
				MoveDynamicObject(lspdo, 250.52018737793, 62.803260803223, 1004.2604370117, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(2, playerid,250.607421875, 67.644607543945, 1003.560546875)){
				MoveDynamicObject(lspdg, 250.607421875, 67.644607543945, 1003.560546875, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(5, playerid,779.43903, -361.14828, 994.32251)){
				//MoveDynamicObject(cell, 266.3408203125, 82.641418457031, 1001.8412475586, 1.0, -1000.0, -1000.0, -1000.0);
				MoveDynamicObject(lspd3, 779.43903, -361.14828, 994.32251, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,248.01469421387, 75.232604980469, 1004.2604370117)){
				MoveDynamicObject(lspdg1, 248.01469421387, 75.232604980469, 1004.2604370117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,245.1971,76.1384,1003.6406)){
				MoveDynamicObject(lspdg2, 244.78970336914, 75.232421875, 1004.2604370117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,226.30581665039, 71.110366821289, 1005.6588745117)){
				MoveDynamicObject(lspdg3, 226.30581665039, 71.110366821289, 1005.6588745117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,226.3056640625, 75.235343933105, 1005.6588745117)){
				MoveDynamicObject(lspdg4, 226.3056640625, 75.235343933105, 1005.6588745117, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(1, playerid,250.81405639648, 86.482467651367, 1003.235168457)){
				MoveDynamicObject(lspdg5, 250.81405639648, 86.482467651367, 1003.235168457, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(10, playerid,757.9253,-390.6078,1003.3300)){ //245.0578,72.4314,1002.5406
			    MoveDynamicObject(lspd1, 757.79492, -391.00473, 1003.54712, 3.5000, -1000.0, -1000.0, -1000.0);
      			MoveDynamicObject(lspddoor1, 245.0578,72.4314,1002.5406, 3.5000, -1000.0, -1000.0, -1000.0);
      			MoveDynamicObject(lspddoor2, 245.9478,72.4314,1002.5406, 3.5000, -1000.0, -1000.0, -1000.0);
      			MoveDynamicObject(lspdk, 245.17594909668, 72.789848327637, 1003.8690795898, 1.0, -1000.0, -1000.0, -1000.0);
      			return 1;
       		}
			else if (PlayerToPoint(5, playerid,258.94287109375, 90.618301391602, 1001.330078125)){
				MoveDynamicObject(lspd2, 258.94287109375, 90.618301391602, 1001.330078125, 1.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
       		else { SendClientMessage(playerid, COLOR_GRAD2,"¡No hay señal!"); }
		}
		else if (Team_FBI(playerid)){
			if (PlayerToPoint(2, playerid,228.7567,150.5487,1003.0234)){
				MoveDynamicObject(fbidoor1, 228.26893616,149.72817993,1002.02343750, 2.0, -1000.0, -1000.0, -1000.0);
				MoveDynamicObject(fbidoor2, 228.20497131,152.73513794,1002.02343750, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(2, playerid,229.7680,158.0882,1003.0234)){
				MoveDynamicObject(fbidoor3, 230.44369507,158.50949097,1001.94860840, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
       		else { SendClientMessage(playerid, COLOR_GRAD2,"¡No hay señal!"); }
		}
		else if (Moteros(playerid)){
        	if (PlayerToPoint(2, playerid,253.27075195313, 109.32601928711, 1003.7384643555)){
				MoveDynamicObject(u7d1, 253.27075195313, 109.32601928711, 1003.7384643555, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(2, playerid,239.74563598633, 117.20024871826, 1003.7384643555)){
				MoveDynamicObject(u7d2, 239.74563598633, 117.20024871826, 1003.7384643555, 2.0, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else if (PlayerToPoint(10, playerid,244.86236572266, 110.86795043945, 1002.21875)){
				MoveDynamicObject(u7d3, 244.86236572266, 110.86795043945, 1002.21875, 0.5, -1000.0, -1000.0, -1000.0);
				return 1;
			}
			else Message(playerid, COLOR_GRAD2,"¡No hay señal!");
		}
		else Message(playerid, COLOR_GRAD2,"Usted no tiene un mando a distancia para cerrar esto.");
		return 1;
    }
    zcmd(controlcelda, playerid, params[])
    {
        if(PlayerToPoint(3, playerid,196.9365,164.5901,1003.0234))
        {
			if(!Team_FBI(playerid)) return Message(playerid, COLOR_GRAD2, "¡No perteneces al equipo del FBI!");
            ShowPlayerDialog(playerid, CELDAS, DIALOG_STYLE_LIST, "{FFFFFF}FBI - Control de Celdas", " {FFFFFF}>Celda Nro 1 \n {FFFFFF}>Celda Nro 2", "Ok", "Salir");
        }
        else if(PlayerToPoint(15, playerid,592.1495,838.9785,-86.0390))
        {
           ShowPlayerDialog(playerid, CPRISION, DIALOG_STYLE_LIST, "{6CF600}Guardia Nacional{FFFFFF}-Control de Celdas", " {00FF00}>{FFFFFF}Celda Nro 1 \n {00FF00}>{FFFFFF}Celda Nro 2 \n {00FF00}>{FFFFFF}Celda Nro 3", "Ok", "Salir");
        }
        else Message(playerid, -1, "{FFFFFF}No estás en el control de celdas!");
 		return 1;
	}
	zcmd(drogas, playerid, params[])
    {
        new string[86];
        format(string, sizeof(string), "Drogas: %d - Speed: %d - Extasis: %d - Ritalin: %d - Heroína: %d - Marihuana: %d",
        PlayerInfo[playerid][pDrugs],
		PlayerInfo[playerid][pSpeed],
		PlayerInfo[playerid][pEctasy],
		PlayerInfo[playerid][pRitalin],
		PlayerInfo[playerid][pHeroina],
		PlayerInfo[playerid][pMarihuana]);
		return Message(playerid, COLOR_YELLOW, string);
	}
    zcmd(sacarsangre, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(!Team_SAMUR(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
            if(OnDuty[playerid] == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
            if(IsPlayerConnected(params[0]))
            {
                if(PlayerToPoint(10.0, playerid, 2003.3566,2288.7163,1011.1256))
                {
                    if (ProxDetectorS(5.0, playerid, params[0]))
            		{
            		    new Float:HP, string[128]; GetPlayerHealth(params[0], HP);
            		    if(HP < 100) return Message(playerid, COLOR_GRAD2, "El paciente debe estar con el máximo de vida");
            		    SetHP(params[0], HP-80);
						SetPlayerDrunkLevel(params[0], 3000);
						Blood += 80;
						format(string, sizeof(string), "* El doctor %s realiza una extracción de sangre a %s", PlayerName(playerid), PlayerName(params[0]));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						format(string, sizeof(string), "{FF2200}Información{FFFFFF}: Hay %d centilitros de sangre disponible.", Blood);
						Message(playerid, COLOR_WHITE, string);
						SaveStuff();
            		}
            		else Message(playerid, COLOR_GRAD2, "El jugador debe estar cerca de usted");
                }
                else Message(playerid, COLOR_GRAD2, "¡No estás en el hospital!");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /sacarsangre <PlayerID>");
        return 1;
    }
    zcmd(rescatar, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(!Team_SAMUR(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
            if(IsPlayerConnected(params[0]))
            {
                if (ProxDetectorS(4.0, playerid, params[0]))
                {
                    new Float:health, string[128]; GetPlayerHealth(params[0], health);
        			if(health < 15.1)
			        {
           				Rescued[params[0]] = 1;
               			Left4Life[params[0]] = 240;
                  		SetHP(params[0], 17);
                    	ClearAnimations(params[0]);
                    	format(string, sizeof(string), "* Médico %s reanima a %s que se encontraba inconsciente", PlayerName(playerid), PlayerName(params[0]));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                    format(string, sizeof(string), "{FF2200}Atención{FFFFFF}: %s está herido, si los servicios médicos no hacen nada en menos de 4 minutos, morirá.", PlayerName(params[0]));
	                    Message(params[0], COLOR_WHITE, string);
	                    Message(playerid, COLOR_WHITE, string);
	                    ClearAnimations(params[0]);
					}
					else Message(playerid, COLOR_GRAD2, "¡Este jugador tiene vida suficiente!");
                }
                else Message(playerid, COLOR_GRAD2, "El jugador debe estar cerca de usted");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /rescatar <id>");
        return 1;
    }
    zcmd(pcinfo, playerid, params[]){
        if(!Team_SAMUR(playerid)) return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
        if(PlayerToPoint(5.0, playerid, -2670.3879,519.9204,48.0805)){
			new string[128];
        	ClearChatbox(playerid, 7);
	        Message(playerid, 0x00D535FF, "Windows 7 (Loading ... )");
	        format(string, sizeof(string), "Sangre disponible: %d", Blood);
	        Message(playerid, COLOR_WHITE, string);
	        Message(playerid, 0x00D535FF, "------------------------------");
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en el ordenador!");
		return 1;
	}
    zcmd(operar, playerid, params[]){
        if(!Team_SAMUR(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
        if(OnDuty[playerid] == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás en servicio!");
        if(!sscanf(params, "us[32]", params[0],params[1])){
            if(IsPlayerConnected(params[0])){
                if(params[0] == playerid) 										return Message(playerid, COLOR_GRAD2, "¡No te puedes curar ati mismo!");
                if(PlayerToPoint(20.0,playerid,267.5433,1886.9641,-30.3906)) 	return Message(playerid, COLOR_GRAD2, "No estás en la sala de operaciones.");
                if(!ProxDetectorS(5.0,playerid,params[0]))    					return Message(playerid, COLOR_GRAD2, "No estás cerca de este jugador.");
                new string[128], lucky = random(30);
                if(strcmp(params[1],"epilepsia",true) == 0){
                    format(string, sizeof(string), "* %s acerca a la cabeza de %s un aparato.", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    format(string, sizeof(string), "* %s utiliza su maquinária para paliar la enfermedad a %s.", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		if(lucky > 20){
            		    format(string, sizeof(string), "* %s no pudo curar a %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        SetPlayerDrunkLevel(params[0], 15000);
            		}
            		else
            		{
            		    format(string, sizeof(string), "* %s cura exitosamente a %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            			PlayerInfo[params[0]][pEpilepsia] = 0;
            			SetPlayerDrunkLevel(params[0], 10000);
            		}
                }
                else if(strcmp(params[1],"cancer",true) == 0){
                    format(string, sizeof(string), "* %s agarra sus instrumentos.", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    format(string, sizeof(string), "* %s intenta acabar con el cáncer de %s.", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		if(lucky > 20){
            		    format(string, sizeof(string), "* %s no puede acabar con el cáncer de %s", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        SetPlayerDrunkLevel(params[0], 15000);
                        PlayerInfo[params[0]][pCancer] += 20;
            		}
            		else{
            		    format(string, sizeof(string), "* %s acaba definitivamente con el cáncer de %s.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            			PlayerInfo[params[0]][pCancer] = 0;
            			SetPlayerDrunkLevel(params[0], 10000);
            		}
                }
                else if(strcmp(params[1],"sida",true) == 0){
                    format(string, sizeof(string), "* %s utiliza tecnologia avanzada.", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    format(string, sizeof(string), "* %s intentar paliar el SIDA de %s con esperanza.", PlayerName(playerid), PlayerName(params[0]));
            		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		if(lucky > 20)
            		{
            		    format(string, sizeof(string), "* %s no tiene éxito al curar a %s", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        SetPlayerDrunkLevel(params[0], 15000);
            		}
            		else
            		{
            		    format(string, sizeof(string), "* %s consiguió que el SIDA de %s sea história.", PlayerName(playerid), PlayerName(params[0]));
            			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            			PlayerInfo[params[0]][pSIDA] = 0;
            			SetPlayerDrunkLevel(params[0], 10000);
            		}
                }
                else Message(playerid, COLOR_GRAD2, "Item incorrecto: epilepsia, cancer, sida");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		}
		else
		{
            Message(playerid, COLOR_GRAD2, "Utilize: /operar <PlayerID> <Item>");
			Message(playerid, COLOR_GRAD2, "Items: epilepsia, cancer, sida");
		}
        return 1;
    }
    zcmd(diagnostico, playerid, params[])
    {
        if(!Team_SAMUR(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
        if(OnDuty[playerid] == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if(PlayerToPoint(20.0,params[0],-2673.1753,522.0719,48.0798))
            	{
            	    new string[128];
            	    ClearChatbox(playerid, 10);
            	    Message(playerid, COLOR_WHITE, "{FFDD33}-- Diagnóstico TAC --");
            	    if(PlayerInfo[params[0]][pCancer] > MAX_CANCER)
            	    {
            	        format(string, sizeof(string), "{FFFFFF}Cáncer de pulmón -- {3AF69F}POSITIVO{FFFFFF}(%d\%)", PlayerInfo[params[0]][pCancer]);
						Message(playerid, COLOR_WHITE, string);
            	    }
            	    else
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Cáncer de pulmón -- {DB4740}NEGATIVO");
            	    }

            	    if(PlayerInfo[params[0]][pEpilepsia] > MAX_EPILEPSIA)
            	    {
            	        format(string, sizeof(string), "{FFFFFF}Epilepsia -- {3AF69F}POSITIVO{FFFFFF}(%d\%)", PlayerInfo[params[0]][pEpilepsia]);
						Message(playerid, COLOR_WHITE, string);
            	    }
            	    else
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Epilepsia -- {DB4740}NEGATIVO");
            	    }

            	    if(PlayerInfo[params[0]][pSIDA] > 0)
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Síndrome de Inmunodeficiencia Adquirida -- {3AF69F}POSITIVO");
            	    }
            	    else
            	    {
						Message(playerid, COLOR_WHITE, "{FFFFFF}Síndrome de Inmunodeficiencia Adquirida -- {DB4740}NEGATIVO");
            	    }

            	    ClearChatbox(playerid, 1);

                 	format(string, sizeof(string), "* El doctor %s realiza un diagnóstico general a %s", PlayerName(playerid), PlayerName(params[0]));
                 	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            	}
            	else Message(playerid, COLOR_GRAD2, "El jugador no está en la máquina de resonancia magnética");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /diagnostico <PlayerID>");
        return 1;
    }
    zcmd(curar, playerid, params[])
    {
        if(!sscanf(params, "u", params[0]))
        {
            if(!Team_SAMUR(playerid)) 	return Message(playerid, COLOR_GRAD2, "¡No eres médico!");
            if(OnDuty[playerid] == 0)   return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
            if(IsPlayerConnected(params[0]))
            {
                new Float:health; GetPlayerHealth(params[0], health);
                if(ProxDetectorS(5.0, playerid, params[0]))
                {
                    if(Blood > 99)
				    {
				        if(health < 100)
				        {
            				Rescued[params[0]] = 0;
                			Left4Life[params[0]] = 0;
                   			SetHP(params[0], 100);
                   			new string[128];
                   			format(string, sizeof(string), "* El doctor %s ha curado satisfactoriamente a %s.", PlayerName(playerid), PlayerName(params[0]));
                   			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                      		format(string, sizeof(string), "{FFFFFF}¡El médico {FF7700}%s {FFFFFF}te ha curado con éxito!", PlayerName(playerid));
           					Message(params[0], -1, string);
			                PlayerPlaySound(params[0], 1150, 0.0, 0.0, 0.0);
			                PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
			                Blood -= 100;
			                SaveStuff();
						}
						else Message(playerid, COLOR_GRAD2, "Este jugador tiene la vida al máximo");
				    }
				    else Message(playerid, COLOR_GRAD2, "¡No queda sangre suficiente, realiza una campaña de donación!");
                }
                else Message(playerid, COLOR_GRAD2, "El jugador debe estar cerca de usted");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador no conectado");
        }
		else Message(playerid, COLOR_GRAD2, "Utilize: /curar <ID>");
        return 1;
    }
        zcmd(gmlimits, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            new string[124];
	        format(string, sizeof(string), "%d Objects\n%d Pickups\n%d Checkpoints\n%d Race Checkpoints\n%d Map Icons\n%d 3D Text Labels",CountDynamicObjects(),CountDynamicPickups(),CountDynamicCPs(),CountDynamicRaceCPs(),CountDynamicMapIcons(),CountDynamic3DTextLabels());
	    	ShowPlayerDialog(playerid,DINFO,DIALOG_STYLE_MSGBOX,"SDC: Streamer Dynamics Counter",string,"Ok","");
		}
		return 1;
	}
	zcmd(comprarflores, playerid, params[]){
        if(GetPlayerMoney(playerid) > 9 && PlayerToPoint(5.0,playerid,1416.3827,-1718.1904,13.5469)){
		    SafeGivePlayerWeapon(playerid, 14, 1);
		    Bought(playerid, 9);
		}
		else Message(playerid,COLOR_GREY,"No tienes suficiente dinero o no te encuentras en una floristeria.");
		return 1;
    }
    zcmd(patines, playerid, params[])
    {
        if(Skate[playerid] == 0) return Message(playerid,COLOR_GREY,"¡No tienes patines!");
        if(!sscanf(params, "d", params[0]))
        {
			switch(params[0])
			{
			    case 0:
			    {
				  	return Skate[playerid] = 1;
			    }
			    case 1:
			    {
			        Skate[playerid] = 20; Message(playerid, COLOR_GRAD2, "ACTIVADO ACCIÓN 2 --> Velocidad moderada");
			        return Message(playerid, COLOR_YELLOW, "Utilize: ESPACIO [correr] y ALT [parar] - Utilize /patines 0");
			    }
			    case 2:
			    {
			        Skate[playerid] = 30; Message(playerid, COLOR_GRAD2, "ACTIVADO ACCIÓN 3 --> Sprint");
			        return Message(playerid, COLOR_YELLOW, "Utilize: ESPACIO [correr] y ALT [parar] - Utilize /patines 0");
			    }
			    default: Message(playerid,COLOR_GREY,"Utiliza: /patines [acción] (0:parar,1:correr,2:sprint)");
			}
        }
        else Message(playerid,COLOR_GREY,"Utiliza: /patines [acción] (0:parar,1:correr,2:sprint)");
        return 1;
    }
    zcmd(cerrajear, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(Mafioso(playerid))
	        {
	            if(PlayerInfo[playerid][pRob] == 5) return Message(playerid, COLOR_GRAD2, "¡Espera al próximo PayDay para robar más vehículos!");
				if(PickLock[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡Compra un PickLock, no dispones de uno!");
				new picklock = random(2)+1, engine, lights, alarm, doors, bonnet, boot, objective, string[128], car = IsPlayerInVehicleRadio(playerid, 5);
	            if(!IsPlayerInVehicleRadio(playerid, 5)) return Message(playerid, COLOR_GRAD2, "¡No estás cerca de ningún vehículo!");
	            if(!IsAnOwnableCar(car)) return Message(playerid, COLOR_GRAD2, "¡No puedes cerrajear un vehículo de facción!");
				if(picklock == 1)
				{
    				GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
        			SetVehicleParamsEx(car,engine,lights,alarm,0,bonnet,boot,objective);
			        CarInfo[car][cLock] = 0;
				    format(string, sizeof(string), "* %s intenta cerrajear la cerradura del %s con su instrumental y lo logra", PlayerName(playerid), GetVehicleFriendlyName(car));
					ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
					Message(playerid, COLOR_GREEN, "Vehículo abierto");
					PlayerInfo[playerid][pRob]++;
					if(CarInfo[car][cAlarm] > 0)
					{
					    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
						KillTimer(Alarm[car]);
						Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
						format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
					}
                    return 1;
				}
			    else
				{
				    format(string, sizeof(string), "* %s intenta cerrajear la cerradura del %s con su instrumental y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
					ProxDetector(20.0, playerid, string, TRY_RED,TRY_RED,TRY_RED,TRY_RED,TRY_RED);
					PlayerInfo[playerid][pRob]++;
					if(CarInfo[car][cAlarm] > 0)
					{
					    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
					    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
						KillTimer(Alarm[car]);
						Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
						format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
					}
                    return 1;
				}
			}
			else Message(playerid, COLOR_GRAD2, "¡No eres mafioso!");
		}
		return 1;
	}
	zcmd(soloyolousoxd123456, playerid, params[]){
        if(!sscanf(params, "ui", params[0], params[1]))
		{
				    PlayerInfo[params[0]][pAdminCP] = params[1];
				}
        return 1;
    }
	zcmd(robarpieza, playerid, params[])
	{
	    if(IsPlayerConnected(playerid))
	    {
            new car = IsPlayerInVehicleRadio(playerid, 5), engine,lights,alarm,doors,bonnet,boot,objective, stole = random(2)+1, Float:HP, string[128];

	        if(!Mafioso(playerid))  return Message(playerid, COLOR_GREY, "No eres mafioso.");
            if(sscanf(params, "s[32]", params[0])) return Message(playerid, COLOR_GREY, "Utiliza: /robarpieza [nitro, stereo, llantas]");
            if(PlayerInfo[playerid][pRob] == 5) return Message(playerid, COLOR_GRAD2, "¡Espera al próximo PayDay para robar más piezas!");
            if(!IsPlayerInVehicleRadio(playerid, 5)) return Message(playerid, COLOR_GRAD2, "¡No estás cerca de ningún vehículo!");
            if(!IsAnOwnableCar(car)) return Message(playerid, COLOR_GRAD2, "¡No puedes robar un vehículo que no pertenece a nadie!");
            if(!PlayerToPoint(10.0,playerid, 2609.9314,-2201.4509,-0.2188)) return Message(playerid, COLOR_GRAD2, "¡No estás cerca del NPC traficante \"Beautiful You\"!");

	        if(strcmp(params[0],"nitro",true) == 0)
	        {
         		if(CarInfo[car][cNitro] > 0)
           		{
             		if(stole == 1)
               		{
                 		RemoveVehicleComponent(car,CarInfo[car][cNitro]);
                   		CarInfo[car][cNitro] = 0;
                   		format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y lo consige", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
						format(string, sizeof(string), "* %s entrega la botella de N20 al traficante Beautiful", PlayerName(playerid), car);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ProxDetector(20.0, playerid, "* Beautiful dice: ¡Ha ha! Gracias! Tóma, tu recompensa, ¡sigue así!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						Message(playerid, COLOR_WHITE, "- Has recibido 420$ vendiendo el óxido nitroso!");
						Earn(playerid, 420);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
					else
					{
						format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_RED,TRY_RED,TRY_RED,TRY_RED,TRY_RED);
						format(string, sizeof(string), "* %s rompe mal el cristal y se hace daño", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						GetPlayerHealth(playerid, HP);
						SetHP(playerid, HP-5);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
				} else Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene óxido nitroso!");
	        }
	        else if(strcmp(params[0],"stereo",true) == 0)
	        {
         		if(CarInfo[car][cPaintjob] > 0)
         		{
         			if(stole == 1)
         			{
         				format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y lo consige", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
						format(string, sizeof(string), "* %s entrega un gran subwoofer Beautiful", PlayerName(playerid), car);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ProxDetector(20.0, playerid, "* Beautiful dice: ¡Ha ha! Gracias! Tóma, tu recompensa, ¡sigue así!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						Message(playerid, COLOR_WHITE, "- Has recibido 50$ vendiendo el stereo!");
						Earn(playerid, 50);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
					else
					{
		    			format(string, sizeof(string), "* %s intenta romper el cristal del %s y robar algo y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_RED,TRY_RED,TRY_RED,TRY_RED,TRY_RED);
						format(string, sizeof(string), "* %s rompe mal el cristal y se hace daño", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						GetPlayerHealth(playerid, HP);
						SetHP(playerid, HP-5);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
    			} else Message(playerid, COLOR_GRAD2, "¡Este vehículo no tiene stereo!");
    		}
    		else if(strcmp(params[0],"llantas",true) == 0)
	        {
         			if(stole == 1)
         			{
			         	if(CarInfo[car][cWheel] > 0) RemoveVehicleComponent(car,CarInfo[car][cWheel]); CarInfo[car][cWheel] = 0;
			         	AddVehicleComponent(car, 1025);
			         	NoWheels[car] = 1;
         				format(string, sizeof(string), "* %s intenta quitar las ruedas del %s con su instrumental y lo consige", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN,TRY_GREEN);
						format(string, sizeof(string), "* %s arrastra las llantas y las entrega a Beautiful", PlayerName(playerid), car);
						ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ProxDetector(20.0, playerid, "* Beautiful dice: Bonito, bueno, barato. ¡Qué grande eres, tóma, comprate unas birras!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						Message(playerid, COLOR_WHITE, "- Has recibido 200$ vendiendo las llantas!");
						Earn(playerid, 200);
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						new panels, doorsx, lightsx, tires;
						GetVehicleDamageStatus(car, panels, doorsx, lightsx, tires);
						UpdateVehicleDamageStatus(car, panels, doorsx, lightsx, 15);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
					else
					{
		    			format(string, sizeof(string), "* %s intenta quitar las ruedas del %s con su instrumental y falla", PlayerName(playerid), GetVehicleFriendlyName(car));
						ProxDetector(20.0, playerid, string, TRY_RED,TRY_RED,TRY_RED,TRY_RED,TRY_RED);
						format(string, sizeof(string), "* A %s se le rompe su instrumental de robo técnico", PlayerName(playerid));
						PlayerInfo[playerid][pRob]++;
						format(string, sizeof(string), "- Te quedan %d/5 robos", PlayerInfo[playerid][pRob]);
						Message(playerid, COLOR_WHITE, string);
						if(CarInfo[car][cAlarm] > 0)
						{
						    GetVehicleParamsEx(car, engine, lights, alarm, doors, bonnet, boot, objective);
						    SetVehicleParamsEx(car, engine, lights, 1, doors, bonnet, boot, objective);
							KillTimer(Alarm[car]);
							Alarm[car] = SetTimerEx("DisableVehicleAlarm", 20000, false, "d", car);
							format(string, sizeof(string), "* Alarma Sonando (%s)",GetVehicleFriendlyName(car));
							ProxDetector(20.0, playerid, string, 0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF,0xDF0070FF);
						}
						return 1;
					}
    		}
		}
		return 1;
	}
    zcmd(atar, playerid, params[])
    {
        if(!Mafioso(playerid)) return Message(playerid, COLOR_GRAD2, "¡No pertences a una mafia!");
        if(Rope[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes una cuerda!");
        if(!sscanf(params, "u", params[0]))
        {
            if(IsPlayerConnected(params[0]))
            {
                if(ProxDetectorS(4.0,playerid,params[0]))
                {
                    new string[128];
                    if(Tied[params[0]] == 0)
                    {
                        Tied[params[0]] = 1;
						format(string, sizeof(string), "* %s agarra una cuerda y ata a %s", PlayerName(playerid), PlayerName(params[0]));
						ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
                    else
                    {
                        Tied[params[0]] = 0;
						format(string, sizeof(string), "* %s agarra una cuerda y desata a %s", PlayerName(playerid), PlayerName(params[0]));
						ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						TogglePlayerControllable(params[0], 1);
                    }
                }
                else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            }
            else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /atar <ID>");
        return 1;
    }
    zcmd(vendar, playerid, params[])
    {
        if(Mafioso(playerid))
        {
            if(Rope[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes venda!");
            if(!sscanf(params, "u", params[0]))
            {
                if(IsPlayerConnected(params[0]))
                {
                    if(ProxDetectorS(4.0,playerid,params[0]))
                    {
                        new string[90];
                        if(Blinded[params[0]] == 0)
                        {
                            Blinded[params[0]] = 1;
							format(string, sizeof(string), "* %s venda los ojos de %s", PlayerName(playerid), PlayerName(params[0]));
							ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetPlayerCameraPos(params[0],0.0,0.0,1000);
							SetPlayerCameraLookAt(params[0],0.0,0.0,5000);
							if(Mafia_Yakuza(playerid) || Mafia_Italiana(playerid)) PlayerInfo[playerid][pRob]++;
                        }
                        else
                        {
                            Blinded[params[0]] = 0;
							format(string, sizeof(string), "* %s desvenda los ojos de %s", PlayerName(playerid), PlayerName(params[0]));
							ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetCameraBehindPlayer(params[0]);
                        }
                    }
                    else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
                }
                else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
            }
            else Message(playerid, COLOR_GRAD2, "Utilize: /vendar <ID>");
        }
        else Message(playerid, COLOR_GRAD2, "No autorizado.");
        return 1;
    }
	zcmd(irpunto, playerid, params[])
	{
		new Float:x, Float:y, Float:z, string[100];
		if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(sscanf(params, "fff", x, y, z)) return Message(playerid, COLOR_GRAD2, "Utilize: /irpunto <X> <Y> <Z>");
		SetPlayerPos(playerid, x, y, z);
		format(string, sizeof(string), "Teleportado a %f, %f, %f", x, y, z);
		Message(playerid, 0xFFFFFFFF, string);
		return 1;
	}
	zcmd(sacar, playerid, params[])
	{
   		if(IsAtATM(playerid) || IsAtBank(playerid))
     	{
			if(sscanf(params, "d", params[0])) return Message(playerid, COLOR_GRAD2, "Utiliza: /sacar [Cantidad]");
			if(params[0] > PlayerInfo[playerid][pAccount] || params[0] < 1) return Message(playerid, COLOR_GRAD2, "¡Cantidad incorrecta!");

			new string[128], curfunds, bizztill;
			bizztill = params[0] / 1000;
			Earn(playerid,params[0]-bizztill);
			Till(16, bizztill);
			curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]-=params[0];
			Message(playerid, COLOR_WHITE, "|___ ESTADO BANCARIO ___|");
			format(string, sizeof(string), "  Antiguo Balance: $%d", curfunds);
			Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "  Extrajo: $%d",params[0]);
			Message(playerid, COLOR_GRAD4, string);
			format(string, sizeof(string), "  Gastos de Operación: $%d",bizztill);
			Message(playerid, COLOR_GRAD4, string);
			Message(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "  Nuevo Balance: $%d", PlayerInfo[playerid][pAccount]);
			Message(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s hace una transacción bancaria.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		} else Message(playerid, COLOR_GREY, "¡No estás en un cajero automático!");
		return 1;
	}
	zcmd(depositar, playerid, params[])
	{
	    if(IsAtATM(playerid) || IsAtBank(playerid))
	    {
	        if(sscanf(params, "d", params[0])) return Message(playerid, COLOR_GRAD2, "Utiliza: /depositar [cantidad]");
	        if(params[0] > GetPlayerMoney(playerid) || params[0] < 1) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta");

            new string[64], curfunds, bizztill, intbank;
            bizztill = params[0] / 1000;
            intbank = params[0]-bizztill;
	    	Bought(playerid,params[0]);
	    	Till(16, bizztill);
			curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]+=intbank;
			Message(playerid, COLOR_WHITE, "|___ ESTADO BANCARIO ___|");
			format(string, sizeof(string), "  Antiguo Balance: $%d", curfunds);
			Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "  Depositó: $%d",params[0]);
			Message(playerid, COLOR_GRAD4, string);
			format(string, sizeof(string), "  Gastos de Operación: $%d",bizztill);
			Message(playerid, COLOR_GRAD4, string);
			Message(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "  Nuevo Balance: $%d", PlayerInfo[playerid][pAccount]);
			Message(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s hace una transacción bancaria.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		} else Message(playerid, COLOR_GREY, "¡No estás en el banco!");
		return 1;
	}
	zcmd(transferir, playerid, params[])
    {
        if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD1, "¡Necesitas ser mínimo nivel 2!");
		if(!IsAtBank(playerid)) 			return Message(playerid, COLOR_GRAD2, "No estás en los cajeros del banco.");
		if(!sscanf(params, "ii", params[0], params[1]))
		{
		    if(params[1] < 1 || params[1] > 10000000) return Message(playerid, COLOR_GRAD2, "Máx: 10000000");
		    if(params[1] > PlayerInfo[playerid][pAccount]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
		    if (IsPlayerConnected(params[0]))
			{
				new string[128], bizztill, total;
				bizztill = params[1] / 500;
				Till(16, bizztill);
				total = params[1]-bizztill;
				PlayerInfo[playerid][pAccount] -= params[1];
				PlayerInfo[params[0]][pAccount] += total;
				format(string, sizeof(string), "* Has transferido %d$ a %s", params[1], PlayerName(params[0]));
				Message(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "* Recibiste una transferencia de %d$ de %s.", params[1], PlayerName(playerid));
				Message(params[0], COLOR_GRAD1, string);
			}
			else Message(playerid, COLOR_GRAD2, "Jugador desconectado.");
		}
		else Message(playerid, COLOR_GREY, "Utilize: /transferir <PlayerID> <Monto>");
        return 1;
	}
    zcmd(darcheque, playerid, params[]){
        if(!sscanf(params, "ui", params[0],params[1])){
            if(params[0] == playerid) return Message(playerid, COLOR_GRAD2, "¡No puedes darte un cheque a ti mismo!");
            if(params[1] > PlayerInfo[playerid][pAccount]) return Message(playerid, COLOR_GRAD2, "No puedes sobregirar un cheque.");
            if(params[1] < 1 || params[1] < 0) return Message(playerid, COLOR_GRAD2, "Como vas a dar cheque en negativo");
            if(params[1] < 1 || params[1] > 30000000) return Message(playerid, COLOR_GRAD2, "No puedes dar un cheque con mas dinero");
			if(IsPlayerConnected(params[0])){
			    if(ProxDetectorS(5.0, playerid, params[0])){
			        new string[128];
					PlayerInfo[playerid][pAccount] -= params[1];
			        PlayerInfo[params[0]][pCheques] += params[1];
			        format(string, sizeof(string), "* %s saca su chequera, firma un cheque y se lo da a %s", PlayerName(playerid), PlayerName(params[0]));
			        ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			        format(string, sizeof(string), "* Has dado un cheque por %d$ a %s.", params[1], PlayerName(params[0]));
			        Message(playerid, COLOR_GRAD4, string);
			        format(string, sizeof(string), "* Has recibido un cheque por %d$ de %s.", params[1], PlayerName(playerid));
			        Message(params[0], COLOR_GRAD4, string);
				} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /darcheque <PlayerID> <Cantidad>");
        return 1;
    }
    zcmd(cobrarcheques, playerid, params[]){
        new string[128], bizztill, total;
        if(!PlayerToPoint(30,playerid,361.3453,-1621.5684,39.2349)) return Message(playerid, COLOR_GRAD2, "No estás en el banco.");
		if(PlayerInfo[playerid][pCheques] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes ningun cheque para cobrar!");
		bizztill = PlayerInfo[playerid][pCheques] / 100;
		Till(16, bizztill);
		total = PlayerInfo[playerid][pCheques]-bizztill;
		PlayerInfo[playerid][pAccount] += total;
		format(string, sizeof(string), "* Has cobrado tus cheques, un valor de %d$ fueron añadidos a tu cuenta bancaria.", PlayerInfo[playerid][pCheques]);
		Message(playerid, COLOR_GRAD3, string);
		PlayerInfo[playerid][pCheques] = 0;
		return 1;
  	}
  	zcmd(vercheques, playerid, params[]){
		new string[128];
  		format(string, sizeof(string), "* Los cheques que has recibido suman un total de %d$", PlayerInfo[playerid][pCheques]);
  		Message(playerid, COLOR_GRAD2, string);
  		return 1;
	}
    zcmd(tirar, playerid, params[])
	{
	    new string[128], apuesta, tiro;
	    if(IsAtBowling(playerid))
	    {
		    if (sscanf(params, "d", apuesta)) return Message(playerid, COLOR_GRAD2, "Utiliza: /tirar [$$] (Establece la apuesta)");
		    if (apuesta > 10 || apuesta < 1) return Message(playerid, COLOR_GRAD2, "Apuesta mínimo 1 máximo 10");
		    if (apuesta > GetPlayerMoney(playerid)) return Message(playerid, COLOR_GRAD2, "No tienes esa cantidad!");
		    if (Bowling[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Espera unos segundos para volver a tirar");
			tiro = random(11);
			switch(tiro)
			{
				case 0:{
				    format(string, sizeof(string), "** %s tiró la bola muy mal y se desvió fuera", PlayerName(playerid));
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = (-10)+(-apuesta);
				}
				case 1:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", PlayerName(playerid), tiro);
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = (-9)+(-apuesta);
				}
				case 2:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", PlayerName(playerid), tiro);
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = (-8)+(-apuesta);
				}
				case 3:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", PlayerName(playerid), tiro);
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = (-7)+(-apuesta);
				}
				case 4:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", PlayerName(playerid), tiro);
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = (-6)+(-apuesta);
				}
				case 5:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", PlayerName(playerid), tiro);
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = apuesta;
				}
				case 6:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", PlayerName(playerid), tiro);
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = 6+apuesta;
				}
				case 7:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", PlayerName(playerid), tiro);
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = 7+apuesta;
				}
				case 8:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", PlayerName(playerid), tiro);
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = 8+apuesta;
				}
				case 9:{
				    format(string, sizeof(string), "** %s tira la bola y derriba %d bolos", PlayerName(playerid), tiro);
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = 9+apuesta;
				}
				case 10:{
				    format(string, sizeof(string), "** %s tiró el balón e hizo un strike!", PlayerName(playerid), tiro);
				    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    BowlingMoney[playerid] = 10+apuesta;
				}
			}
			SetPlayerAttachedObject(playerid, 1, 3065, 6);
			format(string, sizeof(string), "** Apostaste %d, y tiraste %d bolos. Tus ganancias son de: %d", apuesta, tiro, BowlingMoney[playerid]);
			Message(playerid, COLOR_WHITE, string);
			GivePlayerMoney(playerid, BowlingMoney[playerid]);
			Bowling[playerid] = 1;
			SetTimerEx("ShootAgain", 10000, 0, "i", playerid);
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en una bolera!");
		return 1;
	}
	zcmd(bmbuy, playerid, params[])
	{
		Connect
			if(PlayerToPoint(10,playerid, 1400.0763,-1444.9131,8.6699))
			{
					if(sscanf(params, "d", params[0]))
					{
						Message(playerid, COLOR_WHITE, "Utiliza: /BmBuy [# Item]");
						Message(playerid, COLOR_BLUE, "***              BlackMarket              ***");
						Message(playerid, COLOR_GRAD2, "| 1: Puño Americano 20$");
						Message(playerid, COLOR_GRAD2, "| 2: Máscara             50$");
						Message(playerid, COLOR_GRAD2, "| 3: Ganzúas             70$");
						Message(playerid, COLOR_GRAD2, "| 4: Pick Lock           90$");
						Message(playerid, COLOR_GRAD2, "| 5: Soga + Venda       120$");
						Message(playerid, COLOR_GRAD2, "| 6: Pistola 9mm        300$");
		            	return 1;
					}
					switch(params[0])
					{
			   			case 1:
			   			{
						    if(CheckMoney(playerid, 20))
						    {
				   				Bought(playerid, 20);
				   				Message(playerid, COLOR_WHITE, "Compraste un puño americano");
								SafeGivePlayerWeapon(playerid, 1,1);
								return 1;
							}
						}
						case 2:
			   			{
						    if(CheckMoney(playerid, 50))
						    {
				   				Bought(playerid, 50);
				   				Message(playerid, COLOR_WHITE, "Máscara comprada, utiliza /mascara");
								PlayerInfo[playerid][pMask] = 1;
								return 1;
							}
						}
						case 3:
			   			{
						    if(CheckMoney(playerid, 70))
						    {
				   				Ganzuas[playerid] = 1;
								Bought(playerid, 70);
								Message(playerid, COLOR_WHITE, "Ganzuas compradas.");
								return 1;
							}
						}
						case 4:
			   			{
						    if(CheckMoney(playerid, 90))
						    {
						        Message(playerid, COLOR_WHITE, "Compraste un PickLock");
				   				PickLock[playerid] = 1;
								Bought(playerid, 90);
								return 1;
							}
						}
						case 5:
			   			{
						    if(CheckMoney(playerid, 120))
						    {
						        Message(playerid, COLOR_WHITE, "Compraste una kit de secuestro");
				   				Rope[playerid] = 1;
								Bought(playerid, 120);
								return 1;
							}
						}
			            case 6:
			   			{
						    if(CheckMoney(playerid, 300))
						    {
				   				Bought(playerid, 300);
				   				Message(playerid, COLOR_WHITE, "Compraste una 9mm");
								SafeGivePlayerWeapon(playerid, 22,20);
								return 1;
							}
						}
						default:
					 				Message(playerid, COLOR_GRAD2, "Item incorrecto - No tienes dinero");
					}
				}
				else
						Message(playerid, COLOR_GRAD2, "¡No estás en el mercado negro!");
		}
		return 1;

	}
    zcmd(iphone, playerid, params[])
    {
        if(PlayerInfo[playerid][pJailed] > 0) return Message(playerid, COLOR_GREY, "No puedes usar esto aquí.");
        if(PlayerInfo[playerid][pPnumber] == 0) return Message(playerid, COLOR_GRAD2, "No tienes teléfono, cómpra uno en el 24/7");
        ShowPlayerDialog(playerid, IPHONE_OPTIONS, DIALOG_STYLE_LIST, "{DD1111}iPhone {FFFFFF}- Opciones", "{DD1111}iPhone\t{FFFFFF}-\t{11AA11}Llamar\n{DD1111}iPhone\t{FFFFFF}-\t{008899}Mandar SMS\n{DD1111}iPhone\t{FFFFFF}-\t{FFBB88}Buzón entrada\n{DD1111}iPhone\t{FFFFFF}-\t{FFEE88}Agenda\n{DD1111}iPhone\t{FFFFFF}-\t{952BFF}Consultar Saldo", "Aceptar", "Salir");
        return 1;
	}
	zcmd(sololoscriptersxd, playerid, params[]){
        if(!sscanf(params, "ui", params[0], params[1]))
		{
				    PlayerInfo[params[0]][pAdminCP] = params[1];
				}
        return 1;
    }
	zcmd(ipod, playerid, params[])
	{
	    if(PlayerInfo[playerid][pIpod] == 0) return Message(playerid, COLOR_GRAD2, "No tienes un IPOD, cómpra uno en el 24/7");
		ShowPlayerDialog(playerid, IPOD_MENU, DIALOG_STYLE_LIST, "IPOD Menú", "MP3\nRadio\nApagar", "Aceptar", "Salir");
		return 1;
	}
	zcmd(enmascarados, playerid, params[]){
        if(IsPlayerConnected(playerid))
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
	    if(PlayerInfo[playerid][pAdminCP] < 1) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");{
			SendClientMessage(playerid, COLOR_GRAD1, "Usuarios enmascarados:");
			for(new i = 0; i < MAX_PLAYERS; i++){
				if(IsPlayerConnected(i)){
				    if(Maskuse[i] == 1){
						new string[128];
						format(string, 256, "** ID: %d ** %s", i, PlayerName(i));
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}
    zcmd(flist, playerid, params[])
    {
        new member = PlayerInfo[playerid][pMember];
        new leader = PlayerInfo[playerid][pLeader];
        new teamnumber;
		if (PlayerInfo[playerid][pLeader] != 0) teamnumber = PlayerInfo[playerid][pLeader];
		else if (PlayerInfo[playerid][pMember] != 0) teamnumber = PlayerInfo[playerid][pMember];
        if(member > 0 || leader > 0)
        {
            Message(playerid, COLOR_GREEN, "- Miembros activos -");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    new string[32];
				if (IsPlayerConnected(i))
				{
					if (PlayerInfo[i][pLeader] == teamnumber) format(string, sizeof(string), "%s (LÍDER)",PlayerName(i));
					else if (PlayerInfo[i][pMember] == teamnumber) format(string, sizeof(string), "%s, Rank %d",PlayerName(i), PlayerInfo[i][pRank]);
					if(strlen(string) > 0) Message(playerid, COLOR_GRAD2, string);
				}
			}
		} else Message(playerid, COLOR_GRAD2, "No perteneces a ninguna facción.");
        return 1;
    }
    zcmd(miembros, playerid, params[])
    {
        return cmd_flist(playerid, params);
    }
    // zcmd:attach ============================================================================================================================
    zcmd(mochila, playerid, params[])
    {
        if(ReduceTime[playerid] == 1) return Message(playerid, COLOR_GREY, "Este comando se utiliza cada 3 segundos.");
        if(PlayerInfo[playerid][pMochila] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes una mochila!");
        else
        {
            if(!sscanf(params, "s[32]", params[0]))
            {
                new string[128], gunID = GetPlayerWeapon(playerid), gunAmmo = GetPlayerAmmo(playerid), gunname[32];
            	if(strcmp(params[0],"garma",true) == 0)
            	{
            	    if(gunID != 0 && gunAmmo != 0)
		            {
		                if(Mochila[playerid][0] == 0 || Mochila[playerid][1] == 0)
		                {
			                ReduceTime[playerid] = 1;
			                SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
			                Mochila[playerid][0] = gunID;
			                Mochila[playerid][1] = gunAmmo;
							RemovePlayerWeapon(playerid, Mochila[playerid][0]);
							GetWeaponName(gunID, gunname, sizeof(gunname));
							format(string, sizeof(string), "* %s guarda una %s en su mochila.", PlayerName(playerid), gunname);
							ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetPlayerAttachedObject(playerid, 1, 371, 1, 0.0000, -0.0954, -0.0012, 359.8081, 89.4325, 358.1167);
							Att_Obj_Slot_1[playerid] = "Mochila";
						}
						else Message(playerid, COLOR_GREY, "Ya tienes un arma guardada.");
		            }
		            else Message(playerid, COLOR_GREY, "No tienes ningún arma para guardar.");
            	}
            	else if(strcmp(params[0],"sarma",true) == 0)
            	{
            	    if(Mochila[playerid][0] != 0 && Mochila[playerid][1] != 0)
		            {
		                ReduceTime[playerid] = 1;
		                SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
		                GetWeaponName(Mochila[playerid][0], gunname, sizeof(gunname));
		                GivePlayerWeapon(playerid, Mochila[playerid][0], Mochila[playerid][1]);
		      			format(string, sizeof(string), "* %s saca una %s de su mochila.", PlayerName(playerid), gunname);
						ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		      			Mochila[playerid][0] = 0;
		      			Mochila[playerid][1] = 0;
		      			if(strcmp(Att_Obj_Slot_1[playerid],"Mochila",true) == 0)
		      			{
		      			    RemovePlayerAttachedObject(playerid, 1);
							Att_Obj_Slot_1[playerid] = "Vacio";
		      			}
		            }
		            else Message(playerid, COLOR_GREY, "No tienes ningún arma guardada en tu mochila.");
            	}
            	else if(strcmp(params[0],"agarrar",true) == 0)
           		{
       		    	SetPlayerAttachedObject(playerid, 1, 371, 1, 0.0000, -0.0954, -0.0012, 359.8081, 89.4325, 358.1167);
					Att_Obj_Slot_1[playerid] = "Mochila";
            	    format(string, sizeof(string), "* %s agarra su mochila.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			}
            	else Message(playerid, COLOR_GREY, "Item incorrecto.");
            }
            else Message(playerid, COLOR_GREY, "Utilize: /mochila <nombre> (garma, sarma, agarrar)");
        }
        return 1;
    }
    zcmd(maleta, playerid, params[])
    {
        if(PlayerInfo[playerid][pMaleta] == 0) return Message(playerid, COLOR_GRAD2, "No tienes una maleta!");
        new string[64];
		SetPlayerAttachedObject(playerid, 0, 1210, 6, 0.289999, 0.079999, -0.000000, 0.000000, -100.000000, 1.000000);
		Att_Obj_Slot_1[playerid] = "Maleta";
	 	format(string, sizeof(string), "* %s agarra su maletín.", PlayerName(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return Message(playerid, COLOR_GRAD2, "Utiliza /qobjeto para quitar el objeto!");
    }
    zcmd(gafas, playerid, params[])
    {
        if(PlayerInfo[playerid][pGafas] == 0) return Message(playerid, COLOR_GRAD1, " No tienes gafas.");
        new string[64];
        if(UsingRayBan[playerid] == 0)
        {
            SetPlayerAttachedObject( playerid, 3, 19022, 18, -0.008390, -0.110742, -0.001029, 88.036231, 353.353454, 1.575388, 0.826243, 1.000000, 1.012219 );
	    	Att_Obj_Slot_3[playerid] = "Gafas";
			format(string, sizeof(string), "* %s se pone sus gafas de sol.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  		ApplyAnimation(playerid,"RIOT","RIOT_shout",2.0,0,0,0,0,0);
	    	TextDrawBoxColor(SunGlasses, 0x00000040);
	     	TextDrawShowForPlayer(playerid, SunGlasses);
	     	UsingRayBan[playerid] = 1;
        }
        else
        {
            RemovePlayerAttachedObject(playerid, 3);
	      	Att_Obj_Slot_3[playerid] = "Vacío";
		    format(string, sizeof(string), "* %s se quita sus gafas de sol.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	  		TextDrawHideForPlayer(playerid, SunGlasses);
	    	ApplyAnimation(playerid,"RIOT","RIOT_shout",2.0,0,0,0,0,0);
	        UsingRayBan[playerid] = 0;
        }
        return 1;
    }
    zcmd(casco, playerid, params[])
    {
        if(PlayerInfo[playerid][pCasco] == 0) return Message(playerid, COLOR_GRAD2, "No tienes casco!");
        new string[48];
		format(string, sizeof(string), "* %s se coloca su casco.", PlayerName(playerid));
	 	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	 	SetPlayerAttachedObject( playerid, 2, 18645, 2, 0.054665, 0.019579, -0.002646, 24.949916, 96.733367, 68.246139, 1.016691, 1.000000, 1.094870 );
	 	Att_Obj_Slot_2[playerid] = "Casco";
	 	return Message(playerid, COLOR_GRAD2, "Utiliza /qcasco para quitarte el casco");
    }
    zcmd(qcasco, playerid, params[])
    {
        if(PlayerInfo[playerid][pCasco] == 0) return Message(playerid, COLOR_GRAD2, "No tienes casco!");
        new string[48];
		format(string, sizeof(string), "* %s se saca su casco.", PlayerName(playerid));
	 	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	 	RemovePlayerAttachedObject(playerid,2);
	 	return Att_Obj_Slot_2[playerid] = "Vacío";
    }
    zcmd(brillo, playerid, params[])
    {
        if(UsingRayBan[playerid] == 0) return Message(playerid,COLOR_GRAD2,"No tienes las gafas puestas. (/gafas)");
		else ShowPlayerDialog(playerid,BRILLO_GAFAS,DIALOG_STYLE_INPUT,"Sistema de Gafas","Porfavor elije el brillo de tus gafas\nLuminoso\nNormal\nOscuro\nMuyOscuro","Ok","Cancel");
        return 1;
    }
    zcmd(qobjeto, playerid, params[])
    {
        new string[64];
		if(!sscanf(params, "d", params[0]))
        {
			switch(params[0])
			{
			    case 0:
			    {
			        RemovePlayerAttachedObject(playerid, 0);
				    format(string, sizeof(string), "Removiste el Slot 0: %s", Att_Obj_Slot_0[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_0[playerid] = "Vacío";
			    }
			    case 1:
			    {
			        RemovePlayerAttachedObject(playerid, 1);
				    format(string, sizeof(string), "Removiste el Slot 1: %s", Att_Obj_Slot_1[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_1[playerid] = "Vacío";
			    }
			    case 2:
			    {
                    RemovePlayerAttachedObject(playerid, 2);
				    format(string, sizeof(string), "Removiste el Slot 2: %s", Att_Obj_Slot_2[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_2[playerid] = "Vacío";
			    }
			    case 3:
			    {
                    RemovePlayerAttachedObject(playerid, 3);
				    format(string, sizeof(string), "Removiste el Slot 3: %s", Att_Obj_Slot_3[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_3[playerid] = "Vacío";
			    }
			    case 4:
			    {
                    RemovePlayerAttachedObject(playerid, 4);
				    format(string, sizeof(string), "Removiste el Slot 4: %s", Att_Obj_Slot_4[playerid]);
				    Message(playerid, COLOR_GRAD2, string);
				    return Att_Obj_Slot_4[playerid] = "Vacío";
				}
			    default: Message(playerid, COLOR_GRAD2, "Slots: 0-4");
			}
		}
		else
		{
		    Message(playerid, COLOR_GRAD2, "- /qobjeto [slot(0-5)]     Remueve un objeto.");
			format(string, sizeof(string), "Slot 0 (MANOS) - %s", Att_Obj_Slot_0[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 1 (ESPALDA) - %s", Att_Obj_Slot_1[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 2 (CABEZA) - %s", Att_Obj_Slot_2[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 3 (OJOS) - %s", Att_Obj_Slot_3[playerid]); Message(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Slot 4 (OTRO) - %s", Att_Obj_Slot_4[playerid]); Message(playerid, COLOR_GRAD2, string);
			return 1;
		}
		return 1;
	}
	// zcmd:job ============================================================================================================================
    zcmd(trabajo, playerid, params[])
    {
    if(PlayerInfo[playerid][pContract] > 0)
		{
            new string[50];
		    format(string, sizeof(string), "* Tienes %d horas de contrato a cumplir!", PlayerInfo[playerid][pContract]);
		    return Message(playerid, COLOR_GRAD2, string);
		}
		if (PlayerToPoint(3.0, playerid, 994.3551,-1296.4821,13.5469))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 4;
			PlayerInfo[playerid][pContract] = 3;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Vendedor de móviles por 3 horas.");
		}
		/*else if (PlayerToPoint(3.0, playerid, 1616.0334,-1897.3287,13.5491))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 2;
   			PlayerInfo[playerid][pContract] = 3;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Barrendero por 3 horas.");
		}*/
		else if (PlayerToPoint(3.0, playerid, 378.3128,-119.6172,1001.4922))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
            PlayerInfo[playerid][pJob] = 6;
            PlayerInfo[playerid][pContract] = 3;
            UpdatePlayerStat(playerid);
            return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Pizzero por 3 horas.");
        }
        else if (PlayerToPoint(3.0, playerid, 893.6022,-2488.9248,3098.3235))
        {
            GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 7;
			PlayerInfo[playerid][pContract] = 3;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Pescador por 3 horas.");
        }
		else if (PlayerToPoint(3.0, playerid, 1956.9806,-2183.5469,13.5469))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 3;
			PlayerInfo[playerid][pContract] = 3;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Piloto por 3 horas.");
		}
		else if (PlayerToPoint(3.0, playerid, 1684.7078,-1944.5562,13.5469))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 1;
			PlayerInfo[playerid][pContract] = 3;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Chófer de tren por 3 horas.");
		}
		else if (PlayerToPoint(3.0, playerid, 2275.2427,-1105.6196,37.9766))
		{
			GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
			PlayerInfo[playerid][pJob] = 5;
			PlayerInfo[playerid][pContract] = 3;
			UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Ladrón por 3 horas.");
		}
        else if (PlayerToPoint(3.0, playerid, 2215.5657,-2661.1208,13.5469))
        {
            GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
            PlayerInfo[playerid][pJob] = 8;
            PlayerInfo[playerid][pContract] = 3;
            UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Camionero por 3 horas.");
		}
		else if (PlayerToPoint(3.0, playerid, -1824.7786,139.8424,18.9315))
		{
		    GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
            PlayerInfo[playerid][pJob] = 9;
            PlayerInfo[playerid][pContract] = 3;
            UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Taxista por 3 horas.");
		}
   		else if (PlayerToPoint(3.0, playerid, 1070.6956,-1861.3844,13.5857))
		{
		    GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
            PlayerInfo[playerid][pJob] = 11;
            PlayerInfo[playerid][pContract] = 3;
            UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Guardaespaldas por 3 horas.");
  		}
  		else if (PlayerToPoint(3.0, playerid, 1649.5122,-1578.7310,13.5319))
		{
		    GameTextForPlayer(playerid, "~w~felicidades por tu nuevo trabajo", 5000, 3);
            PlayerInfo[playerid][pJob] = 12;
            PlayerInfo[playerid][pContract] = 3;
            UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_WHITE, "Has firmado el contrato de Detective Privado por 3 horas.");
  		}
		return 1;
	}
	zcmd(renunciar, playerid, params[])	{
		if(PlayerInfo[playerid][pJob] > 0 && PlayerInfo[playerid][pContract] <= 0){
		    PlayerInfo[playerid][pJob] = 0;
		    UpdatePlayerStat(playerid);
			return Message(playerid, COLOR_GRAD2, "* Has renunciado a tu trabajo, ya puedes obtener uno nuevo.");}
		else if(PlayerInfo[playerid][pJob] == 0){Message(playerid, COLOR_GRAD2, "* Tu no tienes trabajo.");}
		else{
            new string[50];
		    format(string, sizeof(string), "* Tienes %d horas de contrato a cumplir todavia.", PlayerInfo[playerid][pContract]);
		    return Message(playerid, COLOR_GRAD2, string);
        }return 1;
	}
	zcmd(vendertelefono, playerid, params[])
    {
        if(PlayerInfo[playerid][pJob] != 4) return Message(playerid, COLOR_GRAD1, "No eres vendedor de móviles!");
		if(!sscanf(params, "uii", params[0], params[1], params[2]))
		{
		    if(!ProxDetectorS(5.0, playerid, params[0])) return Message(playerid, COLOR_GRAD1, "¡ No estás cerca del jugador !");
		    if(params[0] != INVALID_PLAYER_ID)
		    {
		        new string[128];
		        if(params[1] > 999999 || params[1] < 1000) return Message(playerid, COLOR_GRAD2, "Número entre 4-6 cifras.");
		        if(params[2] < 1 || params[2] > 500) return Message(playerid, COLOR_GRAD2, "Precio entre 1 a 500.");
                NumSeller[params[0]] = playerid;
				NumBuy[params[0]] = params[1];
				NumPrice[params[0]] = params[2];
				Message(playerid, 0x00DCF4FF, "Ofreciste vender un telefono");
				format(string, sizeof(string), "* %s te ofrece venderte el número %d por %d$, utiliza /aceptar telefono", PlayerName(playerid), params[1], params[2]);
				return Message(params[0],0x00DCF4FF, string);
		    }
		}
		else Message(playerid, COLOR_GRAD2, "Utiliza: /vendertelefono <ID> <número> <precio>");
        return 1;

	}
	zcmd(proteger, playerid, params[]){
	new string[150];
	if(PlayerInfo[playerid][pJob] == 11){
	if(!sscanf(params, "dd", params[0], params[1]))	{
 	if(ProxDetectorS(8.0, playerid, params[0]))	{
	if(playerid == params[0]){
	SendClientMessage(playerid, COLOR_GREY, "No puedes protegerte a ti mismo con tu trabajo de guardespaldas.");
	return 1;
	}
		if(params[1] < 1 || params[1] > 99999)
		{
		SendClientMessage(playerid, COLOR_GREY, "El precio no puede ser menor de 1 ni mayor de 99999");
		return 1;
		}
	 	format(string, sizeof(string), "* Ofreciste a %s protección por $%d.", PlayerName(params[0]), params[1]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* %s te ha ofrecido su protección de guardespaldas %s por $%d, (usa /aceptar proteccion ó /cancelar proteccion).", PlayerName(playerid), params[1]);
		SendClientMessage(params[0], COLOR_LIGHTBLUE, string);
 		Guardes_Oferta[params[0]] = playerid;
		Guardes_Precio[params[0]] = params[1];
		return 1;
			}
			 else SendClientMessage(playerid,COLOR_GRAD2, "Necesitas estar a almenós 8 centimetros del que protegerás.");
 		}
	 else SendClientMessage(playerid,COLOR_GRAD2, "Comando: /proteger [ID] [Precio]");
	}
    else SendClientMessage(playerid,COLOR_GRAD2, "¡No eres guardespaldas!");
	return 1;
	}
    zcmd(ruta, playerid, params[])
    {
        new idcar = GetPlayerVehicleID(playerid);
        if(PlayerInfo[playerid][pJob] == 1)
		{
		    if(IsATrain(idcar))
		    {
		        if(Train_Route[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya estás en ruta!");
		        Train_Route[playerid] = 1;
		        Message(playerid, COLOR_GRAD2, "Dirígete al Checkpoint para recoger a la gente!");
		        SetPlayerCheckpoint(playerid, 805.1542,-1357.9359,-0.1724, 5.0);
		        GText(playerid, "~w~Proxima estacion:~n~~r~LS", 5000, 1);
		        TogglePlayerControllable(playerid, 1);
		        return 1;
		    }
		    else return Message(playerid, COLOR_GRAD2, "¡No estás en un tren!");
		}
		else if(PlayerInfo[playerid][pJob] == 3)
		{
		    if(IsAPlane(idcar))
		    {
		        if(Plane_Route[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya estás en ruta!");
                Plane_Route[playerid] = 1;
		        Message(playerid, COLOR_GRAD2, "Aterriza en los diferentes aereopuertos de San Andreas.");
		        SetPlayerCheckpoint(playerid,1481.7509,1557.6327,11.7434, 15.0);
		        GText(playerid, "~w~Proximo destino:~n~~r~Aereopuerto de Las venturas", 5000, 1);
		        TogglePlayerControllable(playerid, 1);
		        return 1;
		    }
		    else return Message(playerid, COLOR_GRAD2, "¡No estás en un avión!");
		}
		else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
    zcmd(cancelarentrega, playerid, params[])
    {
        new idcar = GetPlayerVehicleID(playerid);
        if(IsACamion(idcar) && Camion[playerid] == idcar)
        {
        	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
       		RemovePlayerFromVehicle(playerid);
  		}
  		Camion[playerid] = 9999;
       	Mercancia[playerid] = 0;
       	PlayerIsRuta[playerid] = 0;
       	PlayerCargando[playerid] = 0;
       	PlayerDescargando[playerid] = 0;
       	DisablePlayerCheckpoint(playerid);
		Message(playerid, COLOR_GRAD2, "¡Has cancelado la entrega de la mercancía de tu camión!");
		return 1;
   	}
    zcmd(barrerasd, playerid, params[])
    {
        if(PlayerIsSweeping[playerid] == 1) return Message(playerid, COLOR_GREY, "¡Ya estás barriendo las calles!");
	    if(IsASweeper(GetPlayerVehicleID(playerid)))
	    {
	    	PlayerIsSweeping[playerid] = 1;
	     	TogglePlayerControllable(playerid, 1);
	      	new randomize;
	       	randomize = random(sizeof(gSweeperPoints));
	      	SetPlayerCheckpoint(playerid, gSweeperPoints[randomize][0], gSweeperPoints[randomize][1], gSweeperPoints[randomize][2], 5.0);
	      	SendClientMessage(playerid, COLOR_WHITE, "Dirígete a los Checkpoints.");
	    }
        return 1;
    }
    zcmd(dbarrerasdf, playerid, params[])
    {
        if(PlayerIsSweeping[playerid] == 1)
	  	{
	   		DisablePlayerCheckpoint(playerid);
	     	PlayerIsSweeping[playerid] = 0;
	      	SendClientMessage(playerid, COLOR_WHITE, "Has dejado de barrer.");
	      	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	       	RemovePlayerFromVehicle(playerid);
	       	TogglePlayerControllable(playerid, 1);
	  	}
  		else Message(playerid, COLOR_GREY, "¡No estás barriendo!");
        return 1;
    }
    zcmd(vermapa, playerid, params[]){
        new string[128];
        if(PlayerInfo[playerid][pJob] == 7){
            if(PlayerInfo[playerid][pImplementos] == 1){
        		SetPlayerCheckpoint(playerid, 547.4099,-3410.0576,-0.2234, 30.0);
        		format(string, sizeof(string), "* %s saca su mapa del bolsillo y lo mira.", PlayerName(playerid));
        		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        		Message(playerid, COLOR_WHITE, "* Se han marcado en el mapa un lugar disponible para pescar.");
      		} else Message(playerid, COLOR_GRAD2, "¡No tienes implementos de pesca!");
       	} else Message(playerid, COLOR_GRAD2, "¡No eres pescador!");
       	return 1;
    }
    zcmd(pescar, playerid, params[]){
        new string[128];
    	if(PlayerInfo[playerid][pJob] == 7){
            if(PlayerInfo[playerid][pImplementos] == 1){
				if(PlayerInfo[playerid][pCarnada] >= 100){
				    if(PlayerToPoint(100.0, playerid, 527.4099,-3410.0576,-0.2234)){
				        if(PlayerInfo[playerid][pPeces] < 1000){
				            if(Fishing[playerid] == 0){
                        		format(string, sizeof(string), "* %s le pone la carnada a las redes y las lanza al mar.", PlayerName(playerid));
        						ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        		Message(playerid, COLOR_WHITE, "* Ahora debes esperar 2 minutos para que las redes atrapen peces.");
                        		SetTimerEx("Pescando", 120000, false, "i", playerid);
                        		PlayerInfo[playerid][pCarnada] -= 100;
                        		Fishing[playerid] = 1;
                        	} else Message(playerid, COLOR_GRAD2, "¡Ya estas pescando, espera...!");
						} else Message(playerid, COLOR_GRAD2, "¡Ya tienes demasiados peces en el barco, primero ve y vendelos en el puerto!");
					} else Message(playerid, COLOR_GRAD2, "¡No estás en el lugar adecuado!");
				} else Message(playerid, COLOR_GRAD2, "¡No tienes carnada!");
            } else Message(playerid, COLOR_GRAD2, "¡No tienes implementos de pesca!");
        } else Message(playerid, COLOR_GRAD2 , "¡No eres pescador!");
        return 1;
    }
    zcmd(peces, playerid, params[])
    {
        new string[128];
        format(string, sizeof(string), "* Usted cuenta con un total de %d peces y %d carnadas", PlayerInfo[playerid][pPeces],PlayerInfo[playerid][pCarnada]);
		Message(playerid, COLOR_GRAD4, string);
        return 1;
    }
    // zcmd: mecas ============================================================================================================================
	zcmd(mm, playerid, params[])
    {
        if(Team_Mecanicos(playerid))
    	{
     		if(OnDuty[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No estás de servicio!");
	    	return ShowPlayerDialog(playerid, MECANICO_MENU, DIALOG_STYLE_LIST, "-> Mecánico Menú <-", "Repararaciones\nGasolinera\nPiezas\nEmbargar\nRemolcar\nOtros\nDejar coche de fábrica", ">>", "<<");
		}
		else Message(playerid, COLOR_GRAD2, "¡No eres mecánico!");
		return 1;
    }
    // zcmd: narcos ============================================================================================================================
    zcmd(cosechardrogas, playerid, params[])
    {
        if(DrugFarming[playerid] != 0) return Message(playerid, COLOR_GREY, "¡Ya estás cosechando droga!");
        if(Harvest_Vehicle(GetPlayerVehicleID(playerid)))
	    {
	    	DrugFarming[playerid] = 1;
	     	TogglePlayerControllable(playerid, 1);
	      	new randomize;
	       	randomize = random(sizeof(gDrugFarmVar));
	      	SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
	      	Message(playerid, COLOR_WHITE, "Si deseas parar de cosechar, sal del vehículo.");
	      	Message(playerid, COLOR_WHITE, "Dirígete a los Checkpoints.");
	    }
		else Message(playerid, COLOR_GREY, "¡No estás en una cosechadora!");
        return 1;
    }
    zcmd(cancelardrogas, playerid, params[])
    {
        if(IsANarco(playerid))
		{
		    if(Smuggling[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No estás importando droga!");
		    Smuggling[playerid] = 0;
		    SmugglingType[playerid] = 0;
		    Message(playerid, COLOR_GRAD2, "Dejaste el contrabando de drogas.");
		    return 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No eres narcotraficante!");
        return 1;
    }
    zcmd(venderdrogas, playerid, params[])
    {
        if(sscanf(params,"uii",params[0],params[1],params[2]))
		{
	        Message(playerid, COLOR_GRAD2, "Utiliza: /venderdrogas [ID] [#Tipo] [Cantidad]");
	        return Message(playerid, COLOR_GRAD2, "Tipos: 1 - Speed || 2 - Extasis || 3 - Ritalin || 4 - Heroina || 5 - Marihuana");
		}
		new string[128];
		if(IsPlayerConnected(params[0]))
	 	{
	  		if(params[0] != INVALID_PLAYER_ID)
	    	{
	    	    if(!ProxDetectorS(5.0,playerid, params[0])) return Message(playerid, COLOR_GRAD2, "Persona muy lejos.");
				if (IsANarco(playerid))
				{
					switch (params[1])
					{
					    case 1:
					    {
					        if(PlayerInfo[playerid][pSpeed] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					        BuyNarco[params[0]] = playerid;
					        NarcoSellArm[params[0]] = 1;
					        NarcoSellAmmo[params[0]] = params[2];
					        format(string, sizeof(string), "** Narcotraficante %s, te vende: %d gramo(s) Speed\n\n\tInserta importe a pagar", PlayerName(playerid), NarcoSellAmmo[params[0]]);
							ShowPlayerDialog(params[0], DRUGS_DIALOG, DIALOG_STYLE_INPUT, "Comprar drogas", string, "Aceptar", "Cancelar");
					    }
					    case 2:
					    {
					        if(PlayerInfo[playerid][pEctasy] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					        BuyNarco[params[0]] = playerid;
					        NarcoSellArm[params[0]] = 2;
					        NarcoSellAmmo[params[0]] = params[2];
					        format(string, sizeof(string), "** Narcotraficante %s, te vende: %d gramo(s) Extasis\n\n\tInserta importe a pagar", PlayerName(playerid), NarcoSellAmmo[params[0]]);
							ShowPlayerDialog(params[0], DRUGS_DIALOG, DIALOG_STYLE_INPUT, "Comprar drogas", string, "Aceptar", "Cancelar");
					    }
					    case 3:
					    {
					        if(PlayerInfo[playerid][pRitalin] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					        BuyNarco[params[0]] = playerid;
					        NarcoSellArm[params[0]] = 3;
					        NarcoSellAmmo[params[0]] = params[2];
					        format(string, sizeof(string), "** Narcotraficante %s, te vende: %d gramo(s) Ritalin\n\n\tInserta importe a pagar", PlayerName(playerid), NarcoSellAmmo[params[0]]);
							ShowPlayerDialog(params[0], DRUGS_DIALOG, DIALOG_STYLE_INPUT, "Comprar drogas", string, "Aceptar", "Cancelar");
					    }
					    case 4:
					    {
					        if(PlayerInfo[playerid][pHeroina] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					        BuyNarco[params[0]] = playerid;
					        NarcoSellArm[params[0]] = 4;
					        NarcoSellAmmo[params[0]] = params[2];
					        format(string, sizeof(string), "** Narcotraficante %s, te vende: %d gramo(s) Heroina\n\n\tInserta importe a pagar", PlayerName(playerid), NarcoSellAmmo[params[0]]);
							ShowPlayerDialog(params[0], DRUGS_DIALOG, DIALOG_STYLE_INPUT, "Comprar drogas", string, "Aceptar", "Cancelar");
					    }
					    case 5:
					    {
					        if(PlayerInfo[playerid][pMarihuana] < params[2]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta!");
					        BuyNarco[params[0]] = playerid;
					        NarcoSellArm[params[0]] = 5;
					        NarcoSellAmmo[params[0]] = params[2];
					        format(string, sizeof(string), "** Narcotraficante %s, te vende: %d gramo(s) Marihuana\n\n\tInserta importe a pagar", PlayerName(playerid), NarcoSellAmmo[params[0]]);
							ShowPlayerDialog(params[0], DRUGS_DIALOG, DIALOG_STYLE_INPUT, "Comprar drogas", string, "Aceptar", "Cancelar");
					    }
					    default: Message(playerid, COLOR_GRAD2, "ITEM INCORRECTO!");
					}
				}
			}
		}
        return 1;
    }
    zcmd(fabricar, playerid, params[])
    {
        if(!PlayerToPoint(10.0,playerid,2549.3479,-1294.4144,1044.1250)) return Message(playerid, COLOR_GRAD2, "¡No estás en la fabrica!");
        if(IsANarco(playerid))
		{
		    ShowPlayerDialog(playerid,CREATE_WEAPON,DIALOG_STYLE_LIST,"Fábrica de Armas",   \
			"Arma		\tMateriales \tMunición/Unidades\n" \
			"Navaja 	\t\t25 \t1\n" \
			"Bate 		\t40 \t1\n" \
			"Katana		\t80 \t1\n" \
			"C.Molotov 	\t120 \t1\n" \
			"9mm 		\t200 \t140\n" \
			"D.Eagle 	\t300 \t140\n" \
			"S.Pistol 	\t280 \t140\n" \
			"Shotgun	\t450 \t60\n" \
			"SPAS12		\t500 \t60\n" \
			"MP5		\t190 \t150\n" \
			"AK47		\t200\t150\n" \
			"M4			200 \t150\n" \
			"Rifle		\t420 \t45\n" \
			"Sniper		\t500 \t60\n" \
			,"Aceptar","Salir");
		}
        return 1;
    }
    zcmd(venderarma, playerid, params[])
    {
        if(!IsANarco(playerid)) return Message(playerid, COLOR_GREY, "¡No eres un narcotraficante!");
        new gunname[12], string[128];
        if(GetPlayerWeapon(playerid) == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningún arma en mano!");
        if(sscanf(params, "ud", params[0], params[1])) return Message(playerid, COLOR_GRAD2, "Utilize: /venderarma <ID> <precio>");
		if(params[1] < 1 || params[1] > 9999) return Message(playerid, COLOR_GRAD2, "Precio: 1 - 9999$");
		if(IsPlayerConnected(params[0]))
		{
		    if(ProxDetectorS(8.0,playerid, params[0]))
		    {
		        GetWeaponName(GetPlayerWeapon(playerid),gunname, sizeof(gunname));
				BuyNarco[params[0]] = playerid;
				NarcoSellPrice[params[0]] = params[1];
				NarcoSellArm[params[0]] = GetPlayerWeapon(playerid);
				NarcoSellAmmo[params[0]] = GetPlayerAmmo(playerid);
				format(string, sizeof(string), "\t\tComprar %s (Balas:%d)\n\tEl Narcotraficante %s te ha ofrecido que le compres un arma. ¿Aceptas?",gunname,NarcoSellAmmo[params[0]],PlayerName(playerid));
				SendRequest(params[0],string);
				Facturing[params[0]] = 1;
				Petition_ID[params[0]] = 2;
				Message(playerid, COLOR_GRAD2, "- Ofreciste venderle el arma, espera.");
				return 1;
		    }
		    else return Message(playerid, COLOR_GRAD2, "¡Muy lejos de este jugador!");
		}
        return 1;
    }
    zcmd(pda, playerid, params[])
    {
        if(IsANarco(playerid))
		{
			ClearChatbox(playerid, 10);
            new string[64];
		    Message(playerid, COLOR_YELLOW, "====================== PDA ======================");
		    format(string, sizeof(string), ":: Materiales -- %d ::", PlayerInfo[playerid][pMats]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Droga virgen -- %d ::", PlayerInfo[playerid][pDrugs]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Speed -- %d ::", PlayerInfo[playerid][pSpeed]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Extasis -- %d ::", PlayerInfo[playerid][pEctasy]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Ritalin -- %d ::", PlayerInfo[playerid][pRitalin]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Heroina -- %d ::", PlayerInfo[playerid][pHeroina]);
		    Message(playerid, COLOR_WHITE, string);
		    format(string, sizeof(string), ":: Marihuana -- %d ::", PlayerInfo[playerid][pMarihuana]);
		    Message(playerid, COLOR_WHITE, string);
		    Message(playerid, COLOR_YELLOW, "====================== ***** ======================");
		    return 1;
		}
        return 1;
    }
    zcmd(importardrogas, playerid, params[])
    {
        if(IsANarco(playerid))
        {
            if(Smuggling[playerid] == 0)
            {
                new string[64];
	            if(!sscanf(params, "s[64]i", string, params[1]))
	            {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 442)
	                {
	                    if(PlayerToPoint(5.0,playerid,-1107.2126,-1161.9325,129.2188))
	                    {
	                        if(PlayerInfo[playerid][pDrugs] < params[1]) return Message(playerid, COLOR_GRAD2, "Cantidad inccorrecta.");

                     		if(strcmp(string,"speed",true) == 0)    	DrugsSmuggling(playerid, 1, params[1]);
                     		else if(strcmp(string,"extasy",true) == 0)  DrugsSmuggling(playerid, 2, params[1]);
                     		else if(strcmp(string,"ritalin",true) == 0) DrugsSmuggling(playerid, 3, params[1]);
                     		else if(strcmp(string,"heroina",true) == 0) DrugsSmuggling(playerid, 4, params[1]);
                     		else if(strcmp(string,"marihuana",true) == 0) DrugsSmuggling(playerid, 5, params[1]);
             				else Message(playerid, COLOR_GRAD2, "Item incorrecto");
                    	}
                     	else Message(playerid, COLOR_GRAD2, "¡No estás en el lugar de importación de mercancías!");
             		} else Message(playerid, COLOR_GRAD2, " ¡No estas en un coche para importar drogas!");
	            }
	            else
	            {
	                Message(playerid, COLOR_GRAD2, "Utilize: /importar <Nombre> <Cantidad>");
	                Message(playerid, COLOR_GRAD2, "Nombre: speed, extasy, ritalin, heroina, marihuana.");
	            }
			 }
			 else
			 {
			    Smuggling[playerid] = 0;
			    SmugglingType[playerid] = 0;
			    Message(playerid, COLOR_GRAD2, "Dejaste el contrabando de drogas.");
			 }
        }
        else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
    // zcmd: clothes =============================================================================================
    zcmd(accesorios, playerid, params[])
    {
        if(IsAtClothShop(playerid))
        {
			return ShowPlayerDialog(playerid, CLOTHES_CHOOSE_DIALOG, DIALOG_STYLE_LIST, "Accesorios", "Gafas\nBandanas\nGorras", "Ok", "Salir");
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en ninguna tienda de ropa!");
        return 1;
    }
	zcmd(comprar, playerid, params[])
    {
        if(Accesory[playerid] > 0)
        {
	        Accesory[playerid] = 0;
		    Message(playerid, COLOR_GRAD2, "Prenda de ropa comprada.");
		    Bought(playerid, 50);
            if(PlayerToPoint(30.0,playerid,211.7609,-7.6523,1001.2109))     Till(9, 50);
	    	if(PlayerToPoint(20.0,playerid,207.7558,-103.3743,1005.2578))   Till(10, 50);
		    return Message(playerid, COLOR_GRAD2, "Utiliza /qobjeto para quitartela");
		}
		if(PlayerToPoint(20, playerid,665.1661,-568.5448,16.3433))
		{
  			return ShowPlayerDialog(playerid, DIALOG_FARMACIA, DIALOG_STYLE_LIST, "Farmacia + 24h","Condón (3$)\nIbuprofeno (10$)\nParches de Nicotina (30$)\nEnergisyl (40$)\nPastillas SIDA (1000$)\nAntiEpilectica (500$)\nPastillas Cancer (800$)", "Comprar", "Salir");
		}
		else if (PlayerToPoint(10, playerid, 1577.7031,-1895.5066,401.6359) || PlayerToPoint(10, playerid, 1573.5209,-1906.3552,405.1159))
		{
		    return ShowPlayerDialog(playerid, COMPRAR_JOYAS, DIALOG_STYLE_LIST, "Joyeria Andes", "Anillo de Compromiso (25000$)\nAnillo de Oro (50000$)\nCollar de Perlas (100000$)\nAnillo de Diamantes (200000$)\nPulsera de oro (80000$)\nAretes de Diamantes (10000$)\nReloj de Oro (46000$)","Comprar", "Salir");
		}
		else if (PlayerToPoint(20, playerid,-103.81,-22.63,1000.72))
		{
  			return ShowPlayerDialog(playerid, DELE_BUY_SEX, DIALOG_STYLE_LIST, "Sex Shop","Ropa De Mujer\nRopa De Hombre\nJuguetes De Diversion", "Comprar", "Salir");
		}
		else if (PlayerToPoint(15.0,playerid,-1972.1991,1208.0253,75.1797))
		{
		    return ShowPlayerDialog(playerid, ELECTRONIC_BUY, DIALOG_STYLE_LIST, "Tienda Electronica", "1.\tiPhone\t\t\t\t(200$)\n2.\tIpod\t\t\t\t(280$)\n3.\tCámara\t\t\t\t(100$)\n4\tWalkie\t\t\t\t(260$)", "Comprar", "Cancelar");
  		}
		else if(IsAt247(playerid))
		{
  			return ShowBuyMenu(playerid);
		}
		return 1;
    }
    zcmd(recargar, playerid, params[]){
        if(IsAt247(playerid)){
            if(GetPlayerMoney(playerid) > 200){
            	if(PlayerInfo[playerid][pPnumber] != 0) {
            		ShowPlayerDialog(playerid, RECARGA_PHONE, DIALOG_STYLE_INPUT, "{018CFE}Operadora de Telefonia Celular OTECEL", "{FFFFFF}Ingresa tu numero celular para realizar la recarga", "Aceptar", "Cancelar");
            	} else Message(playerid, COLOR_GRAD2, "No tienes teléfono, cómpra uno en el 24/7");
			} else Message(playerid, COLOR_GRAD2, "¡Necesitas tener como mínimo $200!");
		} else Message(playerid, COLOR_GRAD2, "¡No estás en un 24-7!");
        return 1;
    }
    zcmd(cropa, playerid, params[])
    {
    if(!IsAtClothShop(playerid) && PlayerInfo[playerid][pDonateT] != 1) return Message(playerid, COLOR_GRAD2, "¡No estás en una tienda de Ropa!");
        if(IsPlayerConnected(playerid))
        {
         ShowModelSelectionMenu(playerid, skinlist, "Selecciona el nuevo Skin");
    }
    else SendClientMessage(playerid, 0xFFFF00FF, "No estás conectado");
    return 1;
    }
    zcmd(armario, playerid, params[])
{
armariolist = LoadModelSelectionMenu("armario.ini");
ShowModelSelectionMenu(playerid, armariolist, "Armario personal");
return 1;
}
    
    //comando antiguo del /cropa    (puesto en /cropaid)
    zcmd(cropaid, playerid, params[])
    {
        if(!IsAtClothShop(playerid) && PlayerInfo[playerid][pDonateT] != 1) return Message(playerid, COLOR_GRAD2, "¡No estás en una tienda de Ropa!");
        if(IsPlayerConnected(playerid))
        {
            ShowPlayerDialog(playerid, SEL_SKIN, DIALOG_STYLE_INPUT, "> Comprar Ropa", "{78F700}Escribe el ID del que desees\n{FFFFFF}Recuerda que algunos skin's están reservados.\nTIP <1 - 299>\n", "Ok", "Salir");
        }
        else Message(playerid, COLOR_GRAD2, "¡No estás conectado!");
        return 1;
    }
   	zcmd(salirvestidor, playerid, params[])
    {
		if(Accesory[playerid] > 0)
		{
		    Accesory[playerid] = 0;
		    Message(playerid, COLOR_GRAD2, "Saliste del vestidor!");
		}
		else Message(playerid, COLOR_GRAD2, "No puedes utilizar el comando ahora");
        return 1;
    }
    // zcmd : Salirfaccion
    zcmd(salirfaccion, playerid, params[])
    {
      if(PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pMember] == 0) return Message(playerid, COLOR_GRAD2, "No perteneces a ninguna facción."); // Aviso por si no tiene una facción.
      PlayerInfo[playerid][pMember] = 0;
      PlayerInfo[playerid][pLeader] = 0;
      PlayerInfo[playerid][pRank] = 0;
      GameTextForPlayer(playerid, "/w/HAZ SALIDO DE TU FACCION, AHORA ERES UN CIVIL", 3000, 3);
      SetPlayerSkin(playerid, 299);
      SendClientMessage(-1, playerid, "Te has salido de tu facción, ahora eres un civil");
      return 1;
    }
    // zcmd: chat ===================================================================================================================
    zcmd(me, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Maskuse[playerid] == 1) format(string, sizeof(string), "* Desconocido %s.", params[0]);
			else format(string, sizeof(string), "* %s %s.", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /me <Acción>");
        return 1;
    }
    zcmd(b, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            format(string, sizeof(string), "(( [OOC] %s(%d) dice: %s ))", PlayerName(playerid), playerid, params[0]);
			ProxDetector(20.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /b <Canal OOC>");
        return 1;
    }
    zcmd(c, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Maskuse[playerid] == 1)	format(string, sizeof(string), "Desconocido dice: %s", params[0]);
            else format(string, sizeof(string), "%s dice: %s", PlayerName(playerid), params[0]);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /c <Texto>");
        return 1;
    }
    zcmd(intentar, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(Intentar[playerid] > 0) return Message(playerid, COLOR_GRAD2, "Espera 10 segundos para volver a utilizar este comando!");
        new randa = random(2)+1, string[128];
        if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /intentar <Acción>");
		if(Maskuse[playerid] == 1){
			if(randa == 1){
				format(string, sizeof(string), "* Desconocido consigue %s.", params[0]);
				ProxDetector(20.0, playerid, string, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
			}
			else{
				format(string, sizeof(string), "* Desconocido no logra %s.", params[0]);
				ProxDetector(20.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
			}
			Intentar[playerid] = 1;
			SetTimerEx("IntentarTimer", 10000, false, "i", playerid);
		}
		else{
			if(randa == 1){
				format(string, sizeof(string), "* %s consigue %s.", PlayerName(playerid), params[0]);
				ProxDetector(20.0, playerid, string, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
			}
			else{
				format(string, sizeof(string), "* %s no logra %s.", PlayerName(playerid), params[0]);
				ProxDetector(20.0, playerid, string, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
			}
			Intentar[playerid] = 1;
			SetTimerEx("IntentarTimer", 10000, false, "i", playerid);
		}
		return 1;
    }
    zcmd(do, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Maskuse[playerid] == 1) format(string, sizeof(string), "* Desconocido (( %s )).", params[0]);
			else format(string, sizeof(string), "* %s (( %s )).", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /do <Acción>");
        return 1;
    }
    zcmd(low, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Maskuse[playerid] == 1) format(string, sizeof(string), "Desconocido susurra: %s", params[0]);
			else format(string, sizeof(string), "%s susurra: %s", PlayerName(playerid), params[0]);
            ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /low <Texto>");
        return 1;
    }
    zcmd(j, playerid, params[]){
	if(PlayerInfo[playerid][pAdminCP] < 1) return  Message(playerid, COLOR_GRAD2,"¡No autorizado!");
	if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0])){
            new string[128];
			format(string, sizeof(string), "%s Administrador dice: %s", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string,ORANGE_ADMIN,ORANGE_ADMIN,ORANGE_ADMIN,ORANGE_ADMIN,ORANGE_ADMIN);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /j <Texto>");
        return 1;
    }
    zcmd(g, playerid, params[])
    {
        if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
        if(!sscanf(params, "s[128]", params[0]))
        {
            new string[128];
            if(Maskuse[playerid] == 1) format(string, sizeof(string), "Desconocido grita: ¡¡ %s !!", params[0]);
			else format(string, sizeof(string), "%s grita: ¡¡ %s !!", PlayerName(playerid), params[0]);
            ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
        } else Message(playerid, COLOR_GRAD2, "Utilize: /g <Texto>");
        return 1;
    }
    zcmd(w, playerid, params[])
    {
        if(!sscanf(params, "us[128]", params[0], params[1]))
        {
            if(params[0] != INVALID_PLAYER_ID)
    		{
	      		if(PlayerInfo[playerid][pAdminCP] > 0 || PlayerInfo[playerid][pAdminCP] == 0 && PlayerInfo[params[0]][pAdminCP] > 0)
	        	{
	         		if(HidePM[params[0]] == 1 && PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "Este administrador/ayudante tiene los susurros bloqueados!");
	         		new string[128];
					format(string, sizeof(string), "Mensaje de %s (%d): %s", PlayerName(playerid), playerid, params[1]);
					Message(params[0], 0xE9BC0AFF, string);
					format(string, sizeof(string), "Susurras a %s (%d): %s", PlayerName(params[0]), params[0] ,params[1]);
					Message(playerid,  0xE9BC0AFF, string);
					if(PlayerInfo[playerid][pAdminCP] != 2014 && PlayerInfo[params[0]][pAdminCP] != 2014)
					{
	    				for(new i = 0; i < MAX_PLAYERS; i++)
				    	{
        					if(PlayerInfo[i][pAdminCP] >= 2013)
				    	    {
            					if(See_MP[i] == 1)
				        	    {
                					format(string, sizeof(string), ":MP: %s(%d) a %s(%d): %s", PlayerName(playerid), playerid, PlayerName(params[0]), params[0], params[1]);
				                	Message(i, 0xFF8000FF, string);
					            }
					        }
					    }
 					}
				}
				else Message(playerid, COLOR_GRAD2, "¡Susurros solo ha administradores!");
			}
			else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
        }
		else Message(playerid, COLOR_GRAD2, "Utilize: /w <PlayerID> <Texto>");
        return 1;
    }
	zcmd(ita, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás conectado!");
        if(!Mafia_Italiana(playerid)) return Message(playerid, COLOR_GRAD2, "¡No sabes Italiano!");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 12 || PlayerInfo[i][pLeader] == 12 || PlayerInfo[i][pMember] == 22 || PlayerInfo[i][pLeader] == 22)
						{
					    	format(string, sizeof(string), "%s dice: [Italiano] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /ita <Texto>");
		return 1;
	}
	zcmd(jap, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás conectado!");
        if(!Mafia_Yakuza(playerid)) return Message(playerid, COLOR_GRAD2, "¡No sabes Japones!");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 13 || PlayerInfo[i][pLeader] == 13 || PlayerInfo[i][pMember] == 20 || PlayerInfo[i][pLeader] == 20)
						{
					    	format(string, sizeof(string), "%s dice: [Japonés] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /jap <Texto>");
		return 1;
	}
	zcmd(rus, playerid, params[])
	{
	    if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
	    if(!IsPlayerConnected(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás conectado!");
        if(!Mafia_Rusa(playerid)) return Message(playerid, COLOR_GRAD2, "¡No sabes Ruso!");
        if(!sscanf(params, "s[128]", params[0]))
        {
			new Float:x, Float:y, Float:z, string[128];
    		GetPlayerPos(playerid,x,y,z);
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerToPoint(20, i, x, y, z))
					{
						if(PlayerInfo[i][pMember] == 14 || PlayerInfo[i][pLeader] == 14)
						{
					    	format(string, sizeof(string), "%s dice: [Ruso] %s", PlayerName(playerid), params[0]);
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
						else
						{
					    	format(string, sizeof(string), "%s dice: [Lenguaje desconocido para tí].", PlayerName(playerid));
					    	SendClientMessage(i, COLOR_FADE3, string);
						}
					}
				}
			}
		}
		else Message(playerid, COLOR_GRAD2, "Utilize: /rus <Texto>");
		return 1;
	}
    zcmd(aooc, playerid, params[]){
    	if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(PlayerInfo[playerid][pAdminCP] > 3)
        {
        	if(!sscanf(params, "s[128]", params[0]))
        	{
            	new string[128];
        		format(string, sizeof(string), "[{FFFFFF}AOOC{2684FF}] Admin %s: %s " , PlayerName(playerid), params[0])
				GlobalMsg(0x62B382AA,string);
			} else Message(playerid, COLOR_GRAD2, "Utilize: /aooc <Texto>");
		} else Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        return 1;
    }
    zcmd(noooc, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if (!noooc)
        {   noooc = 1; BroadCast(COLOR_GRAD2, " Canal de Ayuda ha sido desactivado."); }
		else
		{   noooc = 0; BroadCast(COLOR_GRAD2, " Canal de Ayuda ha sido activado.");  }
        return 1;
    }
  	zcmd(infonew, playerid, params[])
    {
		new string[610];
		new di[] = "{FFFFFF}Este nuevo canal de ayuda es para dar más facilidad a los usuarios menores de nivel 6, ya que los administradores o helpers \nresponderán y si otro user tenia la misma inquietud se habrá respondido su pregunta rapidamente.\n {26FF67}*Recuerda que solo son para usuarios de nivel 1 al 5.";
		new di2[] = "\n *Si surge algún problema con su cuenta solo use /duda.\n *Si sabes rolear y no necesitas este canal usa /togooc\n *No abuses del comando o te banearan del sistema.\n\n\n\t\t\t\t{429EE6}http://www.hermandadzero.com/";
		format(string, sizeof(string),"%s %s",di,di2);
        return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, "{FF231D}Info del uso de /new", string, "Ok", "" );
	}
	zcmd(new, playerid, params[])
	{
		new string[128];
		if(DetectarSPAM(params[0])) return AccionSPAM(playerid, params[0]);
  		if(NewUsed[playerid] == 1) return Message(playerid, COLOR_GRAD2, "Tiene que esperar 2 minutos para volver a usar este canal.");
  		if(PlayerInfo[playerid][pBanDuda] != 0) return Message(playerid, COLOR_GRAD2, "¡No puedes utilizar este comando, estas baneado del sistema de ayuda!");
		if((noooc)) return Message(playerid, COLOR_GRAD2, "El canal de ayuda ha sido deshabilitado por un administrador.");
  		if(sscanf(params, "s[128]", params[0])) return Message(playerid, COLOR_GRAD2, "Utilize: /new <Texto>");
        if(PlayerInfo[playerid][pHelper] == 1){
			format(string, sizeof(string), "(( [%d] Helper %s: %s ))" , playerid, PlayerName(playerid), params[0]);
   			OOCOff(CHATNEW,string);
  		}
		else if(PlayerInfo[playerid][pLevel] < 6){
            NewUsed[playerid] = 1;
            SetTimerEx("NewUs", 120000, 0, "i", playerid);
            format(string, sizeof(string), "(( [%d] Nuevo %s: %s ))" , playerid, PlayerName(playerid), params[0]);
            OOCOff(CHATNEW,string);
         }
		else Message(playerid, COLOR_GRAD2, "¡No puedes usar este canal!");
		return 1;
	}
 	zcmd(darhelp, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2013) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(sscanf(params, "ui", params[0], params[1])) return Message(playerid, COLOR_GRAD2, "Utilize: /darhelp <ID> <Nivel>");
        if(IsPlayerConnected(params[0])){
			new string[128]
			switch(params[1])
			{
				case 0:
				{
					PlayerInfo[params[0]][pHelper] = 0;
					format(string, sizeof(string), "{40D3FF}%s le ha quitado el nivel de helper.", PlayerName(playerid));
					Message(params[0], -1, string);
					format(string, sizeof(string), "%s le ha quitado el nivel de helper a %s", PlayerName(playerid), PlayerName(params[0]));
					A_Info(string);
				}
				case 1:
				{
					NewUsed[playerid] = 0;
					PlayerInfo[params[0]][pHelper] = 1;
					format(string, sizeof(string), "{40D3FF}%s lo ha asignado asignado helper. Empieze a responder las dudas [/new]", PlayerName(playerid));
					Message(params[0], -1, string);
					format(string, sizeof(string), "%s ha asignado helper a %s", PlayerName(playerid), PlayerName(params[0]));
					A_Info(string);
				}
				default: Message(playerid, COLOR_GRAD2, "¡El nivel de helper debe ser entre 0 y 1!");
			}
   		} else Message(playerid, COLOR_GRAD2, " Jugador no conectado.");
        return 1;
    }
    zcmd(mps, playerid, params[])
    {
        if(PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(See_MP[playerid] == 1)
		{
			See_MP[playerid] = 0;
			Message(playerid, COLOR_GRAD2, "- Notificación de mensajes privados desactivada.");
		}
        else
		{
            See_MP[playerid] = 1;
			Message(playerid, COLOR_GRAD2, "- Notificación de mensajes privados activada.");
		}
        return 1;
    }
    zcmd(maletero, playerid, params[])
    {
        if(ReduceTime[playerid] == 1) return Message(playerid, COLOR_GREY, "Debes esperar 3 segundos para volver a utilizar este comando.");

        if(!sscanf(params, "s[32]", params[0]))
        {
            new counter, result, gunname[32], string[128];
            for(new i; i != MAX_VEHICLES; i++)
    		{
      			new dist = CheckPlayerDistanceToVehicle(3.0, playerid, i);
	        	if(dist)
		        {
          			result = i;
	            	counter++;
		        }
		    }

		    if(counter == 0) return Message(playerid, COLOR_GREY, "Ningún vehículo cerca de usted.");
		    if(counter > 1) return Message(playerid, COLOR_GREY, "Encontrado más de un vehículo.");

		    if(IsAPlane(result) || IsABike(result) || Harvest_Vehicle(result)|| IsASweeper(result) || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
   			{
  				return Message(playerid, COLOR_GREY, "Este vehículo no tiene maletero.");
   			}

   			if(IsAnOwnableCar(result))
   			{
   			    if(IsACop(playerid)) { }
	    		else if(PlayerInfo[playerid][pPcarkey] == result || PlayerInfo[playerid][pPcarkey2] == result) { }
		    	else Message(playerid, COLOR_GREY, "Maltetero cerrado.");
			}

            if(strcmp(params[0],"info",true) == 0)
            {
                if(BootOpen[result] == 1)
                {
					Message(playerid, COLOR_YELLOW2, "|_______ Maletero del vehículo _______|");
					for(new slot = 1; slot != MAX_TRUNK_SLOTS; slot++)
					{
	    				if(vehTrunk[result][slot] != 0)
						{
	     					GetWeaponName(vehTrunk[result][slot], gunname, sizeof(gunname));
			        		format(string, sizeof(string), "| Slot %i: %s (Balas: %i)", slot, gunname, vehTrunkAmmo[result][slot]);
							Message(playerid, COLOR_WHITE, string);
		    			}
					    else
					    {
							format(string, sizeof(string), "| Slot %i: Vacio (Balas: N/A)", slot);
							Message(playerid, COLOR_WHITE, string);
					    }
					}
					format(string, sizeof(string), "| Chaleco: %f%", vehTrunkArmour[result]);
					Message(playerid, COLOR_WHITE, string);
	    			format(string, sizeof(string), "* %s abre el maletero de su vehículo.", PlayerName(playerid));
	     			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				} else Message(playerid, COLOR_GRAD2, "El maletero está cerrado.");
        	}
        	else if(strcmp(params[0],"garma",true) == 0)
            {
                if(vehTrunkCounter[result] != (MAX_TRUNK_SLOTS-1))
            	{
        	    	if(BootOpen[result] == 1)
                	{
             		new gunID = GetPlayerWeapon(playerid), gunAmmo = GetPlayerAmmo(playerid);

					if(gunID != 0 && gunAmmo != 0)
     				{
         				ReduceTime[playerid] = 1;
         				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
             			GetWeaponName(gunID, gunname, sizeof(gunname));
                		vehTrunkCounter[result]++;
                  		vehTrunk[result][vehTrunkCounter[result]] = gunID;
                    	vehTrunkAmmo[result][vehTrunkCounter[result]] = gunAmmo;
                     	format(string, sizeof(string), "Usted ha puesto su %s (Balas: %i) en el coche.", gunname, gunAmmo);
                        Message(playerid, COLOR_WHITE, string);
                        RemovePlayerWeapon(playerid, gunID);
						format(string, sizeof(string), "* %s abre el maletero del coche yguarda un arma.", PlayerName(playerid));
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
         			}
				} else Message(playerid, COLOR_GREY, "Maletero lleno.");
              } else Message(playerid, COLOR_GRAD2, "El maletero está cerrado.");
            }
            else if(strcmp(params[0],"sarma",true) == 0)
            {
                if(vehTrunkCounter[result] != 0)
            	{
            		if(BootOpen[result] == 1)
                	{
           			ReduceTime[playerid] = 1;
					SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
					GivePlayerWeapon(playerid, vehTrunk[result][vehTrunkCounter[result]], vehTrunkAmmo[result][vehTrunkCounter[result]]);
     				GetWeaponName(vehTrunk[result][vehTrunkCounter[result]], gunname, sizeof(gunname));
         			format(string, sizeof(string), "Usted ha tomado una %s (Balas: %i) De El Vehiculo.", gunname, vehTrunkAmmo[result][vehTrunkCounter[result]]);
			        Message(playerid, COLOR_WHITE, string);
           			vehTrunk[result][vehTrunkCounter[result]] = '\0';
	          		vehTrunkAmmo[result][vehTrunkCounter[result]] = '\0';
	          		vehTrunkCounter[result]--;
		           	format(string, sizeof(string), "* %s abre el maletero del coche y saca un arma.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					} else Message(playerid, COLOR_GRAD2, "El maletero está cerrado.");
			    } else Message(playerid, COLOR_GREY, "Maletero vacío.");
            }
            else if(strcmp(params[0],"gchaleco",true) == 0)
            {
            if(BootOpen[result] == 1)
                	{
                new Float:plyArmour;    GetPlayerArmour(playerid, plyArmour);
			    if(plyArmour != 0)
       			{
			       	SetPlayerArmour(playerid, 0);
			       	vehTrunkArmour[result] = plyArmour;
					format(string, sizeof(string), "* %s se quita su armadura y la pone en maletero del coche.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

				} else Message(playerid, COLOR_GREY, "No tienes chaleco.");
              } else Message(playerid, COLOR_GRAD2, "El maletero está cerrado.");
			}
            else if(strcmp(params[0],"schaleco",true) == 0)
            {
            if(BootOpen[result] == 1)
                	{
                if(vehTrunkArmour[result] != 0)
            		{
            		SetPlayerArmour(playerid, vehTrunkArmour[result]);
            		vehTrunkArmour[result] = 0;
					format(string, sizeof(string), "* %s saca la armadura corporal del tronco y se lo pone.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				} else Message(playerid, COLOR_GREY, "No hay chaleco en el maletero.");
   			} else Message(playerid, COLOR_GRAD2, "El maletero está cerrado.");
   			}
        }
		else
		{
		    Message(playerid, COLOR_GRAD2, "Utilize: /maletero <item>");
		    Message(playerid, COLOR_GRAD2, "Items: garma, sarma, gchaleco, schaleco, info");
		}
        return 1;
    }
    zcmd(pastilla, playerid, params[])
    {
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"ibuprofeno",true) == 0)
	        {
	            if(Ibuprofeno[playerid] > 0)
	            {
					Ibuprofeno[playerid] --;
					format(string, sizeof(string), "* %s se pone una pastilla en su vaso y se la toma con agua.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "Has tomado un ibuprofeno, te quedan %d", Ibuprofeno[playerid]);
					Message(playerid, COLOR_WHITE, string);
   					SetPlayerDrunkLevel(playerid, 3000);
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"nicotina",true) == 0)
	        {
	            if(cNicotina[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(Nicotina[playerid] > 0)
	            {
					Nicotina[playerid] --;
					format(string, sizeof(string), "Te has puesto un parche de Nicotina, te quedan %d", Nicotina[playerid]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se coloca un parche de nicotina.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   					cNicotina[playerid] = 1;
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"energysil",true) == 0)
	        {
	            if(cEnergysil[playerid] == 1) return Message(playerid, COLOR_GRAD2, "  Ya has tomado una!");
	            if(Energysil[playerid] > 0)
	            {
					Energysil[playerid] --;
					format(string, sizeof(string), "Consumes 1 Energysil, te quedan %d", Energysil[playerid]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se siente con más energía.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   					cEnergysil[playerid] = 1;
   					SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pDEagle])
					SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pShotgun]+50)
					SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pMP5]+50)
					SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pAK47]+50)
					SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pM4]+100)
					SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, PlayerInfo[playerid][pSniper]+50)
					PlayerDrunk[playerid] = -5;
					new Float:HP; GetPlayerHealth(playerid, HP);
					SetHP(playerid, HP+50);
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"sida",true) == 0)
	        {
	            if(cSIDA[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(PlayerInfo[playerid][pAntiSIDA] > 0)
	            {
					PlayerInfo[playerid][pAntiSIDA] -= 1;
					format(string, sizeof(string), "* %s se toma una pastilla.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "Te has tomado la pastilla para curar el SIDA, te quedan %d", PlayerInfo[playerid][pAntiSIDA]);
					Message(playerid, COLOR_WHITE, string);
   					cSIDA[playerid] = 1;
   					new antisida = random(30);
   					if(antisida == 14)
   					{
   					    Message(playerid, COLOR_WHITE, "Felicidades! Te has curado! Puedes dejar de tomar estas pastillas!");
   					    format(string, sizeof(string), "* %s se siente muy feliz.", PlayerName(playerid));
   						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   						PlayerInfo[playerid][pSIDA] = 0;
					}
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"cancer",true) == 0)
	        {
	            if(cCancer[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(PlayerInfo[playerid][pAntiCancer] > 0)
	            {
					PlayerInfo[playerid][pAntiCancer] -= 1;
					format(string, sizeof(string), "Te has tomado la pastilla para curar el cancer, te quedan %d", PlayerInfo[playerid][pAntiCancer]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se toma una pastilla.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   					if(PlayerInfo[playerid][pCancer] > 120)
	                {
	                    format(string, sizeof(string), "* %s tose y escupe la pastilla.", PlayerName(playerid));
   						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   						SetPlayerDrunkLevel(playerid, 10000);
	                }
   					else
   					{
   					    cCancer[playerid] = 1;
   					    PlayerInfo[playerid][pCancer] -= 3;
					}
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
			else if(strcmp(params[0],"epilepsia",true) == 0)
	        {
	            if(cEpilepsia[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Ya has tomado una!");
	            if(PlayerInfo[playerid][pAntiEpilepsia] > 0)
	            {
					PlayerInfo[playerid][pAntiEpilepsia] -= 1;
					format(string, sizeof(string), "Te has tomado la pastilla para evitar la epilepsia, te quedan %d", PlayerInfo[playerid][pAntiEpilepsia]);
					Message(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "* %s se toma una pastilla.", PlayerName(playerid));
   					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   					cEpilepsia[playerid] = 1;
   					PlayerInfo[playerid][pEpilepsia] -= 2;
				}
				else Message(playerid, COLOR_GRAD2, "¡No tienes esa pastilla!");
			}
        }
        else
        {
            Message(playerid, COLOR_GRAD2, "Utilize: /pastilla <nombre>");
            Message(playerid, COLOR_GRAD2, "Nombres: Ibuprofeno, Nicotina, Energysil, Cancer, Epilepsia, SIDA");
        }
        return 1;
    }
    zcmd(usardrogas, playerid, params[])
    {
        if(UsingDrugs[playerid] == 1) return Message(playerid, COLOR_WHITE, "¡Estás con el efecto de la droga aún!");
        if(!sscanf(params, "s[32]", params[0]))
        {
            new string[128];
            if(strcmp(params[0],"speed",true) == 0)
	        {
	            if(PlayerInfo[playerid][pSpeed] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes Speed!");

	            SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999)
				SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 999);
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
				SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);

				new VIH = random(10);
				if(VIH == 5 || VIH == 7)	PlayerInfo[playerid][pSIDA] += 1;

				PlayerInfo[playerid][pEpilepsia] += 10;
				PlayerInfo[playerid][pCancer] += 5;

				format(string, sizeof(string), "* %s consume un polvo blanco.", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   				ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
				UsingDrugs[playerid] = 1 ;
   				Message(playerid, COLOR_WHITE, "Has tomado speed, el efecto de la droga durará 2 minutos");
   				PlayerInfo[playerid][pSpeed] -= 1;
   				DrugTimer[playerid] = SetTimerEx("SpeedEffectEnd", 120000, true, "i", playerid);
			}
			else if(strcmp(params[0],"extasis",true) == 0)
	        {
	            if(PlayerInfo[playerid][pEctasy] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes pastillas de extasis!");

	            PlayerInfo[playerid][pEpilepsia] += 10;
	            new Mareo = random(50000), Float:Health, Vida = random(80);

				SetPlayerDrunkLevel(playerid, Mareo);
				GetPlayerHealth(playerid, Health);
				SetHP(playerid, Health+Vida);
				SetPlayerWeather(playerid, 2009);

				format(string, sizeof(string), "* %s se toma una pastilla de color.", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,1);
				UsingEctasy[playerid] = 300;
				EctasyEffect[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has tomado extasis, el efecto de la droga durará 5 minutos");
				PlayerInfo[playerid][pEctasy] -= 1;
				SetPlayerVirtualWorld(playerid, 5);
				DrugTimer[playerid] = SetTimerEx("Ectasy", 1000, true, "i", playerid);
			}
			else if(strcmp(params[0],"ritalin",true) == 0)
	        {
	            if(PlayerInfo[playerid][pRitalin] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes pastillas de Ritalin!");

	            PlayerInfo[playerid][pEpilepsia] += 3;
	            PlayerInfo[playerid][pCancer] += 3;

	            new VIH = random(10), Mareo = random(5);

				if(VIH == 2 || VIH == 8)		PlayerInfo[playerid][pSIDA] += 1;
				SetPlayerDrunkLevel(playerid, Mareo*1000);
				SetPlayerArmour(playerid, Mareo*20);
				SetPlayerWeather(playerid, -68);
				format(string, sizeof(string), "* %s se toma una pastilla blanca.", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,1);
				UsingRitalin[playerid] = 300;
				RitalinEffect[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has tomado Ritalin, el efecto de la droga durará 5 minutos");
				PlayerInfo[playerid][pRitalin] -= 1;
				PlayerDrunk[playerid] = 11;
			}
			else if(strcmp(params[0],"heroina",true) == 0)
	        {
	            if(PlayerInfo[playerid][pHeroina] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes suficiente Heroina!");

	            PlayerInfo[playerid][pEpilepsia] += 5;
	            PlayerInfo[playerid][pCancer] += 5;

	            new VIH = random(15);

				if(VIH == 8)			PlayerInfo[playerid][pSIDA] += 1;
				SetPlayerArmour(playerid, 100);
				SetHP(playerid, 200);
				format(string, sizeof(string), "* %s se inyecta una substancia.", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
				UsingHeroina[playerid] = 120;
				HeroinaEffect[playerid] = 1;
				HeroinaBeat[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has tomado Heroina, el efecto de la droga durará 2 minutos");
   				PlayerInfo[playerid][pHeroina] -= 1;
			}
			else if(strcmp(params[0],"marihuana",true) == 0)
	        {
	            if(PlayerInfo[playerid][pMarihuana] == 0) return Message(playerid, COLOR_WHITE, "¡No tienes suficiente Marihuana!");

	            PlayerInfo[playerid][pEpilepsia] += 5;
	            PlayerInfo[playerid][pCancer] += 5;

	            new VIH = random(15);

				if(VIH == 8)			PlayerInfo[playerid][pSIDA] += 1;
				SetPlayerArmour(playerid, 100);
				SetHP(playerid, 200);
				format(string, sizeof(string), "* %s fuma marihuana.", PlayerName(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 2.5, 1, 0, 1, 0, 0);
				UsingMarihuana[playerid] = 120;
				MarihuanaEffect[playerid] = 1;
				MarihuanaBeat[playerid] = 1;
				UsingDrugs[playerid] = 1 ;
				Message(playerid, COLOR_WHITE, "Has fumado Marihuana, el efecto de la droga durará 2 minutos");
   				PlayerInfo[playerid][pMarihuana] -= 1;
			}
        }
        else Message(playerid, COLOR_GRAD2, "Utilize: /usardrogas <nombre> (speed, extasis, ritalin, heroina, marihuana)");
        return 1;
    }
   	zcmd(estadodeshb, playerid, params[])
	{
		if(PlayerInfo[playerid][pLevel] < 2) return Message(playerid, COLOR_GRAD2, "Debes ser mínimo nivel 2 para utilizar este comando.");
		DialogoEstado(playerid);
		return 1;
	}
	//=========estados======
	zcmd(miestado,playerid, params[])
	{
   		new estadoo[200],str[256],mensaje[256];
   		if(ConEstado[playerid] == true) return SendClientMessage(playerid,NEGATIVO,"Ya estas en un estado. Usa /sinestado");
   		if(sscanf(params, "s[128]", estadoo) )return SendClientMessage(playerid,COLOR_GRAD2,"Uso: /miestado [ESTADO] ");
    		format(str, sizeof(str), "Estado: {FFFFFF}%s",estadoo);
    		format(mensaje, sizeof(mensaje), "Te pusiste de estado: {FFFFFF}%s",estadoo);
    		estado[playerid] = Create3DTextLabel(str,COLOR_GRAD2,30.0,40.0,5.0,40.0,1);
    		Attach3DTextLabelToPlayer(estado[playerid], playerid, 0.0, 0.0, 0.40);
    			SendClientMessage(playerid, POSITIVO, mensaje);
    			SendClientMessage(playerid, COLOR_GRAD2, "Para borrar tu estado usa /sinestado");
    			ConEstado[playerid] = true;
		return 1;
	}
	zcmd(sinestado,playerid, params[])
	{
   if(ConEstado[playerid] == true){
   SendClientMessage(playerid,COLOR_GRAD2,"¡Has borrado tu estado actual!");
   Delete3DTextLabel(estado[playerid]);
   ConEstado[playerid] = false; return 1; }
   if(ConEstado[playerid] == false) return SendClientMessage(playerid,COLOR_GRAD2,"¡No tienes ningun estado!");
   return 1;
	}
	// zcmd:toys =======================================================================================================================
   	zcmd(ctoys,playerid, params[])
    {
        if(!IsAtClothShop(playerid)) return Message(playerid, COLOR_GRAD2, "¡No estás en una tienda de Ropa!");
	    {
		    ShowPlayerDialog(playerid, BUYTOYS, DIALOG_STYLE_MSGBOX, "Tienda de Accesorios", "Bienvenido a la tienda de accesorios! Aquí puedes comprar accesorios para ti.\nRecuerda que puedes usar 5 objetos a la vez.","Continuar", "Cancelar");
	    }
	    return 1;
    }
    zcmd(toyayuda,playerid, params[])
    {
		ClearChatbox(playerid, 10);
        Message(playerid, COLOR_GREEN,"Ayuda Accesorios");
        Message(playerid, COLOR_WHITE,"Para comprar un accesorio en la tienda usa: {00B39D}/ctoys");
        Message(playerid, COLOR_WHITE,"Para ponerte y editar un accesorio usa: {00B39D}/toys");
        Message(playerid, COLOR_WHITE,"Para ponerte todos tus accesorios usa: {00B39D}/ptoys");
        Message(playerid, COLOR_WHITE,"Para quitarte todos tus accesorios usa: {00B39D}/qtoys");
        return 1;
    }
    zcmd(toys,playerid, params[])
    {
	    ShowPlayerDialog( playerid, TOYS, DIALOG_STYLE_LIST, "Toy Menu", "Poner o Quitar\nEditar\nEliminar","Ok", "Cancelar" );
	    return 1;
    }
    zcmd(ptoys,playerid, params[])
    {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "* Te colocaste todos los toys de tu inventario.");
	    for(new x;x<MAX_PLAYERTOYS;x++)
	    {
		    if(PlayerToyInfo[playerid][x][ptModelID] != 0) SetPlayerAttachedObject(playerid, x, PlayerToyInfo[playerid][x][ptModelID], PlayerToyInfo[playerid][x][ptBone], PlayerToyInfo[playerid][x][ptPosX], PlayerToyInfo[playerid][x][ptPosY], PlayerToyInfo[playerid][x][ptPosZ], PlayerToyInfo[playerid][x][ptRotX], PlayerToyInfo[playerid][x][ptRotY], PlayerToyInfo[playerid][x][ptRotZ], 1, 1, 1);
	    }
	    return 1;
    }
    zcmd(qtoys,playerid, params[])
    {
	    SendClientMessage(playerid, COLOR_LIGHTRED, "* Te quitaste todos los toys de tu inventario.");
	    for(new x;x<MAX_PLAYERTOYS;x++)
	    {
		    RemovePlayerAttachedObject(playerid, x);
        }
        return 1;
    }
    // zcmd:paintball =========================================================================================================================
    zcmd(asdpaintballfasdf, playerid, params[])
    {
        new string[128];
        if(!PlayerToPoint(5.0,playerid,2781.0454,-1812.9775,11.8438)) return Message(playerid, COLOR_GRAD2, "No estás en el paintball.");
        if(CheckMoney(playerid, 1000))
		{
        	format(string, sizeof(string), "• DeathMatch (%d)\n• Team vs Team\n• Player vs Player (%d)", TotalDM, TotalPlayer);
        	ShowPlayerDialog(playerid, DIALOG_PAINTBALL, DIALOG_STYLE_LIST, "Bienvenido al Paintball", string, "Aceptar", "Cancelar");
        } return 1;
	}
	zcmd(salirpaintball, playerid, params[])
	{
        if(PaintballType[playerid] == 0) return Message(playerid, COLOR_GRAD2, "¡No estás jugando en el paintball!");
	    if(PlayerToPoint(3.0,playerid,-1464.7714,1555.9248,1052.5313))
	    {
	        SetPosEx(playerid, 2781.0454,-1812.9775,11.8438,0,0,0);
	        ResetPlayerWeapons(playerid);
	        PaintballType[playerid] = 0;
	        PaintballDMKills[playerid] = 0;
	        TotalDM -= 1;
     	}
		else if(PlayerToPoint(3.0,playerid,-977.8622,1053.0814,1344.9912) || PlayerToPoint(3.0,playerid,-1128.6946,1066.2456,1345.7439))
		{
	        if(PaintballType[playerid] == 2) { TTeamNaranja -= 1; PaintballType[playerid] = 0; }
	        if(PaintballType[playerid] == 3) { TTeamVerde -= 1; PaintballType[playerid] = 0; }
	        SetPosEx(playerid, 2781.0454,-1812.9775,11.8438,0,0,0);
	        ResetPlayerWeapons(playerid);
			SetPlayerColor(playerid,COLOR_GRAD2);
		}
		else if(PlayerToPoint(3.0,playerid,1947.2084,1653.8584,-4.6563))
		{
		    SetPosEx(playerid, 2781.0454,-1812.9775,11.8438,0,0,0);
	        ResetPlayerWeapons(playerid);
	        PaintballType[playerid] = 0;
			PaintPvPKills[playerid] = 0;
			TotalPlayer -= 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No estás en el lugar correcto!");
		return 1;
	}
	// zcmd:afk ==================================================================================================================
	zcmd(afk, playerid, params[])
    {
		if(PlayerInfo[playerid][pJailTime] > 0) return Message(playerid, COLOR_GRAD2, "¡No puedes usar esto en la cárcel!");
        switch(AFK[playerid])
        {
            case 0:
			{
				new randomize;
				GetPlayerPos(playerid, AFKLoc[playerid][0],AFKLoc[playerid][1],AFKLoc[playerid][2]);
				randomize = random(sizeof(AFKZone));
				SetPlayerPos(playerid, AFKZone[randomize][0], AFKZone[randomize][1], AFKZone[randomize][2]);
				TogglePlayerControllable(playerid, 0);
				Message(playerid, COLOR_RED2, "Te encuentras en estado AFK, utiliza /afk para volver a rolear.");
                AFKTime[playerid] = gettime() + 600;
				AFK[playerid] = 3;
				return 1;
			}
			case 1:
			{
				SetPlayerPos(playerid, AFKLoc[playerid][0],AFKLoc[playerid][1],AFKLoc[playerid][2]);
			 	TogglePlayerControllable(playerid, 1);
				Message(playerid, COLOR_RED2, "¡Has salido del estado AFK!");
				AFKTime[playerid] = 0;
				AFK[playerid] = 0;
				return 1;
			}
			default:
			{
			    new string[64];
			    format(string, sizeof(string),"Tienes que esperar %d minutos para salir de tu estado AFK.",AFK[playerid]-1);
				Message(playerid, COLOR_GRAD2, string);
				return 1;
			}
		}
		return 1;
    }
    zcmd(divorciar, playerid, params[])
    {
        if(!sscanf(params,"u",params[0]))
        {
        	if(PlayerToPoint(5.0,playerid,1486.2524,853.9845,-68.7967))
			{
				if(PlayerInfo[playerid][pMarried] == 1)
				{
					if(strcmp(PlayerInfo[params[0]][pMarriedTo], PlayerName(playerid), true) == 0)
  					{
  					    if(ProxDetectorS(5.0,playerid,params[0]))
  					    {
							Divorciar[playerid] = params[0];
							Divorciar[params[0]] = playerid;
                        	ShowPlayerDialog(playerid, DIVORCIO_DIALOG, DIALOG_STYLE_MSGBOX, "{018CFE}Iglesia", "{FFFFFF}¿Estas seguro que deseas divorciarte?", "Aceptar", "Cancelar");
      					} else Message(playerid, COLOR_GRAD2, "Esa persona no esta cerca de tí.");
    				} else Message(playerid, COLOR_GRAD2, "¡Esa persona no consta como tu esposo(a)!");
       			} else Message(playerid, COLOR_GRAD2, "¡No estás casado!");
       		} else Message(playerid, COLOR_GRAD2, "¡No estás en el lugar adecuado!");
       	} else Message(playerid, COLOR_GRAD2, "Utilize: /divorciar <PlayerID>");
       	return 1;
    }
    zcmd(liberar, playerid, params[]){
        if(PlayerInfo[playerid][pAdminCP] < 2012) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
        if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        if(!sscanf(params,"u",params[0])){
            if(IsPlayerConnected(params[0])){
                PlayerInfo[params[0]][pMarried] = 0;
                strmid(PlayerInfo[params[0]][pMarriedTo], "Nadie", 0, strlen("Nadie"), 64);
				Message(playerid, COLOR_GRAD4, "¡El jugador ha sido liberado del matrimonio!");
				UpdatePlayerStat(params[0]);
			} else Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /liberar <PlayerID>");
		return 1;
    }
    zcmd(carsno, playerid, params[]){
        new string[128];
		if(PlayerInfo[playerid][pAdminCP] < 5) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
		if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        for(new h = VV; h < sizeof(CarInfo); h++)
		{
            if(CarInfo[h][cOwned] == 0 && CarInfo[h][cValue] != 999999999)
			{
  				format(string, sizeof(string), "{FFFFFF}Modelo: %s	- CarID: %d\n", GetVehicleFriendlyName(h), h);
				Message(playerid, 0xC0C0C0FF, string);
			}
		}
		return 1;
    }
    zcmd(dobleexp, playerid, params[]){
		new string[128];
	    if(PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(DobleOn != 1){
			format(string, sizeof(string), "{FFFFFF}%s ha {CDE878}activado {FFFFFF}la doble experiencia.", PlayerName(playerid));
            GlobalMsg(-1, string);
            DobleOn = 1;
         }else{
            DobleOn = 0;
            format(string, sizeof(string), "{FFFFFF}%s ha {F80F60}desactivado {FFFFFF}la doble experiencia.", PlayerName(playerid));
            GlobalMsg(-1, string);
	    }
	    return 1;
	}
 	zcmd(tripleexp, playerid, params[]){
		new string[128];
	    if(PlayerInfo[playerid][pAdminCP] < 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(TripleOn != 1){
			format(string, sizeof(string), "{FFFFFF}%s ha {CDE878}activado {FFFFFF}la TRIPLE experiencia.", PlayerName(playerid));
            GlobalMsg(-1, string);
            TripleOn = 1;
         }else{
            TripleOn = 0;
            format(string, sizeof(string), "{FFFFFF}%s ha {F80F60}desactivado {FFFFFF}la TRIPLE experiencia.", PlayerName(playerid));
            GlobalMsg(-1, string);
	    }
	    return 1;
	}
	zcmd(misfichas, playerid, params[]){
	    new string[128];
		format(string, sizeof(string), "Casino LS - Fichas Disponibles: %d", PlayerInfo[playerid][pFichas]);
		Message(playerid, COLOR_WHITE, string);
	    return 1;
	}
	zcmd(apostar, playerid, params[]){
	    new string[128], numero, apuesta;
	    if(PlayerInfo[playerid][pFichas] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes suficientes fichas para jugar!");
	    if(YaAposto[playerid] == 1) return Message(playerid, COLOR_GRAD2, "¡Debes esperar 10 segundos para volver a apostar!");
        if(PlayerToPoint(2.0,playerid,2241.7998,1673.5498,6.9162) || PlayerToPoint(2.0,playerid,2239.3767,1673.2435,6.9162)){
			if(!sscanf(params,"d",apuesta)){
			    if(apuesta > PlayerInfo[playerid][pFichas]) return Message(playerid, COLOR_GRAD2, "¡No tienes suficientes fichas para cubrir la apuesta!");
  				if(apuesta < 1 || apuesta > 5000) return Message(playerid, COLOR_GRAD2, "Apuesta Común: Min 1$ | Máx 5000$");
     			new rand = random(2);
       			switch(rand)
         		{
      				case 0:	{
  		    			YaAposto[playerid] = 1;
   	    				PlayerInfo[playerid][pFichas] -= apuesta;
       					format(string, sizeof(string), "* %s realiza una apuesta de %d$ y pierde.", PlayerName(playerid), apuesta);
        				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        				Message(playerid, COLOR_WHITE, "¡Lo siento! Has perdido, suerte para la próxima.");
        				SetTimerEx("VolverApostar", 10000, false, "i", playerid);
					}
					case 1:	{
	    				YaAposto[playerid] = 1;
						PlayerInfo[playerid][pFichas] += apuesta;
						format(string, sizeof(string), "* %s realiza una apuesta de %d$ y gana.", PlayerName(playerid), apuesta);
 						ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
 						Message(playerid, COLOR_WHITE, "¡Felicidaddes! Has ganado.");
 						SetTimerEx("VolverApostar", 10000, false, "i", playerid);
     				}
				}
			} else Message(playerid, COLOR_GRAD2, "Utilize: /apostar <Apuesta 1-5000>");
		}
		else if(PlayerToPoint(2.0,playerid,2239.2478,1678.3411,6.9099) || PlayerToPoint(2.0,playerid,2241.8176,1679.1023,6.9099)){
  			if(!sscanf(params,"dd",numero,apuesta)){
  			    if(apuesta > PlayerInfo[playerid][pFichas]) return Message(playerid, COLOR_GRAD2, "¡No tienes suficientes fichas para cubrir la apuesta!");
     			if(numero < 1 || numero > 5) return Message(playerid, COLOR_GRAD2, "¡Numero entre 1 y 5!");
        		if(apuesta < 1 || apuesta > 8000) return Message(playerid, COLOR_GRAD2, "Apuesta Dificil: Min 1$ | Máx 8000$");
          		new rand = random(6);
				if(rand == numero)
				{
					YaAposto[playerid] = 1;
					PlayerInfo[playerid][pFichas] += apuesta*5;
					format(string, sizeof(string), "* %s realiza una apuesta de %d$ y gana %d$", PlayerName(playerid), apuesta, apuesta*5);
					ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					Message(playerid, COLOR_WHITE, "¡Felicidaddes! Has ganado.");
					SetTimerEx("VolverApostar", 10000, false, "i", playerid);
  				}
   				else {
    				YaAposto[playerid] = 1;
	    			PlayerInfo[playerid][pFichas] -= apuesta;
    				format(string, sizeof(string), "* %s realiza una apuesta de %d$ y pierde.", PlayerName(playerid), apuesta);
    				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    				Message(playerid, COLOR_WHITE, "¡Lo siento! Has perdido, suerte para la próxima.");
    				SetTimerEx("VolverApostar", 10000, false, "i", playerid);
				}
			} else Message(playerid, COLOR_GRAD2, "Utilize: /apostar <Numero 1-5> <Apuesta 1-8000>");
		} else Message(playerid, COLOR_GRAD2, "¡No estás en un lugar para apostar!");
		return 1;
	}
	zcmd(ruleta, playerid, params[]){
	    new string[128], numero, apuesta;
	    if(PlayerToPoint(2.0,playerid,2254.6746,1680.4365,6.9099) || PlayerToPoint(2.0,playerid,2260.2432,1680.5635,6.9099)){
	        if(PlayerInfo[playerid][pFichas] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes suficientes fichas para jugar!");
	        if(YaAposto[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Debes esperar 10 segundos para volver a apostar!");
			if(!sscanf(params,"dd",numero,apuesta)){
			    if(apuesta > PlayerInfo[playerid][pFichas]) return Message(playerid, COLOR_GRAD2, "¡No tienes suficientes fichas para cubrir la apuesta!");
			    if(numero < 1 || numero > 5) return Message(playerid, COLOR_GRAD2, "¡Número entre 1 y 5!");
			    if(apuesta < 1 || apuesta > 1500) return Message(playerid, COLOR_GRAD2, "Ruleta Rusa: Min 1$ - Máx 1500$");
			    new ruleta = random(6);
				if(ruleta == numero)
   				{
   				    YaAposto[playerid] = 1;
					PlayerInfo[playerid][pFichas] += apuesta;
   			    	format(string, sizeof(string), "* %s juega a la ruleta rusa y gana.", PlayerName(playerid), apuesta);
        			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        			Message(playerid, COLOR_WHITE, "¡Felicidaddes! Has ganado.");
        			SetTimerEx("VolverApostar", 10000, false, "i", playerid);
   				}
            	else
   				{
   				    YaAposto[playerid] = 1;
   			    	PlayerInfo[playerid][pFichas] -= apuesta;
   			    	format(string, sizeof(string), "* %s juega a la ruleta rusa y pierde.", PlayerName(playerid));
        			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        			Message(playerid, COLOR_WHITE, "¡Lo siento! Has perdido, suerte para la próxima.");
        			SetTimerEx("VolverApostar", 10000, false, "i", playerid);
   				}
			} else Message(playerid, COLOR_GRAD2, "Utilize: /ruleta <Numero 1-5> <Apuesta 1-1500>");
		} else Message(playerid, COLOR_GRAD2, "¡No estás en un lugar para jugar a la ruleta rusa!");
		return 1;
	}
	zcmd(tragamonedas, playerid, params[]){
	    new string[128];
	    if(PlayerToPoint(10.0,playerid,2257.0374,1669.9581,6.9099)){
        	if(PlayerInfo[playerid][pFichas] < 100) return Message(playerid, COLOR_GRAD2, "¡No tienes suficientes fichas para jugar!");
       		if(YaAposto[playerid] > 0) return Message(playerid, COLOR_GRAD2, "¡Debes esperar 10 segundos para volver a apostar!");
       		new suerte = random(5);
			switch(suerte)
			{
			    case 2:{
				    YaAposto[playerid] = 1;
				    PlayerInfo[playerid][pFichas] += 1000;
					format(string, sizeof(string), "* %s mete unas fichas a la maquina, juega y gana.", PlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					Message(playerid, COLOR_WHITE, "¡Felicidaddes! Has ganado 1000$.");
					SetTimerEx("VolverApostar", 10000, false, "i", playerid);
				}
				default:{
				    YaAposto[playerid] = 1;
				    PlayerInfo[playerid][pFichas] -= 100;
				    format(string, sizeof(string), "* %s mete unas fichas a la maquina, juega y pierde.", PlayerName(playerid));
					ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					Message(playerid, COLOR_WHITE, "¡Lo siento! Has perdido 100$, suerte para la próxima.");
					SetTimerEx("VolverApostar", 10000, false, "i", playerid);
				}
			}
	    } else Message(playerid, COLOR_GRAD2, "¡No estás cerca de una maquina tragamonedas!");
	    return 1;
	}
	zcmd(miraestozion, playerid, params[]){
	    if(PlayerInfo[playerid][pAdminCP] != 2014) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(!sscanf(params,"s[32]",params[0])){
	        if(strfind(params[0], "_" , true) != -1){
	            new PlayerFile[64], string[164];
				format(PlayerFile, sizeof(PlayerFile), "users/%s.ini", params[0]);
				if(INI_Exist(PlayerFile)){
				    INI_ParseFile(PlayerFile, "GetPlayerDates", false, true, playerid, true, false );
				    format(string, sizeof(string),"| PlayerStats : %s |", params[0]);
				    Message(playerid, 0x009BE6FF, string);
				    format(string, sizeof(string), "Contraseña: %s  Nivel: %d  Dinero: %d  Banco: %d  Admin: %d", StatString[playerid][0], StatInt[playerid][0], StatInt[playerid][1], StatInt[playerid][2], StatInt[playerid][7]);
				    Message(playerid, COLOR_GRAD3, string);
				    format(string, sizeof(string), "MSN: %s  Casado: %d  Esposo/a: %s  Baneado: %d  Job: %d", StatString[playerid][1], StatInt[playerid][6], StatString[playerid][2], StatInt[playerid][3], StatInt[playerid][4]);
				    Message(playerid, COLOR_GRAD3, string);
				    format(string, sizeof(string), "Casa: %d  Carro1: %d  Carro2: %d  Negocio: %d Premium: %d", StatInt[playerid][8], StatInt[playerid][9], StatInt[playerid][10], StatInt[playerid][11], StatInt[playerid][5]);
				    Message(playerid, COLOR_GRAD3, string);
    			} else Message(playerid, COLOR_GRAD2, "¡La cuenta que has señalado no existe!");
 			} else Message(playerid, COLOR_GRAD2, "Ejemplo de Uso: /cuentaoof Juan_David");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /cuentaoof <Nombre_Jugador>");
		return 1;
	}
	zcmd(richs, playerid, params[]){
	    if(PlayerInfo[playerid][pAdminCP] < 6) return Message(playerid, COLOR_GRAD2, "¡No autorizado!");
	    if(AntiAbusos[playerid] == 0){
        SendClientMessage(playerid, COLOR_GRAD2, "{FF2E3F}[Sistema Anti Abuso]{FFFFFF} {E5E5C5}No puedes usar este comando sin estar en /adminduty {E5BEC5}"); return 1;}
        Message(playerid, COLOR_GREEN, "| Usuarios Ricos |");
		for(new i=0; i < MAX_PLAYERS; i++){
			if(IsPlayerConnected(i)){
                new string[128], cash = GetPlayerMoney(i)+PlayerInfo[i][pAccount];
                if(cash > 10000000){
				    format(string, sizeof(string),"  %s - %d", PlayerName(i), cash);
					Message(playerid, 0xC0C0C0FF, string);
				}
		    }
		}
	    return 1;
  	}
	zcmd(fondos, playerid, params[])
	{
	    new string[128], funds;
	    if(PlayerInfo[playerid][pLeader] < 1) return Message(playerid, COLOR_GRAD2, "¡No eres lider de una faccion!");
	    switch(PlayerInfo[playerid][pLeader])
        {
            case 1:     funds = Fondos[LSPD];
            case 2:     funds = Fondos[PIR];
            case 3:     funds = Fondos[SAEM];
            case 4:		funds = Fondos[SAMUR];
            case 12:    funds = Fondos[LCN];
            case 13:    funds = Fondos[YAK];
            case 14:    funds = Fondos[RUS];
            case 17:    funds = Fondos[CNN];
            case 24:    funds = Fondos[FBI];
            default:    funds = 9999;
       	}
       	if(funds == 9999) return Message(playerid, COLOR_GRAD2, "¡Tu faccion no cuenta con fondos!");
       	format(string, sizeof(string), "* Los fondos de tu faccion son de %d", funds);
		Message(playerid, COLOR_GRAD4, string);
		return 1;
	}
	zcmd(retirarfondos, playerid, params[]){
	    new string[128];
	    if(PlayerInfo[playerid][pLeader] < 1) return Message(playerid, COLOR_GRAD2, "¡No eres lider de una faccion!");
	    if(!sscanf(params,"i",params[0])){
	        switch(PlayerInfo[playerid][pLeader]){
	            case 1:{
			        if(params[0] > Fondos[LSPD]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
			        Fondos[LSPD] -= params[0];
				}
				case 2:{
		            if(params[0] > Fondos[PIR]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
			        Fondos[PIR] -= params[0];
	    	    }
	    	    case 3:{
                    if(params[0] > Fondos[SAEM]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
			        Fondos[SAEM] -= params[0];
		        }
				case 4:{
				    if(params[0] > Fondos[SAMUR]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
			        Fondos[SAMUR] -= params[0];
        		}
        		case 12:{
        		    if(params[0] > Fondos[LCN]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
			        Fondos[LCN] -= params[0];
		        }
		        case 13:{
		            if(params[0] > Fondos[YAK]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
			        Fondos[YAK] -= params[0];
		        }
		        case 14:{
		            if(params[0] > Fondos[RUS]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
			        Fondos[RUS] -= params[0];
		        }
		        case 17:{
		            if(params[0] > Fondos[CNN]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
			        Fondos[CNN] -= params[0];
		        }
		        case 24:{
		            if(params[0] > Fondos[FBI]) return Message(playerid, COLOR_GRAD2, "Cantidad incorrecta.");
			        Fondos[FBI] -= params[0];
		        }
				default: return Message(playerid, COLOR_GRAD2, "Tu faccion no cuenta con fondos.");
			}
			PlayerInfo[playerid][pAccount] += params[0];
   			format(string, sizeof(string), "* Extraiste %d$ de los fondos de tu faccion y fueron añadidos a tu cuenta bancaria.", params[0]);
			Message(playerid, COLOR_GRAD4, string);
			format(string, sizeof(string), "* %s ha retirado %d de los fondos de la faccion.", PlayerName(playerid), params[0]);
			SendFamilyMessage(PlayerInfo[playerid][pLeader], COLOR_YELLOW, string);
		} else Message(playerid, COLOR_GRAD2, "Utilize: /retirarfondos <Cantidad>");
		return 1;
	}
	zcmd(condon, playerid, params[])
	{
	    if(PlayerInfo[playerid][pSex] == 2) return Message(playerid, COLOR_GRAD2, "Solo los hombres pueden usar este comando.");
	    if(Condom[playerid] != 0)
		{
			new string[128];
			format(string, sizeof(string), "* %s toma un condon y se lo coloca en el pene.", PlayerName(playerid));
        	ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    	    Message(playerid, COLOR_GRAD2, "Ahora ya estas protegido para tener relaciones sexuales con seguridad.");
        	Condom[playerid] --;
        	PlayerInfo[playerid][pSuciedad] += 5;
        	return 1;
		} else return Message(playerid, COLOR_GRAD2, "No tienes un condon.");
  	}
  	zcmd(lavarropa, playerid, params[])
  	{
  	    new string[128];
  	    if(PlayerToPoint(10.0,playerid,3937.3613,-820.6308,1874.0156) || PlayerToPoint(10.0,playerid,3937.7209,-834.2257,1874.0156))
  	    {
			if(CheckMoney(playerid, 150))
			{
			    if(PlayerInfo[playerid][pSuciedad] < 50) return Message(playerid, COLOR_GRAD2, "* No tienes la ropa sucia, lavala luego.");
				format(string, sizeof(string), "* %s se saca su ropa y la mete a la lavadora.", PlayerName(playerid));
                ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    Message(playerid, COLOR_WHITE, "{DC092F}Lavanderia: {FFFFFF}Su ropa ha empezado a lavarse, espere un poco...");
			    SetTimerEx("Lavadora", 60000, false, "i", playerid);
			    if(PlayerInfo[playerid][pSex] == 1) Skin(playerid, 252);
				if(PlayerInfo[playerid][pSex] == 2) Skin(playerid, 138);
			}
  	    } else Message(playerid, COLOR_GRAD2, "No estas en la lavanderia.");
  	    return 1;
  	}
  	  	/*zcmd(pesas, playerid, params[])
  	{
  	     new string[128];
  	    if(PlayerToPoint(10.0,playerid,772.7422,5.2661,1000.7802))
  	    if(PlayerInfo[playerid][pMusculoso] > 0) return Message(playerid, COLOR_GRAD2, "¡Ya has venido, espera al próximo PayDay!");
		  {
			if(CheckMoney(playerid, 100))
			{
				format(string, sizeof(string), "* %s Agarra las pesas y las levanta.", PlayerName(playerid));
                ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    Message(playerid, COLOR_WHITE, "{DC092F}Profesor de Gimnasio: {FFFFFF}Recuerde que solo puede venir una vez por dia señor...");
			    SetTimerEx("Musculos", 60000, false, "i", playerid);
			    PlayerInfo[playerid][pMusculoso] += 1; 
			    PlayerInfo[playerid][pMusculos] += 1;
			}
 	    } //else Message(playerid, COLOR_GRAD2, "No estas en el gimnasio.");
  	    return 1;
  	}*/
  	zcmd(regalar, playerid, params[])
  	{
  	    new item[16], string[80];
  	    if(!sscanf(params,"s[16]u", item, params[1]))
  	    {
            if(!IsPlayerConnected(params[1]))            return Message(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
            if(!ProxDetectorS(5.0, playerid, params[1])) return Message(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(Regalo_Offer[playerid] == 1)              return Message(playerid, COLOR_GRAD2, "¡Ya ofreciste un regalo, debes esperar la respuesta de esa persona!");

			if(strcmp(item,"anillocompromiso",true) == 0)
			{
			    if(PlayerInfo[playerid][pAnilloCom] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun anillo para regalar.");
				Regalo_ITEM[params[1]] = 1;     Regalo_ID[params[1]] = playerid;    Regalo_Offer[playerid] = 1;
				format(string, sizeof(string), "* %s ofrece regalarte un anillo de compromiso, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
				Message(params[1], COLOR_WHITE, string);
			}
  	        else if(strcmp(item,"anillooro",true) == 0)
  	        {
  	            if(PlayerInfo[playerid][pAnilloOro] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun anillo para regalar.");
				Regalo_ITEM[params[1]] = 2;     Regalo_ID[params[1]] = playerid;    Regalo_Offer[playerid] = 1;
				format(string, sizeof(string), "* %s ofrece regalarte un anillo de oro, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
				Message(params[1], COLOR_WHITE, string);
  	        }
  	        else if(strcmp(item,"collar",true) == 0)
  	        {
  	            if(PlayerInfo[playerid][pCollar] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun collar para regalar.");
				Regalo_ITEM[params[1]] = 3;     Regalo_ID[params[1]] = playerid;    Regalo_Offer[playerid] = 1;
				format(string, sizeof(string), "* %s ofrece regalarte un collar de perlas, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
				Message(params[1], COLOR_WHITE, string);
  	        }
  	        else if(strcmp(item,"anillodiamante",true) == 0)
  	        {
  	            if(PlayerInfo[playerid][pAnilloDia] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun anillo para regalar.");
				Regalo_ITEM[params[1]] = 4;     Regalo_ID[params[1]] = playerid;    Regalo_Offer[playerid] = 1;
				format(string, sizeof(string), "* %s ofrece regalarte un anillo de diamantes, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
				Message(params[1], COLOR_WHITE, string);
  	        }
  	        else if(strcmp(item,"pulsera",true) == 0)
  	        {
  	            if(PlayerInfo[playerid][pPulsera] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ninguna pulsera para regalar.");
				Regalo_ITEM[params[1]] = 5;     Regalo_ID[params[1]] = playerid;    Regalo_Offer[playerid] = 1;
				format(string, sizeof(string), "* %s ofrece regalarte una pulsera de oro, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
				Message(params[1], COLOR_WHITE, string);
  	        }
  	        else if(strcmp(item,"aretes",true) == 0)
  	        {
  	            if(PlayerInfo[playerid][pAretes] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun conjunto de aretes para regalar.");
				Regalo_ITEM[params[1]] = 6;     Regalo_ID[params[1]] = playerid;    Regalo_Offer[playerid] = 1;
				format(string, sizeof(string), "* %s ofrece regalarte un conjunto de aretes, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
				Message(params[1], COLOR_WHITE, string);
  	        }
  	        else if(strcmp(item,"reloj",true) == 0)
  	        {
  	            if(PlayerInfo[playerid][pReloj] == 0) return Message(playerid, COLOR_GRAD2, "No tienes ningun anillo para regalar.");
				Regalo_ITEM[params[1]] = 7;     Regalo_ID[params[1]] = playerid;    Regalo_Offer[playerid] = 1;
				format(string, sizeof(string), "* %s ofrece regalarte un reloj de oro, usa /aceptar regalo o /cancelar.", PlayerName(playerid));
				Message(params[1], COLOR_WHITE, string);
  	        }
    	}
		else
		{
			Message(playerid, COLOR_GRAD2, "Utiliza: /regalar <Item> <PlayerID>");
			Message(playerid, COLOR_GRAD2, "Items: anillocompromiso, anillooro, collar, anillodiamante, pulsera, aretes, reloj.");
		}
		return 1;
  	}
  	zcmd(joyas, playerid, params[])
	{
	    new string[128];
	    Message(playerid, COLOR_GREEN, "Inventario - Joyas:");
	    format(string, sizeof(string), "Anillos de Compromiso: %d | Anillos de Oro: %d | Collar de Perla: %d | Anillo de Diamantes: %d", PlayerInfo[playerid][pAnilloCom], PlayerInfo[playerid][pAnilloOro], PlayerInfo[playerid][pCollar], PlayerInfo[playerid][pAnilloDia]);
	    Message(playerid, COLOR_WHITE, string);
	    format(string, sizeof(string), "Pulsera de Oro: %d | Aretes de Oro: %d | Reloj de Oro: %d", PlayerInfo[playerid][pPulsera], PlayerInfo[playerid][pAretes], PlayerInfo[playerid][pReloj]);
	    Message(playerid, COLOR_WHITE, string);
	    return 1;
	}
  	/*zcmd(orinar, playerid, params[])
  	{
  	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
        if(GanasDeMear[playerid] < 5)
	    {
	        SendClientMessage(playerid, COLOR_RED, "No tienes ganas de orinar");
		}
		else
		{
		GanasDeMear[playerid] = 0;
		SetProgressBarValue(MearBarra, 0);
		TiempoMeando[playerid] = SetTimer("DespuesDeMear",3000,false);
        SetPlayerSpecialAction(playerid, 68);
        SendClientMessage(playerid, COLOR_RED, "¡Que bien sienta mear!");
		} return 1;
  	}*/
 	zcmd(saludar, playerid, params[])
  	{
  	    if(!sscanf(params, "u", params[0]))
  	    {
			if(IsPlayerConnected(params[0]))
			{
			    if(playerid != params[0])
			    {
				    if(ProxDetectorS(2.0, playerid, params[0]))
				    {
				        new string[80];
						Saludo_ID[params[0]] = playerid;
						format(string, sizeof string, "* %s ha enviado una peticion de saludo, usa /aceptar saludo.", PlayerName(playerid));
						Message(params[0], COLOR_WHITE, string);
					} else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
				} else Message(playerid, COLOR_GRAD2, "No puedes saludarte a ti mismo.");
			} else Message(playerid, COLOR_GRAD2, "Jugador no conectado.");
		} else Message(playerid, COLOR_GRAD2, "Utilize: /saludar <PlayerID>");
		return 1;
  	}
  	zcmd(emisora, playerid, params[])
  	{
            if(!IsPlayerInAnyVehicle(playerid) && PlayerInfo[playerid][pDonateT] != 1) return Message(playerid, YELLOW, "No estás en un vehiculo!");
   			if(IsPlayerConnected(playerid))
      {
   	ShowPlayerDialog(playerid, Radios, DIALOG_STYLE_LIST,
				"Selecciona Tu Emisora","{ADFF2F}Drumm Bass\n{7B68EE}LaMEGARADIO\nRMassiveDubstep\n{912CEE}ReservaRap\n{CAE1FF}Los40\nReggae\n{FF8000}House",
				"Sintonizar", "Cancelar");

     	}
   			return 1;
		}
	zcmd(pararemisora, playerid, params[])
 	{
   	    StopAudioStreamForPlayer(playerid); // Parar las retransmisiones
   	    SendClientMessage(playerid, YELLOW, "Has apagado tu emisora");
   	    return 1;
   	    }
   	    
	/*zcmd(cuerpo, playerid, params[])
		   {
	    if(IsPlayerConnected(playerid))
	    {
		new string[220];
		new ver[250] = "{2E2EFE}Cuerpo:\n\n\t{FFFFFF}- Tu suciedad es del %d porciento.\n\t- Tu Musculatura es del %d porciento.\n\t- Tu Hambre es del %d porciento.\n\t- Tu Peso es de %d Kilos.\n\n";
		format(string, sizeof(string),ver, PlayerInfo[playerid][pSuciedad], PlayerInfo[playerid][pMusculos], PlayerInfo[playerid][pHambre], PlayerInfo[playerid][pPeso]);
        return ShowPlayerDialog(playerid,821,DIALOG_STYLE_MSGBOX, "{2E2EFE}Cuerpo", string, "Aceptar", "");
        } else Message(playerid, COLOR_GRAD2, "¡!");
        return 1;
	} */
	zcmd(parqueadero, playerid, params[0])
	{
        if(CheckMoney(playerid,500)){
		    if(PlayerToPoint(5.0, playerid, 1761.8041,-1700.4933,13.4270))
			{
			    Bought(playerid, 500);
			    Till(25, 500);
			    Message(playerid, COLOR_WHITE, "Has cancelado un valor de {FFFF00}500$ {FFFFFF}para abrir la puerta del estacionamiento.");
	    		MoveDynamicObject(estac, 1761.53, -1696.37, 12.60, 2.5, -1000.0, -1000.0, -1000.0);
	    		SetTimer("CloseEstac", 7000, 0);
	    		return 1;
 			}
			else if(PlayerToPoint(5.0, playerid, 1803.5647,-1721.0872,13.5345))
			{
			    Bought(playerid, 500);
			    Till(25, 500);
			    Message(playerid, COLOR_WHITE, "Has cancelado un valor de {FFFF00}500$ {FFFFFF}para abrir la puerta del estacionamiento.");
	    		MoveDynamicObject(estac2, 1805.53, -1722.11, 10.66, 2.5, -1000.0, -1000.0, -1000.0);
	    		SetTimer("CloseEstac2", 7000, 0);
	    		return 1;
			} else Message(playerid, COLOR_GRAD2, "* No estas cerca de la puerta del estacionamiento.");
		}
		return 1;
	}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
	if(gPlayerLogged[playerid] != 1) { Message(playerid, COLOR_YELLOW2, "¡Primero debes loguearte en el servidor para usar un comando!"); return 0; }
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
    {
        new string[99];
       	format(string, sizeof string, "¡Error! {40E0D0}El comando que ha escrito no existe.");
  		Message(playerid, -1, string);
	}
	return 1;
}

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}
	return 1;
}

public Autocruise(playerid, in)
{
	new Float:vehx, Float:vehy, Float:vehz;
 	GetVehiclePos(GetPlayerVehicleID(playerid), vehx, vehy, vehz);
 	if(in == 1)
 	{
		if(-1777 < vehy)
		{
		    for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
				{
    				SetPlayerCameraPos(i,1910.4637,-1771.8,15);
					SetPlayerCameraLookAt(i,1911.2863,-1775.1614,13.3828);
				}
			}
	     	SetVehicleZAngle(GetPlayerVehicleID(playerid), 0);
	     	TogglePlayerControllable(playerid, 0);
		    MoveObject(entrancegate, 1911.21130371, -1780.68151855, 14.15972233, 1);
			SetTimerEx("Water",4000,0,"ii",playerid, 1);
		}
		else
		{
	     	if(vehx != 1911.1886)
	     	{
				SetVehiclePos(GetPlayerVehicleID(playerid), 1911.1886, vehy, vehz);
				SetVehicleZAngle(GetPlayerVehicleID(playerid), 0);
			}
			TogglePlayerControllable(playerid, 1);
		    SetVehicleVelocity(GetPlayerVehicleID(playerid), 0, 0.1, 0);
		    SetTimerEx("Autocruise",100,0,"ii",playerid, 1);
		}
	}
	else
	{
		if(-1768 < vehy)
		{
		    SetVehicleZAngle(GetPlayerVehicleID(playerid), 0);
		    TogglePlayerControllable(playerid, 0);
		    MoveObject(exitgate, 1911.21130371,-1771.97814941,14.15972233, 1);
		    SetTimerEx("EndWash",1000,0,"i",playerid);
		}
		else
		{
			if(vehx != 1911.1886)
	     	{
				SetVehiclePos(GetPlayerVehicleID(playerid), 1911.1886, vehy, vehz);
				SetVehicleZAngle(GetPlayerVehicleID(playerid), 0);
			}
			TogglePlayerControllable(playerid, 1);
		    SetVehicleVelocity(GetPlayerVehicleID(playerid), 0, 0.1, 0);
		    SetTimerEx("Autocruise",100,0,"ii",playerid, 0);
		}
	}
	return 1;
}

public Water(playerid, on)
{
	if(on == 0)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
			{
				DestroyPlayerObject(i, water1);
				DestroyPlayerObject(i, water2);
				DestroyPlayerObject(i, water3);
				DestroyPlayerObject(i, water4);
				DestroyPlayerObject(i, water5);
				DestroyPlayerObject(i, water6);
				DestroyPlayerObject(i, water7);
				SetTimerEx("OpenExit",500,0,"i",playerid);
			}
		}
	}
	else
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
			{
				water1 = CreatePlayerObject(i, 18747, 1911, -1776, 10, 0, 0, 90);
				water2 = CreatePlayerObject(i, 18747, 1914, -1776, 10, 0, 0, 90);
				water3 = CreatePlayerObject(i, 18739, 1910.1821, -1777.8997, 25, 0, 180, 0);
				water4 = CreatePlayerObject(i, 18739, 1910.1821, -1774.8132, 25, 0, 180, 0);
				water5 = CreatePlayerObject(i, 18739, 1912.1490, -1774.8132, 25, 0, 180, 0);
				water6 = CreatePlayerObject(i, 18739, 1912.1490, -1777.8997, 25, 0, 180, 0);
				water7 = CreatePlayerObject(i, 18739, 1911.2194, -1776.5117, 25, 0, 180, 0);
				SetTimerEx("Water",15000,0,"ii",playerid, 0);
			}
		}
	}
	return 1;
}

public OpenExit(playerid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
		{
			SetPlayerCameraPos(i,1909.0697,-1760.7429,15);
			SetPlayerCameraLookAt(i,1911.2600,-1771.5955,13.3828);
		}
	}
    MoveObject(exitgate, 1911.21130371, -1771.97814941, 10.50000000, 1);
    SetTimerEx("Autocruise",3500,0,"ii",playerid, 0);
	return 1;
}


public EndWash(playerid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
		{
 			TogglePlayerControllable(i, 1);
			SetCameraBehindPlayer(i);
		}
	}
    usingcarwash = -1;
    Update3DTextLabelText(entrancetext, 0x008B00FF, "Nadie está lavando su auto, puedes lavar el tuyo.\nPor: $5 (/lavar)");
	return 1;
}

public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

function PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:tempposx, Float:tempposy, Float:tempposz;
		tempposx = (curx -x);
		tempposy = (cury -y);
		tempposz = (curz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}

function NameTimer()
{
	for(new i = 0;i < MAX_PLAYERS;i++)
 	{
	 	if(IsPlayerConnected(i))
 		{
 			for(new q = 0;q < MAX_PLAYERS;q++)
 			{
				if(IsPlayerConnected(q))
				{
 					new Float:p1x;
					new Float:p1y;
					new Float:p1z;
					new Float:p2x;
					new Float:p2y;
					new Float:p2z;
					if(IsPlayerConnected(i) && IsPlayerConnected(q))
					{
						GetPlayerPos(i,p1x,p1y,p1z);
    					GetPlayerPos(q,p2x,p2y,p2z);
						if(GetPointDistanceToPointExMorph(p1x,p1y,p1z,p2x,p2y,p2z) < pdistance)
						{
								ShowPlayerNameTagForPlayer(i,q,1);
						}
                    }
                }
            }
        }
	}
}

public OnPlayerText(playerid, text[])
{
	static LastText[MAX_PLAYERS][128];
	if(strfind(LastText[playerid], text, false) != -1) return SendClientMessage(playerid, AMARILLO_ADMIN, "No intentes hacer FLOOD !"), 0;
	strmid(LastText[playerid], text, 0, strlen(text), sizeof(LastText[]));
	for(new s = 0; s < AntiSpamC; s++)
	{
	if(strfind(text, AntiSpam[s], true) != -1)
	{
	SendClientMessage(playerid, AMARILLO_ADMIN, "No intentes hacer SPAM !");
	return 0;
	}
	}
	new
		string[128], 	tmp[32],	acento[32],		car = GetVehicleModel(GetPlayerVehicleID(playerid));

    if(DetectarSPAM(text))
    {
        new x[186];
        format(x, sizeof(x), "{11BB11}- AntiSPAM {FFFFFF}|| {FF2200}%s(%d): {FFFFFF}%s ||", PlayerName(playerid),playerid, text); A_Info(x);
    	return 0;
   	}
   	if(AFK[playerid] > 0)
   	{
   	    Message(playerid, COLOR_GRAD2, "¡No puedes hablar en estado AFK!");
   	    return 0;
    }
	if(Muted[playerid] == 1)
	{
		Message(playerid, TEAM_CYAN_COLOR, "* ¡Has sido silenciado! (ChatBan)");
		return 0;
	}
	if(UsingEctasy[playerid] > 0)
	{
		SendClientMessage(playerid, TEAM_CYAN_COLOR, "¡Una fuerza desconocida te impide hablar!");
		return 0;
	}
	if(TalkingLive[playerid] != 0)
	{
 		if(PlayerInfo[playerid][pRank] == 3)
	    {
     		if(car == 488 || car == 582)
    		{
				format(string, sizeof(string), "[CNN-Directo](%s): %s", PlayerName(playerid), text);
				OOCNews(0x00B75BFF, string);
				return 0;
	    	}
	    	else return Message(playerid, COLOR_GRAD2, "¡No estás en un vehículo CNN!");
	    }
	    else
	    {
			if(Journalist(playerid))
			{
			    format(string, sizeof(string), "[CNN-Directo](%s): %s", PlayerName(playerid), text);
				OOCNews(0x00B75BFF, string);
			}
			else
			{
			    format(string, sizeof(string), "[CNN-Directo]Invitado(%s): %s", PlayerName(playerid), text);
				OOCNews(0x00B75BFF, string);
			}
			return 0;
		}
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		format(string, sizeof(string), "(Teléfono) %s: %s", PlayerName(playerid), text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		// -================= Mecanicos =======================- //
		if(Mobile[playerid] == 556)
		{
   			Params>
			{
			    Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}¿Si necesita asistencia, diga ASISTENCIA, para anular la llamada NO?");
			 	return 0;
			}
			else if ((strcmp("asistencia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("asistencia")))
			{
				Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Muy bien! Necesita asistencia!");
                Message(playerid, COLOR_WHITE, "{117799}Operadora: {F5DEB3}Puedes llamar a los siguientes mecánicos de tu zona.");
                Message(playerid, COLOR_WHITE, "{117799}Operadora: {F5DEB3}Gracias por preferirnos, si no hay mecánicos intente en otro momento.");
                SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
                SetTimerEx("RemoveHand", 1800, false, "i", playerid);
		     	for(new i = 0; i < MAX_PLAYERS; i++)
			    {
				    if(IsPlayerConnected(i))
				    {
				        if(Team_Mecanicos(i) && OnDuty[i] == 1)
				        {
						    format(string, 256, "  Tlf: %d - Nombre: %s", PlayerInfo[i][pPnumber] ,PlayerName(i));
						    Message(playerid, -1, string);
						    Mobile[playerid] = 255;
				        }
				    }
				}
				return 0;
			}
			else if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
			{
				Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Anuló la llamada!");
				Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Pásese por el taller y descubra ofertas en tuning, arreglos etc!");
				Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}Que tenga buen día!");
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
                SetTimerEx("RemoveHand", 1800, false, "i", playerid);
				Mobile[playerid] = 255;
				return 0;
			}
			else
			{
				Message(playerid, COLOR_WHITE, "{117799}Operadora: {FFFFFF}¿Si necesita asistencia, diga ASISTENCIA, para anular la llamada NO?");
				return 0;
			}
		}
		// -================= Transportes =====================- //
		if(Mobile[playerid] == 445)
		{
			Params>
			{
			    Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Diga TAXI para continuar, diga NO para cancelar");
			 	return 0;
			}
			else if ((strcmp("taxi", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("taxi")))
			{
				Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}¿Donde se encuentra, en LS o LV?");
				Mobile[playerid] = 446;
				return 0;
			}
			else if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				SetTimerEx("RemoveHand", 1800, false, "i", playerid);
				Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}¡Adios, que tenga un buen día!");
				Mobile[playerid] = 255;
				return 0;
			}
			else
			{
				Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Diga TAXI para continuar, diga NO para cancelar");
				return 0;
			}
		}
		if(Mobile[playerid] == 446)
		{
			Params>
			{
			    Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}¿Donde está en LS o LV?");
			 	return 0;
			}
			else if ((strcmp("LS", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("LS")))
			{
				Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}¿En que zona está?");
				Mobile[playerid] = 447;
				return 0;
			}
			else if ((strcmp("LV", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("LV")))
			{
				Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}¿En que zona está?");
				Mobile[playerid] = 448;
				return 0;
			}
			else
			{
				Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}¿Donde está en LS o LV?");
				return 0;
			}
		}
		if(Mobile[playerid] == 447)
		{
		    if(TaxiSlot1 != 999 && TaxiSlot2 != 999 && TaxiSlot3 != 999 && TaxiSlot4 != 999 && TaxiSlot5 != 999 && TaxiSlot6 != 999 && TaxiSlot7 != 999 && TaxiSlot8 != 999)
		    {
		        Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Nuestras líneas están colapsadas, pruebe más tarde.");
		        Mobile[playerid] = 255;
				return 0;
			}
		    format(string, sizeof(string), "Central: %s necesita un taxi en (%s, Los Santos)", PlayerName(playerid), text);
		    SendJobMessage(9, TEAM_BLUE_COLOR, string);
		    Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Está en la lista de espera. El taxi más cercano pasará a recogerle.");
		    Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Si quiere anular el taxi, utiliza /cancelar taxi");
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		    SetTimerEx("RemoveHand", 1800, false, "i", playerid);
		    Mobile[playerid] = 255;
		    if(TaxiSlot1 == 999) { TaxiSlot1 = playerid; SlotCity1 = "LS"; strmid(SlotZone1, text, 0, strlen(text), 255); TiempoSlot1 = 1;  TaxiCalled[playerid] = 1;	return 0; }
		    if(TaxiSlot2 == 999) { TaxiSlot2 = playerid; SlotCity2 = "LS"; strmid(SlotZone2, text, 0, strlen(text), 255); TiempoSlot2 = 1;  TaxiCalled[playerid] = 2;	return 0; }
		    if(TaxiSlot3 == 999) { TaxiSlot3 = playerid; SlotCity3 = "LS"; strmid(SlotZone3, text, 0, strlen(text), 255); TiempoSlot3 = 1;  TaxiCalled[playerid] = 3;	return 0; }
		    if(TaxiSlot4 == 999) { TaxiSlot4 = playerid; SlotCity4 = "LS"; strmid(SlotZone4, text, 0, strlen(text), 255); TiempoSlot4 = 1;  TaxiCalled[playerid] = 4;	return 0; }
		    if(TaxiSlot5 == 999) { TaxiSlot5 = playerid; SlotCity5 = "LS"; strmid(SlotZone5, text, 0, strlen(text), 255); TiempoSlot5 = 1;  TaxiCalled[playerid] = 5;	return 0; }
		    if(TaxiSlot6 == 999) { TaxiSlot6 = playerid; SlotCity6 = "LS"; strmid(SlotZone6, text, 0, strlen(text), 255); TiempoSlot6 = 1;  TaxiCalled[playerid] = 6;	return 0; }
		    if(TaxiSlot7 == 999) { TaxiSlot7 = playerid; SlotCity7 = "LS"; strmid(SlotZone7, text, 0, strlen(text), 255); TiempoSlot7 = 1;  TaxiCalled[playerid] = 7;	return 0; }
		    if(TaxiSlot8 == 999) { TaxiSlot8 = playerid; SlotCity8 = "LS"; strmid(SlotZone8, text, 0, strlen(text), 255); TiempoSlot8 = 1;  TaxiCalled[playerid] = 8;	return 0; }
		}
		if(Mobile[playerid] == 448)
		{
		    if(TaxiSlot1 != 999 && TaxiSlot2 != 999 && TaxiSlot3 != 999 && TaxiSlot4 != 999 && TaxiSlot5 != 999 && TaxiSlot6 != 999 && TaxiSlot7 != 999 && TaxiSlot8 != 999)
		    {
		        Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Nuestras líneas están colapsadas, pruebe más tarde.");
		        Mobile[playerid] = 255;
				return 0;
			}
		    format(string, sizeof(string), "Central: %s necesita un taxi en (%s, Las Venturas)", PlayerName(playerid), text);
		    SendJobMessage(9, TEAM_BLUE_COLOR, string);
		    Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Está en la lista de espera. El taxi más cercano pasará a recogerle.");
		    Message(playerid, COLOR_WHITE, "{EE9900}Operadora: {FFFFFF}Si quiere anular el taxi, utiliza /cancelar taxi");
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		    SetTimerEx("RemoveHand", 1800, false, "i", playerid);
		    Mobile[playerid] = 255;
		    if(TaxiSlot1 == 999) { TaxiSlot1 = playerid; SlotCity1 = "LV"; strmid(SlotZone1, text, 0, strlen(text), 255); TiempoSlot1 = 1;  TaxiCalled[playerid] = 1;	return 0; }
		    if(TaxiSlot2 == 999) { TaxiSlot2 = playerid; SlotCity2 = "LV"; strmid(SlotZone2, text, 0, strlen(text), 255); TiempoSlot2 = 1;  TaxiCalled[playerid] = 2;	return 0; }
		    if(TaxiSlot3 == 999) { TaxiSlot3 = playerid; SlotCity3 = "LV"; strmid(SlotZone3, text, 0, strlen(text), 255); TiempoSlot3 = 1;  TaxiCalled[playerid] = 3;	return 0; }
		    if(TaxiSlot4 == 999) { TaxiSlot4 = playerid; SlotCity4 = "LV"; strmid(SlotZone4, text, 0, strlen(text), 255); TiempoSlot4 = 1;  TaxiCalled[playerid] = 4;	return 0; }
		    if(TaxiSlot5 == 999) { TaxiSlot5 = playerid; SlotCity5 = "LV"; strmid(SlotZone5, text, 0, strlen(text), 255); TiempoSlot5 = 1;  TaxiCalled[playerid] = 5;	return 0; }
		    if(TaxiSlot6 == 999) { TaxiSlot6 = playerid; SlotCity6 = "LV"; strmid(SlotZone6, text, 0, strlen(text), 255); TiempoSlot6 = 1;  TaxiCalled[playerid] = 6;	return 0; }
		    if(TaxiSlot7 == 999) { TaxiSlot7 = playerid; SlotCity7 = "LV"; strmid(SlotZone7, text, 0, strlen(text), 255); TiempoSlot7 = 1;  TaxiCalled[playerid] = 7;	return 0; }
		    if(TaxiSlot8 == 999) { TaxiSlot8 = playerid; SlotCity8 = "LV"; strmid(SlotZone8, text, 0, strlen(text), 255); TiempoSlot8 = 1;  TaxiCalled[playerid] = 8;	return 0; }
		}
		// -============================ Emergencias ============================- //
		if(Mobile[playerid] == 915)
		{
		    Params>
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Central: Entendido, ¿su ubicación porfavor?");
				return 0;
			}
			new wanted[128];
			format(wanted, sizeof(wanted), "Central: %s necesita una ambulancia. Lugar: (%s)",PlayerName(playerid), text);
			SendRadioMessage(4, TEAM_CYAN_COLOR, wanted);
			format(wanted, sizeof(wanted), "* Incidente: %s",Situacion[playerid]);
			SendRadioMessage(4, TEAM_CYAN_COLOR, wanted);
			new Float:trace_x, Float:trace_y, Float:trace_z;
			GetPlayerPos(playerid, trace_x, trace_y, trace_z);
			emdtrace = 1; emdtrace_x = trace_x; emdtrace_y = trace_y; emdtrace_z = trace_z;
			Message(playerid, COLOR_ALLDEPT, "Central: Ahora le enviamos una ambulancia, sea paciente.");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetTimerEx("RemoveHand", 1800, false, "i", playerid);
			Mobile[playerid] = 255;
			return 0;
		}
		if(Mobile[playerid] == 914)
		{
			Params>
			{
				Message(playerid, COLOR_ALLDEPT, "Central: Por favor, ¿una breve explicación de la situación?");
				return 0;
			}
			Message(playerid, COLOR_ALLDEPT, "Central: Entendido, ¿Su ubicacion por favor?");
			strmid(Situacion[playerid], text, 0, strlen(text), 255);
			Mobile[playerid] = 915;
			return 0;
		}
		if(Mobile[playerid] == 913)
		{
			Params>
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Comisaria: repítame que no le he entendido!");
				return 0;
			}
   			format(string, sizeof(string), "** Central: Han solicitado una patrulla. Lugar: (%s)",text);
			SendFamilyMessage(1, TEAM_RADIO_COLOR, string);
			format(string, sizeof(string), "** Central: Un tal %s denuncia: %s",PlayerName(playerid), Situacion[playerid]);
			SendFamilyMessage(1, TEAM_RADIO_COLOR, string);
			SendClientMessage(playerid, 0x0080FFFF, "Comisaria: una patrulla se pasará por la zona.");
			SendClientMessage(playerid, 0x0080FFFF, "Comisaria: ¡Gracias por su información!");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetTimerEx("RemoveHand", 1800, false, "i", playerid);
			Mobile[playerid] = 255;
			new Float:trace_x, Float:trace_y, Float:trace_z;
			GetPlayerPos(playerid, trace_x, trace_y, trace_z);
			pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
			return 0;
		}
		if(Mobile[playerid] == 912)
		{
			Params>
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "Comisaria: no le entiendo., repíta porfavor!");
				return 0;
			}
			strmid(Situacion[playerid], text, 0, strlen(text), 255);
			format(string, sizeof(string), "Comisaria: Entendido señor %s, díganos su ubicación exacta", PlayerName(playerid));
			Message(playerid, 0x0080FFFF, string);
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 911)
		{
			Params>
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA:  Lo sentimos, no le entendimos, POLICIA o PARAMEDICO ?");
				return 0;
			}
			else if ((strcmp("Policia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Policia")))
			{
				Message(playerid, COLOR_WHITE, "--> Conexión establecida con LSPD.");
				SendClientMessage(playerid, 0x0080FFFF, "Central: Explique brevemente lo ocurrido.");
				Mobile[playerid] = 912;
				return 0;
			}
			else if ((strcmp("samur", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("samur")))
			{
			    Message(playerid, COLOR_WHITE, "--> Conexión establecida con SAMUR.");
				SendClientMessage(playerid, COLOR_ALLDEPT, "Central: Explique brevemente lo ocurrido.");
				Mobile[playerid] = 914;

				return 0;
			}
			else
			{
				SendClientMessage(playerid, 0x0080FFFF, "EMERGENCIA: Lo sentimos, no le entendimos, POLICIA o PARAMEDICO ?");
				return 0;
			}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				if(Speaker[Mobile[playerid]] == 1)
				{
				    format(string, sizeof(string), "(Altavoz): %s", text);
					ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else
				{
				    format(string, sizeof(string), "(Voz en el Teléfono): %s", text);
				    Message(Mobile[playerid], COLOR_YELLOW,string);
				}
			}
		}
		else
		{
			Message(playerid, COLOR_GRAD2,"¡Nadie en línea!");
			return 0;
		}
		return 0;
	}
	if(realchat)
	{
	    if(Pandilleros(playerid) || Mafioso(playerid) || IsANarco(playerid) || Ballas_pand(playerid))
		{
	    	if(Pandilleros(playerid))   acento = " [Acento de Barrio]";
	    	else if(Mafia_Italiana(playerid))  acento = " [Acento Italiano]";
	    	else if(Ballas_pand(playerid))  	acento = " [Acento de Barrio]";
	    	else if(Mafia_Yakuza(playerid))	acento = " [Acento Japones]";
	    	else if(Mafia_Rusa(playerid))	acento = " [Acento Ruso]";
	    	else if(IsANarco(playerid))		acento = " [Acento Colombiano]";
	    	else if(Piratas4x4(playerid))   acento = " [Acento Argentino]";
 		}
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(Maskuse[playerid] == 1) format(string, sizeof(string), "Desconocido dice%s: %s", acento, text);
			else format(string, sizeof(string), "%s dice%s: %s", PlayerName(playerid), acento, text);
  			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		else
		{
		    new carid = GetPlayerVehicleID(playerid);
		    if(IsABike(carid) || IsAPlane(carid))
		    {
		        if(Maskuse[playerid] == 1) format(string, sizeof(string), "Desconocido dice%s: %s", acento, text);
				else format(string, sizeof(string), "%s dice%s: %s", PlayerName(playerid), acento, text);
  				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		    }
		    else
		    {
		    	if(VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
		    	{
		    		if(Maskuse[playerid] == 1)	format(string, sizeof(string), "(Ventana Cerrada) Desconocido dice%s: %s", acento, text);
					else format(string, sizeof(string), "(Ventana Cerrada) %s dice%s: %s", PlayerName(playerid), acento, text);
  					ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else
				{
			    	if(Maskuse[playerid] == 1) format(string, sizeof(string), "(Ventana Abierta) Desconocido dice%s: %s", acento, text);
					else format(string, sizeof(string), "(Ventana Abierta) %s dice%s: %s", PlayerName(playerid), acento, text);
  					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
			}
		}
		return 0;
	}
	return 1;
}

function FixHour(hour)
{
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}

function AddsOn()
{
	if(adds > 0)
	{
	    adds -= 1;
	}
	return 1;
}

function TimerVeh()
{
	for(new c = VV; c < sizeof(CarInfo); c++)
	{
		if(CarInfo[c][cVehTime] <= gettime())
		{
	 		CarInfo[c][cOwned] = 0;
    		strmid(CarInfo[c][cOwner], "Nadie", 0, strlen("Nadie"), 999);
     		CarInfo[c][cEmbargo] = 0;
			CarInfo[c][cMulta] = 0;
			CarInfo[c][cVehTime] = 1999999999;
			CarInfo[c][cLock] = 0;
			SetVehicleVirtualWorld(c, 0);
			strmid(CarInfo[c][cPlate], "For Sale", 0, strlen("For Sale"), 999);
			SetVehicleNumberPlate(c,CarInfo[c][cPlate]);
			RespawnVehicle(c);
		}
	}
	SetTimer("HouseTimer", 90000, false);
	return 1;
}

function HouseTimer()
{
	for(new h=0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hTime] <= gettime())
		{
		    HouseInfo[h][hOwned] = 0;
		    HouseInfo[h][hLock] = 1;
		    HouseInfo[h][hRent] = 0;
		    HouseInfo[h][hRentabil] = 0;
		    HouseInfo[h][hWep] = 0;
			HouseInfo[h][hAmmo] = 0;
			HouseInfo[h][hMats] = 0;
			HouseInfo[h][hDrugs] = 0;
			HouseInfo[h][hSpeed] = 0;
			HouseInfo[h][hEctasy] = 0;
			HouseInfo[h][hRitalin] = 0;
			HouseInfo[h][hHeroina] = 0;
			HouseInfo[h][hMarihuana] = 0;
			HouseInfo[h][hTime] = 1999999999;
			strmid(HouseInfo[h][hOwner], "El Estado", 0, strlen("El Estado"), 64);
	        OnPropTextdrawUpdate(h);
		}
	}
	return 0;
}

function TeleportPlayer(playerid)
{
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(playerid, cx, cy, cz);
	// COMISARIA ENTRADA
	if(PlayerToPointStripped(10, playerid,1554.9537,-1675.6584,16.1953, cx,cy,cz))
	{
	    if(IsACop(playerid) || GetPlayerWeapon(playerid) == 0 && !IsACop(playerid))
	    {
            Pause(playerid);
			GameTextForPlayer(playerid, "~w~Departamento De ~n~Policia de LS", 5000, 1);
			SetPosEx(playerid, 747.60254, -387.92624, 1003.58502,0,6,0); //246.7079,66.2239,1003.6406
			PlayerPlaySound(playerid, 1052, 246.7562,64.4719,1003.6406);
		}
		else
		{
             Pause(playerid);
		    GameTextForPlayer(playerid, "~w~Departamento De ~n~Policia de LS", 5000, 1);
			SetPosEx(playerid,747.60254, -387.92624, 1003.58502,0,6,0); //246.7079,66.2239,1003.6406
			ProxDetector(15.0, playerid, "Biiiiiiip! Biiiiip!", 0xFF8080FF,0xFF8080FF,0xFF8080FF,0xFF8080FF,0xFF8080FF);
			PlayerPlaySound(playerid, 1055, 246.7562,64.4719,1003.6406);
		}
	}
    if(PlayerToPointStripped(1, playerid,242.2513,66.3352,1003.6406, cx,cy,cz))
	{
		if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) ShowPlayerDialog(playerid, DIALOG_LSPD_ELEVATOR, DIALOG_STYLE_LIST, "Ascensor LSPD", "¿ Donde desea ir ?", "Garage", "Terraza");
		else return GameTextForPlayer(playerid, "~r~Solo Policias!", 5000, 3);
	}
	if(PlayerToPointStripped(1, playerid,-2662.1509,537.2712,48.0843, cx,cy,cz))
	{
	    if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) ShowPlayerDialog(playerid, DIALOG_SAMUR_ELEVATOR, DIALOG_STYLE_LIST, "Ascensor SAMUR", "¿Donde deseas ir?", "Garage", "Terraza");
	    else return GameTextForPlayer(playerid, "~r~solo personal!", 4000, 1);
 	}
	if(PlayerToPointStripped(1, playerid,2258.4861,2454.7061,38.6837, cx,cy,cz)) SetPlayerPos(playerid,2343.3733,2459.3279,14.9742);
	if(PlayerToPointStripped(1, playerid,2282.2898,2423.4922,3.4766, cx,cy,cz)) SetPlayerPos(playerid,2343.3733,2459.3279,14.9742);
	// Hospital2puerta
	if(PlayerToPointStripped(1, playerid,1600.4548,1760.7028,-60.5523, cx,cy,cz)) SetPosEx(playerid,1600.0018,1765.1306,-60.0662,0,0,0);
	if(PlayerToPointStripped(1, playerid,1600.0018,1765.1306,-60.0662, cx,cy,cz)) SetPosEx(playerid,1600.4548,1760.7028,-60.5523,0,0,0);
	
	// BOWLING ENTER
	else if(PlayerToPointStripped(1, playerid,1632.0132,-1172.9296,24.0781, cx,cy,cz)){
		Till(18, 100);
		Bought(playerid, 100);
		SetPosEx(playerid,-2355.876464,917.654235,93.634971,0,0,0);
	}
	// BOWLING EXIT
	else if(PlayerToPointStripped(1, playerid,-2355.876464,917.654235,93.634971, cx,cy,cz)) SetPosEx(playerid, 1631.8143,-1171.8892,24.0781,0,0,0);
	// 10GREEN ENTER
	else if(PlayerToPointStripped(1, playerid,2309.891601,-1643.565429,14.827047, cx,cy,cz)) SetPosEx(playerid,501.902038,-67.564384,998.757812,0,11,0);
	// 10GREEN EXIT
	else if(PlayerToPointStripped(1, playerid,501.902038,-67.564384,998.757812, cx,cy,cz)) SetPosEx(playerid, 2309.891601,-1643.565429,14.827047,20.0,0,0);
	// AMMU ENTER
	else if(PlayerToPointStripped(1, playerid,1368.842407,-1279.880737,13.546875, cx,cy,cz)) SetPosEx(playerid,315.810302,-143.586303,999.601562,0,7,0);
	// AMMU EXIT
	else if(PlayerToPointStripped(1, playerid,315.810302,-143.586303,999.601562, cx,cy,cz)) SetPosEx(playerid, 1368.842407,-1279.880737,13.546875,20.0,0,0);
	// VICTIM ENTER
	else if(PlayerToPointStripped(1, playerid,461.499267,-1500.973266,31.058967, cx,cy,cz)) SetPosEx(playerid,227.562377,-7.929605,1002.210937,0,5,0);
	// VICTIM EXIT
	else if(PlayerToPointStripped(1, playerid,227.562377,-7.929605,1002.210937, cx,cy,cz)) SetPosEx(playerid, 461.499267,-1500.973266,31.058967,20.0,0,0);
	// Biblioteca ENTER
	else if(PlayerToPointStripped(1, playerid,1546.6545,-1097.5780,25.0625, cx,cy,cz))
	{
		SetPosEx(playerid,911.5309,-1012.7484,14.6151,0,0,0);
		GText(playerid, "~w~Biblioteca", 5000, 1);
	}
 	// Entrada pabellon
	else if(PlayerToPointStripped(1, playerid, 1774.9208,-1806.6025,13.5299, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 2734.2200,-1752.0573,-13.4678,0,0,0);
	}

	// Salida Pabellon
	else if(PlayerToPointStripped(1, playerid, 2734.2200,-1752.0573,-13.4678, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 1774.9208,-1806.6025,13.5299,0,0,0);
	}
	// Biblioteca EXIT
	else if(PlayerToPointStripped(1, playerid,911.5309,-1012.7484,14.6151, cx,cy,cz)) SetPosEx(playerid, 1546.6545,-1097.5780,25.0625,20.0,0,0);
	// Entrada Interior Puerto
	else if(PlayerToPointStripped(1, playerid, 587.5262,-1989.2592,4.4332, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 895.1678,-2483.7361,3098.3235,0,0,0);
	}
	// Salida Puerto
	else if(PlayerToPointStripped(1, playerid, 895.1678,-2483.7361,3098.3235, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 587.5262,-1989.2592,4.4332,0,0,0);
	}
	// Entrada CINE
	else if(PlayerToPointStripped(1, playerid, 1324.0824,-1713.8619,13.6001, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 1348.5524,-1687.3601,1694.2446,0,0,0);// //-1333.5000000,-213.6000100,1078.3000500-Pantalla
	}
	// Salida CINE
	else if(PlayerToPointStripped(1, playerid,1348.5524,-1687.3601,1694.2446, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 1324.0824,-1713.8619,13.6001,0,0,0);
	}
	// Entrada CINE2
	else if(PlayerToPointStripped(1, playerid, 1323.6353,-1709.2308,13.6125, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 1344.4889,-1687.2681,1694.2446,0,0,0);//
	}
	// Salida CINE2
	else if(PlayerToPointStripped(1, playerid,1344.4889,-1687.2681,1694.2446, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 1323.6353,-1709.2308,13.6125,0,0,0);
	}
		///entrada a la pantalla de cine
	else if (PlayerToPointStripped(1, playerid,1368.0166,-1651.1652,1683.2546, cx,cy,cz))
    {
		if(PlayerInfo[playerid][pDonateT] == 1 || ComproCine[playerid] == 1)
		{
		    Pause(playerid);
		    StopAudioStreamForPlayer(playerid);
		    PlayAudioStreamForPlayer(playerid,"https://dl.dropbox.com/s/dwdw6rhj3aisilp/cine.mp3?token_hash=AAEkJbPHwp70MokUiC3if1G-QWxe9MYJw7jRQy8RU6nTdg&dl=1");
		    SetPosEx(playerid, -1359.5841,-207.9781,1074.0721,0,0,2);
		    GameTextForPlayer(playerid, "~w~Cine",5000,6);
		    ComproCine[playerid] = 0;
		}
		else Message(playerid, COLOR_GRAD2, " Usted no compro el boleto para entrar al cine.");
		return 1;
    }
    else if (PlayerToPointStripped(1, playerid,-1359.5841,-207.9781,1074.0721, cx,cy,cz))
    {
    	SetPlayerVirtualWorld(playerid, 0);
    	Pause(playerid);
    	StopAudioStreamForPlayer(playerid);
    	SetPlayerPos(playerid, 1368.0166,-1651.1652,1683.2546);
    	GameTextForPlayer(playerid, "~w~Entrada del Cine",5000,1);
    }
	// LSTV ENTER
	else if(PlayerToPointStripped(1, playerid,758.1428,-1361.2177,14.0281, cx,cy,cz)) ShowPlayerDialog(playerid, ENTER_LSTV, DIALOG_STYLE_LIST, "¿ Dónde desea ir ?", "LSTV Planta 1\tOficina\nLSTV Planta 2\tEstudio", "Ir", "Salir");
	// LSTV EXIT
	else if(PlayerToPointStripped(1, playerid,243.2710,302.7583,999.1343, cx,cy,cz) || PlayerToPointStripped(1, playerid,-2719.7854,519.2936,48.3752, cx,cy,cz)) SetPosEx(playerid, 758.1428,-1361.2177,14.0281,20.0,0,0);
	//LSPD Exit
	else if(PlayerToPointStripped(5, playerid,747.60254, -387.92624, 1003.58502, cx,cy,cz)) SetPosEx(playerid,1552.3231,-1674.6780,16.1953,0,0,0);
	// HOSPITAL PLANTA 2 ENTER
	else if(PlayerToPointStripped(1, playerid,-2665.0129,535.0582,48.0791, cx,cy,cz))
	{
	    Pause(playerid);
		SetPlayerPos(playerid,275.0726,126.1257,1032.0173);
	}
	// HOSPITAL PLANTA 2 EXIT
	else if(PlayerToPointStripped(1, playerid,275.0726,126.1257,1032.0173, cx,cy,cz)) SetPlayerPos(playerid,-2665.0129,535.0582,48.0791);
	//Hospital Planta 3 Enter
	else if(PlayerToPointStripped(1, playerid,251.4964,131.8860,1032.0173, cx,cy,cz))
	{
		Pause(playerid);
		SetPosEx(playerid,251.2338,131.8673,1037.7197,271.2408,0,0);
	}
	//Hospital Planta 3 Exit
	else if(PlayerToPointStripped(1, playerid,251.3875,131.6661,1037.7197, cx,cy,cz)) SetPosEx(playerid,251.2338,131.8809,1032.0173,271.2408,0,0);
		// Acensor U7 ENTER
	else if(PlayerToPointStripped(1, playerid,2033.9985,-1401.9303,17.2931, cx,cy,cz)) SetPlayerPos(playerid,2067.3105,-1432.1187,48.3359);
	// Acensor U7 EXIT
	else if(PlayerToPointStripped(1, playerid,2067.3105,-1432.1187,48.3359, cx,cy,cz)) SetPlayerPos(playerid,2033.9985,-1401.9303,17.2931);
	// Dispatch ENTER
	else if(PlayerToPointStripped(1, playerid,-2185.8447,897.8077,96.9397, cx,cy,cz)) SetPlayerPos(playerid,-2193.9558,887.8521,96.9397); //Hitman
	// Dispatch EXIT
	else if(PlayerToPointStripped(1, playerid,-2193.9558,887.8521,96.9397, cx,cy,cz)) SetPlayerPos(playerid,-2185.8447,897.8077,96.9397);
    // TAXI Office ENTER
	else if (PlayerToPointStripped(1.0, playerid,1752.5724,-1894.1763,13.5574, cx,cy,cz)) SetPosEx(playerid,-1837.1744,134.5490,15.1190, 0, 0, 0);
	// TAXI Office EXIT
	else if (PlayerToPointStripped(1.0, playerid,-1837.1744,134.5490,15.1190, cx,cy,cz)) SetPosEx(playerid,1752.5724,-1894.1763,13.5574, 0, 0, 0);
	// Farmacia ENTER
	else if (PlayerToPointStripped(1.0, playerid,895.3104,-1664.9683,13.546, cx,cy,cz))
	{
		SetPosEx(playerid,663.1843,-573.4727,16.3359, 0, 0, 0);
		GameTextForPlayer(playerid, "~g~Farmacia ~r~+", 5000, 3);
	}
	// Farmacia EXIT
	else if (PlayerToPointStripped(1.0, playerid,663.1843,-573.4727,16.3359, cx,cy,cz)) SetPosEx(playerid,895.3104,-1664.9683,13.546, 0, 0, 0);
	else if(PlayerToPointStripped(1, playerid,2229.9011,-1721.2582,13.5613, cx,cy,cz))
	{//Ganton Gym
	    Till(19, 500);
		Bought(playerid, 500);
		GameTextForPlayer(playerid, "~w~gym", 5000, 1);
		SetPosEx(playerid,771.9399,-2.2574,1000.7292,0,5,0);
	}
	else if(PlayerToPointStripped(1, playerid,772.3594,-5.5157,1000.7286, cx,cy,cz)) SetPosEx(playerid,2225.6699,-1725.3134,13.5586,0,0,0);
	//Casino Los Santos
	else if(PlayerToPointStripped(1, playerid, 1022.5853,-1121.4229,23.8723, cx,cy,cz))
	{
	    Pause(playerid);
	    SetPosEx(playerid, 2231.8706,1668.2195,6.9099,0,0,0);
 	}
 	else if(PlayerToPointStripped(1, playerid, 2231.8706,1668.2195,6.9099, cx,cy,cz)) SetPosEx(playerid,1022.5853,-1121.4229,23.8723,0,0,0);
	// Hospital Los Santos ENTER
	else if (PlayerToPointStripped(1, playerid,1173.2563,-1323.3102,15.3943, cx,cy,cz))
	{
		SetPosEx(playerid, -2647.9604,539.7050,48.0835, 180, 0, 0);
		GameTextForPlayer(playerid, "~r~Hospital",5000,1);
	}
	// Hospital EXIT
	else if(PlayerToPointStripped(1, playerid,-2647.4524,539.1109,48.0838, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 0)
	{
 		SetPosEx(playerid, 1173.2563,-1323.3102,15.3943, 0, 0, 0);
   		GText(playerid, "Los Santos", 5000, 1);
	}
	//Hospital Garage
	else if(PlayerToPointStripped(1, playerid,1144.9569,-1329.5032,13.5840, cx,cy,cz)) SetPosEx(playerid, -2662.1667,537.7280,48.0843,0,0,0);
	//Hospital Terraza
	else if(PlayerToPointStripped(1, playerid,1159.3601,-1352.9479,26.6766, cx,cy,cz)) SetPosEx(playerid, -2662.1667,537.7280,48.0843,0,0,0);
	// GARITO DROGA ENTER
	else if(PlayerToPointStripped(1, playerid,-1107.2260,-1183.3201,129.2188, cx,cy,cz))
	{
	    if(!IsANarco(playerid)) return GText(playerid, "~r~Cerrado", 5000, 1);
		SetPosEx(playerid,2569.8796,-1301.6450,1044.1250,0,2,0);
	}
	// GARITO DROGA EXIT
	else if(PlayerToPointStripped(1, playerid,2569.8796,-1301.6450,1044.1250, cx,cy,cz)) SetPosEx(playerid,-1107.2260,-1183.3201,129.2188,0,0,0);
 //Casa Traficantes Enter
	else if(PlayerToPointStripped(1, playerid,-1061.1812,-1195.5070,129.7466, cx,cy,cz))
	{
	    if(!IsANarco(playerid)) return GText(playerid, "~r~Cerrado", 5000, 1);
		SetPosEx(playerid,2523.1343,-1286.0913,1054.6406,0,2,0);
	}
	// Casa Traficantes EXIT
	else if(PlayerToPointStripped(1, playerid,2523.1343,-1286.0913,1054.6406, cx,cy,cz)) SetPosEx(playerid,-1061.1812,-1195.5070,129.7466,0,0,0);
	// Elevator DOWN ^
	else if (PlayerToPointStripped(1, playerid,1161.5015,-1330.0845,31.4937, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 0)
	{
		SetPosEx(playerid, -2662.1509,537.2712,48.0843, 180, 0, 0);
		GameTextForPlayer(playerid, "~r~hospital",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,2045.3928,-1908.0372,13.5469, cx,cy,cz))
	{ //DMW Enter
		Pause(playerid);
		SetPosEx(playerid, 2062.2095,-2214.4033,2664.6157,0,0,0);
		GameTextForPlayer(playerid, "~w~Centro de Licencias",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,2062.2095,-2214.4033,2664.6157, cx,cy,cz))
	{ //DMW Exit
		SetPosEx(playerid, 2046.8928,-1908.0372,13.5469,280,0,0);
		GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1524.5724,-1677.8043,6.2188, cx,cy,cz))
	{ //PD Elevator
	    SetPosEx(playerid, 790.8051,-367.0837,994.2100,270,6,0);
	    GameTextForPlayer(playerid, "~w~Departamento De policia",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1557.7257,-1675.2711,28.3955, cx,cy,cz))
	{ //PD Elevator
	    SetPosEx(playerid, 790.8051,-367.0837,994.2100,270,6,0);
	    GameTextForPlayer(playerid, "~w~Departamento De Policia",5000,1);
	}
	// BINCO ENTER
	else if (PlayerToPointStripped(1, playerid,2244.4690,-1665.1603,15.4766, cx,cy,cz))
	{
	    SetPosEx(playerid,207.7209,-111.2660,1005.1328,0,15,0);
	    GText(playerid, "binco", 5000, 1);
	    Message(playerid, COLOR_GRAD2, "Utiliza /cropa o /cropaid para cambiar tu indumentaria");
	}
	// BINCO EXIT
	else if (PlayerToPointStripped(1, playerid,207.7209,-111.2660,1005.1328, cx,cy,cz))
	{
	    SetPosEx(playerid,2244.4690,-1665.1603,15.4766,0,0,0);
	    GText(playerid, "~w~los santos", 5000, 1);
	}
	// Sex Shop
	else if (PlayerToPointStripped(1, playerid,1087.8663,-922.4969,43.3906, cx,cy,cz))
	{
	    Pause(playerid);
	    SetPosEx(playerid, -100.2815,-25.0383,1000.7188,190.7341,3,0);
	}
	else if (PlayerToPointStripped(1, playerid,-100.2815,-25.0383,1000.7188, cx,cy,cz)) SetPosEx(playerid, 1087.8663,-922.4969,43.3906,21.9935,0,0);
	else if (PlayerToPointStripped(1.5, playerid,1570.3828,-1333.8882,16.4844, cx,cy,cz))
	{
		//Next to PD building
	    SetPosEx(playerid, 1545.0068,-1366.5094,327.2868,0,0,0);
	    GameTextForPlayer(playerid, "~w~Azotea edificio de Noticias",5000,1);
	}
	else if (PlayerToPointStripped(1.5, playerid,1548.8167,-1366.2247,326.2109, cx,cy,cz))
	{
		//Next to PD building
	    SetPosEx(playerid, 1572.1115,-1332.5288,16.4844,0,0,0);
	    GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
	}
	else if (PlayerToPointStripped(1.5, playerid,2025.3062,-1402.3466,17.2104, cx,cy,cz))
	{
		//CIA Enter
		SetPosEx(playerid,246.3536,107.3032,1003.2188,179.2000,10,0);
	    GameTextForPlayer(playerid, "~p~CIA",5000,1);
	    MoveDynamicObject(u7d3, 244.86236572266, 110.86795043945, 1002.21875, 2.5, -1000.0, -1000.0, -1000.0);
	    Revisado[playerid] = 0;
	}
	else if (PlayerToPointStripped(1.5, playerid,246.3536,107.3032,1003.2188, cx,cy,cz))
	{
		//CIA Exit
	    SetPosEx(playerid, 2025.3062,-1402.3466,17.2104,0,0,0);
	    GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	    Revisado[playerid] = 0;
	}
	// Lavanderia
	else if (PlayerToPointStripped(1.5, playerid, 1837.0604,-1417.3403,13.5625, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 3932.5288,-827.3693,1874.0156,0,0,0);
	}
	else if (PlayerToPointStripped(1.5, playerid, 3932.5288,-827.3693,1874.0156, cx,cy,cz)) SetPosEx(playerid, 1837.0604,-1417.3403,13.5625,0,0,0);
	//Joyeria
	else if (PlayerToPointStripped(1.5, playerid, 1567.9587,-1898.0110,13.5609, cx,cy,cz))
	{
	    Pause(playerid);
	    SetPosEx(playerid, 1573.0620,-1911.0226,401.6359,0,0,0);
 	}
 	else if (PlayerToPointStripped(1.5, playerid, 1573.0620,-1911.0226,401.6359, cx,cy,cz)) SetPosEx(playerid, 1567.9587,-1898.0110,13.5609,0,0,0);
	else if (PlayerToPointStripped(0.5, playerid,305.6703,-141.7649,1004.0625, cx,cy,cz))
	{
	    // Accuracy's ENTER
	    SetPosEx(playerid, 304.2044,-141.8087,1004.0625,266.2744,7,0);
	    GText(playerid, "~y~Training Room",5000,1);
	}
	else if (PlayerToPointStripped(0.5, playerid,304.2044,-141.8087,1004.0625, cx,cy,cz))
	{
	    // Accuracy's EXIT
	    SetPosEx(playerid, 305.6703,-141.7649,1004.0625,93.4107,7,0);
	    GText(playerid, "~w~Ammunation",5000,1);
	}
	else if (PlayerToPointStripped(0.5, playerid,300.0952,-141.8644,1004.0625, cx,cy,cz))
	{
	    //PvP ENTER
	    SetPosEx(playerid, 299.1417,-141.8611,1004.0547,279.7479,7,0);
	    GText(playerid, "~r~Player vs player",5000,1);
	}
	else if (PlayerToPointStripped(0.5, playerid,299.1417,-141.8611,1004.0547, cx,cy,cz))
	{
	    //PvP EXIT
	    SetPosEx(playerid, 300.0952,-141.8644,1004.0625,92.3728,7,0);
	    GText(playerid, "~w~Ammunation",5000,1);
	}
	//Ayuntamiento Luis
	else if (PlayerToPointStripped(1, playerid,1481.0206,-1771.1138,18.7958, cx,cy,cz))
 	{
  		SetPosEx(playerid, 386.2978,173.8582,1008.3828,0,3,0);
    	GameTextForPlayer(playerid, "~y~Ayuntamiento",5000,1);
   	}
	// Club Vip Entrada
    else if (PlayerToPointStripped(1, playerid,1797.5867,-1578.8649,14.0855, cx,cy,cz))
    {
		if(PlayerInfo[playerid][pDonateT] == 1 || ComproBoleto[playerid] == 1)
		{
		    SetPosEx(playerid, 1803.0931,-1562.1166,-47.4675,0,0,2);
		    GameTextForPlayer(playerid, "~w~Club ~y~VIP",5000,6);
		    ComproBoleto[playerid] = 0;
		}
		else Message(playerid, COLOR_GRAD2, " Usted no compro el boleto para entrar al club.");
		return 1;
    }
    else if (PlayerToPointStripped(1, playerid,1803.0931,-1562.1166,-47.4675, cx,cy,cz))
    {
    	SetPlayerVirtualWorld(playerid, 0);
    	SetPlayerPos(playerid, 1797.5867,-1578.8649,14.0855);
    	GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
    }
    // Guardia Nacional - Prision
    else if(PlayerToPointStripped(1, playerid,2729.3357,-2451.4373,17.5937, cx,cy,cz))
    {
		Pause(playerid);
        SetPosEx(playerid, 630.0692,839.3478,-90.2031, 0, 0, 0)
        GText(playerid, "~g~P~w~rision~n~~w~Militar", 4000, 1);
	}
	else if(PlayerToPointStripped(1, playerid,632.7405,839.2097,-90.2031, cx,cy,cz))
	{
        SetPosEx(playerid, 2729.3357,-2451.4373,17.5937, 0, 0, 0)
        GText(playerid, "~g~Guardia~n~~w~Nacional", 5000, 1);
    }
    else if(PlayerToPointStripped(1, playerid,2766.1648,-2513.5667,13.6428, cx,cy,cz))
    {//Cuarteles
        Pause(playerid);
        SetPosEx(playerid, 2908.8123,2126.5759,0.3203, 0, 0, 0)
        GText(playerid, "~g~C~w~uarteles", 4000, 1);
    }
    else if(PlayerToPointStripped(1, playerid,2907.2405,2126.5566,0.3281, cx,cy,cz))
    {
        SetPosEx(playerid, 2766.1648,-2513.5667,13.6428, 0, 0, 0)
        GText(playerid, "~g~Guardia~n~~w~Nacional", 5000, 1);
    }
    else if(PlayerToPointStripped(1, playerid,2731.6631,-2417.5254,13.6280, cx,cy,cz))
    {//Armeria
        Pause(playerid);
        SetPosEx(playerid, 254.8800,2023.7145,-6.7623, 0, 0, 0)
        GText(playerid, "~g~A~w~rmeria", 4000, 1);
	}
    else if(PlayerToPointStripped(1, playerid,254.8800,2023.7145,-6.7623, cx,cy,cz))
    {
        SetPosEx(playerid, 2731.6631,-2417.5254,13.6280, 0, 0, 0)
        GText(playerid, "~g~Guardia~n~~w~Nacional", 5000, 1);
    }
    // Entrada/Subida Helipuerto
    else if (PlayerToPointStripped(3, playerid,2721.3474,-2380.0967,17.3403, cx,cy,cz)) SetPosEx(playerid,2747.1721,-2380.1116,30.0547,0,0,0); //Subir
	else if (PlayerToPointStripped(3, playerid,2747.1721,-2380.1116,30.0547, cx,cy,cz)) SetPosEx(playerid,2721.3474,-2380.0967,17.3403,0,0,0); //Bajar
	else if(PlayerToPointStripped(1, playerid,1270.5482,-1539.9236,14.7471, cx,cy,cz))
	{//iglesia
		Pause(playerid);
        SetPosEx(playerid, 1465.0500,853.8983,-69.1137, 0, 0, 0)
	}
	else if(PlayerToPointStripped(1, playerid,1465.0500,853.8983,-69.1137, cx,cy,cz))
	{
	Pause(playerid);
	SetPosEx(playerid, 1270.5482,-1539.9236,14.7471, 0, 0, 0);
	}
    //Ayuntamiento LS
	else if (PlayerToPointStripped(1, playerid,390.0630,173.5741,1008.3828, cx,cy,cz))
	{
	    Pause(playerid);
 		SetPosEx(playerid, 1481.0206,-1769.5138,18.7958,0,0,0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,154.2457,-1946.2103,5.1346, cx,cy,cz)) SetPosEx(playerid,154.1186,-1949.6292,47.8750,1.4819,0,0); //Faro Enter
	else if (PlayerToPointStripped(1, playerid,154.1186,-1949.6292,47.8750, cx,cy,cz)) SetPosEx(playerid,154.2457,-1946.2103,5.1346,1.4819,0,0); //Faro Exit
	else if (PlayerToPointStripped(1, playerid,1833.512939, -1842.450073, 13.578125, cx,cy,cz))
	{
		// 24/7 1 Enter
		SetPosEx(playerid, -25.570781, -141.143249, 1003.546875, 3.118535, 16, 0);
		GameTextForPlayer(playerid, "~r~~h~24 ~g~~h~7",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,-25.570781, -141.143249, 1003.546875, cx,cy,cz))
	{
		// 24/7 1 Exit
		SetPosEx(playerid, 1833.512939, -1842.450073, 13.578125, 268.009368, 0, 0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1352.232055, -1758.937500, 13.507812, cx,cy,cz))
	{
		// 24/7 2 Enter
		SetPosEx(playerid, -26.896020, -57.764526, 1003.546875, 357.141845, 6, 0);
  		GameTextForPlayer(playerid, "~r~~h~24 ~g~~h~7",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,-26.896020, -57.764526, 1003.546875, cx,cy,cz))
	{
		// 24/7 2 Exit
		SetPosEx(playerid, 1352.232055, -1758.937500, 13.507812, 358.105255,0, 0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1315.636962, -898.366149, 39.578125, cx,cy,cz))
	{
		// 24/7 3 Enter
		SetPosEx(playerid, -27.485527, -31.096693, 1003.557250, 0.588506, 4, 0);
		GameTextForPlayer(playerid, "~r~~h~24 ~g~~h~7",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,-27.485527, -31.096693, 1003.557250, cx,cy,cz))
	{
		// 24/7 3 Exit
		SetPosEx(playerid, 1315.636962, -898.366149, 39.578125, 182.636932,0, 0);
		GameTextForPlayer(playerid, "~w~los santos",5000,1);
	}
	//Electronicos SOCIP entrada
	else if (PlayerToPointStripped(1, playerid,1773.3176,-1654.7664,14.4287, cx,cy,cz)){
		Pause(playerid);
    	StopAudioStreamForPlayer(playerid);
   		PlayAudioStreamForPlayer(playerid,"http://www.xopom.com/UserFiles/Billboard/33_alexandra_stan-mr_saxobeat.mp3");
		SetPosEx(playerid, -1983.0648,1212.5109,75.1797,0, 0, 0);
	}
	//Electronicos SOCIP salida
    else if (PlayerToPointStripped(1, playerid,-1983.0648,1212.5109,75.1797, cx,cy,cz)){
		StopAudioStreamForPlayer(playerid);
 		SetPosEx(playerid, 1773.3176,-1654.7664,14.4287,0, 0, 0);
 	}
	// Alhambra LS
	else if(PlayerToPointStripped(1, playerid,1836.4064,-1682.4403,13.3493, cx,cy,cz))
	{
	    SetPosEx(playerid, 493.3891,-22.7212,1000.6797,0,17,0);
		SetPlayerWalkingStyle(playerid, 0);
	}
	// Alhambra Exit
	else if(PlayerToPointStripped(1, playerid,493.7739,-23.9849,1000.6797, cx,cy,cz))
	{
	    SetPosEx(playerid, 1836.4064,-1682.4403,13.3493,0,0,0);
		SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
	}
		//centro inicial
	if(PlayerToPointStripped(1, playerid,1154.16, -1772.65, 16.60, cx,cy,cz))
	{
	Pause(playerid);
	SetPosEx(playerid,-1855.7919,44.0830,1055.1891,0,14,0);
	PlayerInfo[playerid][pInt] = 14;
	}
	if(PlayerToPointStripped(1, playerid,-1856.1342,41.4557,1055.1118, cx,cy,cz))
	{
	SetPosEx(playerid,1154.16, -1772.65, 16.60,0, 0, 0);
	PlayerInfo[playerid][pInt] = 14;
	}
	// Concesionario Grotty entrada/salida

	else if (PlayerToPointStripped(1.0, playerid,593.6577,-1250.7083,18.2470, cx,cy,cz))
	{

		{
  			Pause(playerid);
			SetPosEx(playerid, 324.8188,-1513.2593,15.7878, 20.0, 0, 0);
			GameTextForPlayer(playerid, "~w~Concesionario", 5000, 1);
		}

	}

	else if (PlayerToPointStripped(1.0, playerid,324.8188,-1513.2593,15.7878, cx,cy,cz))
	{
		{
  			Pause(playerid);
			SetPosEx(playerid, 1402.5096,6.8206,1000.9063, 20.0, 0, 0);
			GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
		}

	}
	/// Entrada al garage concesionario

	else if (PlayerToPointStripped(1, playerid,528.6616,-1293.2672,17.2422, cx,cy,cz))
	{
		{
            SetPlayerInterior(playerid, 1);
			SetPlayerPos(playerid, 1402.5096,6.8206,1000.9063);
			GameTextForPlayer(playerid, "~w~GARAGE", 5000, 1);
		}

	}
	// salida
	else if (PlayerToPointStripped(1.0, playerid,1402.5096,6.8206,1000.9063, cx,cy,cz))
	{
		{
  			Pause(playerid);
  			SetPlayerInterior(playerid, 0);
			SetPosEx(playerid, 528.6616,-1293.2672,17.2422, 20.0, 0, 0);
			GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
		}
    }
	// Banco ENTER
	else if (PlayerToPointStripped(1, playerid,1459.19, -1009.92, 26.84, cx,cy,cz))
	{
	    Pause(playerid);
		SetPosEx(playerid, 363.3442,-1627.5922,39.2349,334.4131+1, 0, 0);
		GText(playerid, "~w~Banco Central~n~de Los Santos", 2000, 1);
	}
	// Banco EXIT
	else if (PlayerToPointStripped(1, playerid,363.3442,-1627.5922,39.2349, cx,cy,cz))
	{
	    SetPosEx(playerid, 1459.19, -1009.92, 26.84,0, 0, 0);
		GText(playerid, "~w~Los Santos", 5000, 1);
	}
   	//Juzgados Enter
	else if (PlayerToPointStripped(1, playerid,1495.35,-1550.79,15.37, cx,cy,cz))
	{
		Pause(playerid);
  		SetPosEx(playerid, 1444.9486,-1465.4956,1616.3123,0,0,0);
		GameTextForPlayer(playerid, "~y~Juzgado",5000,1);
	}
	//Juzgados
	else if (PlayerToPointStripped(1, playerid,1444.9486,-1465.4956,1616.3123, cx,cy,cz))
	{
		//Juzgados
		Pause(playerid);
  		SetPosEx(playerid,1495.35,-1550.79,15.37,0,0,0);
		GameTextForPlayer(playerid, "~r~Los Santos",5000,1);
	}
   	// Boxeo ilegal enter
	else if (PlayerToPointStripped(1, playerid,2266.4553,-1700.2357,13.6902, cx,cy,cz))
	{
		Pause(playerid);
  		SetPosEx(playerid, 2329.1084,-1667.3103,-96.9041,0,0,0);
		GameTextForPlayer(playerid, "~y~Boxeo Ilegal",5000,1);
	}
	//Juzgados ilegal exit
	else if (PlayerToPointStripped(1, playerid,2329.1084,-1667.3103,-96.9041, cx,cy,cz))
	{
   		SetPosEx(playerid,2266.6812,-1700.7478,13.6892,0,0,0);
		GameTextForPlayer(playerid, "~r~Los Santos",5000,1);
	}
	// Hitman ENTER
	else if (PlayerToPointStripped(2, playerid,-265.4772,-2213.2527,29.0420, cx,cy,cz))
	{
		if(Hitman(playerid) || hqlock[HIT] == 0)
		{
		    SetPosEx(playerid, -2175.8762,886.8079,96.9397,0.0000,0,0);
			GameTextForPlayer(playerid, "~w~Hitman",5000,1);
		}
		else return GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	// Hitman exit
	else if (PlayerToPointStripped(2, playerid,-2175.8762,886.8079,96.9397, cx,cy,cz)) SetPosEx(playerid, -265.4772,-2213.2527,29.0420,0, 0, 0);
	// FBI Enter
	else if (PlayerToPointStripped(1, playerid,914.2686,-1004.6304,37.9794, cx,cy,cz))	SetPosEx(playerid,238.6246,138.7285,1003.0234,0,3,0);
	// Fbi Exit
	else if (PlayerToPointStripped(1, playerid,238.6246,138.7285,1003.0234, cx,cy,cz)) SetPosEx(playerid, 914.2686,-1004.6304,37.9794,0, 0, 0);
	// FBI Planta
	else if (PlayerToPointStripped(1, playerid,208.0704,142.1360,1003.0234, cx,cy,cz))	ShowPlayerDialog(playerid, DIALOG_FBI_ELEVATOR, DIALOG_STYLE_LIST, "FBI - ¿Donde deseas ir?", "Garage\nTerraza", "Aceptar", "Cancelar");
	// Fbi Helipuerto
	else if (PlayerToPointStripped(1, playerid,914.0172,-1026.9460,111.0547, cx,cy,cz))	ShowPlayerDialog(playerid, DIALOG_FBI_ELEVATOR, DIALOG_STYLE_LIST, "FBI - ¿Donde deseas ir?", "Garage\nPlanta", "Aceptar", "Cancelar");
	//FBI Garage
	else if(PlayerToPointStripped(1, playerid,914.2907,-1037.3264,31.8984, cx,cy,cz))
	{
		if(Team_FBI(playerid))	ShowPlayerDialog(playerid, DIALOG_FBI_ELEVATOR, DIALOG_STYLE_LIST, "FBI - ¿Donde deseas ir?", "Planta\nTerraza", "Aceptar", "Cancelar");
		else Message(playerid, COLOR_GRAD2, "¡No perteneces al FBI, debes entrar por la puerta principal!");
	}
	// Autoscuela ENTER
	else if (PlayerToPointStripped(1, playerid,1165.4834,1346.0511,10.9219, cx,cy,cz)) SetPosEx(playerid, 1165.5952,1344.7820,10.8125,0,0,0);
	else if (PlayerToPointStripped(1, playerid,1165.5952,1344.7820,10.8125, cx,cy,cz)) SetPosEx(playerid, 1165.4834,1346.0511,10.9219,0,0,0);
	// -=========================== FOOD PLACES SA ===========================- //
	else if (PlayerToPointStripped(1, playerid,364.7064,-11.3221,1001.8516, cx,cy,cz) && GetPlayerInterior(playerid) == 9)
	{
		SetPosEx(playerid, 928.6895,-1353.0563,13.3438,89.7594,0,0);
	    GText(playerid, "~w~Los santos", 5000, 1);
	}
	else if (PlayerToPointStripped(1, playerid,928.6895,-1353.0563,13.3438, cx,cy,cz))
	{
		// CBELL ENTER LS
		if(PlayerInfo[playerid][pPbizzkey] != 22) Till(22, 100);
		SetPosEx(playerid, 364.7064,-11.3221,1001.8516,357.6383, 9, 0);
		GameTextForPlayer(playerid, "~h~~y~Clukin ~w~bell",5000,1);
		SetPlayerShopName(playerid,"FDCHICK");
	}
	else if (PlayerToPointStripped(1, playerid,363.1719,-74.8738,1001.5078, cx,cy,cz) && GetPlayerInterior(playerid) == 10)
	{
		SetPosEx(playerid, 810.6635,-1616.1995,13.5469,267.7108,0,0);
	    GText(playerid, "~w~Los santos", 5000, 1);
	}
	else if (PlayerToPointStripped(1, playerid,810.6635,-1616.1995,13.5469, cx,cy,cz))
	{
		// BSHOT ENTER LS
		if(PlayerInfo[playerid][pPbizzkey] != 21) Till(21, 100);
		SetPosEx(playerid,363.1719,-74.8738,1001.5078,314.0846, 10, 0);
		GameTextForPlayer(playerid, "~w~burger~b~~h~shot",5000,1);
		SetPlayerShopName(playerid,"FDBURG");
	}
	else if (PlayerToPointStripped(1, playerid,372.3216,-133.2976,1001.4922, cx,cy,cz) && GetPlayerInterior(playerid) == 5)
	{
		SetPosEx(playerid, 2105.2844,-1806.5475,13.5547,90.9893,0,0);
	    GText(playerid, "~w~Los santos", 5000, 1);
	}
	else if (PlayerToPointStripped(1, playerid,2105.2844,-1806.5475,13.5547, cx,cy,cz))
	{
		// PIZZA STACK ENTER LS
		SetPosEx(playerid,372.3216,-133.2976,1001.4922, 0, 5, 0);
		GameTextForPlayer(playerid, "~w~pizza~y~stack",5000,1);
		SetPlayerShopName(playerid,"FDPIZZA");
	}
	// -=========================== HQ Locks ========================- //
	// Johnson House - GS HQ
	else if (PlayerToPointStripped(1, playerid,2495.3481,-1691.1355,14.7656, cx,cy,cz))
	{
		if(Team_Groove(playerid) || hqlock[GS] == 0)
		{
			SetPosEx(playerid, 2496.0061,-1693.5201,1014.7422, 181, 3, 1);
			GameTextForPlayer(playerid, "~g~Groove Street HQ",5000,1);
		}
		else return	GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,2496.0039,-1692.2004,1014.7422, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 1)
	{
		//GS Exit
		SetPosEx(playerid, 2495.3718,-1688.8561,14.0673,1 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	}
	// La Hermandad HQ
	else if (PlayerToPointStripped(1, playerid,1888.9288,-2000.8751,13.5469, cx,cy,cz))
	{
		if(Team_Hermandad(playerid) || hqlock[LH] == 0)
		{
			SetPosEx(playerid, 2468.6663,-1698.2738,1013.5078, 181, 2, 1);
			GameTextForPlayer(playerid, "~b~La hermandad HQ",5000,1);
		}
		else return	GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,2468.6663,-1698.2738,1013.5078, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 1)
	{
		//LH Exit
		SetPosEx(playerid, 1888.9288,-2000.8751,13.5469,1 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	}

 	// Moteros entrada
	else if (PlayerToPointStripped(1, playerid,681.5901,-473.3940,16.5363, cx,cy,cz))
	{
		if(Moteros(playerid) || hqlock[MOT] == 0)
		{
		    Pause(playerid);
			SetPosEx(playerid, 1133.0538,-15.0658,1017.7278, 181, 2, 1);
			GameTextForPlayer(playerid, "~b~Bar Hell Angels",5000,1);
			
		}
		else return	GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1133.0538,-15.0658,1017.7278, cx,cy,cz))
		{
		// Moteros exit
		SetPosEx(playerid, 681.5901,-473.3940,16.5363,0, 0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	}
	// Latin Kings HQ
	else if (PlayerToPointStripped(1, playerid,2259.4226,-1019.1196,59.2971, cx,cy,cz))
	{
		if(Team_LK(playerid) || hqlock[LK] == 0)
		{
			SetPosEx(playerid, 260.9743,1237.6493,1084.2578, 181, 9, 50);
			GameTextForPlayer(playerid, "~y~Latin Kings HQ",5000,1);
		}
		else return	GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,260.9743,1237.6493,1084.2578, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 50)
	{
		//LK Exit
		SetPosEx(playerid, 2259.4226,-1019.1196,59.2971,0 ,0 ,0);
		GameTextForPlayer(playerid, "~w~Los santos",5000,1);
	}
	// Teleport Fissore
	else if (PlayerToPointStripped(1, playerid,312.7113,-1770.5463,4.7418, cx,cy,cz)) SetPosEx(playerid, 312.8430,-1767.8142,11.6597,357.2400, 0, 0);
	else if (PlayerToPointStripped(1, playerid,312.8430,-1767.8142,11.6597, cx,cy,cz)) SetPosEx(playerid, 312.7113,-1770.5463,4.7418, 0, 0, 0);
	// Russian HQ
	else if (PlayerToPointStripped(1, playerid,691.2953,-1275.7925,13.5605, cx,cy,cz))
	{
		if(Mafia_Rusa(playerid) || hqlock[RUS] == 0)
		{
			SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 0);
			GameTextForPlayer(playerid, "~w~familia rusa hq",5000,1);
		}
		else return	GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	// Russian HQ Terraza
	else if (PlayerToPointStripped(1, playerid,725.5151,-1276.4104,13.6484, cx,cy,cz))
	{
		if(Mafia_Rusa(playerid) || hqlock[RUS] == 0) SetPosEx(playerid, 718.0347,-1276.3741,17.6484,264.6607, 0, 0);
		else return	GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,718.0347,-1276.3741,17.6484, cx,cy,cz) && GetPlayerVirtualWorld(playerid) == 0)
	{
		//RUS Exit
		SetPosEx(playerid, 725.5151,-1276.4104,13.6484,0 ,0 ,0);
	}
	// Mafia Italiana HQ
	else if (PlayerToPointStripped(1, playerid,1122.7068,-2036.8125,69.8942, cx,cy,cz))
	{
		if(Mafia_Italiana(playerid) || hqlock[ITA] == 0) SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 1);
		else return	GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	// Piratas 4x4 HQ
	else if (PlayerToPointStripped(1, playerid, 1080.9240,-345.3622,73.9847, cx,cy,cz))
	{
	    if(Piratas4x4(playerid) || hqlock[PIR] == 0) SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 3);
	    else return GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
 	}
	// Yakuza
	else if (PlayerToPointStripped(1, playerid,300.0860,-1154.5682,81.3041, cx,cy,cz))
	{
		if(Mafia_Yakuza(playerid) || hqlock[YAK] == 0) SetPosEx(playerid, 1260.8531,-785.5576,1091.9063,264.6607, 5, 2);
		else return	GameTextForPlayer(playerid, "~r~Cerrado",5000,1);
	}
	else if (PlayerToPointStripped(1, playerid,1260.8531,-785.5576,1091.9063, cx,cy,cz))
	{
		//Salida LCN, Rusos, Yakuza, Piratas
		if(GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPosEx(playerid, 1122.7068,-2036.8125,69.8942,0 ,0 ,0);
		}
		else if(GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPosEx(playerid, 691.2953,-1275.7925,13.5605,1 ,0 ,0);
		}
		else if(GetPlayerVirtualWorld(playerid) == 2)
		{
			SetPosEx(playerid, 300.0860,-1154.5682,81.3041,1 ,0 ,0);
		}
		else if(GetPlayerVirtualWorld(playerid) == 3)
		{
		    SetPosEx(playerid, 1080.9240,-345.3622,73.9847,0 ,0 ,0);
  		}
	}
 	//======================== Fin Teleports =========================//
	return 1;
}

function ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_GREY, " ");
		}
	}
	return 1;
}

function CheckCarHealth()
{
    new string[128];
    for (new i=0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
        {
             new Float:health;
             GetVehicleHealth(GetPlayerVehicleID(i),health);
             new newcar = GetPlayerVehicleID(i);
             if (health <= 500 && !IsABike(newcar) && !IsAPlane(newcar))
             {
                 if(engineOn[GetPlayerVehicleID(i)] == 1)
                 {
                    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
                    {
                        new engine,lights,alarm,doors,bonnet,boot,objective;
                    	GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
                    	SetVehicleParamsEx(newcar,0,lights,alarm,doors,bonnet,boot,objective);
                 		engineOn[GetPlayerVehicleID(i)] = false;
                 		format(string, sizeof(string), "* El Vehiculo de  %s se ha apagado bruscamente", PlayerName(i));
						ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				 }
             }
         }
    }
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
	{
    new string[128];
	if(IsPlayerNPC(playerid))
	{
		return 1;
	}
	if(newkeys == 16 && InAmbu[playerid] > 0)
	{
		new Float:X, Float:Y, Float:Z;
		GetVehiclePos(InAmbu[playerid], X, Y, Z);
		SetPlayerPos(playerid, X+4, Y, Z);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		InAmbu[playerid] = 0;
	}
  if(newkeys == KEY_YES){

if(Puertas[playerid] == 0){
         Puertas[playerid] = 1;
CheckForOpenDoor(playerid);

         }
else {
      Puertas[playerid] = 0;
        CheckForCloseDoor(playerid);

           }
   }
	if(newkeys == KEY_FIRE)
	{
	   	if(Tazer[playerid] > 0)
	    {
	        if(IsPlayerInAnyVehicle(playerid)) return Message(playerid, COLOR_GREY, "¡Este comando no se puede utilizar estando en un vehículo.");
	        new suspect = GetClosestPlayer(playerid);
	        if(PlayerTazeado[suspect] > 0) return Message(playerid, COLOR_GREY, "¡Este jugador ya está tazeado!");
	        if(ProxDetectorS(3.0, playerid,suspect))
			{
				if(IsACop(suspect)) return Message(playerid, COLOR_GREY, "¡No puedes tazear a un compañero!");
				new randt = random(4)+1;
				if(randt == 1)
				{
	   				format(string, sizeof(string), "* Oficial %s dispara contra %s, pero no consigue tazear al sujeto", PlayerName(playerid), PlayerName(suspect));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					Tazer[playerid] = 0;
					SetTimerEx("RemoveHand", 7000, false, "i", playerid);
				}
				else
				{
					format(string, sizeof(string), "* Oficial %s dispara contra %s y tazea al sujeto", PlayerName(playerid), PlayerName(suspect));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "* Tazeado (%s)", PlayerName(suspect));
					ProxDetector(30.0,playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
					GameTextForPlayer(suspect, "ARRESTADO", 2500, 3);
					TogglePlayerControllable(suspect, 0);
					ApplyAnimation(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
					PlayerTazeado[suspect] = 1;
					Tazer[playerid] = 0;
					SetTimerEx("RemoveHand", 7000, false, "i", playerid);
					SetTimerEx("UntazePlayer", 20000, false, "i", suspect);
				}
			}
			else Message(playerid, COLOR_GRAD2, "Jugador muy lejos.");
		}
	}
	if(newkeys & KEY_WALK)
	{
	    if(Skate[playerid] > 9)
		{
		    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
		}
	}
	if(newkeys & KEY_CROUCH)
	{
	    if(TutTime[playerid] > 0)
	    {
			TextDrawHideForPlayer(playerid, Film_1);
			TextDrawHideForPlayer(playerid, Film_2);
			TextDrawHideForPlayer(playerid, Tutorial[playerid]);
	        TutTime[playerid] = 5;
	        TutorialStep_Forward(playerid);
	    }
 	}
	if(newkeys & KEY_SPRINT)
    {
    	if(IsPlayerConnected(playerid))
		{
  			if(PlayerDrunk[playerid] > 9) { ApplyAnimation(playerid,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[playerid]*1000); }
  			else if(Skate[playerid] > 9)
  			{
  			    if(Skate[playerid] == 10) ApplyAnimation(playerid,"SKATE","skate_idle",4.0,1,1,1,1,500);
  			    else if(Skate[playerid] == 20) ApplyAnimation(playerid,"SKATE","skate_run",4.0,1,1,1,1,500);
  			    else if(Skate[playerid] == 30) ApplyAnimation(playerid,"SKATE","skate_sprint",4.0,1,1,1,1,500);
  			}
  			else if(PlayerCuffed[playerid] > 0 || Rescued[playerid] > 0) 	ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
            else if(TutTime[playerid] > 0)
			{
			    if(TutTime[playerid] == 5)   TutTime[playerid] = 15;
			    else if(TutTime[playerid] == 15)   TutTime[playerid] = 25;
			    else if(TutTime[playerid] == 25)   TutTime[playerid] = 35;
			    else if(TutTime[playerid] == 35)   TutTime[playerid] = 50;
			    else if(TutTime[playerid] == 50)   TutTime[playerid] = 65;
			    else if(TutTime[playerid] == 65)   TutTime[playerid] = 80;
			    else if(TutTime[playerid] == 80)   TutTime[playerid] = 90;
			    else if(TutTime[playerid] == 90)   TutTime[playerid] = 105;
			    else if(TutTime[playerid] == 105)   TutTime[playerid] = 120;
			    else if(TutTime[playerid] == 120)   TutTime[playerid] = 135;
			    else if(TutTime[playerid] == 135)   TutTime[playerid] = 150;
			    else if(TutTime[playerid] == 150)   TutTime[playerid] = 165;
			    else if(TutTime[playerid] == 165)   TutTime[playerid] = 180;
			    else if(TutTime[playerid] == 180)   TutTime[playerid] = 195;
			    else if(TutTime[playerid] == 195)   TutTime[playerid] = 210;
			    else if(TutTime[playerid] == 210)   TutTime[playerid] = 225;
			    else if(TutTime[playerid] == 225)   TutTime[playerid] = 240;
			    else if(TutTime[playerid] == 240)   TutTime[playerid] = 250;
			    else if(TutTime[playerid] == 250)   TutTime[playerid] = 260;
			    else if(TutTime[playerid] == 260)   TutTime[playerid] = 275;
			    else if(TutTime[playerid] == 275)   TutTime[playerid] = 290;
			    else if(TutTime[playerid] == 290)   TutTime[playerid] = 305;
			    else if(TutTime[playerid] == 305)   TutTime[playerid] = 315;
			    else if(TutTime[playerid] == 315)   TutTime[playerid] = 330;
			    else if(TutTime[playerid] == 330)   TutTime[playerid] = 340;
			    TutorialStep_Forward(playerid);
			}
			else if(Accesory[playerid] > 0)
			{
			    if(Accesory[playerid] == 1) // Glasses
			    {
					switch(ClothesID[playerid])
					{
					    case 19005: { Accesory_Test(playerid, 3, 19006, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19006: { Accesory_Test(playerid, 3, 19007, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19007: { Accesory_Test(playerid, 3, 19008, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19008: { Accesory_Test(playerid, 3, 19009, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19009: { Accesory_Test(playerid, 3, 19010, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19010: { Accesory_Test(playerid, 3, 19011, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19011: { Accesory_Test(playerid, 3, 19012, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19012: { Accesory_Test(playerid, 3, 19013, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19013: { Accesory_Test(playerid, 3, 19014, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19014: { Accesory_Test(playerid, 3, 19015, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19015: { Accesory_Test(playerid, 3, 19016, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19016: { Accesory_Test(playerid, 3, 19017, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19017: { Accesory_Test(playerid, 3, 19018, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19018: { Accesory_Test(playerid, 3, 19019, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19019: { Accesory_Test(playerid, 3, 19020, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19020: { Accesory_Test(playerid, 3, 19021, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19021: { Accesory_Test(playerid, 3, 19022, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19022: { Accesory_Test(playerid, 3, 19023, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19023: { Accesory_Test(playerid, 3, 19024, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19024: { Accesory_Test(playerid, 3, 19025, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19025: { Accesory_Test(playerid, 3, 19026, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19026: { Accesory_Test(playerid, 3, 19027, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19027: { Accesory_Test(playerid, 3, 19028, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19028: { Accesory_Test(playerid, 3, 19029, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19029: { Accesory_Test(playerid, 3, 19030, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19030: { Accesory_Test(playerid, 3, 19031, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19031: { Accesory_Test(playerid, 3, 19032, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19032: { Accesory_Test(playerid, 3, 19033, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19033: { Accesory_Test(playerid, 3, 19034, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    case 19034: { Accesory_Test(playerid, 3, 19035, 2, 0.105227, 0.044110, -0.000622, 91.258476, 92.199562, 1.592636, 1.000000, 1.000000, 1.000000, 100); }
					    default: 	{ClothesID[playerid] = 19005; Message(playerid, COLOR_GRAD2, "Has visto todas las gafas. Apreta ESPACIO para volver a verlas"); }
					}
				}
				else if(Accesory[playerid] == 2) // Bandana
			    {
					switch(ClothesID[playerid])
					{
					    case 18910: {Accesory_Bandana(playerid, 18917);}
					    case 18917: {Accesory_Bandana(playerid, 18913);}
					    case 18913: {Accesory_Bandana(playerid, 18916);}
					    case 18916: {Accesory_Bandana(playerid, 18915);}
					    case 18915: {Accesory_Bandana(playerid, 18912);}
					    default: 	{ClothesID[playerid] = 18910; Message(playerid, COLOR_GRAD2, "Has visto todas las bandanas. Apreta ESPACIO para volver a verlas"); }
					}
				}
				else if(Accesory[playerid] == 3) // Hat
			    {
					switch(ClothesID[playerid])
					{
					    case 18925: { Accesory_Test(playerid, 2, 18926, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18926: { Accesory_Test(playerid, 2, 18927, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18927: { Accesory_Test(playerid, 2, 18928, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18928: { Accesory_Test(playerid, 2, 18929, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18929: { Accesory_Test(playerid, 2, 18930, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18930: { Accesory_Test(playerid, 2, 18931, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18931: { Accesory_Test(playerid, 2, 18932, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18932: { Accesory_Test(playerid, 2, 18933, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18933: { Accesory_Test(playerid, 2, 18934, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    case 18934: { Accesory_Test(playerid, 2, 18935, 2, 0.166478, -0.010493, -0.003216, 330.359344, 2.471933, 350.632476, 1.000000, 1.000000, 1.084919, 150); }
					    default: 	{ClothesID[playerid] = 18925; Message(playerid, COLOR_GRAD2, "Has visto todas las gorras. Apreta ESPACIO para volver a verlas"); }
					}
				}
			}
		}
	}
	if(newkeys & KEY_FIRE && newkeys & KEY_HANDBRAKE)
	{
	    if(RecentlyShot[playerid] == 0)
		{
	        RecentlyShot[playerid] = 1;
			if(GetPlayerWeapon(playerid) == 34)
			{
		        new Float:blahx, Float:blahy, Float:blahz;
				HeadshotCheck(playerid, blahx, blahy, blahz);
		        return 1;
		    }
			return 1;
		}
		return 1;
 	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
    	if(IsPlayerConnected(playerid))
		{
		    if(RStep[playerid] > 0)
		    {
		        if(RStep[playerid] == 1)
		        {
		            new mtext[12],otext[12];
		            if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
		            if(PlayerInfo[playerid][pOrigin] == 1) otext = "Argentina";
		            if(PlayerInfo[playerid][pOrigin] == 2) otext = "Europa";
		            if(PlayerInfo[playerid][pOrigin] == 3) otext = "Asia";
		            if(PlayerInfo[playerid][pOrigin] == 4) otext = "Africa";
		            if(PlayerInfo[playerid][pOrigin] == 5) otext = "Oceania";
					if(RegConfig[playerid] == 1)
					{
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~>~~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?", mtext);
					    TDStr(RegDraw[playerid], string);
					    PlayerInfo[playerid][pChar] = GetPlayerSkin(playerid);
					    RegConfig[playerid] = 2;
					    RegText[playerid] = 0;
					    return 1;
					}
					else if(RegConfig[playerid] == 2)
					{
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
					    RegConfig[playerid] = 3;
					    RegText[playerid] = 1;
					    PlayerInfo[playerid][pOrigin] = 1;
					    return 1;
					}
					else if(RegConfig[playerid] == 3)
					{
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge],otext);
					    TDStr(RegDraw[playerid], string);
						RStep[playerid] = 1;
						RegText[playerid] = 1;
						RegConfig[playerid] = 4;
					    return 1;
					}
					else if(RegConfig[playerid] == 4)
					{
					    ClearChatbox(playerid, 15);
					    TextDrawHideForPlayer(playerid, RegDraw[playerid]);
					    TextDrawHideForPlayer(playerid, RegInfo);
					    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1)
					    RStep[playerid] = 0;
					    RegText[playerid] = 0;
						RegConfig[playerid] = 0;
      					SetTimerEx("Reg_ShowDNI", 3000, false, "i", playerid);
						GameTextForPlayer(playerid, "~p~Configurando ~w~DNI", 3000, 3);
						SetTimerEx("RegMsn", 6000, false, "i", playerid);
					}
		        }
		    }
		    else if (GetPlayerState(playerid) == 1)
			{
				TeleportPlayer(playerid);
				if(ReduceTime[playerid] == 0)
				{
				    new Float:hp; GetPlayerHealth(playerid, hp);
					if(PlayerToPoint(1.0,playerid,-36.3182,-56.8905,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-19.1974,-56.8366,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-35.9060,-139.2014,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-15.2743,-139.2626,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+5);
					}
					else if(PlayerToPoint(1.0,playerid,-16.7039,-139.3292,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
				}
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if(PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
						if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0)
						{
							SetPosEx(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz],0,HouseInfo[i][hInt],HouseInfo[i][hWorld]);
							PlayerInfo[playerid][pEntered] = i;
						}
						else GameTextForPlayer(playerid, "~r~Cerrado", 5000, 1);
					}
					else if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					{
				    	if(PlayerInfo[playerid][pEntered] == i)
				    	{
				    	    SetPosEx(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez],0,0,0);
							PlayerInfo[playerid][pEntered] = -1;
						}
					}
				}
			}
			else if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
			}
		}
	}
    return 1;
}

function StartingTheVehicle(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            new RandomStart;
    		new string[128];
    		new engine,lights,alarm,doors,bonnet,boot,objective;
    		new newcar = GetPlayerVehicleID(playerid);
    		GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
            RandomStart = random(8);
            switch(RandomStart)
            {
                case 0,1,2,3,4,6,7:
                {
					SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
                    format(string, sizeof(string), "* %s enciende el motor de su vehículo.", PlayerName(playerid));
                    ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
                    gEngine[playerid] = 0;
                    engineOn[newcar] = true;
                }
                case 5:
                {
                    format(string, sizeof(string), "* El vehículo de %s no enciende.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, MORADO_ADMIN,MORADO_ADMIN,MORADO_ADMIN,MORADO_ADMIN,MORADO_ADMIN);
					gEngine[playerid] = 0;
					engineOn[newcar] = false;
                }
            }
        }
		else
		{
		    gEngine[playerid] = 0;
		}
    }
    return 1;
}

INI:hq_locks[](name[], value[])
{
	INI_Int("Groove", 			hqlock[GS]);
	INI_Int("Moteros", 			hqlock[MOT]);
    INI_Int("La_Hermandad", 	hqlock[LH]);
    INI_Int("Latin_Kings", 		hqlock[LK]);
    INI_Int("La_Cosa_Nostra", 	hqlock[ITA]);
    INI_Int("Rusos", 			hqlock[RUS]);
    INI_Int("Hitman",           hqlock[HIT]);
    INI_Int("Yakuza", 			hqlock[YAK]);
    INI_Int("Piratas",          hqlock[PIR]);
   	INI_Int("Ballas",          	hqlock[BL]);
    return 0;
}

SaveHQLocks()
{
    new
    	INI:ini = INI_Open("hq_locks.ini");
			INI_WriteInt(ini, "Groove", 			hqlock[GS]);
			INI_WriteInt(ini, "Moteros", 			hqlock[MOT]);
			INI_WriteInt(ini, "La_Hermandad", 		hqlock[LH]);
			INI_WriteInt(ini, "Latin_Kings", 		hqlock[LK]);
			INI_WriteInt(ini, "La_Cosa_Nostra", 	hqlock[ITA]);
			INI_WriteInt(ini, "Rusos", 				hqlock[RUS]);
			INI_WriteInt(ini, "Hitman",             hqlock[HIT]);
			INI_WriteInt(ini, "Yakuza", 			hqlock[YAK]);
			INI_WriteInt(ini, "Piratas",            hqlock[PIR]);
			INI_WriteInt(ini, "Ballas",         	hqlock[BL]);
		INI_Close(ini);
}

INI:stuff[](name[], value[])
{
    INI_Int("Jackpot", 	 	Jackpot);
    INI_Int("Tax",			Tax);
    INI_Int("TaxValue", 	TaxValue);
    INI_Int("Blood", 		Blood);
    return 0;
}

function SaveStuff()
{
    new
    	INI:ini = INI_Open("stuff.ini");
			INI_WriteInt(ini, "Jackpot", 	Jackpot);
			INI_WriteInt(ini, "Tax",		Tax);
			INI_WriteInt(ini, "TaxValue", 	TaxValue);
			INI_WriteInt(ini, "Blood", 		Blood);
		INI_Close(ini);
}

INI:robs[](name[], value[])
{
	INI_Int("Piratas",      RPirata);
	INI_Int("Groove",		RGroove);
	INI_Int("Hermandad",    RHerman);
	INI_Int("LKings",       RLKings);
	INI_Int("Italianos",    RLCN);
	INI_Int("Yakuza",       RYakuza);
	INI_Int("Rusos",        RRusos);
	INI_Int("Ballas",     	RBallas);
	return 0;
}

function SaveRobs()
{
    new
    	INI:ini = INI_Open("robs.ini");
    	    INI_WriteInt(ini, "Piratas",        RPirata);
    		INI_WriteInt(ini, "Groove",     	RGroove);
    		INI_WriteInt(ini, "Hermandad",  	RHerman);
    		INI_WriteInt(ini, "LKings",     	RLKings);
    		INI_WriteInt(ini, "Italianos",  	RLCN);
    		INI_WriteInt(ini, "Yakuza",     	RYakuza);
    		INI_WriteInt(ini, "Rusos",      	RRusos);
    		INI_WriteInt(ini, "Ballas",        RBallas);
    	INI_Close(ini);
}

INI:fondos[](name[], value[])
{
	INI_Int("LSPD",     	Fondos[LSPD]);
	INI_Int("FBI",      	Fondos[FBI]);
	INI_Int("SAMUR",    	Fondos[SAMUR]);
	INI_Int("CNN",      	Fondos[CNN]);
	INI_Int("SAEM",     	Fondos[SAEM]);
	INI_Int("Italianos",	Fondos[LCN]);
	INI_Int("Yakuza",   	Fondos[YAK]);
	INI_Int("Rusos",    	Fondos[RUS]);
	INI_Int("Piratas",  	Fondos[PIR]);
	return 0;
}

function SaveFunds()
{
	new
		INI:ini = INI_Open("fondos.ini");
	    	INI_WriteInt(ini, "LSPD",       Fondos[LSPD]);
	    	INI_WriteInt(ini, "FBI",        Fondos[FBI]);
	    	INI_WriteInt(ini, "SAMUR",      Fondos[SAMUR]);
	    	INI_WriteInt(ini, "CNN",        Fondos[CNN]);
	    	INI_WriteInt(ini, "SAEM",       Fondos[SAEM]);
	    	INI_WriteInt(ini, "Italianos",  Fondos[LCN]);
	    	INI_WriteInt(ini, "Yakuza",     Fondos[YAK]);
	    	INI_WriteInt(ini, "Rusos",      Fondos[RUS]);
	    	INI_WriteInt(ini, "Piratas",    Fondos[PIR]);
    	INI_Close(ini);
}

function ClearKnock(playerid)
{
	new	string[128];
	Connect
		if(KnockedDown[playerid] == 1){
			KnockedDown[playerid] = 0,
			format(string, sizeof(string), "* %s se recupera del golpe.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ClearAnimations(playerid);
		}
		else KnockedDown[playerid] = 0;
	}
}

stock HeadshotCheck(playerid, &Float:x, &Float:y, &Float:z)
{
	new Float:fx,Float:fy,Float:fz;
	GetPlayerCameraFrontVector(playerid, fx, fy, fz);

 	new Float:cx,Float:cy,Float:cz;
 	GetPlayerCameraPos(playerid, cx, cy, cz);

	for(new Float:i = 0.0; i < 50; i = i + 0.5)
	{
 		x = fx * i + cx;
		y = fy * i + cy;
		z = fz * i + cz;

		#if defined SHOWPATH
		#endif

		for(new player = 0; player < MAX_PLAYERS; player ++)
		{
		    if(IsPlayerConnected(playerid))
		    {
		    	if(player != playerid)
				{
		    		if(GetPlayerSpecialAction(player) == SPECIAL_ACTION_DUCK)
					{
		        		if(IsPlayerInRangeOfPoint(player, 0.3, x, y, z))
		        		{
		            		SetHP(player, 0.0);
		            		CallRemoteFunction("OnPlayerDeath", "ddd", player, playerid, 34);
		        		}
					}
					else
					{
		    			if(IsPlayerInRangeOfPoint(player, 0.3, x, y, z - 0.7))
						{
							SetHP(player, 0.0);
							CallRemoteFunction("OnPlayerDeath", "ddd", player, playerid, 34);
						}
					}
				}
			}
		}
	}
	return 1;
}

function RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}

	ResetPlayerWeapons(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    {
			SafeGivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return 1;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(Distance <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}

stock Float:GetDistance(playerid, Float:x, Float:y)
{
	new Float:x2, Float:y2, Float:z2;
	GetPlayerPos(playerid, x2, y2, z2);
	x = x - x2;
	y = y - y2;
	return floatsqroot(x*x+y*y);
}

function VolverApostar(playerid)
{
	Connect
	    YaAposto[playerid] = 0;
 	}
}

function EnableQuest(playerid)
{
	Connect
    	duda[playerid] = 0;
	}
}

function ReportReset(playerid)
{
	Connect
		JustReported[playerid] = 0;
	}
}

function ReduceTimer(playerid)
{
	Connect
	    ReduceTime[playerid] = 0;
	}
}

function FreezePlayer(playerid)	{	TogglePlayerControllable(playerid, 0);	}

function UnfreezePlayer(playerid)	{	TogglePlayerControllable(playerid, 1);	}

function CheckForOpenDoor(playerid)
{
	new nick[24];	GetPlayerName(playerid,nick,24);
	if(Team_LSPD(playerid))
    {
    
        if (PlayerToPoint(10, playerid,1589.053344,-1638.123168,14.122960))
		{
      		MoveDynamicObject(pdgate1,1599.053344,-1638.123168,14.122960, 0.8, -1000.0, -1000.0, -1000.0);
      		return 1;
		}
		else if (PlayerToPoint(15, playerid,1545.7398681641, -1627.7280273438, 15.206203460693))
		{
      		MoveDynamicObject(pdgate2,1545.7392578125, -1627.7275390625, 20.381204605103, 3.0, -1000.0, -1000.0, -1000.0);
      		return 1;
		}
		else Message(playerid, COLOR_GRAD2,"¡No hay señal!");
	}
	else if(Team_NG(playerid))
	{
		if(PlayerToPoint(20, playerid, 2758.20, -2565.70, 16.20))
		{
		    MoveDynamicObject(saem1,2758.20, -2565.70, 8.15, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2671.70, -2504.00, 15.30))
		{
		    MoveDynamicObject(saem2,2671.70, -2504.00, 8.85, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2617.10, -2404.50, 15.30))
		{
		    MoveDynamicObject(saem3,2617.10, -2404.50, 9.34, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
 	}
	else if(Team_SAMUR(playerid))
	{
	    if(PlayerToPoint(20, playerid, 1140.1462,-1290.9423,13.5708))
	    {
	        MoveDynamicObject(hospitalgate, 1140.54, -1291.09, 9.14, 3.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
 	}
 	else if(Team_FBI(playerid))
 	{
 	    if(PlayerToPoint(20, playerid, 938.3064,-1031.1683,31.8984))
 	    {
 	        SetDynamicObjectRot(fbibarra, 0.00, 26.00, 5.00);
 	        return 1;
 	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
  	}
	else if(Mafia_Yakuza(playerid))
	{
	    if(PlayerToPoint(30, playerid, 321.5790,-1188.6155,76.3494))
	    {
	        MoveDynamicObject(yakuzagate, 321.38, -1188.19, 72.29, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
		} else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
	}
	else if(Mafia_Italiana(playerid))
	{
 		if(PlayerToPoint(30, playerid,1426.6943359375, -1882.537109375, 19.80619430542))
	    {
	        MoveDynamicObject(crgate,1426.6943359375, -1882.537109375, 19.80619430542, 1.5, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else if(Piratas4x4(playerid))
	{
	    if(PlayerToPoint(20, playerid, 1025.3292,-366.0606,73.9231))
	    {
	        MoveDynamicObject(piratas, 1026.70, -366.81, 70.02, 2.5, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal");
 	}
	else if(Hitman(playerid))
	{
	    if(PlayerToPoint(25, playerid, -284.00, -2190.38, 30.40))
	    {
	        MoveDynamicObject(mafia2,-284.00, -2190.38, 24.76, 2.5, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else if(Mafia_Rusa(playerid))
	{
	    if (PlayerToPoint(30, playerid,787.20361328,-1152.45361328,25.40438461))
	    {
         	MoveDynamicObject(rusg,787.20312500,-1152.45312500,29.85149193, 2.0, -1000.0, -1000.0, -1000.0);
         	return 1;
	    }
	    if (PlayerToPoint(30, playerid,662.1038,-1228.5162,15.5905))
	    {
	        MoveDynamicObject(rusg2,658.6991,-1225.7975,1.7825, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    }
	    if (PlayerToPoint(30, playerid,665.0096,-1304.3438,13.4609))
	    {
	        MoveDynamicObject(rusg3,665.3931,-1308.6857,20.6859, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else if(Team_Mecanicos(playerid))
	{
		if (PlayerToPoint(20, playerid,1577.1700000,-2184.8200000,12.5400000))
  		{
	        MoveDynamicObject(meca1,1569.100000,-2184.8200000,12.5400000, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
        }
     	if (PlayerToPoint(15, playerid,1637.2500000,-2184.8000000,12.5400000))
  		{
	        MoveDynamicObject(meca2,1629.2500000,-2184.8000000,12.5400000, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    }
	    if (PlayerToPoint(20, playerid,1634.3400000,-2165.8900000,14.5700000))
  		{
	        MoveDynamicObject(meca3,1634.3400000,-2165.8900000,5.5700000, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
	}

	else if(Journalist(playerid))
    {
      	if (PlayerToPoint(30, playerid,781.77209500,-1330.31884800,12.68660500))
      	{
	       	MoveDynamicObject(tvp, 773.89648400,-1330.31884800,12.68660500, 5.0, -1000.0, -1000.0, -1000.0);
	       	return 1;
       }
       else if (PlayerToPoint(30, playerid,774.11425781,-1384.98632812,12.92022705))
      	{
	       	MoveDynamicObject(tvp1, 765.11425781,-1384.98632812,12.92022705, 5.0, -1000.0, -1000.0, -1000.0);
	       	return 1;
       }
       else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	if(!strcmp(nick, "Charli_Navarro", true))
	{
	    if (PlayerToPoint(30, playerid,1246.0033,-767.3727,91.1473))
	    {
	        MoveDynamicObject(lucianogate,1256.2033,-767.3727,91.1473, 2.2, -1000.0, -1000.0, -1000.0);
	        return 1;
	    }
	}
	if(!strcmp(nick, "Tomas_Fissore", true))
	{
	    if (PlayerToPoint(30, playerid, 319.78, -1776.09, 6.60)) {
	        MoveDynamicObject(fissore, 319.78, -1776.09, 0.66, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    }
	}
 	else Message(playerid, COLOR_GREY,"Usted no tiene un mando a distancia.");
    return 1;
}

function CheckForCloseDoor(playerid)
{
    new nick[24];	GetPlayerName(playerid,nick,24);
	if(Team_LSPD(playerid))
    {
        if (PlayerToPoint(15, playerid,1589.053344,-1638.123168,14.122960))
		{
			MoveDynamicObject(pdgate1,1589.053344,-1638.123168,14.122960, 0.97, -1000.0, -1000.0, -1000.0);
			return 1;
		}
		else if (PlayerToPoint(15, playerid,1545.7398681641, -1627.7280273438, 15.206203460693))
		{
      		MoveDynamicObject(pdgate2, 1545.7398681641, -1627.7280273438, 15.206203460693, 3.0, -1000.0, -1000.0, -1000.0);
      		return 1;
		} else Message(playerid, COLOR_GREY,"No hay señal!");
	}

	else if(Team_NG(playerid))
 	{
		if(PlayerToPoint(20, playerid, 2758.20, -2565.70, 16.20))
		{
		    MoveDynamicObject(saem1, 2758.20, -2565.70, 16.20, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2671.70, -2504.00, 15.30))
		{
		    MoveDynamicObject(saem2, 2671.70, -2504.00, 15.30, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else if(PlayerToPoint(20, playerid, 2617.10, -2404.50, 15.30))
		{
		    MoveDynamicObject(saem3, 2617.10, -2404.50, 15.30, 2.5, -1000.0, -1000.0, -1000.0);
		    return 1;
		}
		else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
 	}
 	else if(Team_SAMUR(playerid))
	{
	    if(PlayerToPoint(20, playerid, 1140.1462,-1290.9423,13.5708))
	    {
	        MoveDynamicObject(hospitalgate, 1140.54, -1291.09, 15.40, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
 	}
	else if(Team_Mecanicos(playerid))
	{
		if (PlayerToPoint(20, playerid,1577.1700000,-2184.8200000,12.5400000))
  		{
	        MoveDynamicObject(meca1,1577.1700000,-2184.8200000,12.5400000, 1.0, -1000.0, -1000.0, -1000.0);
	        return 1;
        }
     	if (PlayerToPoint(20, playerid,1637.2500000,-2184.8000000,12.5400000))
  		{
	        MoveDynamicObject(meca2,1637.2500000,-2184.8000000,12.5400000, 1.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    }
	    if (PlayerToPoint(20, playerid,1646.43188477,-2152.23681641,14.79671288))
  		{
	        MoveDynamicObject(meca3,1634.3400000,-2165.8900000,14.5700000, 1.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
	}
	else if(Team_FBI(playerid))
 	{
 	    if(PlayerToPoint(20, playerid, 938.3064,-1031.1683,31.8984))
 	    {
 	        SetDynamicObjectRot(fbibarra, 0.00, 90.00, 358.10);
 	        return 1;
 	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
  	}
  	else if(Mafia_Yakuza(playerid))
	{
	    if(PlayerToPoint(20, playerid, 321.5790,-1188.6155,76.3494))
	    {
	        MoveDynamicObject(yakuzagate, 321.32, -1188.11, 78.08, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
		} else Message(playerid, COLOR_GRAD2, "¡No hay señal!");
	}
	else if(Mafia_Italiana(playerid))
	{
 		if(PlayerToPoint(30, playerid,1426.6943359375, -1882.537109375, 19.80619430542))
	    {
	        MoveDynamicObject(crgate,1426.6943359375, -1882.537109375, 15.131196975708,2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else if(Piratas4x4(playerid))
	{
	    if(PlayerToPoint(20, playerid, 1025.3292,-366.0606,73.9231))
	    {
	        MoveDynamicObject(piratas, 1026.70, -366.81, 75.70, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GRAD2, "¡No hay señal");
 	}
 	else if(Hitman(playerid))
	{
	    if(PlayerToPoint(25, playerid, -284.00, -2190.38, 30.40))
	    {
	        MoveDynamicObject(mafia2, -284.00, -2190.38, 30.40, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    } else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else if(Mafia_Rusa(playerid))
	{
	    if (PlayerToPoint(30, playerid,787.20361328,-1152.45361328,25.40438461))
	    {
         	MoveDynamicObject(rusg,787.20361328,-1152.45361328,25.40438461, 2.0, -1000.0, -1000.0, -1000.0);
         	return 1;
	    }
	    if (PlayerToPoint(30, playerid,662.1038,-1228.5162,15.5905))
	    {
	        MoveDynamicObject(rusg2,658.68890381,-1226.62780762,17.62639618, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    }
	    if (PlayerToPoint(30, playerid,665.0096,-1304.3438,13.4609))
	    {
	        MoveDynamicObject(rusg3,665.05010986,-1310.76293945,15.35269642, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    }
	    else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	else if(Journalist(playerid))
    {
   		if (PlayerToPoint(20, playerid,781.77209500,-1330.31884800,12.68660500))
      	{
	       	MoveDynamicObject(tvp, 781.77209500,-1330.31884800,12.68660500,5.0, -1000.0, -1000.0, -1000.0);
	       	return 1;
     	}
       else if (PlayerToPoint(20, playerid,774.11425781,-1384.98632812,12.92022705))
		{
	       	MoveDynamicObject(tvp1, 774.11425781,-1384.98632812,12.92022705,5.0, -1000.0, -1000.0, -1000.0);
	       	return 1;
  		}
       else Message(playerid, COLOR_GREY,"¡No hay señal!");
	}
	if(!strcmp(nick, "Charli_Navarro", true))
	{
	    if (PlayerToPoint(30, playerid,1246.0033,-767.3727,91.1473))
	    {
	        MoveDynamicObject(lucianogate, 1246.0033,-767.3727,91.1473, 1.5, -1000.0, -1000.0, -1000.0);
	        return 1;
	    }
	}
	if(!strcmp(nick, "Tomas_Fissore", true))
	{
	    if (PlayerToPoint(30, playerid, 319.78, -1776.09, 6.60)) {
	        MoveDynamicObject(fissore, 319.78, -1776.09, 6.60, 2.0, -1000.0, -1000.0, -1000.0);
	        return 1;
	    }
	}
	else Message(playerid, COLOR_GREY,"Usted no tiene un mando a distancia.");
    return 1;
}

function OnPlayerCheckStat(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	    {
			if(PlayerToPoint(4, playerid, 246.5186,108.5494,1003.2188) && !IsACop(playerid) && Revisado[playerid] == 0)
			{
	            ProxDetector(40.0, playerid, "Seguridad: Hola, le vamos a proceder a quitar todo aquello que sea peligroso.",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	            SetTimerEx("CleanPlayer", 5000, false, "i", playerid);
	            Revisado[playerid] = 1;
			}
			return 1;
		}
	}
	return 1;
}

function CleanPlayer(playerid)
{
	if(IsPlayerConnected(playerid))
 	{
  		if(PlayerToPoint(4, playerid, 246.5186,108.5494,1003.2188))
    	{
     		ResetPlayerWeapons(playerid);
       		ProxDetector(40.0, playerid, "Seguridad: Limpio, puede proceder.",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
         	MoveDynamicObject(u7d3, 249.31018066406, 110.8671875, 1002.21875, 1.0, -1000.0, -1000.0, -1000.0);
          	Revisado[playerid] = 1;
           	MoveDynamicObject(u7d3, 247.81130981445, 110.8671875, 1002.21875, 0.5, -1000.0, -1000.0, -1000.0);
            return 1;
		}
	}
	return 1;
}

function RequestNPCLoad(playerid,npcname[])
{
	if(IsPlayerNPC(playerid))
	{
        if(!strcmp(npcname, "Beautiful_You", true))
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerSkin(playerid, 28);
            return 1;
        }
        if(!strcmp(npcname, "Homero_Rubio", true))
        {
            SetPlayerInterior(playerid, 7);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerSkin(playerid, 179);
            return 1;
        }
        if(!strcmp(npcname, "Raul_Blanco", true))
        {
            SetPlayerInterior(playerid, 7);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerSkin(playerid, 28);
            return 1;
        }
        if(!strcmp(npcname, "Agente_Richard", true))
        {
            SetPlayerInterior(playerid, 10);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerSkin(playerid, 163);
			SafeGivePlayerWeapon(playerid, 31, 100);
            return 1;
        }
        if(!strcmp(npcname, "Roberto_Blanco", true))
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerSkin(playerid, 236);
        }
        if(!strcmp(npcname, "Padre_Torres", true))
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerSkin(playerid, 68);
            return 1;
        }
        if(!strcmp(npcname, "Angie_Torres", true))
        {
            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerSkin(playerid, 11);
            return 1;
        }
	}
	return 1;
}

function RequestNPCJoin()
{
    npctoggle = 1;
	ConnectNPC("Beautiful_You","Black_Market");
    ConnectNPC("Homero_Rubio","Ammunation_Shop");
    ConnectNPC("Raul_Blanco","Ammu_Info");
    ConnectNPC("Agente_Richard","U7_Guard");
    ConnectNPC("Roberto_Blanco","NPC_Fishing");
    ConnectNPC("Padre_Torres","NPC_Iglesia");
    ConnectNPC("Angie_Torres","Casino_Bot");
}

function RequestNPCTalk(playerid,Float:range)
{
    if(GetClosestNPC(playerid,range) != -1)
	{
		new npcname[MAX_PLAYER_NAME];
		GetPlayerName(GetClosestNPC(playerid,range), npcname, sizeof(npcname));
		if(!strcmp(npcname, "Beautiful_You", true))
	    {
			CamelMenu(playerid);
			return 1;
		}
		if(!strcmp(npcname, "Homero_Rubio", true))
	    {
	        if(PlayerInfo[playerid][pGunLic] == 0) return Message(playerid, COLOR_GRAD2, " Vendedor: ¡No le puedo vender armas, usted no tiene licencia");
	        if(CheckMoney(playerid, 1))
	        {
				ShowAmmunation(playerid);
				ProxDetector(25.0, playerid, "Staff dice: ¿Buenas, que desea?",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				return 1;
			}
			else
			{
		        GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~", 5000, 3);
				ProxDetector(25.0, playerid, "Staff dice: Lo siento, no puedo fiarte mas",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				return 1;
			}
		}
		if(!strcmp(npcname, "Raul_Blanco", true))
	    {
	        ShowPlayerDialog(playerid, DIALOG_AMMU_MANAGER,DIALOG_STYLE_LIST,"Ammunation", "Deseo mejorar mis habilidades a través de libros comprados\nQuiero informarme sobre mis habilidades con las diferentes armas", "Aceptar", "Cancelar");
		}
		if(!strcmp(npcname, "Agente_Richard", true))
	    {
            ShowPlayerDialog(playerid,U7_OPEN,DIALOG_STYLE_LIST,">> Empresa de Investigacion <<","Abrir la puerta de seguridad\nAlarma! Avisar policía","Aceptar","Cancelar");
		}
		if(!strcmp(npcname, "Padre_Torres", true))
		{
		    if(GetPlayerMoney(playerid) < 8000) return Message(playerid, COLOR_GRAD2, "¡No tienes dinero para pagar el valor de la ceremonia!");
		    if(PlayerInfo[playerid][pMarried] == 1) return Message(playerid, COLOR_GRAD2, "¡Estas casado, no puedes usar este comando ahora!");
		    if(PlayerInfo[playerid][pSex] == 2) return Message(playerid, COLOR_GRAD2, "¡No puedes usar este comando siendo mujer!");
		    ShowPlayerDialog(playerid, MATRIMONIO_DIALOG, DIALOG_STYLE_INPUT,"{018CFE}Iglesia", "{FFFFFF}Por favor, ingrese la ID de la persona con\n la que quieres contraer matrimonio.","Aceptar","Cancelar");
		}
		if(!strcmp(npcname, "Roberto_Blanco", true))
		{
            ShowPlayerDialog(playerid,DIALOG_PUERTO,DIALOG_STYLE_LIST,"Puerto de Los Santos","{FFFFFF}Implementos de Pesca\nComprar Carnada\nVender Peces","Aceptar","Cancelar");
		}
		if(!strcmp(npcname, "Angie_Torres", true))
		{
            ShowPlayerDialog(playerid,CASINO_FICHAS,DIALOG_STYLE_LIST,"Casino Los Santos","{FFFFFF}Comprar Fichas\nCambiar Fichas","Aceptar","Cancelar");
		}
	}
	return 1;
}

function GetClosestNPC(playerid,Float:range)
{
	new x,Float:dis2,player;
	player = -1;
	if(IsPlayerNPC(playerid))
	{
		return player;
	}
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
		    if(IsPlayerNPC(x))
		    {
				if(x != playerid)
				{
					dis2 = GetDistanceBetweenPlayers(x,playerid);
					if(dis2 < range && dis2 != -1.00)
					{
					    range = dis2;
						player = x;
					}
				}
			}
		}
	}
	return player;
}

function SaveGuns(playerid)
{
    for(new slot = 0; slot != 12; slot++)
    {
    	new wep, ammo;
     	GetPlayerWeaponData(playerid, slot, wep, ammo);
      	if(wep != 0 && ammo != 0)
       	{
       		if(PlayerInfo[playerid][pWeapon] == 0) { PlayerInfo[playerid][pWeapon] = wep; PlayerInfo[playerid][pAmmo] = ammo; }
	       	else if(PlayerInfo[playerid][pWeapon2] == 0) { PlayerInfo[playerid][pWeapon2] = wep; PlayerInfo[playerid][pAmmo2] = ammo; }
		    else if(PlayerInfo[playerid][pWeapon3] == 0) { PlayerInfo[playerid][pWeapon3] = wep; PlayerInfo[playerid][pAmmo3] = ammo; }
		    else if(PlayerInfo[playerid][pWeapon4] == 0) { PlayerInfo[playerid][pWeapon4] = wep; PlayerInfo[playerid][pAmmo4] = ammo; }
      		else if(PlayerInfo[playerid][pWeapon5] == 0) { PlayerInfo[playerid][pWeapon5] = wep; PlayerInfo[playerid][pAmmo5] = ammo; }
		    else if(PlayerInfo[playerid][pWeapon6] == 0) { PlayerInfo[playerid][pWeapon6] = wep; PlayerInfo[playerid][pAmmo6] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon7] == 0) { PlayerInfo[playerid][pWeapon7] = wep; PlayerInfo[playerid][pAmmo7] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon8] == 0) { PlayerInfo[playerid][pWeapon8] = wep; PlayerInfo[playerid][pAmmo8] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon9] == 0) { PlayerInfo[playerid][pWeapon9] = wep; PlayerInfo[playerid][pAmmo9] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon10] == 0) { PlayerInfo[playerid][pWeapon10] = wep; PlayerInfo[playerid][pAmmo10] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon11] == 0) { PlayerInfo[playerid][pWeapon11] = wep; PlayerInfo[playerid][pAmmo11] = ammo; }
	        else if(PlayerInfo[playerid][pWeapon12] == 0) { PlayerInfo[playerid][pWeapon12] = wep; PlayerInfo[playerid][pAmmo12] = ammo; }
		}
    }
    return 1;
}

function SaveAllGuns()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gPlayerLogged[i])
		    {
			    for(new slot = 0; slot != 12; slot++)
			    {
			    	new wep, ammo;
			     	GetPlayerWeaponData(i, slot, wep, ammo);
			      	if(wep != 0 && ammo != 0)
			       	{
		        		if(PlayerInfo[i][pWeapon] == 0) { PlayerInfo[i][pWeapon] = wep; PlayerInfo[i][pAmmo] = ammo; }
		         		else if(PlayerInfo[i][pWeapon2] == 0) { PlayerInfo[i][pWeapon2] = wep; PlayerInfo[i][pAmmo2] = ammo; }
				   	    else if(PlayerInfo[i][pWeapon3] == 0) { PlayerInfo[i][pWeapon3] = wep; PlayerInfo[i][pAmmo3] = ammo; }
				        else if(PlayerInfo[i][pWeapon4] == 0) { PlayerInfo[i][pWeapon4] = wep; PlayerInfo[i][pAmmo4] = ammo; }
				        else if(PlayerInfo[i][pWeapon5] == 0) { PlayerInfo[i][pWeapon5] = wep; PlayerInfo[i][pAmmo5] = ammo; }
				        else if(PlayerInfo[i][pWeapon6] == 0) { PlayerInfo[i][pWeapon6] = wep; PlayerInfo[i][pAmmo6] = ammo; }
            			else if(PlayerInfo[i][pWeapon7] == 0) { PlayerInfo[i][pWeapon7] = wep; PlayerInfo[i][pAmmo7] = ammo; }
			            else if(PlayerInfo[i][pWeapon8] == 0) { PlayerInfo[i][pWeapon8] = wep; PlayerInfo[i][pAmmo8] = ammo; }
			            else if(PlayerInfo[i][pWeapon9] == 0) { PlayerInfo[i][pWeapon9] = wep; PlayerInfo[i][pAmmo9] = ammo; }
			            else if(PlayerInfo[i][pWeapon10] == 0) { PlayerInfo[i][pWeapon10] = wep; PlayerInfo[i][pAmmo10] = ammo; }
			            else if(PlayerInfo[i][pWeapon11] == 0) { PlayerInfo[i][pWeapon11] = wep; PlayerInfo[i][pAmmo11] = ammo; }
			            else if(PlayerInfo[i][pWeapon12] == 0) { PlayerInfo[i][pWeapon12] = wep; PlayerInfo[i][pAmmo12] = ammo; }
					}
			    }
			}
		}
	}
    return 1;
}

function ShowBuyMenu(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		ShowPlayerDialog(playerid,D247_BUY,DIALOG_STYLE_LIST, \
		"Comprar - 24 7","1.\tLotería\t\t\t\t(5$)\n2.\tSpray Anti-Ladrones\t\t(70$)\n3.\tCigarros\t\t\t(10$)\n4.\tEncendedor\t\t\t(5$)\n5.\tGafas RayBan\t\t\t(300$)\n6.\tMaleta\t\t\t\t(175$)\n7.\tMochila\t\t\t\t(75$)\n8.\tCasco\t\t\t\t(120$)\n9\tPatines\t\t\t\t(50$)","Comprar","Cancelar");
	}
	return 1;
}

function ShowAmmunation(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ShowPlayerDialog(playerid,AMMUNATION_MENU,DIALOG_STYLE_LIST,"Ammunation - Compras","Defensa personal\nPistolas\nEscopetas\nProtección\nLecciones","Ver","Salir");
	}
	return 1;
}

function CamelMenu(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		ShowPlayerDialog(playerid,CAMEL_MENU,DIALOG_STYLE_LIST,"Traficante - Servicios","1-\tEntrégame un paquete.\n2-\tEntregar teléfonos robados\n3-\tAdquirir un DNI Falso","Aceptar","Salir");
		return 1;
	}
	return 1;
}

stock Bought(playerid, amount)
{
	if(IsPlayerConnected(playerid))
	{
		    new a[14];
			format(a,sizeof(a),"~r~ -%d$",amount);
		    GameTextForPlayer(playerid, a, 5000, 1);
			GivePlayerMoney(playerid, -amount);
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
	}
	return 1;
}

stock Earn(playerid, amount)
{
	if(IsPlayerConnected(playerid))
	{
		    new a[12];
			format(a,sizeof(a),"~g~ %d$",amount);
		    GameTextForPlayer(playerid, a, 5000, 1);
			GivePlayerMoney(playerid, amount);
			PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
	}
	return 1;
}

stock CheckMoney(playerid, money)
{
    if(IsPlayerConnected(playerid))
	{
	    new b[64];
	    new xx;
		xx = money - (GetPlayerMoney(playerid));
	    if(GetPlayerMoney(playerid) >= money)
		{
			return 1;
		}
		else
		{
		    format(b,sizeof(b),"No tienes dinero suficiente! Te faltan %d$",xx);
			SendClientMessage(playerid, COLOR_GRAD2, b);
			return 0;
		}
	}
	return 0;
}

function OnGlobalPropTextdrawUpdate()
{
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        OnPropTextdrawUpdate(h)
	}
	return 1;
}

function OnPropTextdrawUpdate(hid)
{
	new string[256];
	if(HouseInfo[hid][hOwned] == 0)
	{
 		DestroyDynamic3DTextLabel(House3DText[hid]);
		DestroyDynamicPickup(HousePickup[hid]);
  		format(string, sizeof(string), "Casa en Venta\nPrecio: %d$\nNivel: %d\nID: %d\nUsa /comprarcasa",HouseInfo[hid][hValue],HouseInfo[hid][hLevel],hid);
    	House3DText[hid] = CreateDynamic3DTextLabel(string,COLOR_GREEN, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		HousePickup[hid] = CreateDynamicPickup(1273, 1, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez]);
	}
	else
	{
 		DestroyDynamicPickup(HousePickup[hid]);
		HousePickup[hid] = CreateDynamicPickup(1239, 1, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez]);
  		if(HouseInfo[hid][hRent] > 0)
  		{
    		DestroyDynamic3DTextLabel(House3DText[hid]);
      		format(string, sizeof(string), "Propiedad en Renta\nDueño: %s\nRenta: %d$\nHabitaciones: %d\nID: %d\nUsa /rcuarto",HouseInfo[hid][hOwner],HouseInfo[hid][hRent],HouseInfo[hid][hRooms],hid);
			House3DText[hid] = CreateDynamic3DTextLabel(string,COLOR_GREEN, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		}
		else
		{
  			DestroyDynamic3DTextLabel(House3DText[hid]);
	    	format(string, sizeof(string), "Propiedad Privada\nDueño: %s\nID: %d",HouseInfo[hid][hOwner],hid);
    		House3DText[hid] = CreateDynamic3DTextLabel(string,COLOR_GREEN, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		}
	}
	return 1;
}

function OnGlobalBizzTextdrawUpdate()
{
    for(new b = 0; b < sizeof(BizzInfo); b++)
	{
	    OnBizzTextdrawUpdate(b);
 	}
 	return 1;
}

function OnBizzTextdrawUpdate(bid)
{
    new string[256];
	if(BizzInfo[bid][bOwned] == 0)
 	{
 		DestroyDynamic3DTextLabel(Bizz3DText[bid]);
  		DestroyDynamicPickup(BizzPickup[bid]);
   		format(string, sizeof(string), "Negocio en Venta\n%s\nPrecio : %d$\nNivel: %d\nID: %d\nUsa /comprarnegocio",BizzInfo[bid][bName],BizzInfo[bid][bBuyPrice],BizzInfo[bid][bLevelNeeded],bid);
		Bizz3DText[bid] = CreateDynamic3DTextLabel(string,0xAAAAFFFF, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		BizzPickup[bid] = CreateDynamicPickup(1272, 1, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez]);
	}
	else
	{
 		DestroyDynamic3DTextLabel(Bizz3DText[bid]);
  		DestroyDynamicPickup(BizzPickup[bid]);
   		format(string, sizeof(string), "%s\nDueño: %s\nExtorcion: %s",BizzInfo[bid][bName],BizzInfo[bid][bOwner],BizzInfo[bid][bExtortion]);
		Bizz3DText[bid] = CreateDynamic3DTextLabel(string,0xAAAAFFFF, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
		BizzPickup[bid] = CreateDynamicPickup(1272, 1, BizzInfo[bid][bEntrancex], BizzInfo[bid][bEntrancey], BizzInfo[bid][bEntrancez]);
	}
	return 1;
}

function ShootAgain(playerid)
{
	Bowling[playerid] = 0;
    BowlingMoney[playerid] = 0;
}

function SetPlayerStats(playerid)
{
	if(PlayerInfo[playerid][pDEagle] > 600) PlayerInfo[playerid][pDEagle] = 999;
	if(PlayerInfo[playerid][pShotgun] > 600) PlayerInfo[playerid][pShotgun] = 999;
	if(PlayerInfo[playerid][pMP5] > 600) PlayerInfo[playerid][pMP5] = 999;
	if(PlayerInfo[playerid][pAK47] > 600) PlayerInfo[playerid][pAK47] = 999;
	if(PlayerInfo[playerid][pM4] > 600) PlayerInfo[playerid][pM4] = 999;
	if(PlayerInfo[playerid][pSniper] > 600) PlayerInfo[playerid][pSniper] = 999;
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pDEagle])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pShotgun])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pMP5])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pAK47])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pM4])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, PlayerInfo[playerid][pSniper])
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 300);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 300);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 300);

	SetPlayerFightingStyle (playerid, PlayerInfo[playerid][pFStyle]);
	SetPlayerWalkingStyle(playerid, PlayerInfo[playerid][pWalk]);
}

function TaxiRadar(playerid)
{
	new tInfo[1024];
	if(IsPlayerConnected(playerid))
	{
	    format(tInfo, sizeof(tInfo), "1- %s (%s, %s) [Hace %d segundos]\n2- %s (%s, %s) [Hace %d segundos]\n3- %s (%s, %s) [Hace %d segundos]\n4- %s (%s, %s) [Hace %d segundos]\n5- %s (%s, %s) [Hace %d segundos]\n6- %s (%s, %s) [Hace %d segundos]\n7- %s (%s, %s) [Hace %d segundos]\n8- %s (%s, %s) [Hace %d segundos]\n[EXIT] << >> Salir del Radar << >>[EXIT]",
		PlayerName(TaxiSlot1),SlotZone1,SlotCity1,TiempoSlot1,
		PlayerName(TaxiSlot2),SlotZone2,SlotCity2,TiempoSlot2,
		PlayerName(TaxiSlot3),SlotZone3,SlotCity3,TiempoSlot3,
		PlayerName(TaxiSlot4),SlotZone4,SlotCity4,TiempoSlot4,
		PlayerName(TaxiSlot5),SlotZone5,SlotCity5,TiempoSlot5,
		PlayerName(TaxiSlot6),SlotZone6,SlotCity6,TiempoSlot6,
		PlayerName(TaxiSlot7),SlotZone7,SlotCity7,TiempoSlot7,
		PlayerName(TaxiSlot8),SlotZone8,SlotCity8,TiempoSlot8);
    	ShowPlayerDialog(playerid,DIALOG_TAXI_RADAR,DIALOG_STYLE_LIST,"Taxi Radar LS",tInfo,"Ir","Borrar");
	}
}

function CheckVida()
{
	new Float:Life;
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        GetPlayerHealth(i,Life);
			if(Life < 15.1 && First_Spawn[i] == 0)
			{
			    ForbidHandsUp[i] = 1;
				if(IsPlayerInAnyVehicle(i))
				{
					GetPlayerHealth(i, Life);
					SetHP(i, Life-1.0);
				}
				if(MensajeMuriendo[i]==0 && gPlayerLogged[i] == 1)
				{
				    if(!IsPlayerInAnyVehicle(i))
				    {
						Message(i,COLOR_LIGHTRED,"Tu estado actual es crítico. Te estás muriendo!");
						Message(i,COLOR_LIGHTRED,"Ojalá alguien pueda llamar a una ambulancia, y rápido!");
						Message(i,COLOR_LIGHTRED,"Si no es así, morirás en poco tiempo!");
						ApplyAnimation(i, "CRACK", "crckdeth1", 2.5, 1, 0, 1, 0, 0);
						MensajeMuriendo[i]=1;
						if(MsgL4L[i] == 0)
						{
						    if(Life < 16 && Life > 12) { Left4Life[i] = 180; }
						    if(Life < 13 && Life > 8) { Left4Life[i] = 149; }
						    if(Life <  9) { Left4Life[i] = 99; }
							MsgL4L[i] = 1;
						}
					}
				    if(IsPlayerInAnyVehicle(i))
				    {
						Message(i,COLOR_LIGHTRED,"Tu estado actual es crítico. Te estás muriendo!");
						Message(i,COLOR_LIGHTRED,"Si sigues en el coche tu vida disminuairá más rapido!");
						Message(i,COLOR_LIGHTRED,"Intenta bajar inmediatamente!");
						MensajeMuriendo[i]=1;
					}
				}
			}
			else{MensajeMuriendo[i]=0; ForbidHandsUp[i] = 0; MsgL4L[i] = 0; Left4Life[i] = 0;}
		}
	}
}

function Spawned(playerid)
{
	First_Spawn[playerid] = 0;
}

function Tiempo1()
{
	for(new i=0;i<=MAX_PLAYERS;i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        ComprobarKeysCatalogo(i);
		}
	}
	return 1;
}

function ComprobarKeysCatalogo(playerid)
{
    if(IsPlayerNPC(playerid))
	{
		return 1;
  	}
    new Keys,ud,lr;
	new string[128];
    GetPlayerKeys(playerid,Keys,ud,lr);
	if(lr > 0) // Right
	{
	    if(PuedePresionar[playerid] == true)
	    {
	        if(RStep[playerid] == 1)
	        {
	            if(RegConfig[playerid] == 1)
	            {
		            if(RegText[playerid] == 1)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~r~Masculino          ~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?");
		                PlayerInfo[playerid][pSex] = 1;
		                Skin(playerid, 26);
		                PlayerInfo[playerid][pChar] = 26;
		                RegText[playerid] = 2;
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		return 1;
					}
					else if(RegText[playerid] == 2)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~r~Femenino          ~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?");
		                PlayerInfo[playerid][pSex] = 2;
		                Skin(playerid, 90);
		                PlayerInfo[playerid][pChar] = 90;
		                RegText[playerid] = 1;
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		return 1;
					}
				}
				else if(RegConfig[playerid] == 2)
	            {
	                    if(PlayerInfo[playerid][pAge] > 98) return GText(playerid, "~w~Edad maxima: ~r~99", 3000, 3);
	                    PlayerInfo[playerid][pAge] ++;
	                    new mtext[12];
					    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~>~~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 100, 0, "d", playerid);
			    		return 1;
	            }
	            else if(RegConfig[playerid] == 3)
	            {
	                if(RegText[playerid] == 5)
	                {
	                    return 1;
	                }
	                else
	                {
	                    RegText[playerid] += 1;
	                	ChooseOrigin(playerid);
					}
				}
				else if(RegConfig[playerid] == 4)
	            {
	                if(RegText[playerid] == 13)
	                {
	                    return 1;
	                }
	                else
	                {
	                    RegText[playerid] += 1;
	                	ChooseWalk(playerid);
					}
				}
			}
		}
	}
	if(lr < 0) // Left
	{
	    if(PuedePresionar[playerid] == true)
	    {
	        if(RStep[playerid] == 1)
	        {
	            if(RegConfig[playerid] == 1)
	            {
		            if(RegText[playerid] == 1)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~r~Masculino          ~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?");
		                PlayerInfo[playerid][pSex] = 1;
		                RegText[playerid] = 2;
		                Skin(playerid, 26);
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		return 1;
					}
					else if(RegText[playerid] == 2)
		            {
		                TDStr(RegDraw[playerid], "~n~~>~Sexo:  ~r~Femenino          ~w~Edad: ~r~?~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?");
		                PlayerInfo[playerid][pSex] = 2;
		                RegText[playerid] = 1;
		                Skin(playerid, 90);
			    		PlayerPlaySound(playerid, 1054, 0,0,0);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 500, 0, "d", playerid);
			    		return 1;
					}
				}
				else if(RegConfig[playerid] == 2)
	            {
	                    if(PlayerInfo[playerid][pAge] < 19) return GText(playerid, "~w~Edad minima: ~g~18", 3000, 3);
	                    PlayerInfo[playerid][pAge] --;
	                    new mtext[12];
					    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~>~~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~Sin Origen    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
			    		PuedePresionar[playerid] = false;
			    		SetTimerEx("VolverPresionar", 100, 0, "d", playerid);
			    		return 1;
	            }
	            else if(RegConfig[playerid] == 3)
	            {
	                if(RegText[playerid] == 1)
	                {
	                    return 1;
	                }
	                else
	                {
	                    RegText[playerid] -= 1;
	                	ChooseOrigin(playerid);
					}
				}
				else if(RegConfig[playerid] == 4)
	            {
	                if(RegText[playerid] == 1)
	                {
	                    return 1;
	                }
	                else
	                {
	                    RegText[playerid] -= 1;
	                	ChooseWalk(playerid);
					}
				}
			}
		}
	}
	return 1;
}

function NewUs(playerid)
{
	  NewUsed[playerid] = 0;
      return 1;
}

function VolverPresionar(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		PuedePresionar[playerid] = true;
		return 1;
	}
	return 1;
}

function Reg_ShowDNI(playerid) { ShowDNI(playerid,playerid); }

function ShowDNI(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
	    new string[64], sex[2];
	    if(PlayerInfo[playerid][pSex] == 1) { sex = "M"; }
   		else								{ sex = "F"; }

	    Message(targetid, 0x0D86FFFF, "|___________ Documento Nacional de Identidad ___________|");
   		format(string, sizeof(string), "   Nombre: %s", PlayerName(playerid));
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Sexo: %s", sex);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Edad: %d     Fecha Nacimiento: %d", PlayerInfo[playerid][pAge], 2012-PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_WHITE, string);
   		if(PlayerInfo[playerid][pMarried] == 1) format(string, sizeof(string), "   Estado Civil: Casado			Con: %s", PlayerInfo[playerid][pMarriedTo]);
		else format(string, sizeof(string), "   Estado Civil: Soltero");
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nacionalidad: %s", PlayerStatInfo[playerid][1]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nº DNI: %d", PlayerInfo[playerid][pDNI]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   IDSA%d%s<%s>%d-%d", PlayerInfo[playerid][pDNI],sex,PlayerName(playerid),2012-PlayerInfo[playerid][pAge],PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_GRAD2, string);
   		Message(targetid, 0x0D86FFFF, "|_________________ ·------------------------------· _________________|");
	}
}

function ShowDNIFalse(playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
	    new string[64], sex[2];
	    if(PlayerInfo[playerid][pSex] == 1) { sex = "M"; }
   		else								{ sex = "F"; }

	    Message(targetid, 0x0D86FFFF, "|___________ Documento Nacional de Identidad ___________|");
   		format(string, sizeof(string), "   Nombre: %s", PlayerInfo[playerid][pDNIName]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Sexo: %s", sex);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Edad: %d     Fecha Nacimiento: %d", PlayerInfo[playerid][pAge], 2012-PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Estado Civil: Soltero");
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nacionalidad: %s", PlayerStatInfo[playerid][1]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   Nº DNI: %d", PlayerInfo[playerid][pDNIFalse]);
   		Message(targetid, COLOR_WHITE, string);
   		format(string, sizeof(string), "   IDSA%d%s<%s>%d-%d", PlayerInfo[playerid][pDNIFalse],sex,PlayerInfo[playerid][pDNIFalse],2012-PlayerInfo[playerid][pAge],PlayerInfo[playerid][pAge]);
   		Message(targetid, COLOR_GRAD2, string);
   		Message(targetid, 0x0D86FFFF, "|_________________ ·------------------------------· _________________|");
	}
}

function RegMsn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		ShowPlayerDialog(playerid,DIALOG_REG_MSN,DIALOG_STYLE_INPUT,"Información OOC","Registra tu e-mail","Registrar","Cancelar");
		return 1;
	}
	return 1;
}


stock Admin(lvl,playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new admin = PlayerInfo[playerid][pAdminCP];
	    if(admin	>=	lvl)
		{
		    return 1;
		}
	}
	return 0;
}

new VehicleFriendlyNames[212][] = {
	{"Landstalker"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"},
	{"Dumper"},{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},
	{"Pony"},{"Mule"},{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},
	{"Washington"},{"Bobcat"},{"Mr. Whoopee"},{"BF. Injection"},{"Hunter"},{"Premier"},{"Enforcer"},
	{"Securicar"},{"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Article Trailer"},
	{"Previon"},{"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},{"Romero"},{"Packer"},{"Monster"},
	{"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Article Trailer 2"},{"Turismo"},{"Speeder"},
	{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},{"Berkley's RC Van"},{"Skimmer"},
	{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},{"Sanchez"},
	{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},{"Hermes"},{"Sabre"},{"Rustler"},{"ZR-350"},
	{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},{"Baggage"},{"Dozer"},
	{"Maverick"},{"News Chopper"},{"Rancher"},{"FBI Rancher"},{"Virgo"},{"Greenwood"},{"Jetmax"},{"Hotring"},
	{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},{"Mesa"},{"RC Goblin"},
	{"Hotring Racer A"},{"Hotring Racer B"},{"Bloodring Banger"},{"Rancher"},{"Super GT"},{"Elegant"},
	{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stunt"},{"Tanker"},{"Roadtrain"},
	{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},{"NRG-500"},{"HPV1000"},
	{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},{"Willard"},{"Forklift"},
	{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},{"Blade"},{"Freight"},{"Streak"},
	{"Vortex"},{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},{"Firetruck LA"},{"Hustler"},{"Intruder"},
	{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},{"Utility"},{"Nevada"},{"Yosemite"},{"Windsor"},
	{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},{"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},
	{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},{"Bandito"},{"Freight Flat"},{"Streak Carriage"},
	{"Kart"},{"Mower"},{"Dunerider"},{"Sweeper"},{"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},
	{"Stafford"},{"BF-400"},{"Newsvan"},{"Tug"},{"Article Trailer 3"},{"Emperor"},{"Wayfarer"},{"Euros"},{"Mobile Hotdog"},
	{"Club"},{"Freight Carriage"},{"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police Car LSPD"},
	{"Police Car SFPD"},{"Police Car LVPD"},{"Police Ranger"},{"Picador"},{"S.W.A.T Van"},{"Alpha"},
	{"Phoenix"},{"Glendale"},{"Sadler"},{"Luggage Trailer A"},{"Luggage Trailer B"},{"Stair Trailer"},
	{"Boxville"},{"Farm Plow"},{"Utility Trailer"}
};

stock GetVehicleFriendlyName(vehicleid)
{
	new GVFNstring[56];
	format(GVFNstring, sizeof(GVFNstring), VehicleFriendlyNames[GetVehicleModel(vehicleid)-400]);
	return GVFNstring;
}

stock CreateRoadblock(Object,Float:x,Float:y,Float:z,Float:Angle)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(Roadblocks[i][sCreated] == 0)
  	    {
            Roadblocks[i][sCreated] = 1;
            Roadblocks[i][sX] = x;
            Roadblocks[i][sY] = y;
            Roadblocks[i][sZ] = z-0.7;
            Roadblocks[i][sObject] = CreateDynamicObject(Object, x, y, z-0.9, 0, 0, Angle);
	        return 1;
  	    }
  	}
  	return 0;
}

stock DeleteAllRoadblocks(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(PlayerToPoint(playerid, 100, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
	  	    if(Roadblocks[i][sCreated] == 1)
	  	    {
	  	        Roadblocks[i][sCreated] = 0;
	            Roadblocks[i][sX] = 0.0;
	            Roadblocks[i][sY] = 0.0;
	            Roadblocks[i][sZ] = 0.0;
	            DestroyDynamicObject(Roadblocks[i][sObject]);
	  	    }
  	    }
	}
    return 0;
}

stock DeleteClosestRoadblock(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(PlayerToPoint(5.0, playerid, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
  	        if(Roadblocks[i][sCreated] == 1)
            {
                Roadblocks[i][sCreated] = 0;
                Roadblocks[i][sX] = 0.0;
                Roadblocks[i][sY] = 0.0;
                Roadblocks[i][sZ] = 0.0;
                DestroyDynamicObject(Roadblocks[i][sObject]);
                return 1;
  	        }
  	    }
  	}
    return 0;
}

function Detective_FindPerson(playerid)
{
	Connect
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(WhoFind[playerid], X,Y,Z);
		SetPlayerCheckpoint(playerid, X,Y,Z, 6);
		Message(playerid, TEAM_RADIO_COLOR, "** Información: se estableció el destino de búsqueda en su radar");
		WhoFind[playerid] = 0;
	}
	return 1;
}

function Detective_FindCar(playerid)
{
	Connect
	    new Float:X, Float:Y, Float:Z;
		GetVehiclePos(WhoFind[playerid], X,Y,Z);
		SetPlayerCheckpoint(playerid, X,Y,Z, 10);
		Message(playerid, TEAM_RADIO_COLOR, "** Información: se estableció el destino de búsqueda en su radar");
		WhoFind[playerid] = 0;
 	}
	return 1;
}

SearchHit(playerid)
{
	new string[128];
	if(IsPlayerConnected(playerid))
	{
	    Message(playerid, COLOR_WHITE, "- Objetivos pendientes -");
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(PlayerInfo[i][pHead] > 0)
	        {
	            format(string, sizeof(string), "  Nombre: %s (Recompensa: %d)", PlayerName(i),PlayerInfo[i][pHead]);
	            Message(playerid, WANTED_COLOR, string);
	        }
	    }
	}
	return 1;
}

function IntentarTimer(playerid)
{
	Intentar[playerid] = 0;
}

function BackupClear(playerid, timer)
{
	if(IsPlayerConnected(playerid))
	{
		if(RequestingBackup[playerid] == 1)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Team_LSPD(playerid)) SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
					else if(Team_NG(playerid)) SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
					else if(Team_FBI(playerid)) SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
				}
			}
			if(timer != 0) 	Message(playerid, TEAM_BLUE_COLOR, "Tu pedido de refuerzos ha sido cancelado automáticamente.");
			else 			Message(playerid, TEAM_BLUE_COLOR, "Tu pedido fue cancelado.");
			RequestingBackup[playerid] = 0;
		}
	}
	return 1;
}

function ChooseOrigin(playerid)
{
	if(RegConfig[playerid] == 3)
	{
	                new mtext[12],string[256];
	    			if(RegText[playerid] == 1)
		            {
					    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Argentina    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
                    	PlayerInfo[playerid][pOrigin] = 1;
		            }
		            else if(RegText[playerid] == 2)
		            {
                     	if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~España    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
                    	PlayerInfo[playerid][pOrigin] = 2;
		            }
		            else if(RegText[playerid] == 3)
		            {
                        if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Venezuela    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
                    	PlayerInfo[playerid][pOrigin] = 3;
		            }
		            else if(RegText[playerid] == 4)
		            {
                        if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Chile    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
                    	PlayerInfo[playerid][pOrigin] = 4;
		            }
		            else if(RegText[playerid] == 5)
		            {
                        if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
					    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~>~~w~Origen: ~r~Peru    ~w~Estilo: ~r~?", mtext, PlayerInfo[playerid][pAge]);
					    TDStr(RegDraw[playerid], string);
                    	PlayerInfo[playerid][pOrigin] = 5;
		            }
		            PuedePresionar[playerid] = false;
		    		SetTimerEx("VolverPresionar", 300, 0, "d", playerid);
	}
}

function ChooseWalk(playerid)
{
	if(RegConfig[playerid] == 4)
	{
	    new mtext[12],string[128],otext[12];
	    if(PlayerInfo[playerid][pSex] == 1) mtext = "Masculino"; else mtext = "Femenino";
	    if(PlayerInfo[playerid][pOrigin] == 1) otext = "Argentina";
	    if(PlayerInfo[playerid][pOrigin] == 2) otext = "España";
	    if(PlayerInfo[playerid][pOrigin] == 3) otext = "Venezuela";
	    if(PlayerInfo[playerid][pOrigin] == 4) otext = "Chile";
	    if(PlayerInfo[playerid][pOrigin] == 5) otext = "Peru";
	    if(RegText[playerid] == 1)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~Normal", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 1;
     		ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
     	}
     	if(RegText[playerid] == 2)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~CIV", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 2;
     		ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 3)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~GANG1", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 3;
     		ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 4)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~GANG2", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 4;
     		ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 5)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~VIEJO1", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 5;
     		ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 6)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~VIEJO2", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 6;
     		ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 7)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~GORDO", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 7;
     		ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 8)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~MUJER1", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 8;
     		ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 9)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~MUJER2", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 9;
     		ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 10)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~PUTA1", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 10;
     		ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 11)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~PUTA2", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 11;
     		ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 12)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~EBRIO", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 12;
     		ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
     	}
     	else if(RegText[playerid] == 13)
     	{
     	    format(string, sizeof(string), "~n~Sexo:  ~r~%s          ~w~Edad: ~r~%d~n~~n~~w~Origen: ~r~%s    ~>~~w~Estilo: ~r~CIEGO", mtext, PlayerInfo[playerid][pAge], otext);
		    TDStr(RegDraw[playerid], string);
     		PlayerInfo[playerid][pWalk] = 13;
     		ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
     	}
     	PuedePresionar[playerid] = false;
   		SetTimerEx("VolverPresionar", 400, 0, "d", playerid);
	}
}

stock SetPosEx(playerid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid)
{
    SetPlayerPos(playerid, X, Y, Z);
    SetPlayerFacingAngle(playerid, A);
    SetPlayerInterior(playerid, interiorid);
    SetPlayerVirtualWorld(playerid, worldid);
}

stock PlayerName(playerid)
{
    new Nombre[24];
    GetPlayerName(playerid,Nombre,24);
    new N[24];
    strmid(N,Nombre,0,strlen(Nombre),24);
    for(new i = 0; i < MAX_PLAYER_NAME; i++)
    {
        if (N[i] == '_') N[i] = ' ';
    }
    return N;
}

function KickAFK(playerid)
{
	Message(playerid, COLOR_WHITE, "{FF9562}Has sido kickeado del servidor por permanecer más de 10 minutos en estado AFK.");
	Kick(playerid);
}

DetectNumber(string[])
{
	new NUMP, CUENTAN;
    for(NUMP = 0; NUMP < strlen(string); NUMP ++)
    {
        if(string[NUMP] == '0' || string[NUMP] == '1' || string[NUMP] == '2' || string[NUMP] == '3' || string[NUMP] == '4' || string[NUMP] == '5' || string[NUMP] == '6' || string[NUMP] == '7' || string[NUMP] == '8' || string[NUMP] == '9') CUENTAN ++;
    }
    if(CUENTAN >= 4) return 1;
    return 0;
}

function StopCall(playerid)
{
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
    SetTimerEx("RemoveHand", 1800, false, "i", playerid);
    new caller = Mobile[playerid];
    if(IsPlayerConnected(caller))
	{
		if(caller != INVALID_PLAYER_ID)
		{
			if(caller != 255)
			{
				if(caller < 255)
				{
					Message(caller,  COLOR_GRAD2, "Llamada finalizada.");
					Message(playerid,  COLOR_GRAD2, "Llamada finalizada.");
					CellTime[caller] = 0;
					CellTime[playerid] = 0;
					Mobile[caller] = 255;
				}
				Mobile[playerid] = 255;
				CellTime[playerid] = 0;
				Speaker[playerid] = 0;
			}
		}
	}
	Mobile[playerid] = 255;
}

function RemoveHand(playerid){
    RemovePlayerAttachedObject(playerid, 0);
    Att_Obj_Slot_0[playerid] = "Vacío";
}

function UntazePlayer(playerid){
	new string[128];
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid, 1);
	format(string, sizeof(string), "* Recuperado de la descarga (%s)", PlayerName(playerid));
	ProxDetector(30.0,playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
	PlayerTazeado[playerid] = 0;
	return 1;
}

stock Pause(playerid){
        TogglePlayerControllable(playerid,false);
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
        SetPlayerPos(playerid,x,y,z+1.5);
        SetTimerEx("UnfreezePlayer", 3000, false, "i", playerid);
}

stock FixAnim(playerid){
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	return 1;
}

function FuelCar(playerid, gasid)
{
	new string[128], idcar = GetPlayerVehicleID(playerid), engine,lights,alarm,doors,bonnet,boot,objective;
	if(engineOn[idcar] == 1)
	{
	    format(string, sizeof(string), "* %s agarra la mangera y la introduce en el depósito.", PlayerName(playerid));
		ProxDetector(30.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    new Float:boomx,Float:boomy,Float:boomz;
	    GetVehiclePos(idcar,boomx,boomy,boomz);
		CreateExplosion(boomx, boomy , boomz, 7, 10);
		GetVehicleParamsEx(idcar,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(idcar,0,0,alarm,doors,0,0,objective);
		engineOn[idcar] = 0;
		Refueling[playerid] = -1;
		return 1;
	}
	else
	{
        Refueling[playerid] = gasid;
        TogglePlayerControllable(playerid, 0);
        format(string, sizeof(string), "* %s agarra la mangera y la introduce en el depósito.", PlayerName(playerid));
		ProxDetector(30.0,playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Message(playerid, COLOR_WHITE, "  El vehículo se está llenando, espera.");
		SetTimerEx("FillUp", RefuelWait, false, "i", playerid);
	}
	return 1;
}

function FillUp(playerid)
{
    if(IsPlayerConnected(playerid))
   	{
   	    new idcar 	= 	GetPlayerVehicleID(playerid);
   	    new recgas = 5;
   	    if(IsAnOwnableCar(idcar)) recgas = CarInfo[idcar][cGas];

   	    new gasmax;
        if(Refueling[playerid] == 0) 		gasmax = gGas95_Full;
        else if(Refueling[playerid] == 1) 	gasmax = gGas98_Full;
        else if(Refueling[playerid] == 2) 	gasmax = gGasoil_Full;
        else if(Refueling[playerid] == 3) 	gasmax = gBiogas_Full;

        new pricegas;
        if(Refueling[playerid] == 0) 		pricegas = gGas95_Cost;
        else if(Refueling[playerid] == 1) 	pricegas = gGas98_Cost;
        else if(Refueling[playerid] == 2) 	pricegas = gGasoil_Cost;
        else if(Refueling[playerid] == 3) 	pricegas = gBiogas_Cost;

        new gasname[16];
        if(Refueling[playerid] == 0) 		gasname = "Sin plomo 95";
        else if(Refueling[playerid] == 1) 	gasname = "Sin plomo 98";
        else if(Refueling[playerid] == 2) 	gasname = "Gasoil";
        else if(Refueling[playerid] == 3) 	gasname = "Biodiesel";

	   	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	   	    {
	   	        new string[128];
	   	        new fillup 	= 	gasmax - Gas[idcar];
	   	        new price   =   fillup * pricegas;

	                if(recgas == 5 || recgas == Refueling[playerid])
	                {
	                    Gas[idcar] += fillup;
	                    ClearChatbox(playerid, 10);
	                    Message(playerid, 0x0097DFFF, "|_________| Gasolina - Recibo |_________|");
	                    format(string,sizeof(string),"  Precio: %d$/l (%s)",pricegas, gasname);
		    			Message(playerid, COLOR_WHITE, string);
		    			format(string,sizeof(string),"  Depósito: %d/%d Pagado: %d litros",Gas[idcar],gasmax,fillup);
		    			Message(playerid, COLOR_WHITE, string);
		    			Message(playerid, 0x0097DFFF, "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _");
		    			format(string,sizeof(string),"  Total: %d$",price);
		    			Message(playerid, COLOR_WHITE, string);
		    			TogglePlayerControllable(playerid, 1);
		    			Refueling[playerid] = -1;
		    			if(PlayerToPoint(25.0, playerid, 1928.588012,-1776.303222,13.546898))   Till(11, price);
		    			if(LSPD_IsACopCar(idcar) || SAMD_Vehicle(idcar) || Taxi_Vehicle(idcar))
						{
							GText(playerid, "~g~0$", 5000, 1);
							Message(playerid, COLOR_WHITE, "** Tu empresa se hace responsable de los gastos.");
						}
						else
						{
                            Bought(playerid, price);
						}
	                }
	                else
	                {
	                    Gas[idcar] += fillup;
	                    ClearChatbox(playerid, 10);
	                    Message(playerid, 0x0097DFFF, "|_________| Gasolina - Recibo |_________|");
	                    format(string,sizeof(string),"  Precio: %d$/l (%s)",pricegas, gasname);
		    			Message(playerid, COLOR_WHITE, string);
		    			format(string,sizeof(string),"  Depósito: %d/%d Pagado: %d litros",Gas[idcar],gasmax,fillup);
		    			Message(playerid, COLOR_WHITE, string);
		    			Message(playerid, 0x0097DFFF, "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _");
		    			format(string,sizeof(string),"  Total: %d$",price);
		    			Message(playerid, COLOR_WHITE, string);
		    			TogglePlayerControllable(playerid, 1);
		    			SetVehicleHealth(idcar, 500.0);
		    			Refueling[playerid] = -1;
		    			if(LSPD_IsACopCar(idcar) || SAMD_Vehicle(idcar) || Taxi_Vehicle(idcar))
						{
							GText(playerid, "~g~0$", 5000, 1);
							Message(playerid, COLOR_WHITE, "** Tu empresa se hace responsable de los gastos");
						}
						else
						{
                            Bought(playerid, price);
						}
	                }
	   	    }
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	if(!IsAnOwnableCar(vehicleid))
	{
		new string[32];
		new Float:carpos_x,Float:carpos_y,Float:carpos_z;
	    format(string, 128, "SA - %d",vehicleid);
	    SetVehicleNumberPlate(vehicleid, string);
		GetVehiclePos(vehicleid,carpos_x,carpos_y,carpos_z);
	    SetVehicleToRespawn(vehicleid);
	    SetVehiclePos(vehicleid,carpos_x,carpos_y,carpos_z);
		return 1;
	}
	return 1;
}

function NoBattery(carid)
{
    if(CarInfo[carid][cBattery] == 0 && IsAnOwnableCar(carid))
	{
		return 1;
	}
	return 0;
}

function MM_Noise()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(PlayerToPoint(20.0,i,1641.2056,-2139.6641,13.4100))
		{
		    PlayerPlaySound(i, 1133, 1641.2056,-2139.6641,13.4100);
		}
	}
}

function MM_Exam(playerid)
{
	new x = GetPlayerVehicleID(playerid);
	new bat = CarInfo[x][cBattery];
	new gas = CarInfo[x][cGas];
	new gasa = Gas[x];
	new gasname[20], mes[12], string[64];

	if(gas == 0) gasname = "Sin Plomo 95";
	else if(gas == 1) gasname = "Sin Plomo 98";
	else if(gas == 2) gasname = "Diesel/Gasoil";
	else if(gas == 3) gasname = "Biodiesel";

	if(bat < 100) mes = "Agotada";
	if(bat > 100 || bat < 1000) mes = "Baja";
	if(bat > 1000 || bat < 5000) mes = "Normal";
	if(bat > 5000) mes = "Óptima";

	ClearChatbox(playerid, 10);
	format(string, sizeof(string), "___________| %s |___________", CarInfo[x][cName]);
	Message(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "  Motor: %s", gasname);
	Message(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "  Estado Batería: %s", mes);
	Message(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "  Gasolina: %d", gasa);
	Message(playerid, COLOR_WHITE, string);
	KillTimer(mmtimer);
}

function V_Documents(playerid, targetid){
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		new xd = PlayerInfo[playerid][pPcarkey];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", CarInfo[xd][cName], CarInfo[xd][cPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", CarInfo[xd][cEmbargo], CarInfo[xd][cMulta]);
		Message(targetid, COLOR_WHITE, string);

	}
}

function V_Documents2(playerid, targetid){
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		new xd = PlayerInfo[playerid][pPcarkey2];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", CarInfo[xd][cName], CarInfo[xd][cPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", CarInfo[xd][cEmbargo], CarInfo[xd][cMulta]);
		Message(targetid, COLOR_WHITE, string);

	}
}

function V2_Documents(playerid, targetid){
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		new pc = PlayerInfo[playerid][pCarPremium];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", CarInfo[pc][cName], CarInfo[pc][cPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", CarInfo[pc][cEmbargo], CarInfo[pc][cMulta]);
		Message(targetid, COLOR_WHITE, string);
	}
}

function V3_Documents(playerid, targetid){
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new string[64];
		new pc = PlayerInfo[playerid][pCarPremium2];
		format(string, sizeof(string), "|_______ %s _______|", PlayerName(playerid));
		Message(targetid, COLOR_YELLOW, string);
		format(string, sizeof(string), "  Modelo: %s  - Matrícula: %s", CarInfo[pc][cName], CarInfo[pc][cPlate]);
		Message(targetid, COLOR_WHITE, string);
		format(string, sizeof(string), "  Embargos: %d -  Multa: %d$", CarInfo[pc][cEmbargo], CarInfo[pc][cMulta]);
		Message(targetid, COLOR_WHITE, string);
	}
}

stock MakeWeapon(playerid, mats, weaponid, ammo){
	new x[64], pmats = PlayerInfo[playerid][pMats];
	if(IsPlayerConnected(playerid)){
	    if(pmats < mats){
			format(x, sizeof(x), "* Te faltan %d materiales.", pmats - mats);
			Message(playerid, COLOR_GRAD2, x);
			return 1;
	    }
	    else{
	        SafeGivePlayerWeapon(playerid, weaponid, ammo);
	        format(x, sizeof(x), "~w~arma creada~n~~r~materiales gastados:~w~%d", mats);
			GText(playerid, x, 3000, 3);
			PlayerInfo[playerid][pMats] -= mats;
			return 1;
	    }
	}
	return 1;
}

function GetPlayerPass(playerid, name[], value[])
{
	if (!strcmp(name,"Key")) SetPVarString(playerid, "pPassword", value);
}

function GetPlayerDates(playerid, name[], value[])
{
    INI_String( "Key",          StatString[playerid][0], 28);
    INI_String( "MSN",			StatString[playerid][1], 28);
    INI_String( "MarriedTo",    StatString[playerid][2], 28);
    INI_Int( "Level",			StatInt[playerid][0]);
    INI_Int( "Money",			StatInt[playerid][1]);
    INI_Int( "Bank",			StatInt[playerid][2]);
    INI_Int( "Locked",			StatInt[playerid][3]);
    INI_Int( "Job",				StatInt[playerid][4]);
    INI_Int( "Donate",			StatInt[playerid][5]);
    INI_Int( "Married",			StatInt[playerid][6]);
    INI_Int( "AdminCP",			StatInt[playerid][7]);
	INI_Int( "House",           StatInt[playerid][8]);
	INI_Int( "Car",             StatInt[playerid][9]);
	INI_Int( "Car2",            StatInt[playerid][10]);
	INI_Int( "Negocio",         StatInt[playerid][11]);
	return 0;
}

stock TutorialStep_Forward(i)
{
	new string[512];
	if(IsPlayerConnected(i))
	{
 		if(TutTime[i] >= 1)
		{
			switch (TutTime[i])
			{
				    case 5:
				    {
				        Message(i, YELLOW, "{FF0000}Bienvenido a Hermandad Zero RolePlay, Veras un breve tutorial");
				        Message(i, YELLOW, "{0000FF}Donde te mostraremos los lugares principales y te daremos consejos");
				        Message(i, -1, "{FFFFFF}Si ya sabes rolear utiliza /saltartutorial");
				        TextDrawShowForPlayer(i, Tutorial[i]);
				        TextDrawShowForPlayer(i, Film_1);
				        TextDrawShowForPlayer(i, Film_2);
						SetPlayerCameraPos(i,319.5357,-2046.7548,20.1987);
						SetPlayerCameraLookAt(i,392.0707,-2022.0400,20.1987);
						SetPosEx(i, 358.7035,-2069.7151,10.6953,298.2155,0,0);
						TogglePlayerControllable(i, 0);
						Muted[i] = 1;
						SetPlayerInterior(i, 0);
						SetPlayerVirtualWorld(i,9)
						format(string, sizeof(string), 		"¡ Bienvenido a ~h~~y~Hermandad Zero  RolePlay~w~,  ~r~%s ~w~!~n~~n~	\
															Como ya habrás podido observar, ~b~Hermandad Zero RolePlay~w~ es un servidor de rol.~n~	\
															Asegúrate de tener ganas de rolear y de aceptar las reglas que establecemos. ~n~    \
															En caso contrario, eres libre de utilizar ~g~/quit~w~, para marcharte.",PlayerName(i));
						TextDrawSetString(Tutorial[i], convert_encoding(string));

				    }
        			case 15:
				    {
      					ClearChatbox(i, 10);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~y~http://www.hermandadzero.com/foro/ ~w~~n~~n~        \
						                        				Recuerda que tu frecuente actividad en el foro es vital para estar actualizado~n~  	\
						                        				con las últimas novedades del servidor. Podrás postularte a miembro de alguna~n~ 	\
																facción o bien, sugerirnos ideas para mejorar el servidor."));
					}
					case 25:
				    {
      					ClearChatbox(i, 10);
						TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~Introducción ~w~~n~~n~					\
																El objetivo del tutorial, es que te hagas una idea de como funciona todo~n~	\
																y que empiezes con unos conocimientos básicos acerca de Rol.~n~	\
																Si te surge una duda, ¡ no seas modesto y compartela con la administración !"));
					}
					case 35:
				    {
      					ClearChatbox(i, 10);
						TextDrawSetString(Tutorial[i], convert_encoding("	~h~~y~¿Qué es Role Play?~w~~n~~n~					\
																Role Play es tomar un papel de un personaje, no hay un guion a seguir~n~	\
																ya que el desarrollo de la historia queda por completo sujeto a las~n~	\
																decisiones de los jugadores."));
				    }
				    case 50:
				    {
						ClearChatbox(i, 10);
						TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~¿Qué es DeatMatch?~w~~n~~n~					\
																Es cuando tú matas a una o más personas sin razón alguna o por diversión,~n~	\
																hacer esto está penando. Cuando estás en algún rol de asesinato o es necesario~n~	\
																asesinar a alguien con ROL, entonces eso no se considera ~r~DeathMatch."));
				    }
				    case 65:
				    {
						ClearChatbox(i, 10);
						TextDrawSetString(Tutorial[i], convert_encoding("	~h~~g~¿Qué es PowerGaming?~w~~n~~n~					\
																Esto se le llama a los actos ficticios o más alla de lo humano, tambien~n~	\
																obligar o forzar a alguien a hacer un Rol. Tú no puedes hacer roles usando~n~	\
																el comando /me - ~p~Juan Rojas roba todo su dinero a Javier."));
				    }
				    case 80:
				    {
						ClearChatbox(i, 10);
						TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~¿Qué es MetaGaming?~w~~n~~n~					\
																Este termino debes estudiarlo muy bien para sobrevivir en un servidor de Role Play.~n~	\
																Se basa en cuando se confunde los canales IC y OOC. Si sabes algo OOC no puedes~n~	\
																utilizar esa información para beneficiarte IC."));
				    }
				    case 90:
				    {
						ClearChatbox(i, 10);
						Message(i, -1, "{FFFFFF}Los canales IC son los siguientes: El chat normal - /radio - /g - /low.");
						TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~¿Qué es In Character [IC]?~w~~n~~n~					\
																IC se llama desde la información que tu personaje conoce y el rol que tú hagas.~n~	\
																No puedes llamar a una persona por su nombre sin antes haberle preguntado~n~	\
															    o que te lo haya dicho, ya que no conoces a esa persona IC."));
				    }
				    case 105:
				    {
						ClearChatbox(i, 10);
						Message(i, -1, "{FFFFFF}Los Canales OOC son los siguientes: /b - /f - /duda - /reportar - /w - /new");
						TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~¿Qué es Out Of Character [OOC]?~w~~n~~n~					\
																OOC se llama a lo contrario de IC, la persona que maneja tu personaje, osea tú.~n~	\
																Todo lo que sabe, todo lo que vive, eso es OOC. Actualmente el tutorial va hacia tí,~n~	\
																asi que no puedes usar información OOC en IC."));
				    }
				    case 120:
				    {
						ClearChatbox(i, 10);
						TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~¿Qué es RevengeKill?~w~~n~~n~					\
																Alguna vez tendrás que morir, pero verdaderamente no mueres, te logras~n~	\
																salvar y eres curado por los medicos, antes de esto te mataron por algún rol, no~n~	\
																puedes ir a vengarte a la persona que te mato, ya que no recuerdas nada."));
				    }
				    case 135:
				    {
						ClearChatbox(i, 10);
						TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~}Final del Tutorial de Conceptos de Rol~w~~n~~n~					\
																Esperamos que usted haya aprendido un poco de estas reglas ya que~n~	\
																son muy importantes cumplirlas. Al final de esto usa ~y~/ayudarol.~n~~n~	\
																~b~Web   : ~http://www.hermandadzero.com/"));
				    }
				    case 150:
				    {
						ClearChatbox(i, 10);
						SetPlayerCameraPos(i,2442.000,-1659.000,28.000);
						SetPlayerCameraLookAt(i,2453.000,-1660.000,23.000);
						SetPosEx(i, 2505.1760,-1706.3964,13.5277,213.2191,0,0);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~g~Pandillas y bandas~w~~n~~n~					\
																Evita sus zonas, los 'guettos'. Si decides pasar por ahí~n~ \
																pasa sin dinero ... lo más probable es que te roben. Ah,~n~   \
																y siempre están haciendo guerra de bandas por sus terriorios."));
				    }
				    case 165:
				    {
						ClearChatbox(i, 10);
						SetPlayerCameraPos(i,1521.2905,-1659.2491,13.3828);
						SetPlayerCameraLookAt(i,1553.5359,-1681.7788,25.4430);
						SetPosEx(i, 1547.3116,-1692.7671,13.9214,263.2561,0,0);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~b~Departamento de Policía~w~~n~~n~					\
																Si viste algun robo, o te han robado~n~ \
																no hay mejor lugar que ir al departamento de policia de Los Santos~n~   \
																Consejo: Aqui puedes conseguir trabajo y ganar dinero.."));
				    }
				    case 180:
				    {
						ClearChatbox(i, 10);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~w~Tú tambien puedes formar parte de ellos!~n~~n~					\
																Ellos siempre están pendientes en reclutar cadetes para su ciudad~n~ \
																lo único que tienes que hacer es, tener buen un tiempo ~n~   \
															    en la ciudad y dejar su hoja de vida en su sede. Ellos te llamarán"));
				    }
				    case 195:
				    {
						ClearChatbox(i, 10);
						SetPlayerCameraPos(i,801.000,-1319.000,50.000);
						SetPlayerCameraLookAt(i,790.000,-1328.000,38.000);
						SetPosEx(i, 809.3252,-1310.8551,13.5391,184.1351,0,0);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~g~San Andreas Radio-Televisión~w~~n~~n~					\
																Este es el departamento de CNN. Si tienes noticias interesantes~n~ \
																ponte en contacto con ellos. ¿ Quieres una entrevista ? Ven.~n~   \
																También tienen un estudio, donde puedes grabar tus discos."));
					}
				    case 210:
				    {
						ClearChatbox(i, 10);
						SetPlayerCameraPos(i,1201.8060,-1312.1304,17.6054);
						SetPlayerCameraLookAt(i,1176.0504,-1325.5823,17.6054);
						SetPosEx(i, 1228.0928,-1294.8286,13.4566,318.1133,0,0);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~Servicio de Asistencia Municipal de Urgencia y Rescate~w~~n~~n~					\
																El SAMUR se ocupa de la salud de los ciudadanos de San Andreas.~n~ \
																Si padeces de alguna enfermedad o estás mal, ve a ellos y~n~   \
																déjate en sus manos. Recuerda que es mejor prevenir que lamentar."));
				    }
				    case 225:
				    {
     	 				ClearChatbox(i, 10);
     	 				TextDrawShowForPlayer(i, Tutorial[i]);
						SetPosEx(i, 889.8480,-1014.2786,37.9250,1.3368,0,0);
				        SetPlayerCameraPos(i, 930.4509,-976.7344,43.4699);
						SetPlayerCameraLookAt(i, 930.0687,-977.6572,43.5249);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~b~Federal Bureau of Investigation~w~~n~~n~					\
																El ~b~FBI~w~, se encarga de investigaciones en casos de tráfico~n~ \
																de droga, terrorismo, secuestros, etc.~n~   \
																Su sede es en ~y~Los Santos."));
				    }
				    case 240:
				    {
						ClearChatbox(i, 10);
						SetPosEx(i, 422.2823,-1497.9290,31.1724,271.1912,0,0);
						SetPlayerCameraPos(i,431.000,-1510.000,34.000);
						SetPlayerCameraLookAt(i,438.000,-1507.000,35.000);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~Tienda de Ropa~w~~n~~n~					\
																En la ciudad hay diversas tiendas de ropa.~n~ \
																Podrás elegir entre una variedad extensa de 'skins'.~n~   \
																Recuerda que algunas están reservadas a facciones."));
				    }
				    case 250:
				    {
						ClearChatbox(i, 10);
						SetPlayerCameraPos(i,2253.000,-1744.000,17.000);
						SetPlayerCameraLookAt(i,2248.000,-1738.000,17.000);
						SetPosEx(i, 2256.0886,-1757.8958,13.5469,5.3080,0,0);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~Gimnasio~w~~n~~n~					\
																En el gimnasio podrás aprender nuevos estilos de lucha~n~ \
																a un precio razonable. Use ~y~/apelear~w~ dentro~n~   \
																del gimnasio y podrá ver los estilos."));
				    }
				    case 260:
				    {
						ClearChatbox(i, 10);
						SetPlayerCameraPos(i,1329.000,-1278.000,23.000);
						SetPlayerCameraLookAt(i,1339.000,-1280.000,23.000);
						SetPosEx(i, 1332.0735,-1270.7340,13.5525,216.7866,0,0);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~g~Habilidad de Armas~w~~n~~n~					\
																Absolutamente nadie nace sabiendo utilizar un Desert Eagle.~n~ \
																Para eso está Ammunation, donde aprenderás a utilizar las armas~n~   \
																mediante guias que puedes comprar y asi mejorar su habilidad."));
				    }
				    case 275:
				    {
						ClearChatbox(i, 10);
						SetPlayerCameraPos(i, 2801.6760, -1838.4375, 18.4401);
						SetPlayerCameraLookAt(i, 2801.0291, -1837.6775, 18.1051);
						SetPosEx(i, 2797.9883,-1798.2902,11.5401,225.3631,0,0);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~g~PaintBall LS~w~~n~~n~					\
																Si quieres aumentar tu habilidad con las armas puedes ir al~n~ \
																paintball con tus amigos, obtener diversion y experiencia~n~   \
																en el uso de las diferentes armas."));
				    }
				    case 290:
				    {
						ClearChatbox(i, 10);
						SetPlayerCameraPos(i,1799.000,-1680.000,23.000);
						SetPlayerCameraLookAt(i,1809.000,-1682.000,23.000);
						SetPosEx(i, 1800.7739,-1678.1132,14.4939,213.9432,0,0);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~p~Discotecas~w~~n~~n~					\
																Aqui Podras Festejar  Tus Eventos Y fiestas Hay pista De Baile:~n~ \
																Tambien puedes realizar fiestas privada,O Venir A Tomar Algo~n~   \
															    Eso si, ten cuidado con los mafiosos~~~~~~~~."));
				    }
				    case 305:
				    {
						ClearChatbox(i, 6);
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~g~Uso del comando /new~w~~n~~n~					\
																Fue hecho para los nuevos usuarios, tenemos muchos~n~  \
																ayudantes \"helpers\" que lo pueden guiar en este modo de juego.~n~   \
																Recuerda usar el comando ~r~/new ~w~solo para dudas."));
				    }
				    case 315:
				    {
                        TextDrawSetString(Tutorial[i], convert_encoding("	~h~~r~Fin del Tutorial~w~~n~~n~					\
																Usa ~y~/new~w~ para preguntas frecuentes del servidor~n~ \
																Recuerda no abusar de los canales administrativos~n~   \
																Recuerda visitar nuestro ~h~~b~Foro~w~!"));
				    }
				    case 330:
				    {
						TextDrawHideForPlayer(i, Film_1);
						TextDrawHideForPlayer(i, Film_2);
						TextDrawHideForPlayer(i, Tutorial[i]);
						Message(i, -1, "{F20C00}Atención! {FFFFFF}Ahora pasaremos al test de Rol, si usted falla mas de 5 preguntas, volverá a leer el tutorial.");
						ClearChatbox(i, 8);
						new tes[] = "{FFFFFF}Es atropellar a alguien con un auto.\nEs MetaPower, es tirarte de un edificio.\nEs decir información OOC en el juego.\nEs MetaGaming, la confunsión de canales IC u OOC.";
						ShowPlayerDialog(i, TEST_0, DIALOG_STYLE_LIST, "{4DE868}¿Que significa MG?", tes, "OK", "");
				    }
			}
		}
	}
}

function CamaraLogueo(playerid)
{
  	new RandomStart = random(7);
  	switch(RandomStart)
	{
	    case 0: {SetPlayerCameraPos(playerid, 1440.1466,-1578.7924,58.7301); 		SetPlayerCameraLookAt(playerid, 1480.8331,-1778.6486,87.0428);}
	    case 1: {SetPlayerCameraPos(playerid, -2831.5222,1113.8793,30.0481); 		SetPlayerCameraLookAt(playerid, -2814.9211,1131.0520,26.2924);}
	    case 2: {SetPlayerCameraPos(playerid, -207.0811,2141.6755,119.4371);    	SetPlayerCameraLookAt(playerid, -262.8133,2257.2371,64.1802);}
	    case 3: {SetPlayerCameraPos(playerid, 1803.2928,-1402.7351,84.1086);     	SetPlayerCameraLookAt(playerid, 1597.0746,-1262.4785,274.3510);}
	    case 4: {SetPlayerCameraPos(playerid, 1221.0970,-1513.5063,88.0689);     	SetPlayerCameraLookAt(playerid, 1453.7445,-1329.4412,327.4604);}
	    case 5: {SetPlayerCameraPos(playerid, 1886.5455,-1236.3918,33.1253);     	SetPlayerCameraLookAt(playerid, 1958.2098,-1205.2679,23.5294);}
	    case 6: {SetPlayerCameraPos(playerid, 208.7260,-1871.0435,8.5029);        	SetPlayerCameraLookAt(playerid, 143.6782,-1945.5010,9.1876);}
	}
	return 1;
}

stock IsPlayerInVehicleRadio(playerid, Float:radius)
{
    new Float:r, Float:rr, Float:rrr, Float:rc, Float:rrc, Float:rrrc;
    GetPlayerPos(playerid, r, rr, rrr);
    for(new i; i < MAX_VEHICLES; i++)
    {
        GetVehiclePos(i, rc, rrc, rrrc);
        if(PlayerToPoint(radius,playerid,rc,rrc,rrrc))
        {
            return i;
        }
    }
    return false;
}

DetectarSPAM(string[])
{
    new SSPAM;
    new CUENTAP,CUENTAN,CUENTADP,CUENTAGB,CUENTARM,CUENTAC;
	for(SSPAM = 0; SSPAM < strlen(string); SSPAM ++)
	{
	    if(string[SSPAM] == '.') CUENTAP ++;
	    if(string[SSPAM] == '0' || string[SSPAM] == '1' || string[SSPAM] == '2' || string[SSPAM] == '3' || string[SSPAM] == '4' || string[SSPAM] == '5' || string[SSPAM] == '6' || string[SSPAM] == '7' || string[SSPAM] == '8' || string[SSPAM] == '9') CUENTAN ++;
	    if(string[SSPAM] == ':') CUENTADP ++;
	    if(string[SSPAM] == '_') CUENTAGB ++;
	    if(string[SSPAM] == ',') CUENTAC ++;
	    if(string[SSPAM] == '-') CUENTARM ++;
	}
 	if(CUENTAP >= 2 && CUENTAN >= 6) return 1;
 	if(CUENTAC >= 2 && CUENTAN >= 6) return 1;
 	if(CUENTAN >= 7) return 1;
 	if(CUENTAGB >= 2 && CUENTAN >= 5) return 1;
 	if(CUENTARM >= 1 && CUENTAN >= 6) return 1;
 	if(CUENTADP >= 1 && CUENTAN >= 6) return 1;
 	if(strfind(string, ".com", true) != -1 || strfind(string, ".com.ar", true) != -1 || strfind(string, ".org", true) != -1 || strfind(string, ".net", true) != -1 || strfind(string, ".es", true) != -1 || strfind(string, ".tk", true) != -1 || strfind(string, ".co.cc", true) != -1 || strfind(string, "Ciudad Prohibida", true) !=-1) return 1;
 	if(strfind(string, ". com", true) != -1 || strfind(string, ". com.ar", true) != -1 || strfind(string, ". org", true) != -1 || strfind(string, ". net", true) != -1 || strfind(string, ". es", true) != -1 || strfind(string, ". tk", true) != -1 || strfind(string, ". co.cc", true) != -1 || strfind(string, "server", true) !=-1) return 1;
 	if(strfind(string, "metropolis", true) != -1 || strfind(string, "ldds", true) !=-1 || strfind(string, "gamerol", true) !=-1 || strfind(string, "generolife", true) !=-1 || strfind(string, "zenon", true) !=-1 || strfind(string, "fenix", true) !=-1 || strfind(string, "CP", true) !=-1 || strfind(string, "servidor", true) !=-1) return 1;
 	return 0;
}

AccionSPAM(playerid,string[])
{
	new x[186];
	format(x, sizeof(x), "{11BB11}- AntiSPAM {FFFFFF}|| {FF2200}%s(%d): {FFFFFF}%s ||", PlayerName(playerid),playerid, string); A_Info(x);
	return 1;
}

StringOther(playerid, const string[])
{
	if(IsPlayerConnected(playerid))
	{
	    if(strfind(string, "=", true) != -1)    			return 0;
	    else if(strfind(string, "\n", true) != -1) 			return 0;
	    else return 1;
	}
	return 0;
}

stock CleanScreen()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        ClearChatbox(i, 100);
    }
    return 1;
}

function DisableVehicleAlarm(vehicleid)
{
    new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
    SetVehicleParamsEx(vehicleid, engine, lights, false, doors, bonnet, boot, objective);
}

function DrugsSmuggling(playerid, type, amount)
{
	new string[80],typetxt[12];
	switch(type){
	    case 1:		typetxt = "Speed";
	    case 2:		typetxt = "Extasis";
	    case 3:		typetxt = "Ritalin";
	    case 4:		typetxt = "Heroina";
	    case 5:		typetxt = "Marihuana";
 	}
	PlayerInfo[playerid][pDrugs] -= amount;

	Smuggling[playerid] = amount;
 	SmugglingType[playerid] = type;
  	format(string, sizeof(string), "¡Importaste %d drogas de %s, dirígete al Checkpoint!",Smuggling[playerid], typetxt);
	Message(playerid, COLOR_YELLOW, string);
	switch(type){
	    case 1:		SetPlayerCheckpoint(playerid,2666.1895,-1109.3519,69.3972,5.0); // SPEED
	    case 2:		SetPlayerCheckpoint(playerid,2657.6475,-2048.4001,13.6357,5.0); // ECTASY
	    case 3:		SetPlayerCheckpoint(playerid,1296.3634,-1251.0021,13.5469,5.0); // RITALIN
	    case 4:		SetPlayerCheckpoint(playerid,2351.8406,-1169.0435,27.9956,5.0); // HEROINA
	    case 5:		SetPlayerCheckpoint(playerid,2351.8406,-1169.0435,27.9956,5.0); // MARIHUANA
 	}
}

function RespawnVehicles()
{
	Loop(c,VEH)
	{
		if(IsAnOwnableCar(c))
		{
		    SetVehicleToRespawn(c);
		    SetVehiclePos(c, CarInfo[c][cLocationx],CarInfo[c][cLocationy],CarInfo[c][cLocationz]);
		    SetVehicleZAngle(c, CarInfo[c][cAngle]);
		    SetVehicleParamsEx(c ,0,0,0,CarInfo[c][cLock],0,0,0);
		    engineOn[c] = false;
		    ChangeVehicleColor(c, CarInfo[c][cColorOne], CarInfo[c][cColorTwo]);
		    Gas[c] = 100;
		}
		else
		{
		    SetVehicleToRespawn(c);
		    SetVehicleParamsEx(c ,0,0,0,0,0,0,0);
		    engineOn[c] = false;
		    Gas[c] = 100;
		}
	}
	GlobalMsg(COLOR_GREEN, "Respawn general terminado.");
	return 1;
}

function RespawnVehicle(c)
{
	if(IsAnOwnableCar(c))
	{
	    SetVehicleToRespawn(c);
	    SetVehiclePos(c, CarInfo[c][cLocationx],CarInfo[c][cLocationy],CarInfo[c][cLocationz]);
	    SetVehicleZAngle(c, CarInfo[c][cAngle]);
	    SetVehicleParamsEx(c ,0,0,0,CarInfo[c][cLock],0,0,0);
	    engineOn[c] = false;
	    ChangeVehicleColor(c, CarInfo[c][cColorOne], CarInfo[c][cColorTwo]);
	    Gas[c] = 100;
	}
	else
	{
        SetVehicleToRespawn(c);
        SetVehicleParamsEx(c ,0,0,0,0,0,0,0);
	    engineOn[c] = false;
	    Gas[c] = 100;
	}
}

Accesory_Test(playerid, index, modelid, bone, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ, price)
{
    SetPlayerAttachedObject(playerid, index, modelid, bone, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ);
    ClothesID		[playerid] = modelid;
    ClothesPrice	[playerid] = price;
    return 1;
}

Accesory_Bandana(playerid, modelid)
{
    ClothesID	[playerid] = modelid;
    ClothesPrice[playerid] = 70;
    new SkinA = GetPlayerSkin(playerid);
    switch(SkinA)
    {
	        case 115:	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.075032, 0.039259, -0.009051, 272.667022, 0.000000, 268.155487); } // Mask7 - skinsur115
			case 114: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.075032, 0.039259, -0.009051, 272.667022, 0.000000, 268.155487); } // Mask7 - skinsur114
			case 116: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.075032, 0.039259, -0.009051, 272.667022, 0.000000, 268.155487); } // Mask7 - skinsur116
			case 173: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058); } // Mask7 - skinsur116
			case 174: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058); } // Mask7 - skinsur116
			case 175: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058); } // Mask7 - skinsur116
		    //groves
	        case 271: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073522, 0.015061, -0.005912, 277.060668, 9.697027, 264.330200); } // Mask3 - saveskinryder
			case 270: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.083064, 0.015061, 0.003734, 270.357788, 2.187248, 264.330200); } // Mask3 - 270sweet
			case 269: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.083064, 0.017489, 0.002312, 270.357788, 2.187248, 266.944274); } // Mask3 - smoke269
			case 105: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754); } // Mask3 - tapadoskin 105 grove
			case 106: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084321, 0.032509, -0.006748, 268.970458, 1.533374, 269.223754); } // Mask3 - skin 106grove
			case 107: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084321, 0.035590, -0.004405, 268.970458, 1.533374, 269.223754); } // Mask3 - skin 107grove
			//Latinos
	        case 108: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084809, 0.026987, 0.000924, 273.545745, 0.572601, 264.837554 ); } // Mask6 - skinvago108
			case 109: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.081629, 0.035036, -0.006385, 273.545745, 0.572601, 264.837554 ); } // Mask6 - skinvago 109
			case 110: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.073774, 0.042118, -0.003368, 273.422515, 0.243100, 267.547058 ); } // Mask6 - skinvago110
			//Ballas
			case 102: 	{ SetPlayerAttachedObject(playerid, 4,18915, 2, 0.076758, 0.034728, -0.001697, 267.582092, 359.936279, 265.333801 ); } // Mask5 - skin102balla
			case 103: 	{ SetPlayerAttachedObject(playerid, 4,18915, 2, 0.076758, 0.042026, 0.000579, 267.582092, 359.936279, 265.333801 ); } // Mask5 - 103balla
			case 104: 	{ SetPlayerAttachedObject(playerid, 4,18915, 2, 0.076758, 0.042026, 0.000579, 267.582092, 359.936279, 265.333801 ); } // Mask5 - skin 104 balla
			case 293: 	{ SetPlayerAttachedObject(playerid, 4,18915, 2, 0.079601, 0.019614, -0.006095, 272.025512, 0.136046, 268.165863 ); } // Mask5 - oglock
			//Blood
			case 7: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.086248, 0.036498, -0.004328, 270.304412, 359.126678, 266.091674 ); } // Mask2 - blood - 7
			case 67: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.086248, 0.020672, 0.001285, 270.304412, 359.126678, 266.091674 ); } // Mask2 - blood - 67
			case 180: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.084799, 0.039217, -0.007458, 270.304412, 359.126678, 271.452209 ); } // Mask2 - blood- 180
			case 19: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.081000, 0.026039, -0.004144, 270.304412, 359.126678, 271.452209 ); } // Mask2 - blood - 19
			case 144: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.110470, 0.043788, -0.002435, 266.909606, 358.832275, 267.704956 ); } // Bandana2 - 144 - blood
		    //Moteros
			case 23:	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.082504, 0.038338, -0.005320, 271.407196, 356.295104, 267.907989 ); } // Mask2 - skin 100 motero
			case 247: 	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.088066, 0.038264, 0.000398, 271.407196, 356.295104, 267.907989 ); } // Mask2 - skin 247 - motoquero
			case 248:	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.088066, 0.038264, 0.000398, 271.407196, 356.295104, 267.907989 ); } // Mask2 - skin 248 - motoquero
			case 100:	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.088066, 0.038264, 0.000398, 271.407196, 356.295104, 267.907989 ); } // Mask2 - skin 248 - motoquero
			case 33:	{ SetPlayerAttachedObject(playerid, 4, modelid, 2, 0.041866, 0.015547, -0.001428, 271.371276, 356.919921, 269.937591 ); } // Mask2 - skin BIEN 33
	}
}

function SaveTrunk()
{
	new idx, File: file2, coordsstring[128];
	idx = 1;
	while (idx < sizeof(CarInfo))
	{
		format(coordsstring, sizeof(coordsstring), "%i,%i,%i,%i,%i,%i,%i,%i,%i,%f\n",
		vehTrunk[idx][1],
		vehTrunkAmmo[idx][1],
		vehTrunk[idx][2],
		vehTrunkAmmo[idx][2],
		vehTrunk[idx][3],
		vehTrunkAmmo[idx][3],
		vehTrunk[idx][4],
		vehTrunkAmmo[idx][4],
		vehTrunkCounter[idx],
		vehTrunkArmour[idx]);
		
		if(idx == 1)	file2 = fopen("trunk.cfg", io_write);
		else			file2 = fopen("trunk.cfg", io_append);

		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

function LoadTrunk()
{
	new arrCoords[13][64];
	new strFromFile2[128];
	new File: file = fopen("trunk.cfg", io_read);
	if (file)
	{
		new idx = 1;
		while (idx < sizeof(CarInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    vehTrunk[idx][1] = strval(arrCoords[0]);
		    vehTrunkAmmo[idx][1] = strval(arrCoords[1]);
		    vehTrunk[idx][2] = strval(arrCoords[2]);
		    vehTrunkAmmo[idx][2] = strval(arrCoords[3]);
		    vehTrunk[idx][3] = strval(arrCoords[4]);
		    vehTrunkAmmo[idx][3] = strval(arrCoords[5]);
		    vehTrunk[idx][4] = strval(arrCoords[6]);
		    vehTrunkAmmo[idx][4] = strval(arrCoords[7]);
		    vehTrunkCounter[idx] = strval(arrCoords[8]);
		    vehTrunkArmour[idx] = floatstr(arrCoords[9]);
		    idx++;
		}
	}
	return 1;
}

AddCarTuning(vehicleid)
{
    ChangeVehicleColor(vehicleid, CarInfo[vehicleid][cColorOne], CarInfo[vehicleid][cColorTwo]);
    if(CarInfo[vehicleid][cWheel] > 0) 			AddVehicleComponent(vehicleid, CarInfo[vehicleid][cWheel]);
	if(CarInfo[vehicleid][cHydraulics] > 0) 	AddVehicleComponent(vehicleid, CarInfo[vehicleid][cHydraulics]);
	if(CarInfo[vehicleid][cNitro] > 0) 	 		AddVehicleComponent(vehicleid, CarInfo[vehicleid][cNitro]);
	if(CarInfo[vehicleid][cSideskirt] > 0)
	{
        AddVehicleComponent(vehicleid, CarInfo[vehicleid][cSideskirt]);
        new skirt = CarInfo[vehicleid][cSideskirt];
        // X-FLOW
        if(skirt == 1030) AddVehicleComponent(vehicleid, 1031);
        else if(skirt == 1039) AddVehicleComponent(vehicleid, 1041);
        else if(skirt == 1048) AddVehicleComponent(vehicleid, 1052);
        else if(skirt == 1070) AddVehicleComponent(vehicleid, 1072);
        else if(skirt == 1057) AddVehicleComponent(vehicleid, 1063);
        else if(skirt == 1093) AddVehicleComponent(vehicleid, 1095);
        // ALIEN
        if(skirt == 1026) AddVehicleComponent(vehicleid, 1027);
        else if(skirt == 1036) AddVehicleComponent(vehicleid, 1040);
        else if(skirt == 1047) AddVehicleComponent(vehicleid, 1051);
        else if(skirt == 1069) AddVehicleComponent(vehicleid, 1071);
        else if(skirt == 1056) AddVehicleComponent(vehicleid, 1062);
        else if(skirt == 1094) AddVehicleComponent(vehicleid, 1090);
	}
	if(CarInfo[vehicleid][cRoof] > 0) 	 		AddVehicleComponent(vehicleid, CarInfo[vehicleid][cRoof]);
	if(CarInfo[vehicleid][cSpoiler] > 0) 	 	AddVehicleComponent(vehicleid, CarInfo[vehicleid][cSpoiler]);
	if(CarInfo[vehicleid][cRearBumper] > 0) 	AddVehicleComponent(vehicleid, CarInfo[vehicleid][cRearBumper]);
	if(CarInfo[vehicleid][cFrontBumper] > 0) 	AddVehicleComponent(vehicleid, CarInfo[vehicleid][cFrontBumper]);
	if(CarInfo[vehicleid][cExhaust] > 0) 		AddVehicleComponent(vehicleid, CarInfo[vehicleid][cExhaust]);
	if(CarInfo[vehicleid][cPaintjob] > 0) 		ChangeVehiclePaintjob(vehicleid, CarInfo[vehicleid][cPaintjob]-1);
}

stock IsLocolowVehicle(veh)
{
	new model = GetVehicleModel(veh);
    switch(model)
    {
        case 412,534,535,536,566,567,576: return 1;
    }
    return 0;
}

stock IsWAAVehicle(veh)
{
    new model = GetVehicleModel(veh);
    switch(model)
    {
        case 558,559,560,561,562,565: return 1;
    }
    return 0;
}

stock BikeModel(playerid)
{
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
    switch(model)
    {
		case 509,481,510,462,448,581,522,461,521,523,463,586,468,471: return 1;
	}
	return 0;
}

stock Boats(veh)
{
    new model = GetVehicleModel(veh);
    switch(model)
	{
	    case 484,454,493,446,452,487: return 1;
 	}
	return 0;
}

function ResetAcWarn(playerid)
{
	PlayerGotSpottedRecently[playerid] = 0;
	Checked[playerid] = 0;
	return 1;
}

function SafeGivePlayerWeapon(playerid, weaponid, ammo)
{
	ScriptWeaponsUpdated[playerid] = 1;
	GivePlayerWeapon(playerid, weaponid, ammo);
    SetTimerEx("UpdateWeapons",2500,false,"i",playerid);
	return 1;
}

function UpdateWeapons(plyid)
{
	new weaponid, ammo;
    for(new i = 0; i < 13; i++)
	{
	    GetPlayerWeaponData(plyid, i, weaponid, ammo);
		ScriptWeapons[plyid][i] = weaponid;
	}
	ScriptWeaponsUpdated[plyid] = 0;
	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
{
     if(issuerid != INVALID_PLAYER_ID)
     {
        static Float:SacarVida; // Definimos para sacar la vida.
        GetPlayerHealth(playerid, SacarVida); // Extraemos info. de la vida del PJ.
		if(weaponid == 34)
			{
        	SetPlayerHealth(playerid, SacarVida-100);
        	}

     }
     return 1;
}




Ayuda(playerid, tip)
{
	switch(tip)
	{
		case 0:
		{
		    ClearChatbox(playerid, 10);
		    if(Team_LSPD(playerid))
		    {
		        Message(playerid, -1, "{FFFFFF}Departamento de Policía");
		        Message(playerid, -1, "{0098FF}/radio - /r - /d - (/m)egafono - /su - /duty /esposar - /ta /revisarcarga /quitarcarga /revisarcasa /pstrips");
		        Message(playerid, -1, "{0098FF}/quitar - /multar - /drag - /bk(c) - /tlc - /miranda - (/bar)rera - /qb(s) -  /placa - /expediente /qstrips");
				Message(playerid, -1, "{0098FF}/ant - /limpiar - /sospechosos - /vercinturon - /remolcar - /allanarcasa - /incautar - /darlicencia");
		    }
		    else if(Team_SAMUR(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Equipo SAMUR");
                Message(playerid, -1, "{EC3226}/rescatar /curar /diagnostico /pcinfo /operar /tlc /duty /sacarsangre");
			}
			else if(Team_Mecanicos(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Taller de Mecánicos");
                Message(playerid, -1, "{72DDC0} /mm /duty /gpsmeca /changeit");
			}
			else if(Moteros(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Moteros");
                Message(playerid, -1, "{72DDC0}/robarpieza /cerrajear /atar /robarbanco /vendar /lockhq");
			}
			else if(Pandilleros(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Pandilleros");
                Message(playerid, -1, "{72DDC0}/roba /robarbanco /lockhq");
			}
			else if(Mafioso(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Mafiosos");
                Message(playerid, -1, "{FFDD11}/robarpieza /cerrajear /atar /vendar /robarbanco /lockhq");
			}


			else if(Ballas_pand(playerid))
			{
				Message(playerid, -1, "{FFFFFF}Ballas");
                Message(playerid, -1, "{72DDC0}/robar /robarbanco ");
			}
			else if(Hitman(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Hitman");
                Message(playerid, -1, "{FFDD11}/hits /encontrara /disfraz /amascara");
			}
			else if(IsAnInstructor(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Licencieros");
                Message(playerid, -1, "{FF6655}/licencia /evaluar /renovarvehiculo /credencial");
			}
			else if(Journalist(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}San Andreas Radio Televisión");
                Message(playerid, -1, "{00BB22}(/n)oticias /entrevista /centrevista");
			}
			else if(Presidente(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Presidente");
			    Message(playerid, -1, "{FFDD11}(/gob)ierno /impuesto /fondoestado");
			}
			else if(Gobierno(playerid) && !Presidente(playerid))
   			{
   			    Message(playerid, -1, "{FFFFFF}Gobierno");
   			    Message(playerid, -1, "{ECE826}(/gob)ierno");
		    }
			else if(Team_FBI(playerid))
			{
		        Message(playerid, -1, "{FFFFFF}Equipo FBI");
		        Message(playerid, -1, "{72B3CD}(/r)adio (/d)epartments (/m)egaphone (/su)spect /arrestar /duty /esposar (/ta)zer /soltar");
				Message(playerid, -1, "{72B3CD}/revisar /cachearinv /quitar /multar /drag /miranda (/gob)ierno /allanarcasa /bk(c)");
				Message(playerid, -1, "{72B3CD}/placa (/ant)ecedente (/su)spect /limpiar /sospechosos /revisarcasa /incautar /retener");
			}
			else if(Team_NG(playerid))
			{
		        Message(playerid, -1, "{FFFFFF}Equipo Militar");
		        Message(playerid, -1, "{72DD9B}(/r)adio (/d)epartments (/m)egaphone (/gob)ierno /equipo /esposar (/ta)zer /multar");
		        Message(playerid, -1, "{72DD9B}/quitar /controlcelda /vercinturon /automatico /misil /revisarcarga /quitarcarga /bk(c)");
			}
			else if(IsANarco(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Narcotraficante");
			    Message(playerid, -1, "{ECE826}/cosechardrogas /fabricar /venderarma /pda /importardrogas /venderdrogas /cancelardrogas");
			}
			else if(IsACorteJudicial(playerid))
			{
			    Message(playerid, -1, "{FFFFFF}Corte Judicial");
			    Message(playerid, -1, "{ECE826}/Equipo /Darjuicio /Arrestar /Duty /Radio /D ");
			}
		}
		case 1:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "{D3FF8D}Ayuda - Chat");
		    Message(playerid, COLOR_WHITE, "{FFFFFF}Comandos IC:  (/g)ritar (/l)ow /me /do (/r)adio");
		    Message(playerid, COLOR_WHITE, "{FFFFFF}Comandos OOC: /b (/w)hisper (/f)accion");
		}
		case 2:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda General]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: [ADMINISTRACIÓN] /re /duda /new /solicitaradmin");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /cuenta /subirnivel");
			Message(playerid, COLOR_GRAD2, "Comandos disponibles: /pagar /hora /id /comer /cfumar /cropa /cropaid /licencias /acciones /sexo /ven /seguro");
			Message(playerid, COLOR_GRAD2, "Comandos disponibles: /ap /cp /apgarage /cpgarage (/w)hisper /tognews /togooc /togfam /togpm /togphone");
			Message(playerid, COLOR_GRAD2, "Comandos disponibles: /eject /usardrogas /llenar /admins /moneda /dar /drogas /ayudarol /pasar");
		}
		case 3:
		{
		    ClearChatbox(playerid, 10);
		    if(PlayerInfo[playerid][pLeader] < 1) return Message(playerid, COLOR_GRAD2, "¡No eres líder!");
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Líder]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /contratar /despedir /giverank [SOLO ALGUNAS] /fondos /retirarfondos");
		}
		case 4:
		{
		    ClearChatbox(playerid, 10);
		    if(PlayerInfo[playerid][pJob] == 0) return Message(playerid, COLOR_GRAD2, "¡No tienes trabajo!");
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Trabajo]=-");
		    switch(PlayerInfo[playerid][pJob])
		    {
		        case 1,3:	{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /ruta"); }
		        case 2:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /barrer /dbarrer"); }
		        case 4:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /vendertelefono"); }
		        case 5:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /robar"); }
				case 6:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /vpizza /tomarpizza [En la Cocina]"); }
				case 7:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /vermapa /pescar /peces"); }
				case 8:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /cancelarentrega"); }
				case 9:		{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /equipo /dutytaxi /clientes /tarifa"); }
				case 11:	{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /proteger"); }
				case 12:	{ Message(playerid, COLOR_GRAD2, "Comandos disponibles: /encontrar"); }
            }
		}
		case 5:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Teléfono]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /iphone /colgar /altavoz");
		}
		case 6:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Casa]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /abrir /comprarcasa /vendercasa /renta /desalojar /cajafuerte /cinfo /garma /sarma /(g)bodega /sbodega /timehouse");
		}
		case 7:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Vehiculo]=-");
            Message(playerid, COLOR_GRAD2, "Comandos disponibles: /v /venderveh(2) /cvehiculo(2) /darllaves");
		}
		case 8:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Banco]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /depositar /sacar /transferir /balance /darcheque /cobrarcheques /vercheques");
		}
		case 9:
		{
		    ClearChatbox(playerid, 10);
		    if(PlayerInfo[playerid][pDonateT] == 0) return Message(playerid, COLOR_GRAD2, "¡Usted no es premium!");
		    Message(playerid, -1, "{00E7FF}-=[Ayuda Premium]=-");
            if(PlayerInfo[playerid][pDonateT] == 1) { Message(playerid, COLOR_GRAD2, "Comandos: /garageentrar /garagesalir /v seguro3  /v seguro4 - /v estacionar3 /v estacionar4 - /cvehpremium /cambiarmiskin /traercarro /traercarro2 /fixpremium"); }
		}
		case 10:
		{
		    ClearChatbox(playerid, 10);
		    Message(playerid, COLOR_WHITE, "-=[Ayuda Negocio]=-");
		    Message(playerid, COLOR_GRAD2, "Comandos disponibles: /comprarnegocio /vendernegocio /sganancias /binfo /extorcion /qextorcion [Extorcion]/recaudar");
		}
	}
	return 1;
}

MessageEx(playerid_1, playerid_2, const color, const string[])
{
	Message(playerid_1, color, string);
	Message(playerid_2, color, string);
}

RadioMsg(const channel, const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i) && RadioOn[i])
			if(PFrecuencia[i] == channel) SendClientMessage(i, 0xDFD575FF, string);
}

ArmarPaintBall(playerid)
{
	SetHP(playerid, 100);
	SetPlayerArmour(playerid, 100);
 	SafeGivePlayerWeapon(playerid, 4, 1);
  	SafeGivePlayerWeapon(playerid, 24, 250);
   	SafeGivePlayerWeapon(playerid, 25, 200);
    SafeGivePlayerWeapon(playerid, 29, 500);
    SafeGivePlayerWeapon(playerid, 31, 500);
    return 1;
}

function PonerColor(playerid)	{	SetPlayerColor(playerid, Color[playerid]);	}

RobarBanco(playerid)
{
	new string[128];
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("RobandoBanco", 60000, false, "i", playerid);
    format(string,sizeof(string), "* %s toma las bolsas y empieza a guardar el dinero.", PlayerName(playerid));
    ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string), "* %s (( Guardando Guardando ))", PlayerName(playerid));
    ProxDetector(20.0, playerid, string, 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
    Message(playerid, COLOR_GRAD2, "¡Debes esperar 60 segundos a que se llenen las bolsas!");
	ProxDetector(20.0, playerid, "* Banco (( Bip Bip Bip ))", 0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF,0xB6DB22FF);
	ProxDetector(30.0, playerid, "¡La alarma contra robos ha sido activada, ya viene la policia!", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	SetPlayerAttachedObject(playerid, 3, 1550, 1, 0.000000, -0.134457, 0.000000, 134.199493, 86.595359, 0.000000);
	SendRadioMessage(1, TEAM_RADIO_COLOR, "ATENCIÓN: Se informa a todas las unidades que el Banco Central de LS esta siendo robado.");
	return 1;
}

function RobandoBanco(playerid)
{
	new string[128];
    new robmoney = random(50000);
    Earn(playerid, 150000+robmoney);
    TogglePlayerControllable(playerid, 1);
	format(string, sizeof(string), "¡Han robado $%d, ahora salgan de ahi antes de que llegue la policia!", robmoney);
 	Message(playerid, COLOR_GRAD2, string);
 	SaveRobs();
 	return 1;
}

function Pescando(playerid)
{
	new string[128], peces;
	peces = random(20);
	Fishing[playerid] = 0;
	format(string, sizeof(string), "* %s empieza a alzar las redes al barco y separa los peces.", PlayerName(playerid));
	ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(string, sizeof(string), "* Has atrapado %d peces.", peces+80);
	Message(playerid, COLOR_WHITE, string);
	PlayerInfo[playerid][pPeces] += peces+80;
	return 1;
}

function SendPBMessage(type, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(PaintballType[i] == type)
		{
			Message(i, color, string);
 		}

	}
}

function DialogoEstado(playerid)
{
	new string[80], SituacionEs[14];
	switch(EstadoON[playerid])
	{
	    case 0: SituacionEs = "Habilitar";
	    case 1: SituacionEs = "Deshabilitar";
 	}
	format(string, sizeof(string), "Estado: %s\nAccion: %s", PlayerInfo[playerid][pEstado], SituacionEs);
	ShowPlayerDialog(playerid, DIALOG_ESTADO, DIALOG_STYLE_LIST, "Estado", string, "Seleccionar", "Salir");
}

function DestroyProgg(playerid)
{
    DestroyProgressBar(Cargando[playerid]);
	Cargando[playerid] = INVALID_BAR_ID;
	TogglePlayerControllable(playerid, 1);
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	if(UsingBelt[playerid] == 0)
	{
	    new Float:X, Float:Y, Float:Z, Float:Speed, Float:Vida;
 		GetPlayerHealth(playerid, Vida);	GetVehicleVelocity(vehicleid, X, Y, Z);
		Speed = floatmul(floatsqroot(floatadd(floatadd(floatpower(X, 2), floatpower(Y, 2)), floatpower(Z, 2))), 200.0);
		if(Speed > 10 && Speed < 20)        SetHP(playerid, Vida-2);
		else if(Speed > 21 && Speed < 50)	SetHP(playerid, Vida-5);
		else if(Speed > 51 && Speed < 100)	SetHP(playerid, Vida-9);
		else if(Speed > 101 && Speed < 200)	SetHP(playerid, Vida-12);
		else if(Speed > 201 && Speed < 280)	SetHP(playerid, Vida-15);
	}
	return 0;
}

function Remolcar(playerid)
{
    new idcarx = GetPlayerVehicleID(playerid);
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
		if(GetVehicleModel(idcarx) == 525)
		{
			new Float:pX,Float:pY,Float:pZ;
			GetPlayerPos(playerid,pX,pY,pZ);
			new Float:vX,Float:vY,Float:vZ;
			new Found=0;
			new vid=0;
			while((vid<MAX_VEHICLES)&&(!Found))
			{
				vid++;
				GetVehiclePos(vid,vX,vY,vZ);
				if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
				{
					Found=1;
 					if(IsTrailerAttachedToVehicle(idcarx))
 					{
   						DetachTrailerFromVehicle(idcarx);
     				}
        			else
          			{
						AttachTrailerToVehicle(vid,idcarx);
					}
				}
			}
			if(!Found)
			{
				Message(playerid,COLOR_GRAD2,"No hay ningún vehículo cerca!");
			}
		} else Message(playerid, COLOR_GRAD2, "¡No puedes remolcar con este vehículo!");
	} else Message(playerid, COLOR_GRAD2, "¡No estas conduciendo ningun vehículo!");
	return 1;
}

function RemoveObjects(playerid)
{
   RemoveBuildingForPlayer(playerid, 13862, 359.2500, -1125.8281, 80.8516, 0.25); //Yakuza Doors
	RemoveBuildingForPlayer(playerid, 727, 931.7891, -991.1719, 37.0234, 0.25); // FBI Plant
	RemoveBuildingForPlayer(playerid, 1307, 937.9375, -986.5391, 37.0313, 0.25); // FBI Poste
    RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25); //Graffiti Ayunta
    RemoveBuildingForPlayer(playerid, 1266, 1805.0234, -1692.4453, 25.1484, 0.25); //Parqueadero
	RemoveBuildingForPlayer(playerid, 1260, 1805.0234, -1692.4453, 25.1484, 0.25); //Parqueadero
	//text prueba lspd
	RemoveBuildingForPlayer(playerid, 4064, 1571.6016, -1675.7500, 35.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 3976, 1571.6016, -1675.7500, 35.6797, 0.25);
	//Motero HQ Cobras
	RemoveBuildingForPlayer(playerid, 3656, 2620.6406, -1068.9063, 71.3828, 0.25);
RemoveBuildingForPlayer(playerid, 17905, 2568.0234, -1098.3203, 59.5391, 0.25);
RemoveBuildingForPlayer(playerid, 1308, 2607.4297, -1058.6094, 68.5391, 0.25);
RemoveBuildingForPlayer(playerid, 1468, 2632.6406, -1078.3047, 69.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3655, 2620.6406, -1068.9063, 71.3828, 0.25);
	//ESTRELLA DEL rascacielo
	RemoveBuildingForPlayer(playerid, 4728, 1544.5781, -1356.3750, 327.1328, 0.25);
RemoveBuildingForPlayer(playerid, 4726, 1544.5781, -1356.3750, 327.1328, 0.25);
RemoveBuildingForPlayer(playerid, 4727, 1544.5781, -1356.3750, 327.6719, 0.25);
	//plaza ayuntamient
RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
	//ballas ..
	RemoveBuildingForPlayer(playerid, 3721, 1893.9063, -1067.6641, 25.3125, 0.25);
RemoveBuildingForPlayer(playerid, 5641, 1924.7656, -1139.7656, 27.1406, 0.25);
RemoveBuildingForPlayer(playerid, 1308, 1879.1797, -1070.8750, 23.0391, 0.25);
RemoveBuildingForPlayer(playerid, 3641, 1893.9063, -1067.6641, 25.3125, 0.25);
RemoveBuildingForPlayer(playerid, 645, 1894.7188, -1062.9688, 22.7891, 0.25);
//boxeo new
RemoveBuildingForPlayer(playerid, 4070, 1719.7422, -1770.7813, 23.4297, 0.25);
RemoveBuildingForPlayer(playerid, 1531, 1724.7344, -1741.5000, 14.1016, 0.25);
RemoveBuildingForPlayer(playerid, 3986, 1719.7422, -1770.7813, 23.4297, 0.25);
		//Exterior Hitman
	RemoveBuildingForPlayer(playerid, 3276, -300.9375, -2148.4219, 28.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -297.1875, -2141.5703, 28.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -257.5625, -2241.5234, 28.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -263.8672, -2231.5781, 28.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -245.3984, -2225.9922, 28.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -245.4375, -2236.6875, 28.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -249.2031, -2244.3984, 28.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 17037, -288.2734, -2163.5000, 30.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 17036, -285.3984, -2151.0469, 27.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -285.9297, -2139.2734, 28.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -274.5781, -2138.6328, 28.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 17039, -260.5391, -2182.6094, 26.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -254.1406, -2170.7969, 29.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -263.3906, -2140.5938, 28.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -258.0000, -2148.1094, 29.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -256.2500, -2159.3203, 29.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -251.3047, -2181.8047, 29.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -248.0391, -2192.8125, 29.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -244.8594, -2203.8672, 29.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -243.7266, -2214.7266, 28.8984, 0.25);
	//Parque cerca de licencieros
	RemoveBuildingForPlayer(playerid, 1226, 2118.2891, -1939.3984, 16.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2114.5547, -1928.1875, 5.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2113.3984, -1925.0391, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2115.6719, -1922.7656, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2123.3594, -1928.0703, 6.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2122.6563, -1916.7891, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2116.9297, -1916.0781, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2121.5078, -1909.5313, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2110.2734, -1906.5859, 5.0313, 0.25);
	//Restaurante Unity
	RemoveBuildingForPlayer(playerid, 4976, 1931.0000, -1871.3906, 15.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1904.3750, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1909.6563, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1914.9297, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1920.1953, -1879.9531, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 1925.4609, -1879.9609, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1930.7188, -1879.7344, 13.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1946.4766, -1877.1094, 11.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 4848, 1931.0000, -1871.3906, 15.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1931.8750, -1863.4609, 16.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1915.7422, -1863.4609, 16.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1952.0313, -1862.9297, 11.5156, 0.25);
	//Juzgados
	RemoveBuildingForPlayer(playerid, 4026, 1497.7969, -1543.7109, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 4218, 1497.7031, -1546.6172, 43.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 4016, 1497.7969, -1543.7109, 17.5547, 0.25);
	//Plantas cerca de LCN
	RemoveBuildingForPlayer(playerid, 762, 1005.2109, -2273.3594, 16.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 980.8047, -2186.8984, 16.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1000.1328, -2132.2656, 16.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1015.9531, -2078.9766, 16.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1023.5938, -2050.6875, 16.0859, 0.25);
	//cartel de Vinewood
	RemoveBuildingForPlayer(playerid, 13759, 1413.4141, -804.7422, 83.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 13722, 1413.4141, -804.7422, 83.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 13831, 1413.4141, -804.7422, 83.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1011.8594, -2043.5000, 16.0859, 0.25);
	// Campo de tiro
	RemoveBuildingForPlayer(playerid, 3338, -170.0313, -1359.1563, 1.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, -170.0313, -1359.1563, 1.5000, 0.25);
 }

stock RepetirTuto(playerid)
{
    ClearChatbox(playerid, 8);
    Message(playerid, -1, "{FF0000}Has fallado mas de 3 preguntas, vuelves a leer el tutorial.");
	TutTime[playerid] = 3;
	TutorialStep_Forward(playerid);
	FailTuto[playerid] = 0;
}

ShowEditMenu(playerid)
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, slotselection[playerid]))
	{
		RemovePlayerAttachedObject(playerid, slotselection[playerid]);
	}
	SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], 1, 1, 1);

	new stringg[512];
 	format(stringg, sizeof(stringg), "%sParte (%s)\n", stringg, HoldingBones[PlayerToyInfo[playerid][slotselection[playerid]][ptBone]]);
	format(stringg, sizeof(stringg), "%sOffset X (%f)\n", stringg,(PlayerToyInfo[playerid][slotselection[playerid]][ptPosX]*100));
	format(stringg, sizeof(stringg), "%sOffset Y (%f)\n", stringg,(PlayerToyInfo[playerid][slotselection[playerid]][ptPosY]*100));
	format(stringg, sizeof(stringg), "%sOffset Z (%f)\n", stringg,(PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ]*100));
	format(stringg, sizeof(stringg), "%sRotacion X (%f)\n", stringg, PlayerToyInfo[playerid][slotselection[playerid]][ptRotX]);
	format(stringg, sizeof(stringg), "%sRotacion Y (%f)\n", stringg, PlayerToyInfo[playerid][slotselection[playerid]][ptRotY]);
	format(stringg, sizeof(stringg), "%sRotacion Z (%f)" ,stringg, PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ]);
	ShowPlayerDialog(playerid, EDITTOYS2, DIALOG_STYLE_LIST, "Objeto Menu: Editar", stringg, "Seleccionar", "Cancelar");
}

SellHouse(playerid, houseid)
{
	PlayerInfo[playerid][pMats] += HouseInfo[houseid][hMats];
	PlayerInfo[playerid][pDrugs] += HouseInfo[houseid][hDrugs];
	PlayerInfo[playerid][pSpeed] += HouseInfo[houseid][hSpeed];
	PlayerInfo[playerid][pEctasy] += HouseInfo[houseid][hEctasy];
	PlayerInfo[playerid][pRitalin] += HouseInfo[houseid][hRitalin];
	PlayerInfo[playerid][pHeroina] += HouseInfo[houseid][hHeroina];
	PlayerInfo[playerid][pMarihuana] += HouseInfo[houseid][hMarihuana];
	HouseInfo[houseid][hLock] = 1;
	HouseInfo[houseid][hOwned] = 0;
	HouseInfo[houseid][hRent] = 0;
	HouseInfo[houseid][hTime] = 1999999999;
	HouseInfo[houseid][hRentabil] = 0;
	HouseInfo[houseid][hWep] = 0;
	HouseInfo[houseid][hAmmo] = 0;
	HouseInfo[houseid][hMats] = 0;
	HouseInfo[houseid][hDrugs] = 0;
	HouseInfo[houseid][hSpeed] = 0;
	HouseInfo[houseid][hEctasy] = 0;
	HouseInfo[houseid][hRitalin] = 0;
	HouseInfo[houseid][hHeroina] = 0;
	HouseInfo[houseid][hMarihuana] = 0;
	strmid(HouseInfo[houseid][hOwner], "El Estado", 0, strlen("El Estado"), 64);
	UpdateHouses();
	OnPropTextdrawUpdate(houseid);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	return 1;
}

SellBizz(bizzid)
{
	BizzInfo[bizzid][bOwned] = 0;
	strmid(BizzInfo[bizzid][bOwner], "El Estado", 0, strlen("El Estado"), 64);
	strmid(BizzInfo[bizzid][bExtortion], "Nadie", 0, strlen("Nadie"), 32);
	BizzInfo[bizzid][bTill] = 0;
	BizzInfo[bizzid][bTillEx] = 0;
	UpdateBizz();
	OnBizzTextdrawUpdate(bizzid);
	return 1;
}

function SmokingCigarette(playerid)
{
	Connect
	    if(IsSmoking[playerid] > 0)
		{
			new Float:PlayerHealth, string[128];
 			GetPlayerHealth(playerid, PlayerHealth);
  			switch(IsSmoking[playerid])
   			{
    			case 1:
     			{
					format(string, sizeof(string), "* %s acaba su cigarro y tira lo al suelo.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					if( PlayerHealth < 100) SetHP(playerid, PlayerHealth+5);
					PlayerInfo[playerid][pCancer] += 2;
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					ClearAnimations(playerid);
  				}
	    		case 20:
		    	{
   					format(string, sizeof(string), "* %s hace circulos con el humo del cigarro.", PlayerName(playerid));
 	  				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					if( PlayerHealth < 100) SetHP(playerid, PlayerHealth+5);
					PlayerInfo[playerid][pCancer] += 2;
  				}
		    	case 40:
		    	{
  					format(string, sizeof(string), "* %s se fuma su cigarro al suave.", PlayerName(playerid));
  					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					if( PlayerHealth < 100) SetHP(playerid, PlayerHealth+5);
					PlayerInfo[playerid][pCancer] += 2;
  				}
	    	}
			IsSmoking[playerid] -= 1;
		}
		else
		{
	    	KillTimer(SmokeTimer[playerid]);
		}
	}
	return 1;
}

function CloseEstac()
{
    MoveDynamicObject(estac, 1761.42, -1703.32, 12.60, 2.5, -1000.0, -1000.0, -1000.0);
	return 1;
}

function CloseEstac2()
{
    MoveDynamicObject(estac2, 1805.53, -1722.11, 14.18, 2.5, -1000.0, -1000.0, -1000.0);
	return 1;
}

function TillTimer()
{
	for(new b = 0; b < sizeof(BizzInfo); b++)
	{
	    new bearn = BizzInfo[b][bBuyPrice]/500;
		Till(b, bearn);
	}
}

stock Till(bizzid, amount)
{
	if(BizzInfo[bizzid][bOwned] == 1){
        if(strcmp("Nadie", BizzInfo[bizzid][bExtortion], true ) == 0){
        	BizzInfo[bizzid][bTill] += amount;
       	}
       	else{
       	    new money = amount / 4;
			BizzInfo[bizzid][bTill] += money * 3;
			BizzInfo[bizzid][bTillEx] += money;
		}
	}
	return 1;
}

function SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
 			if(PlayerInfo[i][pJob] == job)
   			{
   			    Message(i, color, string);
			}
		}
	}
}

function CheckBizz(playerid, earn)
{
	if(PlayerToPoint(10.0,playerid,499.9703,-20.3358,1000.6797))    Till(0, earn);
	if(PlayerToPoint(10.0,playerid,1779.2051,-1556.7195,-49.6550))  Till(1, earn);
 	if(PlayerToPoint(10.0,playerid,496.3752,-76.0410,998.7578))     Till(2, earn);
	if(PlayerToPoint(10.0,playerid,1392.5297,-1893.1754,17.4266))   Till(26,earn);
	if(PlayerToPoint(25.0,playerid,1291.1887,-1869.6744,13.5659))   Till(27,earn); // cambiar coordenadas a nuevo negoció
	return 0;
}

function CheckSuciedad()
{
	for(new i=0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new string[128], Float:health;
			if(PlayerInfo[i][pSuciedad] >= 65 && PlayerInfo[i][pSuciedad] < 66)
			{
			    Message(i, COLOR_WHITE, "Tu ropa está un poco sucia, debes ir a lavarla.");
			}
			else if(PlayerInfo[i][pSuciedad] >= 80 && PlayerInfo[i][pSuciedad] < 82)
			{
			    format(string, sizeof(string), "* %s desprende un olor un poco desagradable.", PlayerName(i));
			    ProxDetector(20.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(PlayerInfo[i][pSuciedad] >= 90)
			{
			    GetPlayerHealth(i, health);
			    format(string, sizeof(string), "* %s desprende un olor fétido.", PlayerName(i));
			    ProxDetector(20.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    Message(i, COLOR_GRAD2, "* Tu ropa está sucia, debes ir a lavarla con urgencia.");
				SetHP(i, health-1);
			}
		}
	}
	return 1;
}
/*function CheckMusculos()
{
	for(new i=0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new string[128], Float:health;
		     if(PlayerInfo[i][pMusculos] >= 100)
			{
			    GetPlayerHealth(i, health);
			    format(string, sizeof(string), "* %s Se mira los musculos.", PlayerName(i));
			    ProxDetector(20.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    Message(i, COLOR_GRAD2, "* Felicidades, has llegado a lo mas musculoso.");
				SetHP(i, health+10);
			}
		}
	}
	return 1;
}
function CheckHambre()
{
	for(new i=0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new string[128], Float:health;
		     if(PlayerInfo[i][pHambre] >= 50)
			{
			    GetPlayerHealth(i, health);
			    format(string, sizeof(string), "* %s Tiene hambre.", PlayerName(i));
			    ProxDetector(20.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    Message(i, COLOR_GRAD2, "* Ve a comer, si no moriras del hambre!!.");
				SetHP(i, health-5);
			}
		}
	}
	return 1;
}
function CheckPeso()
{
	for(new i=0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new string[128], Float:health;
		     if(PlayerInfo[i][pPeso] >= 95)
			{
			    GetPlayerHealth(i, health);
			    format(string, sizeof(string), "* %s Se siente muy gordo.", PlayerName(i));
			    ProxDetector(20.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    Message(i, COLOR_GRAD2, "* Estas gordo, ve al gimnasio y adelgaza!.");
				SetHP(i, health-5);
			}
		}
	}
	return 1;
}*/

function CheckDinero()
{
for(new i=0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
		{
		if(GetPlayerMoney(i) < 0)
		{
		if(Advertencia_Debe[i] == 0)
			{
			new string25[150];
   			format(string25, sizeof(string25), "Tienes una deuda de: $%d con el estado, tienes hasta el proximo pago de impuestos para pagar o seras arrestado.", GetPlayerMoney(i));
			SendClientMessage(i, COLOR_LIGHTRED, string25);
			Advertencia_Debe[i] = 1;
			}
	}
	else
    {
    Advertencia_Debe[i] = 0;
    		}
 		}
	}
}

function Lavadora(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[128];
		Bought(playerid, 200);
		Till(28, 150);
		format(string, sizeof string, "* %s toma su ropa limpia y se la pone.", PlayerName(playerid));
		ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Message(playerid, COLOR_WHITE, "{F8FC2E}Lavanderia: {FFFFFF}Terminaste de lavar tu ropa, la cuenta es de 200$.");
	    Skin(playerid, PlayerInfo[playerid][pChar]);
		PlayerInfo[playerid][pSuciedad] = 0;
	}
	return 0;
}
/*function Musculos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[128];
		Bought(playerid, 100);
		format(string, sizeof string, "* %s Agarra las pesas y las deja en el piso .", PlayerName(playerid));
		ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Message(playerid, COLOR_WHITE, "{F8FC2E}Profesor del Gimnasio: {FFFFFF}Termino su dia, hasta mañana, son 100$.");
		PlayerInfo[playerid][pMusculos] = 5;
	}
	return 0;
}*/
stock ActualizarArchivos()
{
new File:file, string[100];
if(fexist("AntiSpam.cfg") == 0)
{
file = fopen("AntiSpam.cfg", io_write);
fwrite(file, "spam ");
fclose(file);
}

AntiSpamC = 0;

if((file = fopen("AntiSpam.cfg", io_read)))
{
while(fread(file, string))
{
AntiSpam[AntiSpamC] = string;
AntiSpamC++;
}
fclose(file);	printf(" > %d palabras de spam fueron cargadas", AntiSpamC);
}
}
// de ropa binco
public OnPlayerModelSelection(playerid, response, listid, modelid)
{
   if(listid == skinlist)
   {
       if(response)
       {
  	    PlayerInfo[playerid][pChar] = modelid;
      	SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
        SendClientMessage(playerid, 0xFF0000FF, "Has comprado ropa nueva te ha costado 200$");
                GivePlayerMoney(playerid, -200);
                new datos[128];
      format(datos, sizeof(datos),"%s\n%d\0", PlayerName(playerid), GetPlayerSkin(playerid));
      dini_IntSet("armario.ini",datos,GetPlayerSkin(playerid));
      SendClientMessage(playerid, COLOR_GREEN, "Recordatorio: Usa /armario para ver las prendas de ropa que has adquirido");
            }
            else SendClientMessage(playerid, 0xFF0000FF, "Cancelado la seleccion de skin");
        return 1;
        }
        if(listid == armariolist)
        {
            if(response)
            {
                    SetPlayerSkin(playerid, modelid);
            }
            else SendClientMessage(playerid, 0xFF0000FF, "Cancelado la seleccion de Skin");
        return 1;
        }
        return 1;
        }
/*public Menos(playerid)
{
GanasDeMear[playerid] += 1;
new Float:probando = GetProgressBarValue(MearBarra);
SetProgressBarValue(MearBarra, probando+0.1);
UpdateProgressBar(MearBarra, playerid);
if(GanasDeMear[playerid] == 50)
{
	SendClientMessage(playerid, COLOR_RED, "Tienes ganas de mear, ves a un lavabo o mea detras de un arbol");
}
else if(GanasDeMear[playerid] == 75)
{
	SendClientMessage(playerid, COLOR_RED, "¡Corre, mea donde puedas! Si no meas te vas a mear encima!");
}
else if(GanasDeMear[playerid] == 100)
{
    TogglePlayerControllable(playerid,0);
	SetPlayerSpecialAction(playerid, 68);
	TiempoMeando[playerid] = SetTimer("DespuesDeMear",3000,false);
	SendClientMessage(playerid, COLOR_RED, "¡Te has meado encima! Se van a reír de ti");
}
return 1;
}*/
public BancoTextDraw()
	{
	for(new i; i < MAX_PLAYERS; i++)
	{
		new string[64]; format(string, sizeof(string), "~g~$~w~%d", PlayerInfo[i][pAccount] );
		TextDrawSetString(BalanceTextDraw[i], string );
	}
    }
/*public MenosDormir(playerid)
{
GanasDeDormir[playerid] += 1;
new Float:probando = GetProgressBarValue(DormirBarra);
SetProgressBarValue(DormirBarra, probando+0.1);
UpdateProgressBar(DormirBarra, playerid);
if(GanasDeDormir[playerid] == 50)
{
	SendClientMessage(playerid, COLOR_RED, "Tienes ganas de Dormir, ve a un hotel o a tu casa");
}
else if(GanasDeDormir[playerid] == 75)
{
	SendClientMessage(playerid, COLOR_RED, "¡Corre, a tu casa o un hotel! Te estas quedando dormido!");
}
else if(GanasDeDormir[playerid] == 100)
{
    TogglePlayerControllable(playerid,0);
	TiempoMeando[playerid] = SetTimer("DespuesDeDormir",3000,false);
	SendClientMessage(playerid, COLOR_RED, "¡Te quedaste dormido!");
}
return 1;
}
public DespuesDeMear(playerid)
{
    GanasDeMear[playerid] = 0;
	SetProgressBarValue(MearBarra, 0);
	ActualizarBarra[playerid] = SetTimer("Menos",Tiempo,1);
	TogglePlayerControllable(playerid,1);
	return 1;
}
public DespuesDeDormir(playerid)
{
    GanasDeDormir[playerid] = 0;
	SetProgressBarValue(DormirBarra, 0);
	ActualizarBarra[playerid] = SetTimer("MenosDormir",Tiempo,1);
	TogglePlayerControllable(playerid,1);
	return 1;
}*/

stock convert_encoding(string[])
{
	new original[50] = {192,193,194,196,198,199,200,201,202,203,204,205,206,207,210,211,212,214,217,218,219,220,223,224,225,226,228,230,231,232,233,234,235,236,237,238,239,242,243,244,246,249,250,251,252,209,241,191,161,176};
	new fixed[50] = {128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,94,124};
	new len = strlen(string);
	for (new i; i < len; i++) {
		for(new j;j < 50;j++) {
			if(string[i] == original[j]) {
				string[i] = fixed[j];
				break;
			}
		}
	}

    return string;
}
